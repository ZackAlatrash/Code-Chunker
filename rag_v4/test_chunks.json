[
  {
    "id": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/main.go#1",
    "repo_id": "crunding-weather_foreca_proxy_service-8aae91880849",
    "path": "main.go",
    "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/main.go",
    "rel_path": "main.go",
    "ext": "go",
    "language": "go",
    "chunk_number": 1,
    "start_line": 1,
    "end_line": 12,
    "text": "package main\n\nimport (\n\t\"go.impalastudios.com/weather/foreca_proxy/cmd\"\n)\n\nfunc main() {\n\tif err := cmd.RunRootCmd(); err != nil {\n\t\tpanic(err)\n\t}\n}\n",
    "n_tokens": 43,
    "primary_symbol": "main",
    "primary_kind": "function",
    "primary_span": [
      7,
      12
    ],
    "def_symbols": [],
    "symbols": [
      "main",
      "package",
      "import",
      "impalastudios",
      "com",
      "weather",
      "foreca_proxy",
      "cmd",
      "func",
      "err",
      "RunRootCmd",
      "nil",
      "panic"
    ],
    "doc_head": "package main\nimport (\n\t\"go.impalastudios.com/weather/foreca_proxy/cmd\"\n)\nfunc main() {\n\tif err := cmd.RunRootCmd(); err != nil {\n\t\tpanic(err)\n\t}\n}",
    "is_generated": false,
    "rank_boost": 1.0,
    "ast_path": "go:function:main/complete",
    "package": "main",
    "node_kind": "function",
    "receiver": "",
    "function_name": "main",
    "method_name": "",
    "type_name": "",
    "type_kind": "",
    "is_multi_declaration": false,
    "all_symbols": [
      "main"
    ],
    "all_kinds": [
      "function"
    ],
    "all_ast_paths": [
      "go:function:main/complete"
    ],
    "all_roles": [
      "complete"
    ],
    "all_receivers": [
      ""
    ],
    "all_type_names": [
      ""
    ],
    "all_type_kinds": [
      null
    ],
    "all_start_bytes": [
      75
    ],
    "all_end_bytes": [
      148
    ],
    "primary_index": 0,
    "all_receivers_normalized": [
      ""
    ],
    "imports_used_minimal": [
      "go.impalastudios.com/weather/foreca_proxy/cmd"
    ],
    "symbols_referenced_strict": [
      "RunRootCmd",
      "cmd.RunRootCmd"
    ],
    "header_context_minimal": "package main\nimport \"go.impalastudios.com/weather/foreca_proxy/cmd\"",
    "summary_en": "runs the root command for the weather forecast proxy application",
    "keywords_en": [
      "error handling",
      "root command",
      "weather proxy"
    ],
    "enrich_provenance": {
      "model": "qwen2.5-coder:7b-instruct",
      "created_at": "2025-10-09T14:35:51.002971",
      "file_synopsis_hash": "e6eb8fa37a60a3e2",
      "chunk_text_hash": "910489b9af658b86",
      "input_lang": "en",
      "language_policy": {
        "language": "en",
        "skip_non_en": true
      },
      "skipped_reason": null
    },
    "neighbors": {}
  },
  {
    "id": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/root.go#1",
    "repo_id": "crunding-weather_foreca_proxy_service-8aae91880849",
    "path": "cmd/root.go",
    "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/root.go",
    "rel_path": "cmd/root.go",
    "ext": "go",
    "language": "go",
    "chunk_number": 1,
    "start_line": 1,
    "end_line": 10,
    "text": "package cmd\n\nimport (\n\t\"go.impalastudios.com/weather/foreca_proxy/cmd/serve\"\n\t\"strings\"\n\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n)\n",
    "n_tokens": 43,
    "primary_symbol": "",
    "primary_kind": "header",
    "primary_span": [
      1,
      10
    ],
    "def_symbols": [],
    "symbols": [
      "package",
      "cmd",
      "import",
      "impalastudios",
      "com",
      "weather",
      "foreca_proxy",
      "serve",
      "strings",
      "github",
      "spf13",
      "cobra",
      "viper"
    ],
    "doc_head": "package cmd\nimport (\n\t\"go.impalastudios.com/weather/foreca_proxy/cmd/serve\"\n\t\"strings\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n)",
    "is_generated": false,
    "rank_boost": 1.0,
    "ast_path": "go:file_header",
    "package": "cmd",
    "node_kind": "header",
    "receiver": "",
    "function_name": "",
    "method_name": "",
    "type_name": "",
    "type_kind": "",
    "is_multi_declaration": false,
    "all_symbols": [],
    "all_kinds": [],
    "all_ast_paths": [],
    "all_roles": [],
    "all_receivers": [],
    "all_type_names": [],
    "all_type_kinds": [],
    "all_start_bytes": [],
    "all_end_bytes": [],
    "primary_index": 0,
    "all_receivers_normalized": [],
    "imports_used_minimal": [],
    "symbols_referenced_strict": [],
    "header_context_minimal": "package cmd",
    "summary_en": "This Go package defines a command-line interface for the weather forecast proxy server, initializing configuration and invoking the serve function",
    "keywords_en": [
      "command line interface",
      "configuration initialization",
      "error handling",
      "proxy server",
      "serve function invocation",
      "weather forecast"
    ],
    "enrich_provenance": {
      "model": "qwen2.5-coder:7b-instruct",
      "created_at": "2025-10-09T14:35:54.498625",
      "file_synopsis_hash": "d15828ae8dc1f3c4",
      "chunk_text_hash": "4ddf5016e6f74e39",
      "input_lang": "en",
      "language_policy": {
        "language": "en",
        "skip_non_en": true
      },
      "skipped_reason": null
    },
    "neighbors": {
      "next": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/root.go#2"
    }
  },
  {
    "id": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/root.go#2",
    "repo_id": "crunding-weather_foreca_proxy_service-8aae91880849",
    "path": "cmd/root.go",
    "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/root.go",
    "rel_path": "cmd/root.go",
    "ext": "go",
    "language": "go",
    "chunk_number": 2,
    "start_line": 11,
    "end_line": 51,
    "text": "// RunRootCmd entrypoint of the root command\nfunc RunRootCmd() error {\n\tviper.AutomaticEnv()\n\tviper.SetEnvKeyReplacer(strings.NewReplacer(\".\", \"_\", \"-\", \"_\"))\n\n\tcmd := &cobra.Command{\n\t\tUse:     \"weather-foreca-proxy\",\n\t\tShort:   \"[Weather] Foreca Proxy Microservice\",\n\t\tVersion: \"1.0.0\",\n\t}\n\n\tcmd.AddCommand(serve.New())\n\n\tcmd.PersistentFlags().Bool(\"logging.debug\", false, \"Whether to emit debug level logs or not.\")\n\tcmd.PersistentFlags().String(\"logging.encoding\", \"json\", \"The log encoding strategy.\")\n\tcmd.PersistentFlags().StringP(\"app.name\", \"n\", \"[Weather] Foreca Proxy\", \"The application name.\")\n\n\tcmd.PersistentFlags().String(\"foreca.endpoint-url\", \"https://pfa.foreca.com/data\", \"The provider endpoint.\")\n\tcmd.PersistentFlags().String(\"foreca.requests-per-second\", \"200\", \"The rate limit applied to Foreca.\")\n\tcmd.PersistentFlags().String(\"foreca.expiration-duration\", \"30m\", \"The amount of time an already requested forecast should be considered fresh.\")\n\tcmd.PersistentFlags().String(\"foreca.query.default.format\", \"xml/itwcalculator-jun17pres\", \"The default value for format query param.\")\n\tcmd.PersistentFlags().String(\"foreca.query.default.ftimes\", \"240/24h/0,240/1h\", \"The default times to request the forecasts about.\")\n\tcmd.PersistentFlags().String(\"foreca.query.default.temp-unit\", \"C\", \"The default temperature unit.\")\n\tcmd.PersistentFlags().String(\"foreca.query.default.wind-unit\", \"KMH\", \"The default wind speed unit.\")\n\tcmd.PersistentFlags().String(\"foreca.query.default.lang\", \"en\", \"The locale of the forecast's descriptions.\")\n\n\tcmd.PersistentFlags().String(\"mappings.dynamodb.table-name\", \"\", \"The DynamoDB table name.\")\n\n\tcmd.PersistentFlags().String(\"memcached.address\", \"\", \"The DynamoDB table name.\")\n\n\tcmd.PersistentFlags().String(\"aws.access-key-id\", \"\", \"The AWS access key ID.\")\n\tcmd.PersistentFlags().String(\"aws.secret-access-key\", \"\", \"The AWS secret access key.\")\n\tcmd.PersistentFlags().String(\"aws.session-token\", \"\", \"The AWS session token.\")\n\tcmd.PersistentFlags().String(\"aws.endpoint-url\", \"\", \"The AWS endpoint.\")\n\tcmd.PersistentFlags().String(\"aws.region\", \"\", \"The AWS region.\")\n\n\t_ = viper.BindPFlags(cmd.PersistentFlags())\n\n\treturn cmd.Execute()\n}\n",
    "n_tokens": 515,
    "primary_symbol": "RunRootCmd",
    "primary_kind": "function",
    "primary_span": [
      12,
      51
    ],
    "def_symbols": [],
    "symbols": [
      "RunRootCmd",
      "entrypoint",
      "the",
      "root",
      "command",
      "func",
      "error",
      "viper",
      "AutomaticEnv",
      "SetEnvKeyReplacer",
      "strings",
      "NewReplacer",
      "cmd",
      "cobra",
      "Command",
      "Use",
      "weather",
      "foreca",
      "proxy",
      "Short",
      "Weather",
      "Foreca",
      "Proxy",
      "Microservice",
      "Version",
      "AddCommand",
      "serve",
      "New",
      "PersistentFlags",
      "Bool",
      "logging",
      "debug",
      "false",
      "Whether",
      "emit",
      "level",
      "logs",
      "not",
      "String",
      "encoding",
      "json",
      "The",
      "log",
      "strategy",
      "StringP",
      "app",
      "name",
      "application",
      "endpoint",
      "url",
      "https",
      "pfa",
      "com",
      "data",
      "provider",
      "requests",
      "per",
      "second",
      "rate",
      "limit",
      "applied",
      "expiration",
      "duration",
      "amount",
      "time",
      "already",
      "requested",
      "forecast",
      "should",
      "considered",
      "fresh",
      "query",
      "default",
      "format",
      "xml",
      "itwcalculator",
      "jun17pres",
      "value",
      "for",
      "param",
      "ftimes",
      "times",
      "request",
      "forecasts",
      "about",
      "temp",
      "unit",
      "temperature",
      "wind",
      "KMH",
      "speed",
      "lang",
      "locale",
      "descriptions",
      "mappings",
      "dynamodb",
      "table",
      "DynamoDB",
      "memcached",
      "address",
      "aws",
      "access",
      "key",
      "AWS",
      "secret",
      "session",
      "token",
      "region",
      "BindPFlags",
      "return",
      "Execute"
    ],
    "doc_head": "// RunRootCmd entrypoint of the root command\nfunc RunRootCmd() error {\n\tviper.AutomaticEnv()\n\tviper.SetEnvKeyReplacer(strings.NewReplacer(\".\", \"_\", \"-\", \"_\"))\n\tcmd := &cobra.Command{\n\t\tUse:     \"weather-foreca-proxy\",\n\t\tShort:   \"[Weather] Foreca Proxy Microservice\",\n\t\tVersion: \"1.0.0\",\n\t}\n\tcmd.AddCommand(serve.New())\n\tcmd.PersistentFlags().Bool(\"logging.debug\", false, \"Whether to emit debug level logs or not.\")\n\tcmd.PersistentFlags().String(\"logging.encoding\", \"json\", \"The log encoding strategy.\")\n\tcmd.PersistentFlags().StringP(\"app.name\", \"n\", \"[Weather] Foreca Proxy\", \"The application name.\")\n\tcmd.PersistentFlags().String(\"foreca.endpoint-url\", \"https://pfa.foreca.com/data\", \"The provider endpoint.\")\n\tcmd.PersistentFlags().String(\"foreca.requests-per-second\", \"200\", \"The rate limit applied to Foreca.\")\n\tcmd.PersistentFlags().String(\"foreca.expiration-duration\", \"30m\", \"The amount of time an already requested forecast should be considered fresh.\")\n\tcmd.PersistentFlags().String(\"foreca.query.default.format\", \"xml/itwcalculator-jun17pres\", \"The default value for format query param.\")",
    "is_generated": false,
    "rank_boost": 1.0,
    "ast_path": "go:function:RunRootCmd/complete",
    "package": "cmd",
    "node_kind": "function",
    "receiver": "",
    "function_name": "RunRootCmd",
    "method_name": "",
    "type_name": "",
    "type_kind": "",
    "is_multi_declaration": false,
    "all_symbols": [
      "RunRootCmd"
    ],
    "all_kinds": [
      "function"
    ],
    "all_ast_paths": [
      "go:function:RunRootCmd/complete"
    ],
    "all_roles": [
      "complete"
    ],
    "all_receivers": [
      ""
    ],
    "all_type_names": [
      ""
    ],
    "all_type_kinds": [
      null
    ],
    "all_start_bytes": [
      189
    ],
    "all_end_bytes": [
      2342
    ],
    "primary_index": 0,
    "all_receivers_normalized": [
      ""
    ],
    "imports_used_minimal": [
      "github.com/spf13/cobra",
      "github.com/spf13/viper",
      "go.impalastudios.com/weather/foreca_proxy/cmd/serve",
      "strings"
    ],
    "symbols_referenced_strict": [
      "AddCommand",
      "AutomaticEnv",
      "BindPFlags",
      "Bool",
      "Command",
      "DynamoDB",
      "Execute",
      "Foreca",
      "Foreca.foreca",
      "ID.aws",
      "New",
      "NewReplacer",
      "PersistentFlags",
      "RunRootCmd",
      "SetEnvKeyReplacer",
      "Short",
      "String",
      "StringP",
      "Version",
      "about.foreca",
      "cmd.AddCommand",
      "cmd.Execute",
      "cmd.PersistentFlags",
      "cobra.Command",
      "descriptions.mappings",
      "dynamodb.table",
      "endpoint.aws",
      "foreca.requests",
      "fresh.foreca",
      "key.aws",
      "name.aws",
      "name.memcached",
      "param.foreca",
      "query.default",
      "serve.New",
      "strings.NewReplacer",
      "token.aws",
      "unit.foreca",
      "viper.AutomaticEnv",
      "viper.BindPFlags",
      "viper.SetEnvKeyReplacer"
    ],
    "header_context_minimal": "package cmd\nimport (\n    \"github.com/spf13/cobra\"\n    \"github.com/spf13/viper\"\n    \"go.impalastudios.com/weather/foreca_proxy/cmd/serve\"\n    \"strings\"\n)",
    "summary_en": "Initializes and runs the root command for a weather forecasting proxy microservice, setting up environment variables, flags, and subcommands",
    "keywords_en": [
      "command initialization",
      "environment configuration",
      "flag setup",
      "microservice entrypoint",
      "subcommand management"
    ],
    "enrich_provenance": {
      "model": "qwen2.5-coder:7b-instruct",
      "created_at": "2025-10-09T14:35:58.509768",
      "file_synopsis_hash": "d15828ae8dc1f3c4",
      "chunk_text_hash": "aa04b1cfb5e2c5f7",
      "input_lang": "en",
      "language_policy": {
        "language": "en",
        "skip_non_en": true
      },
      "skipped_reason": null
    },
    "neighbors": {
      "prev": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/root.go#1"
    }
  },
  {
    "id": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/serve/grpc.go#1",
    "repo_id": "crunding-weather_foreca_proxy_service-8aae91880849",
    "path": "cmd/serve/grpc.go",
    "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/serve/grpc.go",
    "rel_path": "cmd/serve/grpc.go",
    "ext": "go",
    "language": "go",
    "chunk_number": 1,
    "start_line": 1,
    "end_line": 2,
    "text": "package serve\n",
    "n_tokens": 3,
    "primary_symbol": "",
    "primary_kind": "header",
    "primary_span": [
      1,
      2
    ],
    "def_symbols": [],
    "symbols": [
      "package",
      "serve"
    ],
    "doc_head": "package serve",
    "is_generated": false,
    "rank_boost": 1.0,
    "ast_path": "go:file_header",
    "package": "serve",
    "node_kind": "header",
    "receiver": "",
    "function_name": "",
    "method_name": "",
    "type_name": "",
    "type_kind": "",
    "is_multi_declaration": false,
    "all_symbols": [],
    "all_kinds": [],
    "all_ast_paths": [],
    "all_roles": [],
    "all_receivers": [],
    "all_type_names": [],
    "all_type_kinds": [],
    "all_start_bytes": [],
    "all_end_bytes": [],
    "primary_index": 0,
    "all_receivers_normalized": [],
    "imports_used_minimal": [],
    "symbols_referenced_strict": [],
    "header_context_minimal": "package serve",
    "summary_en": "Handles HTTP requests, serving data efficiently with error checking",
    "keywords_en": [
      "cache utilization",
      "data serving",
      "error checking",
      "http handling",
      "performance optimization",
      "request management"
    ],
    "enrich_provenance": {
      "model": "qwen2.5-coder:7b-instruct",
      "created_at": "2025-10-09T14:36:01.175787",
      "file_synopsis_hash": "35709710250d0755",
      "chunk_text_hash": "d04ac135de6af195",
      "input_lang": "en",
      "language_policy": {
        "language": "en",
        "skip_non_en": true
      },
      "skipped_reason": null
    },
    "neighbors": {
      "next": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/serve/grpc.go#2"
    }
  },
  {
    "id": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/serve/grpc.go#2",
    "repo_id": "crunding-weather_foreca_proxy_service-8aae91880849",
    "path": "cmd/serve/grpc.go",
    "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/serve/grpc.go",
    "rel_path": "cmd/serve/grpc.go",
    "ext": "go",
    "language": "go",
    "chunk_number": 2,
    "start_line": 3,
    "end_line": 42,
    "text": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/dropbox/godropbox/memcache\"\n\t\"github.com/grpc-ecosystem/go-grpc-middleware/v2/interceptors\"\n\t\"github.com/grpc-ecosystem/go-grpc-middleware/v2/interceptors/logging\"\n\t\"github.com/grpc-ecosystem/go-grpc-middleware/v2/interceptors/recovery\"\n\tlru \"github.com/hashicorp/golang-lru/v2\"\n\t\"go.impalastudios.com/log\"\n\txotel \"go.impalastudios.com/otel\"\n\trequestid \"go.impalastudios.com/requestid/grpc\"\n\t\"go.impalastudios.com/weather/foreca_proxy/internal/foreca\"\n\t\"go.impalastudios.com/weather/foreca_proxy/internal/foreca/adapters\"\n\t\"go.impalastudios.com/weather/foreca_proxy/internal/foreca/adapters/clients\"\n\t\"go.impalastudios.com/weather/foreca_proxy/pkg/aws\"\n\t\"go.impalastudios.com/weather/foreca_proxy/pkg/cache\"\n\t\"go.impalastudios.com/weather/foreca_proxy/pkg/ratelimit\"\n\totelgrpctrace \"go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc\"\n\t\"go.opentelemetry.io/otel\"\n\t\"go.opentelemetry.io/otel/propagation\"\n\t\"go.uber.org/zap\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/metadata\"\n\t\"google.golang.org/grpc/status\"\n\t\"net/http\"\n\t\"time\"\n\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n\totelgrpcmetric \"go.impalastudios.com/otel/grpc\"\n\tgrpcv0 \"go.impalastudios.com/weather/foreca_proxy/internal/foreca/adapters/handlers/grpc/v0\"\n\tpbv0 \"go.impalastudios.com/weather/foreca_proxy/pkg/pb/v0\"\n\t\"go.opentelemetry.io/contrib/instrumentation/github.com/aws/aws-sdk-go-v2/otelaws\"\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/reflection\"\n\t\"net\"\n\t\"os\"\n)\n",
    "n_tokens": 465,
    "primary_symbol": "",
    "primary_kind": "header",
    "primary_span": [
      3,
      42
    ],
    "def_symbols": [],
    "symbols": [
      "import",
      "context",
      "fmt",
      "github",
      "com",
      "dropbox",
      "godropbox",
      "memcache",
      "grpc",
      "ecosystem",
      "middleware",
      "interceptors",
      "logging",
      "recovery",
      "lru",
      "hashicorp",
      "golang",
      "impalastudios",
      "log",
      "xotel",
      "otel",
      "requestid",
      "weather",
      "foreca_proxy",
      "internal",
      "foreca",
      "adapters",
      "clients",
      "pkg",
      "aws",
      "cache",
      "ratelimit",
      "otelgrpctrace",
      "opentelemetry",
      "contrib",
      "instrumentation",
      "google",
      "org",
      "otelgrpc",
      "propagation",
      "uber",
      "zap",
      "codes",
      "metadata",
      "status",
      "net",
      "http",
      "time",
      "cockroachdb",
      "errors",
      "spf13",
      "cobra",
      "viper",
      "otelgrpcmetric",
      "grpcv0",
      "handlers",
      "pbv0",
      "sdk",
      "otelaws",
      "reflection"
    ],
    "doc_head": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/dropbox/godropbox/memcache\"\n\t\"github.com/grpc-ecosystem/go-grpc-middleware/v2/interceptors\"\n\t\"github.com/grpc-ecosystem/go-grpc-middleware/v2/interceptors/logging\"\n\t\"github.com/grpc-ecosystem/go-grpc-middleware/v2/interceptors/recovery\"\n\tlru \"github.com/hashicorp/golang-lru/v2\"\n\t\"go.impalastudios.com/log\"\n\txotel \"go.impalastudios.com/otel\"\n\trequestid \"go.impalastudios.com/requestid/grpc\"\n\t\"go.impalastudios.com/weather/foreca_proxy/internal/foreca\"\n\t\"go.impalastudios.com/weather/foreca_proxy/internal/foreca/adapters\"\n\t\"go.impalastudios.com/weather/foreca_proxy/internal/foreca/adapters/clients\"\n\t\"go.impalastudios.com/weather/foreca_proxy/pkg/aws\"\n\t\"go.impalastudios.com/weather/foreca_proxy/pkg/cache\"\n\t\"go.impalastudios.com/weather/foreca_proxy/pkg/ratelimit\"\n\totelgrpctrace \"go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc\"\n\t\"go.opentelemetry.io/otel\"\n\t\"go.opentelemetry.io/otel/propagation\"\n\t\"go.uber.org/zap\"\n\t\"google.golang.org/grpc/codes\"\n\t\"google.golang.org/grpc/metadata\"\n\t\"google.golang.org/grpc/status\"\n\t\"net/http\"\n\t\"time\"\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"",
    "is_generated": false,
    "rank_boost": 1.0,
    "ast_path": "go:file_header",
    "package": "serve",
    "node_kind": "header",
    "receiver": "",
    "function_name": "",
    "method_name": "",
    "type_name": "",
    "type_kind": "",
    "is_multi_declaration": false,
    "all_symbols": [],
    "all_kinds": [],
    "all_ast_paths": [],
    "all_roles": [],
    "all_receivers": [],
    "all_type_names": [],
    "all_type_kinds": [],
    "all_start_bytes": [],
    "all_end_bytes": [],
    "primary_index": 0,
    "all_receivers_normalized": [],
    "imports_used_minimal": [],
    "symbols_referenced_strict": [],
    "header_context_minimal": "package serve",
    "summary_en": "Sets up and configures various interceptors for gRPC server middleware, including logging, recovery, and request ID handling",
    "keywords_en": [
      "grpc server",
      "interceptors setup",
      "logging middleware",
      "recovery middleware",
      "request id handling"
    ],
    "enrich_provenance": {
      "model": "qwen2.5-coder:7b-instruct",
      "created_at": "2025-10-09T14:36:05.159914",
      "file_synopsis_hash": "35709710250d0755",
      "chunk_text_hash": "0f1c6d01a931e202",
      "input_lang": "en",
      "language_policy": {
        "language": "en",
        "skip_non_en": true
      },
      "skipped_reason": null
    },
    "neighbors": {
      "prev": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/serve/grpc.go#1",
      "next": "/Users/zack.alatrash/CompanyRepos/crunding-weather_foreca_proxy_service-8aae91880849/cmd/serve/grpc.go#3"
    }
  }
]