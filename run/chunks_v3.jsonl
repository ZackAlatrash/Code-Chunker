{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "main.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go", "rel_path": "main.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package main\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "main"], "doc_head": "package main", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "main", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package main", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "main.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go", "rel_path": "main.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 6, "text": "import (\n\t\"go.impalastudios.com/aviation/liveflights/cmd\"\n)\n", "n_tokens": 18, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 6], "def_symbols": [], "symbols": ["import", "impalastudios", "com", "aviation", "liveflights", "cmd"], "doc_head": "import (\n\t\"go.impalastudios.com/aviation/liveflights/cmd\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "main", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package main", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "main.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go", "rel_path": "main.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 7, "end_line": 12, "text": "func main() {\n\tif err := cmd.RunRootCmd(); err != nil {\n\t\tpanic(err)\n\t}\n}\n", "n_tokens": 23, "primary_symbol": "main", "primary_kind": "function", "primary_span": [7, 12], "def_symbols": [], "symbols": ["main", "func", "err", "cmd", "RunRootCmd", "nil", "panic"], "doc_head": "func main() {\n\tif err := cmd.RunRootCmd(); err != nil {\n\t\tpanic(err)\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:main/complete", "package": "main", "node_kind": "function", "receiver": "", "function_name": "main", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["main"], "all_kinds": ["function"], "all_ast_paths": ["go:function:main/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [75], "all_end_bytes": [148], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/cmd"], "symbols_referenced_strict": ["RunRootCmd", "cmd.RunRootCmd"], "header_context_minimal": "package main\nimport \"go.impalastudios.com/aviation/liveflights/cmd\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/main.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go", "rel_path": "cmd/root.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package cmd\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "cmd"], "doc_head": "package cmd", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cmd", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cmd", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go", "rel_path": "cmd/root.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 14, "text": "import (\n\t\"go.impalastudios.com/aviation/liveflights/cmd/data_processor\"\n\t\"strings\"\n\t\"time\"\n\n\t\"go.impalastudios.com/aviation/liveflights/cmd/scraper\"\n\t\"go.impalastudios.com/aviation/liveflights/cmd/serve\"\n\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n)\n", "n_tokens": 79, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 14], "def_symbols": [], "symbols": ["import", "impalastudios", "com", "aviation", "liveflights", "cmd", "data_processor", "strings", "time", "scraper", "serve", "github", "spf13", "cobra", "viper"], "doc_head": "import (\n\t\"go.impalastudios.com/aviation/liveflights/cmd/data_processor\"\n\t\"strings\"\n\t\"time\"\n\t\"go.impalastudios.com/aviation/liveflights/cmd/scraper\"\n\t\"go.impalastudios.com/aviation/liveflights/cmd/serve\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cmd", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cmd", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go", "rel_path": "cmd/root.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 15, "end_line": 59, "text": "// RunRootCmd entrypoint of the root command\nfunc RunRootCmd() error {\n\tviper.AutomaticEnv()\n\tviper.SetEnvKeyReplacer(strings.NewReplacer(\".\", \"_\", \"-\", \"_\"))\n\n\tcmd := &cobra.Command{\n\t\tUse:     \"liveflights\",\n\t\tShort:   \"[Aviation] Live Flights Service\",\n\t\tVersion: \"1.0.0\",\n\t}\n\n\tcmd.AddCommand(serve.New())\n\tcmd.AddCommand(scraper.New())\n\tcmd.AddCommand(data_processor.New())\n\n\tcmd.PersistentFlags().Bool(\"logging.debug\", false, \"Whether to emit debug level logs or not.\")\n\tcmd.PersistentFlags().String(\"logging.encoding\", \"json\", \"The log encoding strategy.\")\n\tcmd.PersistentFlags().StringP(\"app.name\", \"n\", \"[Aviation] Live Flights\", \"The application name.\")\n\n\tcmd.PersistentFlags().String(\"aws.access-key-id\", \"\", \"The AWS access key ID.\")\n\tcmd.PersistentFlags().String(\"aws.secret-access-key\", \"\", \"The AWS secret access key.\")\n\tcmd.PersistentFlags().String(\"aws.session-token\", \"\", \"The AWS session token.\")\n\tcmd.PersistentFlags().String(\"aws.endpoint-url\", \"\", \"The AWS endpoint.\")\n\tcmd.PersistentFlags().String(\"aws.region\", \"\", \"The AWS region.\")\n\tcmd.PersistentFlags().Bool(\"aws.s3.use-path-style\", false, \"Whether to use path style URLs when calling S3 APIs.\")\n\n\tcmd.PersistentFlags().String(\"mongodb.name\", \"live_flights\", \"DB name for the database\")\n\tcmd.PersistentFlags().String(\"mongodb.host\", \"localhost\", \"Host name for the database\")\n\tcmd.PersistentFlags().String(\"mongodb.user\", \"root\", \"User for the database\")\n\tcmd.PersistentFlags().String(\"mongodb.password\", \"example\", \"Password for the database\")\n\tcmd.PersistentFlags().Int(\"mongodb.port\", 27019, \"Port for the database\")\n\tcmd.PersistentFlags().String(\"mongodb.replica-set\", \"rs0\", \"Replica set name for the database\")\n\tcmd.PersistentFlags().String(\"mongodb.uri\", \"\", \"URI for the database\")\n\n\tcmd.PersistentFlags().String(\"cache.host\", \"localhost\", \"The cache host.\")\n\tcmd.PersistentFlags().Int(\"cache.port\", 6379, \"The cache port.\")\n\tcmd.PersistentFlags().String(\"cache.user\", \"default\", \"The cache user.\")\n\tcmd.PersistentFlags().String(\"cache.password\", \"\", \"The cache password.\")\n\tcmd.PersistentFlags().Duration(\"cache.ttl.default\", 7*(24*time.Hour), \"The default ttl for cache items.\")\n\n\t_ = viper.BindPFlags(cmd.PersistentFlags())\n\n\treturn cmd.Execute()\n}\n", "n_tokens": 527, "primary_symbol": "RunRootCmd", "primary_kind": "function", "primary_span": [16, 59], "def_symbols": [], "symbols": ["RunRootCmd", "entrypoint", "the", "root", "command", "func", "error", "viper", "AutomaticEnv", "SetEnvKeyReplacer", "strings", "NewReplacer", "cmd", "cobra", "Command", "Use", "liveflights", "Short", "Aviation", "Live", "Flights", "Service", "Version", "AddCommand", "serve", "New", "scraper", "data_processor", "PersistentFlags", "Bool", "logging", "debug", "false", "Whether", "emit", "level", "logs", "not", "String", "encoding", "json", "The", "log", "strategy", "StringP", "app", "name", "application", "aws", "access", "key", "AWS", "secret", "session", "token", "endpoint", "url", "region", "use", "path", "style", "URLs", "when", "calling", "APIs", "mongodb", "live_flights", "for", "database", "host", "localhost", "Host", "user", "User", "password", "example", "Password", "Int", "port", "Port", "replica", "set", "rs0", "Replica", "uri", "URI", "cache", "default", "Duration", "ttl", "time", "Hour", "items", "BindPFlags", "return", "Execute"], "doc_head": "// RunRootCmd entrypoint of the root command\nfunc RunRootCmd() error {\n\tviper.AutomaticEnv()\n\tviper.SetEnvKeyReplacer(strings.NewReplacer(\".\", \"_\", \"-\", \"_\"))\n\tcmd := &cobra.Command{\n\t\tUse:     \"liveflights\",\n\t\tShort:   \"[Aviation] Live Flights Service\",\n\t\tVersion: \"1.0.0\",\n\t}\n\tcmd.AddCommand(serve.New())\n\tcmd.AddCommand(scraper.New())\n\tcmd.AddCommand(data_processor.New())\n\tcmd.PersistentFlags().Bool(\"logging.debug\", false, \"Whether to emit debug level logs or not.\")\n\tcmd.PersistentFlags().String(\"logging.encoding\", \"json\", \"The log encoding strategy.\")\n\tcmd.PersistentFlags().StringP(\"app.name\", \"n\", \"[Aviation] Live Flights\", \"The application name.\")\n\tcmd.PersistentFlags().String(\"aws.access-key-id\", \"\", \"The AWS access key ID.\")\n\tcmd.PersistentFlags().String(\"aws.secret-access-key\", \"\", \"The AWS secret access key.\")\n\tcmd.PersistentFlags().String(\"aws.session-token\", \"\", \"The AWS session token.\")\n\tcmd.PersistentFlags().String(\"aws.endpoint-url\", \"\", \"The AWS endpoint.\")\n\tcmd.PersistentFlags().String(\"aws.region\", \"\", \"The AWS region.\")\n\tcmd.PersistentFlags().Bool(\"aws.s3.use-path-style\", false, \"Whether to use path style URLs when calling S3 APIs.\")", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:RunRootCmd/complete", "package": "cmd", "node_kind": "function", "receiver": "", "function_name": "RunRootCmd", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["RunRootCmd"], "all_kinds": ["function"], "all_ast_paths": ["go:function:RunRootCmd/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [319], "all_end_bytes": [2510], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["github.com/spf13/cobra", "github.com/spf13/viper", "go.impalastudios.com/aviation/liveflights/cmd/data_processor", "go.impalastudios.com/aviation/liveflights/cmd/scraper", "go.impalastudios.com/aviation/liveflights/cmd/serve", "strings", "time"], "symbols_referenced_strict": ["AddCommand", "AutomaticEnv", "BindPFlags", "Bool", "Command", "Duration", "Execute", "Hour", "Int", "New", "NewReplacer", "PersistentFlags", "RunRootCmd", "SetEnvKeyReplacer", "Short", "String", "StringP", "Version", "cmd.AddCommand", "cmd.Execute", "cmd.PersistentFlags", "cobra.Command", "data_processor.New", "scraper.New", "serve.New", "strings.NewReplacer", "time.Hour", "viper.AutomaticEnv", "viper.BindPFlags", "viper.SetEnvKeyReplacer"], "header_context_minimal": "package cmd\nimport (\n    \"github.com/spf13/cobra\"\n    \"github.com/spf13/viper\"\n    \"go.impalastudios.com/aviation/liveflights/cmd/data_processor\"\n    \"go.impalastudios.com/aviation/liveflights/cmd/scraper\"\n    \"go.impalastudios.com/aviation/liveflights/cmd/serve\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/root.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/scraper/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go", "rel_path": "cmd/scraper/root.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package scraper\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "scraper"], "doc_head": "package scraper", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "scraper", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package scraper", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/scraper/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go", "rel_path": "cmd/scraper/root.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 23, "text": "import (\n\t\"context\"\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n\tmongoadapter \"go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb\"\n\tradarboxtcp \"go.impalastudios.com/aviation/liveflights/internal/adapters/radarbox_tcp\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xmongodb\"\n\t\"go.impalastudios.com/grpc/dnssrvresolver\"\n\t\"go.impalastudios.com/log\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel\"\n\t\"go.opentelemetry.io/otel/propagation\"\n\t\"go.uber.org/zap\"\n\t\"google.golang.org/grpc/resolver\"\n\t\"os\"\n\t\"os/signal\"\n\t\"time\"\n)\n", "n_tokens": 199, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 23], "def_symbols": [], "symbols": ["import", "context", "github", "com", "cockroachdb", "errors", "spf13", "cobra", "viper", "mongoadapter", "impalastudios", "aviation", "liveflights", "internal", "adapters", "mongodb", "radarboxtcp", "radarbox_tcp", "core", "pkg", "xmongodb", "grpc", "dnssrvresolver", "log", "xotel", "otel", "opentelemetry", "propagation", "uber", "org", "zap", "google", "golang", "resolver", "signal", "time"], "doc_head": "import (\n\t\"context\"\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n\tmongoadapter \"go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb\"\n\tradarboxtcp \"go.impalastudios.com/aviation/liveflights/internal/adapters/radarbox_tcp\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xmongodb\"\n\t\"go.impalastudios.com/grpc/dnssrvresolver\"\n\t\"go.impalastudios.com/log\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel\"\n\t\"go.opentelemetry.io/otel/propagation\"\n\t\"go.uber.org/zap\"\n\t\"google.golang.org/grpc/resolver\"\n\t\"os\"\n\t\"os/signal\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "scraper", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package scraper", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/scraper/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go", "rel_path": "cmd/scraper/root.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 24, "end_line": 45, "text": "// New creates a new scrape command\nfunc New() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"scrape\",\n\t\tShort: \"Scrape radarbox data and persist\",\n\t\tLong:  \"Scrapes radarbox data through TCP client and persists the data in a database\",\n\t\tPreRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\treturn viper.BindPFlags(cmd.Flags())\n\t\t},\n\t\tRunE: runScrape,\n\t}\n\n\tcmd.PersistentFlags().String(\"radarbox.host\", \"\", \"Radarbox TCP host\")\n\tcmd.PersistentFlags().String(\"radarbox.ssh.host\", \"\", \"Radarbox SSH host\")\n\tcmd.PersistentFlags().String(\"radarbox.ssh.private-key\", \"\", \"Radarbox SSH private key\")\n\tcmd.PersistentFlags().String(\"radarbox.ssh.user\", \"impala\", \"Radarbox SSH user\")\n\n\tcmd.PersistentFlags().Duration(\"services.scraper.batch_store_interval\", 5*time.Minute, \"The duration between each flush of scraped batches of data.\")\n\n\treturn cmd\n}\n", "n_tokens": 225, "primary_symbol": "New", "primary_kind": "function", "primary_span": [25, 45], "def_symbols": [], "symbols": ["New", "creates", "new", "scrape", "command", "func", "cobra", "Command", "cmd", "Use", "Short", "Scrape", "radarbox", "data", "and", "persist", "Long", "Scrapes", "through", "TCP", "client", "persists", "the", "database", "PreRunE", "args", "string", "error", "return", "viper", "BindPFlags", "Flags", "RunE", "runScrape", "PersistentFlags", "String", "host", "Radarbox", "ssh", "SSH", "private", "key", "user", "impala", "Duration", "services", "scraper", "batch_store_interval", "time", "Minute", "The", "duration", "between", "each", "flush", "scraped", "batches"], "doc_head": "// New creates a new scrape command\nfunc New() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"scrape\",\n\t\tShort: \"Scrape radarbox data and persist\",\n\t\tLong:  \"Scrapes radarbox data through TCP client and persists the data in a database\",\n\t\tPreRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\treturn viper.BindPFlags(cmd.Flags())\n\t\t},\n\t\tRunE: runScrape,\n\t}\n\tcmd.PersistentFlags().String(\"radarbox.host\", \"\", \"Radarbox TCP host\")\n\tcmd.PersistentFlags().String(\"radarbox.ssh.host\", \"\", \"Radarbox SSH host\")\n\tcmd.PersistentFlags().String(\"radarbox.ssh.private-key\", \"\", \"Radarbox SSH private key\")\n\tcmd.PersistentFlags().String(\"radarbox.ssh.user\", \"impala\", \"Radarbox SSH user\")\n\tcmd.PersistentFlags().Duration(\"services.scraper.batch_store_interval\", 5*time.Minute, \"The duration between each flush of scraped batches of data.\")\n\treturn cmd\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:New/complete", "package": "scraper", "node_kind": "function", "receiver": "", "function_name": "New", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["New"], "all_kinds": ["function"], "all_ast_paths": ["go:function:New/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [706], "all_end_bytes": [1524], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["github.com/spf13/cobra", "github.com/spf13/viper", "time"], "symbols_referenced_strict": ["BindPFlags", "Command", "Duration", "Flags", "Long", "Minute", "New", "PersistentFlags", "PreRunE", "RunE", "Short", "String", "cmd.Flags", "cmd.PersistentFlags", "cobra.Command", "time.Minute", "viper.BindPFlags"], "header_context_minimal": "package scraper\nimport (\n    \"github.com/spf13/cobra\"\n    \"github.com/spf13/viper\"\n    \"time\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/scraper/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go", "rel_path": "cmd/scraper/root.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 46, "end_line": 63, "text": "type scrapeConfig struct {\n\tApp struct {\n\t\tName string `mapstructure:\"name\"`\n\t\tKey  string `mapstructure:\"key\"`\n\t} `mapstructure:\"app\"`\n\tLogging struct {\n\t\tDebug    bool   `mapstructure:\"debug\"`\n\t\tEncoding string `mapstructure:\"encoding\"`\n\t} `mapstructure:\"logging\"`\n\tRadarBox radarboxtcp.Config `mapstructure:\"radarbox\"`\n\tMongo    xmongodb.Config    `mapstructure:\"mongodb\"`\n\tServices struct {\n\t\tScraper struct {\n\t\t\tBatchStoreInterval time.Duration `mapstructure:\"batch_store_interval\"`\n\t\t} `mapstructure:\"scraper\"`\n\t} `mapstructure:\"services\"`\n}\n", "n_tokens": 140, "primary_symbol": "scrapeConfig", "primary_kind": "type", "primary_span": [46, 63], "def_symbols": [], "symbols": ["type", "scrapeConfig", "struct", "App", "Name", "string", "mapstructure", "name", "Key", "key", "app", "Logging", "Debug", "bool", "debug", "Encoding", "encoding", "logging", "RadarBox", "radarboxtcp", "Config", "radarbox", "Mongo", "xmongodb", "mongodb", "Services", "Scraper", "BatchStoreInterval", "time", "Duration", "batch_store_interval", "scraper", "services"], "doc_head": "type scrapeConfig struct {\n\tApp struct {\n\t\tName string `mapstructure:\"name\"`\n\t\tKey  string `mapstructure:\"key\"`\n\t} `mapstructure:\"app\"`\n\tLogging struct {\n\t\tDebug    bool   `mapstructure:\"debug\"`\n\t\tEncoding string `mapstructure:\"encoding\"`\n\t} `mapstructure:\"logging\"`\n\tRadarBox radarboxtcp.Config `mapstructure:\"radarbox\"`\n\tMongo    xmongodb.Config    `mapstructure:\"mongodb\"`\n\tServices struct {\n\t\tScraper struct {\n\t\t\tBatchStoreInterval time.Duration `mapstructure:\"batch_store_interval\"`\n\t\t} `mapstructure:\"scraper\"`\n\t} `mapstructure:\"services\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:scrapeConfig (struct)", "package": "scraper", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "scrapeConfig", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["scrapeConfig"], "all_kinds": ["type"], "all_ast_paths": ["go:type:scrapeConfig (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["scrapeConfig"], "all_type_kinds": ["struct"], "all_start_bytes": [1531], "all_end_bytes": [2073], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/adapters/radarbox_tcp", "go.impalastudios.com/aviation/liveflights/pkg/xmongodb", "time"], "symbols_referenced_strict": ["App", "BatchStoreInterval", "Config", "Debug", "Duration", "Encoding", "Key", "Logging", "Mongo", "Name", "RadarBox", "Scraper", "Services", "radarboxtcp.Config", "time.Duration", "xmongodb.Config"], "header_context_minimal": "package scraper\nimport (\n    \"go.impalastudios.com/aviation/liveflights/internal/adapters/radarbox_tcp\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/xmongodb\"\n    \"time\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/scraper/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go", "rel_path": "cmd/scraper/root.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 64, "end_line": 159, "text": "func runScrape(cmd *cobra.Command, _ []string) error {\n\tvar cfg scrapeConfig\n\tif err := viper.Unmarshal(&cfg); err != nil {\n\t\treturn errors.Wrap(err, \"failed to unmarshal config\")\n\t}\n\n\tlogger := log.New(\n\t\tlog.WithService(viper.GetString(\"app.name\")),\n\t\tlog.WithEncoding(viper.GetString(\"logging.encoding\")),\n\t\tlog.WithDebugEnabled(viper.GetBool(\"logging.debug\")),\n\t)\n\tlog.SetLogger(logger)\n\n\tctx := cmd.Context()\n\n\t// Make connections\n\tresolver.Register(dnssrvresolver.New())\n\n\t// Tracing\n\ttp, err := xotel.NewTracerProvider(cmd.Context(), xotel.TracerProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.tracer.endpoint\"),\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create tracer provider\")\n\t}\n\n\totel.SetTracerProvider(tp)\n\totel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(propagation.TraceContext{}, propagation.Baggage{}))\n\txotel.SetGlobalTracer(tp.Tracer(\"go.impalastudios.com/otel\"))\n\n\tmp, err := xotel.NewMeterProvider(cmd.Context(), xotel.MeterProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.meter.endpoint\"),\n\t\tInterval:    viper.GetDuration(\"otel.meter.interval\"),\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create meter provider\")\n\t}\n\n\totel.SetMeterProvider(mp)\n\txotel.SetGlobalMeter(mp.Meter(\"go.impalastudios.com/otel\"))\n\n\t// Database\n\tdb, err := xmongodb.Connect(ctx, cfg.Mongo)\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to connect to mongodb\")\n\t}\n\n\tif err := xmongodb.Migrate(ctx, cfg.Mongo.DB, db.Client); err != nil {\n\t\treturn errors.Wrap(err, \"failed to migrate mongodb\")\n\t}\n\n\tdatabase := db.Database(cfg.Mongo.DB)\n\tflightsUpdateRepo := mongoadapter.NewFlightsUpdateRepository(database)\n\n\t// External provider\n\tclient := radarboxtcp.New(cfg.RadarBox)\n\tif err := client.Connect(ctx); err != nil {\n\t\treturn err\n\t}\n\tdefer func() { _ = client.Close() }()\n\n\t// Service\n\tsvc := core.NewFlightsIngestService(\n\t\tflightsUpdateRepo,\n\t\tclient,\n\t\tcfg.Services.Scraper.BatchStoreInterval,\n\t)\n\n\tquit := make(chan os.Signal, 1)\n\n\tsignal.Notify(quit, os.Interrupt)\n\n\tlog.Info(ctx, \"Starting to consume flight updates\")\n\n\tctx, cancel := context.WithCancel(ctx)\n\tdefer cancel()\n\n\tgo func() {\n\t\tif err := svc.ConsumeFlightUpdates(ctx); err != nil {\n\t\t\tlog.Error(ctx, \"Failed to consume flight updates\", zap.Error(err))\n\t\t\tcancel()\n\t\t}\n\t}()\n\n\tselect {\n\tcase <-ctx.Done():\n\t\tlog.Info(ctx, \"Context done, terminating the realtime live flights service\")\n\tcase <-quit:\n\t\tlog.Info(ctx, \"Received interrupt signal, terminating the realtime live flights service\")\n\t}\n\n\treturn nil\n}\n", "n_tokens": 645, "primary_symbol": "runScrape", "primary_kind": "function", "primary_span": [64, 159], "def_symbols": [], "symbols": ["runScrape", "func", "cmd", "cobra", "Command", "string", "error", "var", "cfg", "scrapeConfig", "err", "viper", "Unmarshal", "nil", "return", "errors", "Wrap", "failed", "unmarshal", "config", "logger", "log", "New", "WithService", "GetString", "app", "name", "WithEncoding", "logging", "encoding", "WithDebugEnabled", "GetBool", "debug", "SetLogger", "ctx", "Context", "Make", "connections", "resolver", "Register", "dnssrvresolver", "Tracing", "xotel", "NewTracerProvider", "TracerProviderConfig", "ServiceName", "App", "Name", "Endpoint", "otel", "tracer", "endpoint", "create", "provider", "SetTracerProvider", "SetTextMapPropagator", "propagation", "NewCompositeTextMapPropagator", "TraceContext", "Baggage", "SetGlobalTracer", "Tracer", "impalastudios", "com", "NewMeterProvider", "MeterProviderConfig", "meter", "Interval", "GetDuration", "interval", "SetMeterProvider", "SetGlobalMeter", "Meter", "Database", "xmongodb", "Connect", "Mongo", "connect", "mongodb", "Migrate", "Client", "migrate", "database", "flightsUpdateRepo", "mongoadapter", "NewFlightsUpdateRepository", "External", "client", "radarboxtcp", "RadarBox", "defer", "Close", "Service", "svc", "core", "NewFlightsIngestService", "Services", "Scraper", "BatchStoreInterval", "quit", "make", "chan", "Signal", "signal", "Notify", "Interrupt", "Info", "Starting", "consume", "flight", "updates", "cancel", "context", "WithCancel", "ConsumeFlightUpdates", "Error", "Failed", "zap", "select", "case", "Done", "done", "terminating", "the", "realtime", "live", "flights", "service", "Received", "interrupt"], "doc_head": "func runScrape(cmd *cobra.Command, _ []string) error {\n\tvar cfg scrapeConfig\n\tif err := viper.Unmarshal(&cfg); err != nil {\n\t\treturn errors.Wrap(err, \"failed to unmarshal config\")\n\t}\n\tlogger := log.New(\n\t\tlog.WithService(viper.GetString(\"app.name\")),\n\t\tlog.WithEncoding(viper.GetString(\"logging.encoding\")),\n\t\tlog.WithDebugEnabled(viper.GetBool(\"logging.debug\")),\n\t)\n\tlog.SetLogger(logger)\n\tctx := cmd.Context()\n\t// Make connections\n\tresolver.Register(dnssrvresolver.New())\n\t// Tracing\n\ttp, err := xotel.NewTracerProvider(cmd.Context(), xotel.TracerProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.tracer.endpoint\"),\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create tracer provider\")\n\t}\n\totel.SetTracerProvider(tp)\n\totel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(propagation.TraceContext{}, propagation.Baggage{}))\n\txotel.SetGlobalTracer(tp.Tracer(\"go.impalastudios.com/otel\"))\n\tmp, err := xotel.NewMeterProvider(cmd.Context(), xotel.MeterProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.meter.endpoint\"),\n\t\tInterval:    viper.GetDuration(\"otel.meter.interval\"),\n\t})\n\tif err != nil {", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:runScrape/complete", "package": "scraper", "node_kind": "function", "receiver": "", "function_name": "runScrape", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["runScrape"], "all_kinds": ["function"], "all_ast_paths": ["go:function:runScrape/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2075], "all_end_bytes": [4668], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "github.com/spf13/cobra", "github.com/spf13/viper", "go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb", "go.impalastudios.com/aviation/liveflights/internal/adapters/radarbox_tcp", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/aviation/liveflights/pkg/xmongodb", "go.impalastudios.com/grpc/dnssrvresolver", "go.impalastudios.com/log", "go.impalastudios.com/otel", "go.opentelemetry.io/otel", "go.opentelemetry.io/otel/propagation", "go.uber.org/zap", "google.golang.org/grpc/resolver", "os", "os/signal"], "symbols_referenced_strict": ["App", "Baggage", "BatchStoreInterval", "Client", "Close", "Command", "Connect", "ConsumeFlightUpdates", "Context", "Database", "Done", "Endpoint", "Error", "GetBool", "GetDuration", "GetString", "Info", "Interrupt", "Interval", "Meter", "MeterProviderConfig", "Migrate", "Mongo", "Name", "New", "NewCompositeTextMapPropagator", "NewFlightsIngestService", "NewFlightsUpdateRepository", "NewMeterProvider", "NewTracerProvider", "Notify", "RadarBox", "Register", "Scraper", "Scraper.BatchStoreInterval", "ServiceName", "Services", "SetGlobalMeter", "SetGlobalTracer", "SetLogger", "SetMeterProvider", "SetTextMapPropagator", "SetTracerProvider", "Signal", "TraceContext", "Tracer", "TracerProviderConfig", "Unmarshal", "WithCancel", "WithDebugEnabled", "WithEncoding", "WithService", "Wrap", "cfg.App", "cfg.Mongo", "cfg.RadarBox", "cfg.Services", "client.Close", "client.Connect", "cmd.Context", "cobra.Command", "context.WithCancel", "core.NewFlightsIngestService", "ctx.Done", "db.Client", "db.Database", "dnssrvresolver.New", "errors.Wrap", "log.Error", "log.Info", "log.New", "log.SetLogger", "log.WithDebugEnabled", "log.WithEncoding", "log.WithService", "mongoadapter.NewFlightsUpdateRepository", "mp.Meter", "os.Interrupt", "os.Signal", "otel.SetMeterProvider", "otel.SetTextMapPropagator", "otel.SetTracerProvider", "propagation.Baggage", "propagation.NewCompositeTextMapPropagator", "propagation.TraceContext", "radarboxtcp.New", "resolver.Register", "signal.Notify", "svc.ConsumeFlightUpdates", "tp.Tracer", "viper.GetBool", "viper.GetDuration", "viper.GetString", "viper.Unmarshal", "xmongodb.Connect", "xmongodb.Migrate", "xotel.MeterProviderConfig", "xotel.NewMeterProvider", "xotel.NewTracerProvider", "xotel.SetGlobalMeter", "xotel.SetGlobalTracer", "xotel.TracerProviderConfig", "zap.Error"], "header_context_minimal": "package scraper\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"github.com/spf13/cobra\"\n    \"github.com/spf13/viper\"\n    \"go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/scraper/root.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/data_processor/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go", "rel_path": "cmd/data_processor/root.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package data_processor\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "data_processor"], "doc_head": "package data_processor", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "data_processor", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package data_processor", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/data_processor/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go", "rel_path": "cmd/data_processor/root.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 31, "text": "import (\n\t\"context\"\n\t\"github.com/aws/aws-sdk-go-v2/service/s3\"\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n\tadapters \"go.impalastudios.com/aviation/liveflights/internal/adapters\"\n\tadapterscache \"go.impalastudios.com/aviation/liveflights/internal/adapters/cache\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/adapters/filesystem\"\n\tmongoadapter \"go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/cache\"\n\tairlinesv0 \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0\"\n\tairportsv0 \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xaws\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xgrpc\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xmongodb\"\n\t\"go.impalastudios.com/grpc/dnssrvresolver\"\n\t\"go.impalastudios.com/log\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel\"\n\t\"go.opentelemetry.io/otel/propagation\"\n\t\"go.uber.org/zap\"\n\t\"google.golang.org/grpc/resolver\"\n\t\"os\"\n\t\"os/signal\"\n\t\"time\"\n)\n", "n_tokens": 348, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 31], "def_symbols": [], "symbols": ["import", "context", "github", "com", "aws", "sdk", "service", "cockroachdb", "errors", "spf13", "cobra", "viper", "adapters", "impalastudios", "aviation", "liveflights", "internal", "adapterscache", "cache", "filesystem", "mongoadapter", "mongodb", "core", "pkg", "airlinesv0", "grpc", "airlines", "airportsv0", "airports", "xaws", "xgrpc", "xmongodb", "dnssrvresolver", "log", "xotel", "otel", "opentelemetry", "propagation", "uber", "org", "zap", "google", "golang", "resolver", "signal", "time"], "doc_head": "import (\n\t\"context\"\n\t\"github.com/aws/aws-sdk-go-v2/service/s3\"\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n\tadapters \"go.impalastudios.com/aviation/liveflights/internal/adapters\"\n\tadapterscache \"go.impalastudios.com/aviation/liveflights/internal/adapters/cache\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/adapters/filesystem\"\n\tmongoadapter \"go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/cache\"\n\tairlinesv0 \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0\"\n\tairportsv0 \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xaws\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xgrpc\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xmongodb\"\n\t\"go.impalastudios.com/grpc/dnssrvresolver\"\n\t\"go.impalastudios.com/log\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel\"\n\t\"go.opentelemetry.io/otel/propagation\"\n\t\"go.uber.org/zap\"\n\t\"google.golang.org/grpc/resolver\"\n\t\"os\"\n\t\"os/signal\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "data_processor", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package data_processor", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/data_processor/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go", "rel_path": "cmd/data_processor/root.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 32, "end_line": 52, "text": "// New creates a new scrape command\nfunc New() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"data-processor\",\n\t\tShort: \"Enrich, archive and clean live flights data\",\n\t\tLong:  \"Retrieves new live flights from database, to enrich the data. And archives and removes old data from the database.\",\n\t\tPreRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\treturn viper.BindPFlags(cmd.Flags())\n\t\t},\n\t\tRunE: runDataProcessor,\n\t}\n\n\tcmd.PersistentFlags().String(\"services.airlines.endpoint\", \"\", \"airlines service endpoint\")\n\tcmd.PersistentFlags().Duration(\"services.airlines.cache.ttl\", 5*time.Minute, \"The cache TTL for airlines\")\n\tcmd.PersistentFlags().String(\"services.airports.endpoint\", \"\", \"airports service endpoint\")\n\tcmd.PersistentFlags().Duration(\"services.airports.cache.ttl\", 5*time.Minute, \"The cache TTL for airports\")\n\tcmd.PersistentFlags().String(\"stores.archive.bucket-name\", \"\", \"The S3 bucket name where the live flights are archived.\")\n\n\treturn cmd\n}\n", "n_tokens": 229, "primary_symbol": "New", "primary_kind": "function", "primary_span": [33, 52], "def_symbols": [], "symbols": ["New", "creates", "new", "scrape", "command", "func", "cobra", "Command", "cmd", "Use", "data", "processor", "Short", "Enrich", "archive", "and", "clean", "live", "flights", "Long", "Retrieves", "from", "database", "enrich", "the", "And", "archives", "removes", "old", "PreRunE", "args", "string", "error", "return", "viper", "BindPFlags", "Flags", "RunE", "runDataProcessor", "PersistentFlags", "String", "services", "airlines", "endpoint", "service", "Duration", "cache", "ttl", "time", "Minute", "The", "TTL", "for", "airports", "stores", "bucket", "name", "where", "are", "archived"], "doc_head": "// New creates a new scrape command\nfunc New() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"data-processor\",\n\t\tShort: \"Enrich, archive and clean live flights data\",\n\t\tLong:  \"Retrieves new live flights from database, to enrich the data. And archives and removes old data from the database.\",\n\t\tPreRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\treturn viper.BindPFlags(cmd.Flags())\n\t\t},\n\t\tRunE: runDataProcessor,\n\t}\n\tcmd.PersistentFlags().String(\"services.airlines.endpoint\", \"\", \"airlines service endpoint\")\n\tcmd.PersistentFlags().Duration(\"services.airlines.cache.ttl\", 5*time.Minute, \"The cache TTL for airlines\")\n\tcmd.PersistentFlags().String(\"services.airports.endpoint\", \"\", \"airports service endpoint\")\n\tcmd.PersistentFlags().Duration(\"services.airports.cache.ttl\", 5*time.Minute, \"The cache TTL for airports\")\n\tcmd.PersistentFlags().String(\"stores.archive.bucket-name\", \"\", \"The S3 bucket name where the live flights are archived.\")\n\treturn cmd\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:New/complete", "package": "data_processor", "node_kind": "function", "receiver": "", "function_name": "New", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["New"], "all_kinds": ["function"], "all_ast_paths": ["go:function:New/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1215], "all_end_bytes": [2150], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["github.com/spf13/cobra", "github.com/spf13/viper", "time"], "symbols_referenced_strict": ["BindPFlags", "Command", "Duration", "Flags", "Long", "Minute", "New", "PersistentFlags", "PreRunE", "RunE", "Short", "String", "cmd.Flags", "cmd.PersistentFlags", "cobra.Command", "time.Minute", "viper.BindPFlags"], "header_context_minimal": "package data_processor\nimport (\n    \"github.com/spf13/cobra\"\n    \"github.com/spf13/viper\"\n    \"time\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/data_processor/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go", "rel_path": "cmd/data_processor/root.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 53, "end_line": 85, "text": "type dataProcessorConfig struct {\n\tAWS xaws.Config `mapstructure:\"aws\"`\n\tApp struct {\n\t\tName string `mapstructure:\"name\"`\n\t\tKey  string `mapstructure:\"key\"`\n\t} `mapstructure:\"app\"`\n\tLogging struct {\n\t\tDebug    bool   `mapstructure:\"debug\"`\n\t\tEncoding string `mapstructure:\"encoding\"`\n\t} `mapstructure:\"logging\"`\n\tMongo  xmongodb.Config `mapstructure:\"mongodb\"`\n\tCache  cache.Config    `mapstructure:\"cache\"`\n\tStores struct {\n\t\tArchive struct {\n\t\t\tBucketName string `mapstructure:\"bucket-name\"`\n\t\t} `mapstructure:\"archive\"`\n\t} `mapstructure:\"stores\"`\n\tServices struct {\n\t\tAirlines struct {\n\t\t\tEndpoint string `mapstructure:\"endpoint\"`\n\t\t\tCache    struct {\n\t\t\t\tTTL time.Duration `mapstructure:\"ttl\"`\n\t\t\t} `mapstructure:\"cache\"`\n\t\t} `mapstructure:\"airlines\"`\n\t\tAirports struct {\n\t\t\tEndpoint string `mapstructure:\"endpoint\"`\n\t\t\tCache    struct {\n\t\t\t\tTTL time.Duration `mapstructure:\"ttl\"`\n\t\t\t} `mapstructure:\"cache\"`\n\t\t} `mapstructure:\"airports\"`\n\t} `mapstructure:\"services\"`\n}\n", "n_tokens": 258, "primary_symbol": "dataProcessorConfig", "primary_kind": "type", "primary_span": [53, 85], "def_symbols": [], "symbols": ["type", "dataProcessorConfig", "struct", "AWS", "xaws", "Config", "mapstructure", "aws", "App", "Name", "string", "name", "Key", "key", "app", "Logging", "Debug", "bool", "debug", "Encoding", "encoding", "logging", "Mongo", "xmongodb", "mongodb", "Cache", "cache", "Stores", "Archive", "BucketName", "bucket", "archive", "stores", "Services", "Airlines", "Endpoint", "endpoint", "TTL", "time", "Duration", "ttl", "airlines", "Airports", "airports", "services"], "doc_head": "type dataProcessorConfig struct {\n\tAWS xaws.Config `mapstructure:\"aws\"`\n\tApp struct {\n\t\tName string `mapstructure:\"name\"`\n\t\tKey  string `mapstructure:\"key\"`\n\t} `mapstructure:\"app\"`\n\tLogging struct {\n\t\tDebug    bool   `mapstructure:\"debug\"`\n\t\tEncoding string `mapstructure:\"encoding\"`\n\t} `mapstructure:\"logging\"`\n\tMongo  xmongodb.Config `mapstructure:\"mongodb\"`\n\tCache  cache.Config    `mapstructure:\"cache\"`\n\tStores struct {\n\t\tArchive struct {\n\t\t\tBucketName string `mapstructure:\"bucket-name\"`\n\t\t} `mapstructure:\"archive\"`\n\t} `mapstructure:\"stores\"`\n\tServices struct {\n\t\tAirlines struct {\n\t\t\tEndpoint string `mapstructure:\"endpoint\"`\n\t\t\tCache    struct {\n\t\t\t\tTTL time.Duration `mapstructure:\"ttl\"`\n\t\t\t} `mapstructure:\"cache\"`\n\t\t} `mapstructure:\"airlines\"`\n\t\tAirports struct {\n\t\t\tEndpoint string `mapstructure:\"endpoint\"`\n\t\t\tCache    struct {\n\t\t\t\tTTL time.Duration `mapstructure:\"ttl\"`\n\t\t\t} `mapstructure:\"cache\"`\n\t\t} `mapstructure:\"airports\"`\n\t} `mapstructure:\"services\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:dataProcessorConfig (struct)", "package": "data_processor", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "dataProcessorConfig", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["dataProcessorConfig"], "all_kinds": ["type"], "all_ast_paths": ["go:type:dataProcessorConfig (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["dataProcessorConfig"], "all_type_kinds": ["struct"], "all_start_bytes": [2157], "all_end_bytes": [3125], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/pkg/cache", "go.impalastudios.com/aviation/liveflights/pkg/xaws", "go.impalastudios.com/aviation/liveflights/pkg/xmongodb", "time"], "symbols_referenced_strict": ["Airlines", "Airports", "App", "Archive", "BucketName", "Cache", "Config", "Debug", "Duration", "Encoding", "Endpoint", "Key", "Logging", "Mongo", "Name", "Services", "Stores", "cache.Config", "time.Duration", "xaws.Config", "xmongodb.Config"], "header_context_minimal": "package data_processor\nimport (\n    \"go.impalastudios.com/aviation/liveflights/pkg/cache\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/xaws\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/xmongodb\"\n    \"time\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/data_processor/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go", "rel_path": "cmd/data_processor/root.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 86, "end_line": 260, "text": "func runDataProcessor(cmd *cobra.Command, _ []string) error {\n\tctx := cmd.Context()\n\n\t// Config\n\tvar cfg dataProcessorConfig\n\tif err := viper.Unmarshal(&cfg); err != nil {\n\t\treturn errors.Wrap(err, \"failed to unmarshal config\")\n\t}\n\n\tawsCfg, err := xaws.LoadAWSConfig(ctx, &cfg.AWS)\n\tif err != nil {\n\t\tlog.Error(ctx, \"Failed to load AWS config\", zap.Error(err))\n\t}\n\n\tquit := make(chan os.Signal, 1)\n\tdefer close(quit)\n\n\tsignal.Notify(quit, os.Interrupt)\n\n\t// Logging\n\tlogger := log.New(\n\t\tlog.WithService(cfg.App.Name),\n\t\tlog.WithEncoding(cfg.Logging.Encoding),\n\t\tlog.WithDebugEnabled(cfg.Logging.Debug),\n\t)\n\tlog.SetLogger(logger)\n\n\t// DNS resolver\n\tresolver.Register(dnssrvresolver.New())\n\n\t// Tracing\n\ttp, err := xotel.NewTracerProvider(cmd.Context(), xotel.TracerProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.tracer.endpoint\"),\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create tracer provider\")\n\t}\n\n\totel.SetTracerProvider(tp)\n\totel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(propagation.TraceContext{}, propagation.Baggage{}))\n\txotel.SetGlobalTracer(tp.Tracer(\"go.impalastudios.com/otel\"))\n\n\tmp, err := xotel.NewMeterProvider(cmd.Context(), xotel.MeterProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.meter.endpoint\"),\n\t\tInterval:    viper.GetDuration(\"otel.meter.interval\"),\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create meter provider\")\n\t}\n\n\totel.SetMeterProvider(mp)\n\txotel.SetGlobalMeter(mp.Meter(\"go.impalastudios.com/otel\"))\n\n\t// Database\n\tdb, err := xmongodb.Connect(ctx, cfg.Mongo)\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to connect to mongodb\")\n\t}\n\n\tif err := xmongodb.Migrate(ctx, cfg.Mongo.DB, db.Client); err != nil {\n\t\treturn errors.Wrap(err, \"failed to migrate mongodb\")\n\t}\n\n\tdatabase := db.Database(cfg.Mongo.DB)\n\n\t// Cache\n\tcacheClient := cache.Connect(cmd.Context(), cfg.Cache)\n\n\tairlinesCache := adapterscache.NewAirlinesCache(cacheClient, cfg.Services.Airlines.Cache.TTL)\n\tairportsCache := adapterscache.NewAirportsCache(cacheClient, cfg.Services.Airports.Cache.TTL)\n\n\t// Services\n\ts3Client := xaws.NewS3ClientFromConfig(awsCfg, func(o *s3.Options) {\n\t\to.UsePathStyle = cfg.AWS.S3.UsePathStyle\n\t})\n\n\tarchiveFilesystem := filesystem.NewS3Filesystem(cfg.Stores.Archive.BucketName, s3Client)\n\n\tflightsArchiveRepo := mongoadapter.NewFlightsArchiveRepository(database)\n\n\tarchiveSvc := core.NewFlightArchiveService(\n\t\tflightsArchiveRepo,\n\t\tarchiveFilesystem,\n\t\t1000,\n\t\t10,\n\t)\n\n\tflightsEnrichRepo := mongoadapter.NewFlightsEnrichRepository(database)\n\n\tairlines := adapters.NewAirlinesGrpcClient(\n\t\tairlinesv0.NewAirlinesServiceClient(\n\t\t\txgrpc.MustConnect(cfg.Services.Airlines.Endpoint),\n\t\t),\n\t\tairlinesCache,\n\t)\n\n\tairports := adapters.NewAirportsGrpcClient(\n\t\tairportsv0.NewAirportsServiceClient(\n\t\t\txgrpc.MustConnect(cfg.Services.Airports.Endpoint),\n\t\t),\n\t\tairportsCache,\n\t\t25,\n\t)\n\n\tenrichSvc := core.NewFlightsEnrichService(\n\t\tflightsEnrichRepo,\n\t\tairlines,\n\t\tairports,\n\t\t1000,\n\t\t10,\n\t)\n\n\tlog.Info(ctx, \"Starting to process data\")\n\n\tctx, cancel := context.WithCancel(ctx)\n\tdefer cancel()\n\n\tmaxStepDuration := viper.GetDuration(\"max_duration\")\n\tif maxStepDuration == 0 {\n\t\tmaxStepDuration = 150 * time.Second\n\t}\n\tsleepDuration := viper.GetDuration(\"sleep_duration\")\n\tif sleepDuration == 0 {\n\t\tsleepDuration = time.Minute\n\t}\n\n\tfor {\n\t\tselect {\n\t\tcase <-ctx.Done():\n\t\t\tlog.Info(ctx, \"Context done, exiting processor loop\")\n\t\t\treturn nil\n\t\tdefault:\n\t\t}\n\n\t\tstartArchive := time.Now()\n\t\terr := archiveSvc.Archive(ctx)\n\t\tif err != nil {\n\t\t\tlog.Error(ctx, \"Failed to archive flights\", zap.Error(err))\n\t\t}\n\n\t\tarchiveDur := time.Since(startArchive)\n\t\tif archiveDur > maxStepDuration {\n\t\t\tlog.Warn(ctx, \"Clean/archive step took longer than expected\",\n\t\t\t\tzap.Duration(\"duration\", archiveDur),\n\t\t\t\tzap.Duration(\"max_duration\", maxStepDuration),\n\t\t\t\tzap.Error(err),\n\t\t\t)\n\t\t}\n\n\t\tstartEnrich := time.Now()\n\t\terr = enrichSvc.Enrich(ctx)\n\t\tif err != nil {\n\t\t\tlog.Error(ctx, \"Failed to enrich live flights data\", zap.Error(err))\n\t\t}\n\n\t\tenrichDur := time.Since(startEnrich)\n\t\tif enrichDur > maxStepDuration {\n\t\t\tlog.Warn(ctx, \"Enrich step took longer than expected\",\n\t\t\t\tzap.Duration(\"duration\", enrichDur),\n\t\t\t\tzap.Duration(\"max_duration\", maxStepDuration),\n\t\t\t\tzap.Error(err),\n\t\t\t)\n\t\t}\n\n\t\tselect {\n\t\tcase <-ctx.Done():\n\t\t\tlog.Info(ctx, \"Context done, exiting processor loop\")\n\t\t\treturn nil\n\t\tcase <-time.After(sleepDuration):\n\t\t}\n\t}\n}\n", "n_tokens": 1182, "primary_symbol": "runDataProcessor", "primary_kind": "function", "primary_span": [86, 260], "def_symbols": [], "symbols": ["runDataProcessor", "func", "cmd", "cobra", "Command", "string", "error", "ctx", "Context", "Config", "var", "cfg", "dataProcessorConfig", "err", "viper", "Unmarshal", "nil", "return", "errors", "Wrap", "failed", "unmarshal", "config", "awsCfg", "xaws", "LoadAWSConfig", "AWS", "log", "Error", "Failed", "load", "zap", "quit", "make", "chan", "Signal", "defer", "close", "signal", "Notify", "Interrupt", "Logging", "logger", "New", "WithService", "App", "Name", "WithEncoding", "Encoding", "WithDebugEnabled", "Debug", "SetLogger", "DNS", "resolver", "Register", "dnssrvresolver", "Tracing", "xotel", "NewTracerProvider", "TracerProviderConfig", "ServiceName", "Endpoint", "GetString", "otel", "tracer", "endpoint", "create", "provider", "SetTracerProvider", "SetTextMapPropagator", "propagation", "NewCompositeTextMapPropagator", "TraceContext", "Baggage", "SetGlobalTracer", "Tracer", "impalastudios", "com", "NewMeterProvider", "MeterProviderConfig", "meter", "Interval", "GetDuration", "interval", "SetMeterProvider", "SetGlobalMeter", "Meter", "Database", "xmongodb", "Connect", "Mongo", "connect", "mongodb", "Migrate", "Client", "migrate", "database", "Cache", "cacheClient", "cache", "airlinesCache", "adapterscache", "NewAirlinesCache", "Services", "Airlines", "TTL", "airportsCache", "NewAirportsCache", "Airports", "s3Client", "NewS3ClientFromConfig", "Options", "UsePathStyle", "archiveFilesystem", "filesystem", "NewS3Filesystem", "Stores", "Archive", "BucketName", "flightsArchiveRepo", "mongoadapter", "NewFlightsArchiveRepository", "archiveSvc", "core", "NewFlightArchiveService", "flightsEnrichRepo", "NewFlightsEnrichRepository", "airlines", "adapters", "NewAirlinesGrpcClient", "airlinesv0", "NewAirlinesServiceClient", "xgrpc", "MustConnect", "airports", "NewAirportsGrpcClient", "airportsv0", "NewAirportsServiceClient", "enrichSvc", "NewFlightsEnrichService", "Info", "Starting", "process", "data", "cancel", "context", "WithCancel", "maxStepDuration", "max_duration", "time", "Second", "sleepDuration", "sleep_duration", "Minute", "for", "select", "case", "Done", "done", "exiting", "processor", "loop", "default", "startArchive", "Now", "archive", "flights", "archiveDur", "Since", "Warn", "Clean", "step", "took", "longer", "than", "expected", "Duration", "duration", "startEnrich", "Enrich", "enrich", "live", "enrichDur", "After"], "doc_head": "func runDataProcessor(cmd *cobra.Command, _ []string) error {\n\tctx := cmd.Context()\n\t// Config\n\tvar cfg dataProcessorConfig\n\tif err := viper.Unmarshal(&cfg); err != nil {\n\t\treturn errors.Wrap(err, \"failed to unmarshal config\")\n\t}\n\tawsCfg, err := xaws.LoadAWSConfig(ctx, &cfg.AWS)\n\tif err != nil {\n\t\tlog.Error(ctx, \"Failed to load AWS config\", zap.Error(err))\n\t}\n\tquit := make(chan os.Signal, 1)\n\tdefer close(quit)\n\tsignal.Notify(quit, os.Interrupt)\n\t// Logging\n\tlogger := log.New(\n\t\tlog.WithService(cfg.App.Name),\n\t\tlog.WithEncoding(cfg.Logging.Encoding),\n\t\tlog.WithDebugEnabled(cfg.Logging.Debug),\n\t)\n\tlog.SetLogger(logger)\n\t// DNS resolver\n\tresolver.Register(dnssrvresolver.New())\n\t// Tracing\n\ttp, err := xotel.NewTracerProvider(cmd.Context(), xotel.TracerProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.tracer.endpoint\"),\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create tracer provider\")\n\t}\n\totel.SetTracerProvider(tp)\n\totel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(propagation.TraceContext{}, propagation.Baggage{}))\n\txotel.SetGlobalTracer(tp.Tracer(\"go.impalastudios.com/otel\"))", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:runDataProcessor/complete", "package": "data_processor", "node_kind": "function", "receiver": "", "function_name": "runDataProcessor", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["runDataProcessor"], "all_kinds": ["function"], "all_ast_paths": ["go:function:runDataProcessor/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [3127], "all_end_bytes": [7598], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "github.com/aws/aws-sdk-go-v2/service/s3", "github.com/cockroachdb/errors", "github.com/spf13/cobra", "github.com/spf13/viper", "go.impalastudios.com/aviation/liveflights/internal/adapters", "go.impalastudios.com/aviation/liveflights/internal/adapters/cache", "go.impalastudios.com/aviation/liveflights/internal/adapters/filesystem", "go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/aviation/liveflights/pkg/cache", "go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0", "go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0", "go.impalastudios.com/aviation/liveflights/pkg/xaws", "go.impalastudios.com/aviation/liveflights/pkg/xgrpc", "go.impalastudios.com/aviation/liveflights/pkg/xmongodb", "go.impalastudios.com/grpc/dnssrvresolver", "go.impalastudios.com/log", "go.impalastudios.com/otel", "go.opentelemetry.io/otel", "go.opentelemetry.io/otel/propagation", "go.uber.org/zap", "google.golang.org/grpc/resolver", "os", "os/signal", "time"], "symbols_referenced_strict": ["Airlines", "Airlines.Cache", "Airlines.Endpoint", "Airports", "Airports.Cache", "Airports.Endpoint", "App", "Archive", "Archive.BucketName", "Baggage", "BucketName", "Cache", "Client", "Command", "Connect", "Context", "Database", "Debug", "Done", "Duration", "Encoding", "Endpoint", "Enrich", "Error", "GetDuration", "GetString", "Info", "Interrupt", "Interval", "LoadAWSConfig", "Logging", "Meter", "MeterProviderConfig", "Migrate", "Minute", "Mongo", "MustConnect", "Name", "New", "NewAirlinesCache", "NewAirlinesGrpcClient", "NewAirlinesServiceClient", "NewAirportsCache", "NewAirportsGrpcClient", "NewAirportsServiceClient", "NewCompositeTextMapPropagator", "NewFlightArchiveService", "NewFlightsArchiveRepository", "NewFlightsEnrichRepository", "NewFlightsEnrichService", "NewMeterProvider", "NewS3ClientFromConfig", "NewS3Filesystem", "NewTracerProvider", "Notify", "Now", "Options", "Register", "S3.UsePathStyle", "Second", "ServiceName", "Services", "SetGlobalMeter", "SetGlobalTracer", "SetLogger", "SetMeterProvider", "SetTextMapPropagator", "SetTracerProvider", "Signal", "Since", "Stores", "TraceContext", "Tracer", "TracerProviderConfig", "Unmarshal", "UsePathStyle", "Warn", "WithCancel", "WithDebugEnabled", "WithEncoding", "WithService", "Wrap", "adapters.NewAirlinesGrpcClient", "adapters.NewAirportsGrpcClient", "adapterscache.NewAirlinesCache", "adapterscache.NewAirportsCache", "airlinesv0.NewAirlinesServiceClient", "airportsv0.NewAirportsServiceClient", "archiveSvc.Archive", "cache.Connect", "cfg.AWS", "cfg.App", "cfg.Cache", "cfg.Logging", "cfg.Mongo", "cfg.Services", "cfg.Stores", "cmd.Context", "cobra.Command", "context.WithCancel", "core.NewFlightArchiveService", "core.NewFlightsEnrichService", "ctx.Done", "db.Client", "db.Database", "dnssrvresolver.New", "enrichSvc.Enrich", "errors.Wrap", "filesystem.NewS3Filesystem", "log.Error", "log.Info", "log.New", "log.SetLogger", "log.Warn", "log.WithDebugEnabled", "log.WithEncoding", "log.WithService", "mongoadapter.NewFlightsArchiveRepository", "mongoadapter.NewFlightsEnrichRepository", "mp.Meter", "o.UsePathStyle", "os.Interrupt", "os.Signal", "otel.SetMeterProvider", "otel.SetTextMapPropagator", "otel.SetTracerProvider", "propagation.Baggage", "propagation.NewCompositeTextMapPropagator", "propagation.TraceContext", "resolver.Register", "s3.Options", "signal.Notify", "time.After", "time.Minute", "time.Now", "time.Second", "time.Since", "tp.Tracer", "viper.GetDuration", "viper.GetString", "viper.Unmarshal", "xaws.LoadAWSConfig", "xaws.NewS3ClientFromConfig", "xgrpc.MustConnect", "xmongodb.Connect", "xmongodb.Migrate", "xotel.MeterProviderConfig", "xotel.NewMeterProvider", "xotel.NewTracerProvider", "xotel.SetGlobalMeter", "xotel.SetGlobalTracer", "xotel.TracerProviderConfig", "zap.Duration", "zap.Error"], "header_context_minimal": "package data_processor\nimport (\n    \"context\"\n    \"github.com/aws/aws-sdk-go-v2/service/s3\"\n    \"github.com/cockroachdb/errors\"\n    \"github.com/spf13/cobra\"\n    \"github.com/spf13/viper\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/data_processor/root.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/serve/http.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go", "rel_path": "cmd/serve/http.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package serve\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "serve"], "doc_head": "package serve", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "serve", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package serve", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/serve/http.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go", "rel_path": "cmd/serve/http.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 45, "text": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/aws/aws-sdk-go-v2/service/s3\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/adapters/filesystem\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xaws\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/signal\"\n\t\"slices\"\n\t\"time\"\n\n\t\"github.com/go-playground/validator/v10\"\n\thttphandlers \"go.impalastudios.com/aviation/liveflights/internal/adapters/handlers/http\"\n\tv0 \"go.impalastudios.com/aviation/liveflights/internal/adapters/handlers/http/v0\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.opentelemetry.io/otel/propagation\"\n\n\t\"github.com/cockroachdb/errors\"\n\tginzap \"github.com/gin-contrib/zap\"\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/gin-gonic/gin/binding\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/i18n\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xmongodb\"\n\t\"go.impalastudios.com/log\"\n\txotel \"go.impalastudios.com/otel\"\n\totelginmetric \"go.impalastudios.com/otel/gingonic\"\n\trequestid \"go.impalastudios.com/requestid/gin\"\n\t\"go.opentelemetry.io/contrib/instrumentation/github.com/gin-gonic/gin/otelgin\"\n\t\"go.opentelemetry.io/otel\"\n\t\"go.uber.org/zap/zapcore\"\n\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n\t\"go.uber.org/zap\"\n\n\t\"go.impalastudios.com/grpc/dnssrvresolver\"\n\t\"go.impalastudios.com/validation/customrules\"\n\n\t\"google.golang.org/grpc/resolver\"\n)\n", "n_tokens": 412, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 45], "def_symbols": [], "symbols": ["import", "context", "fmt", "github", "com", "aws", "sdk", "service", "impalastudios", "aviation", "liveflights", "internal", "adapters", "filesystem", "pkg", "xaws", "net", "http", "signal", "slices", "time", "playground", "validator", "v10", "httphandlers", "handlers", "mongodb", "core", "opentelemetry", "otel", "propagation", "cockroachdb", "errors", "ginzap", "gin", "contrib", "zap", "gonic", "binding", "i18n", "xmongodb", "log", "xotel", "otelginmetric", "gingonic", "requestid", "instrumentation", "otelgin", "uber", "org", "zapcore", "spf13", "cobra", "viper", "grpc", "dnssrvresolver", "validation", "customrules", "google", "golang", "resolver"], "doc_head": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/aws/aws-sdk-go-v2/service/s3\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/adapters/filesystem\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xaws\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/signal\"\n\t\"slices\"\n\t\"time\"\n\t\"github.com/go-playground/validator/v10\"\n\thttphandlers \"go.impalastudios.com/aviation/liveflights/internal/adapters/handlers/http\"\n\tv0 \"go.impalastudios.com/aviation/liveflights/internal/adapters/handlers/http/v0\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.opentelemetry.io/otel/propagation\"\n\t\"github.com/cockroachdb/errors\"\n\tginzap \"github.com/gin-contrib/zap\"\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/gin-gonic/gin/binding\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/i18n\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xmongodb\"\n\t\"go.impalastudios.com/log\"\n\txotel \"go.impalastudios.com/otel\"\n\totelginmetric \"go.impalastudios.com/otel/gingonic\"\n\trequestid \"go.impalastudios.com/requestid/gin\"\n\t\"go.opentelemetry.io/contrib/instrumentation/github.com/gin-gonic/gin/otelgin\"\n\t\"go.opentelemetry.io/otel\"\n\t\"go.uber.org/zap/zapcore\"", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "serve", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package serve", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/serve/http.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go", "rel_path": "cmd/serve/http.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 46, "end_line": 64, "text": "// Serve is a function that starts the http server\nfunc newServeHttpCommand() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"http\",\n\t\tShort: \"Start HTTP REST server\",\n\t\tPreRunE: func(cmd *cobra.Command, _ []string) error {\n\t\t\treturn viper.BindPFlags(cmd.Flags())\n\t\t},\n\t\tRunE: runServeHttp,\n\t\tArgs: cobra.ExactArgs(0),\n\t}\n\n\tcmd.PersistentFlags().Int(\"app.http.port\", 8080, \"HTTP service port\")\n\n\tcmd.PersistentFlags().String(\"stores.archive.bucket-name\", \"\", \"The S3 bucket name where the live flights are archived.\")\n\n\treturn cmd\n}\n", "n_tokens": 144, "primary_symbol": "newServeHttpCommand", "primary_kind": "function", "primary_span": [47, 64], "def_symbols": [], "symbols": ["newServeHttpCommand", "Serve", "function", "that", "starts", "the", "http", "server", "func", "cobra", "Command", "cmd", "Use", "Short", "Start", "HTTP", "REST", "PreRunE", "string", "error", "return", "viper", "BindPFlags", "Flags", "RunE", "runServeHttp", "Args", "ExactArgs", "PersistentFlags", "Int", "app", "port", "service", "String", "stores", "archive", "bucket", "name", "The", "where", "live", "flights", "are", "archived"], "doc_head": "// Serve is a function that starts the http server\nfunc newServeHttpCommand() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"http\",\n\t\tShort: \"Start HTTP REST server\",\n\t\tPreRunE: func(cmd *cobra.Command, _ []string) error {\n\t\t\treturn viper.BindPFlags(cmd.Flags())\n\t\t},\n\t\tRunE: runServeHttp,\n\t\tArgs: cobra.ExactArgs(0),\n\t}\n\tcmd.PersistentFlags().Int(\"app.http.port\", 8080, \"HTTP service port\")\n\tcmd.PersistentFlags().String(\"stores.archive.bucket-name\", \"\", \"The S3 bucket name where the live flights are archived.\")\n\treturn cmd\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:newServeHttpCommand/complete", "package": "serve", "node_kind": "function", "receiver": "", "function_name": "newServeHttpCommand", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["newServeHttpCommand"], "all_kinds": ["function"], "all_ast_paths": ["go:function:newServeHttpCommand/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1447], "all_end_bytes": [1931], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["github.com/spf13/cobra", "github.com/spf13/viper"], "symbols_referenced_strict": ["Args", "BindPFlags", "Command", "ExactArgs", "Flags", "Int", "PersistentFlags", "PreRunE", "RunE", "Short", "String", "cmd.Flags", "cmd.PersistentFlags", "cobra.Command", "cobra.ExactArgs", "viper.BindPFlags"], "header_context_minimal": "package serve\nimport (\n    \"github.com/spf13/cobra\"\n    \"github.com/spf13/viper\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/serve/http.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go", "rel_path": "cmd/serve/http.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 65, "end_line": 85, "text": "type serveHttpConfig struct {\n\tAWS xaws.Config `mapstructure:\"aws\"`\n\tApp struct {\n\t\tName string `mapstructure:\"name\"`\n\t\tKey  string `mapstructure:\"key\"`\n\t\tHTTP struct {\n\t\t\tPort int `mapstructure:\"port\"`\n\t\t} `mapstructure:\"http\"`\n\t} `mapstructure:\"app\"`\n\tLogging struct {\n\t\tDebug    bool   `mapstructure:\"debug\"`\n\t\tEncoding string `mapstructure:\"encoding\"`\n\t} `mapstructure:\"logging\"`\n\tMongo  xmongodb.Config `mapstructure:\"mongodb\"`\n\tStores struct {\n\t\tArchive struct {\n\t\t\tBucketName string `mapstructure:\"bucket-name\"`\n\t\t} `mapstructure:\"archive\"`\n\t} `mapstructure:\"stores\"`\n}\n", "n_tokens": 154, "primary_symbol": "serveHttpConfig", "primary_kind": "type", "primary_span": [65, 85], "def_symbols": [], "symbols": ["type", "serveHttpConfig", "struct", "AWS", "xaws", "Config", "mapstructure", "aws", "App", "Name", "string", "name", "Key", "key", "HTTP", "Port", "int", "port", "http", "app", "Logging", "Debug", "bool", "debug", "Encoding", "encoding", "logging", "Mongo", "xmongodb", "mongodb", "Stores", "Archive", "BucketName", "bucket", "archive", "stores"], "doc_head": "type serveHttpConfig struct {\n\tAWS xaws.Config `mapstructure:\"aws\"`\n\tApp struct {\n\t\tName string `mapstructure:\"name\"`\n\t\tKey  string `mapstructure:\"key\"`\n\t\tHTTP struct {\n\t\t\tPort int `mapstructure:\"port\"`\n\t\t} `mapstructure:\"http\"`\n\t} `mapstructure:\"app\"`\n\tLogging struct {\n\t\tDebug    bool   `mapstructure:\"debug\"`\n\t\tEncoding string `mapstructure:\"encoding\"`\n\t} `mapstructure:\"logging\"`\n\tMongo  xmongodb.Config `mapstructure:\"mongodb\"`\n\tStores struct {\n\t\tArchive struct {\n\t\t\tBucketName string `mapstructure:\"bucket-name\"`\n\t\t} `mapstructure:\"archive\"`\n\t} `mapstructure:\"stores\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:serveHttpConfig (struct)", "package": "serve", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "serveHttpConfig", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["serveHttpConfig"], "all_kinds": ["type"], "all_ast_paths": ["go:type:serveHttpConfig (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["serveHttpConfig"], "all_type_kinds": ["struct"], "all_start_bytes": [1938], "all_end_bytes": [2509], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/pkg/xaws", "go.impalastudios.com/aviation/liveflights/pkg/xmongodb"], "symbols_referenced_strict": ["App", "Archive", "BucketName", "Config", "Debug", "Encoding", "Key", "Logging", "Mongo", "Name", "Port", "Stores", "xaws.Config", "xmongodb.Config"], "header_context_minimal": "package serve\nimport (\n    \"go.impalastudios.com/aviation/liveflights/pkg/xaws\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/xmongodb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/serve/http.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go", "rel_path": "cmd/serve/http.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 86, "end_line": 240, "text": "func runServeHttp(cmd *cobra.Command, _ []string) error {\n\tctx := cmd.Context()\n\n\t// Config\n\tvar cfg serveHttpConfig\n\tif err := viper.Unmarshal(&cfg); err != nil {\n\t\treturn errors.Wrap(err, \"failed to unmarshal db config\")\n\t}\n\n\tawsCfg, err := xaws.LoadAWSConfig(ctx, &cfg.AWS)\n\tif err != nil {\n\t\tlog.Error(ctx, \"Failed to load AWS config\", zap.Error(err))\n\t}\n\n\tquit := make(chan os.Signal, 1)\n\tdefer close(quit)\n\n\tsignal.Notify(quit, os.Interrupt)\n\n\t// Logging\n\tlogger := log.New(\n\t\tlog.WithService(cfg.App.Name),\n\t\tlog.WithEncoding(cfg.Logging.Encoding),\n\t\tlog.WithDebugEnabled(cfg.Logging.Debug),\n\t)\n\tlog.SetLogger(logger)\n\n\t// DNS resolver\n\tresolver.Register(dnssrvresolver.New())\n\n\t// i18n\n\tif v, ok := binding.Validator.Engine().(*validator.Validate); ok {\n\t\ti18n.Register(v)\n\t\tcustomrules.Register(v)\n\t}\n\n\t// Tracing\n\ttp, err := xotel.NewTracerProvider(cmd.Context(), xotel.TracerProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.tracer.endpoint\"),\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create tracer provider\")\n\t}\n\n\totel.SetTracerProvider(tp)\n\totel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(propagation.TraceContext{}, propagation.Baggage{}))\n\txotel.SetGlobalTracer(tp.Tracer(\"go.impalastudios.com/otel\"))\n\n\tmp, err := xotel.NewMeterProvider(cmd.Context(), xotel.MeterProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.meter.endpoint\"),\n\t\tInterval:    viper.GetDuration(\"otel.meter.interval\"),\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create meter provider\")\n\t}\n\n\totel.SetMeterProvider(mp)\n\txotel.SetGlobalMeter(mp.Meter(\"go.impalastudios.com/otel\"))\n\n\t// Database\n\tdb, err := xmongodb.Connect(ctx, cfg.Mongo)\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to connect to mongodb\")\n\t}\n\n\tdatabase := db.Database(cfg.Mongo.DB)\n\n\t// Services\n\tflightsUpdateRepo := mongodb.NewFlightsUpdateRepository(database)\n\n\ts3Client := xaws.NewS3ClientFromConfig(awsCfg, func(o *s3.Options) {\n\t\to.UsePathStyle = cfg.AWS.S3.UsePathStyle\n\t})\n\n\tsvc := core.NewService(flightsUpdateRepo, filesystem.NewS3Filesystem(cfg.Stores.Archive.BucketName, s3Client))\n\n\t// Routing\n\trouter := gin.New()\n\trouter.Use(otelginmetric.Middleware(\n\t\totelginmetric.WithRecordFilter(func(route string, _ *http.Request) bool {\n\t\t\treturn route != \"/__gw/health\"\n\t\t}),\n\t))\n\trouter.Use(requestid.New()...)\n\trouter.Use(\n\t\tginzap.GinzapWithConfig(logger, &ginzap.Config{\n\t\t\tTimeFormat: time.RFC3339,\n\t\t\tUTC:        true,\n\t\t\tSkipPaths:  []string{\"/__gw/health\"},\n\t\t\tContext: func(c *gin.Context) []zapcore.Field {\n\t\t\t\treturn []zapcore.Field{log.RequestIDExtractor(c), zap.String(\"type\", \"access_log\")}\n\t\t\t},\n\t\t}),\n\t\tginzap.RecoveryWithZap(logger, true),\n\t)\n\trouter.Use(otelgin.Middleware(\n\t\tcfg.App.Name,\n\t\totelgin.WithTracerProvider(tp),\n\t\totelgin.WithFilter(func(req *http.Request) bool {\n\t\t\treturn slices.Contains([]string{\"/__gw/health\"}, req.URL.Path)\n\t\t}),\n\t))\n\n\tgw := router.Group(\"/__gw\")\n\n\thandlersV0 := v0.New(svc)\n\thandlersV0.Register(gw)\n\n\thealthHandler := httphandlers.NewHealthHandler()\n\thealthHandler.Register(gw)\n\n\tsrv := http.Server{\n\t\tAddr:    fmt.Sprintf(\":%d\", viper.GetInt(\"app.http.port\")),\n\t\tHandler: router,\n\t}\n\n\tgo func() {\n\t\tlogger.Info(\"Server started. Ready to accept incoming requests...\")\n\t\tif err := srv.ListenAndServe(); err != nil && !errors.Is(err, http.ErrServerClosed) {\n\t\t\tlog.Error(context.TODO(), \"Error occurred while listening.\", zap.Error(err))\n\t\t}\n\t}()\n\n\t// Shutting down\n\t<-quit\n\n\tlog.Info(context.TODO(), \"Shutting down the REST server...\")\n\n\tctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\n\tdefer cancel()\n\n\tif err := srv.Shutdown(ctx); err != nil {\n\t\tlog.Error(cmd.Context(), \"Error occurred while shutting down.\", zap.Error(err))\n\t}\n\n\tif err := tp.Shutdown(ctx); err != nil {\n\t\tlog.Error(cmd.Context(), \"Error occurred while shutting down the tracer.\", zap.Error(err))\n\t}\n\n\tif err := mp.Shutdown(ctx); err != nil {\n\t\tlog.Error(cmd.Context(), \"Error occurred while shutting down the meter.\", zap.Error(err))\n\t}\n\n\tselect {\n\tcase <-ctx.Done():\n\t\tlog.Info(context.TODO(), \"REST server shutdown timed out.\")\n\tdefault:\n\t\tlog.Info(context.TODO(), \"REST server shutdown gracefully.\")\n\t}\n\n\treturn nil\n}\n", "n_tokens": 1118, "primary_symbol": "runServeHttp", "primary_kind": "function", "primary_span": [86, 240], "def_symbols": [], "symbols": ["runServeHttp", "func", "cmd", "cobra", "Command", "string", "error", "ctx", "Context", "Config", "var", "cfg", "serveHttpConfig", "err", "viper", "Unmarshal", "nil", "return", "errors", "Wrap", "failed", "unmarshal", "config", "awsCfg", "xaws", "LoadAWSConfig", "AWS", "log", "Error", "Failed", "load", "zap", "quit", "make", "chan", "Signal", "defer", "close", "signal", "Notify", "Interrupt", "Logging", "logger", "New", "WithService", "App", "Name", "WithEncoding", "Encoding", "WithDebugEnabled", "Debug", "SetLogger", "DNS", "resolver", "Register", "dnssrvresolver", "i18n", "binding", "Validator", "Engine", "validator", "Validate", "customrules", "Tracing", "xotel", "NewTracerProvider", "TracerProviderConfig", "ServiceName", "Endpoint", "GetString", "otel", "tracer", "endpoint", "create", "provider", "SetTracerProvider", "SetTextMapPropagator", "propagation", "NewCompositeTextMapPropagator", "TraceContext", "Baggage", "SetGlobalTracer", "Tracer", "impalastudios", "com", "NewMeterProvider", "MeterProviderConfig", "meter", "Interval", "GetDuration", "interval", "SetMeterProvider", "SetGlobalMeter", "Meter", "Database", "xmongodb", "Connect", "Mongo", "connect", "mongodb", "database", "Services", "flightsUpdateRepo", "NewFlightsUpdateRepository", "s3Client", "NewS3ClientFromConfig", "Options", "UsePathStyle", "svc", "core", "NewService", "filesystem", "NewS3Filesystem", "Stores", "Archive", "BucketName", "Routing", "router", "gin", "Use", "otelginmetric", "Middleware", "WithRecordFilter", "route", "http", "Request", "bool", "__gw", "health", "requestid", "ginzap", "GinzapWithConfig", "TimeFormat", "time", "RFC3339", "UTC", "true", "SkipPaths", "zapcore", "Field", "RequestIDExtractor", "String", "type", "access_log", "RecoveryWithZap", "otelgin", "WithTracerProvider", "WithFilter", "req", "slices", "Contains", "URL", "Path", "Group", "handlersV0", "healthHandler", "httphandlers", "NewHealthHandler", "srv", "Server", "Addr", "fmt", "Sprintf", "GetInt", "app", "port", "Handler", "Info", "started", "Ready", "accept", "incoming", "requests", "ListenAndServe", "ErrServerClosed", "context", "TODO", "occurred", "while", "listening", "Shutting", "down", "the", "REST", "server", "cancel", "WithTimeout", "Background", "Second", "Shutdown", "shutting", "select", "case", "Done", "shutdown", "timed", "out", "default", "gracefully"], "doc_head": "func runServeHttp(cmd *cobra.Command, _ []string) error {\n\tctx := cmd.Context()\n\t// Config\n\tvar cfg serveHttpConfig\n\tif err := viper.Unmarshal(&cfg); err != nil {\n\t\treturn errors.Wrap(err, \"failed to unmarshal db config\")\n\t}\n\tawsCfg, err := xaws.LoadAWSConfig(ctx, &cfg.AWS)\n\tif err != nil {\n\t\tlog.Error(ctx, \"Failed to load AWS config\", zap.Error(err))\n\t}\n\tquit := make(chan os.Signal, 1)\n\tdefer close(quit)\n\tsignal.Notify(quit, os.Interrupt)\n\t// Logging\n\tlogger := log.New(\n\t\tlog.WithService(cfg.App.Name),\n\t\tlog.WithEncoding(cfg.Logging.Encoding),\n\t\tlog.WithDebugEnabled(cfg.Logging.Debug),\n\t)\n\tlog.SetLogger(logger)\n\t// DNS resolver\n\tresolver.Register(dnssrvresolver.New())\n\t// i18n\n\tif v, ok := binding.Validator.Engine().(*validator.Validate); ok {\n\t\ti18n.Register(v)\n\t\tcustomrules.Register(v)\n\t}\n\t// Tracing\n\ttp, err := xotel.NewTracerProvider(cmd.Context(), xotel.TracerProviderConfig{\n\t\tServiceName: cfg.App.Name,\n\t\tEndpoint:    viper.GetString(\"otel.tracer.endpoint\"),\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create tracer provider\")\n\t}\n\totel.SetTracerProvider(tp)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:runServeHttp/complete", "package": "serve", "node_kind": "function", "receiver": "", "function_name": "runServeHttp", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["runServeHttp"], "all_kinds": ["function"], "all_ast_paths": ["go:function:runServeHttp/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2511], "all_end_bytes": [6759], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "fmt", "github.com/aws/aws-sdk-go-v2/service/s3", "github.com/cockroachdb/errors", "github.com/gin-contrib/zap", "github.com/gin-gonic/gin", "github.com/gin-gonic/gin/binding", "github.com/spf13/cobra", "github.com/spf13/viper", "go.impalastudios.com/aviation/liveflights/internal/adapters/filesystem", "go.impalastudios.com/aviation/liveflights/internal/adapters/handlers/http", "go.impalastudios.com/aviation/liveflights/internal/adapters/handlers/http/v0", "go.impalastudios.com/aviation/liveflights/internal/adapters/mongodb", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/aviation/liveflights/pkg/i18n", "go.impalastudios.com/aviation/liveflights/pkg/xaws", "go.impalastudios.com/aviation/liveflights/pkg/xmongodb", "go.impalastudios.com/grpc/dnssrvresolver", "go.impalastudios.com/log", "go.impalastudios.com/otel", "go.impalastudios.com/otel/gingonic", "go.impalastudios.com/requestid/gin", "go.impalastudios.com/validation/customrules", "go.opentelemetry.io/contrib/instrumentation/github.com/gin-gonic/gin/otelgin", "go.opentelemetry.io/otel", "go.opentelemetry.io/otel/propagation", "go.uber.org/zap", "go.uber.org/zap/zapcore", "google.golang.org/grpc/resolver", "net/http", "os", "os/signal", "slices", "time"], "symbols_referenced_strict": ["Addr", "App", "Archive", "Archive.BucketName", "Background", "Baggage", "BucketName", "Command", "Config", "Connect", "Contains", "Context", "Database", "Debug", "Done", "Encoding", "Endpoint", "Engine", "ErrServerClosed", "Error", "Field", "GetDuration", "GetInt", "GetString", "GinzapWithConfig", "Group", "Handler", "Info", "Interrupt", "Interval", "ListenAndServe", "LoadAWSConfig", "Logging", "Meter", "MeterProviderConfig", "Middleware", "Mongo", "Name", "New", "NewCompositeTextMapPropagator", "NewFlightsUpdateRepository", "NewHealthHandler", "NewMeterProvider", "NewS3ClientFromConfig", "NewS3Filesystem", "NewService", "NewTracerProvider", "Notify", "Options", "Path", "RecoveryWithZap", "Register", "Request", "RequestIDExtractor", "S3.UsePathStyle", "Second", "Server", "ServiceName", "SetGlobalMeter", "SetGlobalTracer", "SetLogger", "SetMeterProvider", "SetTextMapPropagator", "SetTracerProvider", "Shutdown", "Signal", "SkipPaths", "Sprintf", "Stores", "String", "TimeFormat", "TraceContext", "Tracer", "TracerProviderConfig", "Unmarshal", "UsePathStyle", "Validate", "Validator", "WithDebugEnabled", "WithEncoding", "WithFilter", "WithRecordFilter", "WithService", "WithTimeout", "WithTracerProvider", "Wrap", "binding.Validator", "cfg.AWS", "cfg.App", "cfg.Logging", "cfg.Mongo", "cfg.Stores", "cmd.Context", "cobra.Command", "context.Background", "context.TODO", "context.WithTimeout", "core.NewService", "ctx.Done", "customrules.Register", "db.Database", "dnssrvresolver.New", "errors.Is", "errors.Wrap", "filesystem.NewS3Filesystem", "fmt.Sprintf", "gin.Context", "gin.New", "ginzap.Config", "ginzap.GinzapWithConfig", "ginzap.RecoveryWithZap", "handlersV0.Register", "healthHandler.Register", "http.ErrServerClosed", "http.Request", "http.Server", "httphandlers.NewHealthHandler", "i18n.Register", "log.Error", "log.Info", "log.New", "log.RequestIDExtractor", "log.SetLogger", "log.WithDebugEnabled", "log.WithEncoding", "log.WithService", "logger.Info", "mongodb.NewFlightsUpdateRepository", "mp.Meter", "mp.Shutdown", "o.UsePathStyle", "os.Interrupt", "os.Signal", "otel.SetMeterProvider", "otel.SetTextMapPropagator", "otel.SetTracerProvider", "otelgin.Middleware", "otelgin.WithFilter", "otelgin.WithTracerProvider", "otelginmetric.Middleware", "otelginmetric.WithRecordFilter", "propagation.Baggage", "propagation.NewCompositeTextMapPropagator", "propagation.TraceContext", "req.URL", "requestid.New", "resolver.Register", "router.Group", "router.Use", "s3.Options", "signal.Notify", "slices.Contains", "srv.ListenAndServe", "srv.Shutdown", "time.RFC3339", "time.Second", "tp.Shutdown", "tp.Tracer", "v0.New", "validator.Validate", "viper.GetDuration", "viper.GetInt", "viper.GetString", "viper.Unmarshal", "xaws.LoadAWSConfig", "xaws.NewS3ClientFromConfig", "xmongodb.Connect", "xotel.MeterProviderConfig", "xotel.NewMeterProvider", "xotel.NewTracerProvider", "xotel.SetGlobalMeter", "xotel.SetGlobalTracer", "xotel.TracerProviderConfig", "zap.Error", "zap.String", "zapcore.Field"], "header_context_minimal": "package serve\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/aws/aws-sdk-go-v2/service/s3\"\n    \"github.com/cockroachdb/errors\"\n    \"github.com/gin-contrib/zap\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/http.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/serve/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go", "rel_path": "cmd/serve/root.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package serve\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "serve"], "doc_head": "package serve", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "serve", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package serve", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/serve/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go", "rel_path": "cmd/serve/root.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 7, "text": "import (\n\t\"github.com/spf13/cobra\"\n\t\"time\"\n)\n", "n_tokens": 15, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 7], "def_symbols": [], "symbols": ["import", "github", "com", "spf13", "cobra", "time"], "doc_head": "import (\n\t\"github.com/spf13/cobra\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "serve", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package serve", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "cmd/serve/root.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go", "rel_path": "cmd/serve/root.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 8, "end_line": 22, "text": "func New() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"serve\",\n\t\tShort: \"Serve\",\n\t}\n\n\tcmd.AddCommand(newServeHttpCommand())\n\n\tcmd.PersistentFlags().String(\"otel.tracer.endpoint\", \"localhost:4317\", \"The URL of the tracing collector.\")\n\tcmd.PersistentFlags().String(\"otel.meter.endpoint\", \"localhost:4317\", \"The URL of the tracing collector.\")\n\tcmd.PersistentFlags().Duration(\"otel.meter.interval\", 60*time.Second, \"The interval which the metrics will be reported to the collector.\")\n\n\treturn cmd\n}\n", "n_tokens": 120, "primary_symbol": "New", "primary_kind": "function", "primary_span": [8, 22], "def_symbols": [], "symbols": ["New", "func", "cobra", "Command", "cmd", "Use", "serve", "Short", "Serve", "AddCommand", "newServeHttpCommand", "PersistentFlags", "String", "otel", "tracer", "endpoint", "localhost", "The", "URL", "the", "tracing", "collector", "meter", "Duration", "interval", "time", "Second", "which", "metrics", "will", "reported", "return"], "doc_head": "func New() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"serve\",\n\t\tShort: \"Serve\",\n\t}\n\tcmd.AddCommand(newServeHttpCommand())\n\tcmd.PersistentFlags().String(\"otel.tracer.endpoint\", \"localhost:4317\", \"The URL of the tracing collector.\")\n\tcmd.PersistentFlags().String(\"otel.meter.endpoint\", \"localhost:4317\", \"The URL of the tracing collector.\")\n\tcmd.PersistentFlags().Duration(\"otel.meter.interval\", 60*time.Second, \"The interval which the metrics will be reported to the collector.\")\n\treturn cmd\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:New/complete", "package": "serve", "node_kind": "function", "receiver": "", "function_name": "New", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["New"], "all_kinds": ["function"], "all_ast_paths": ["go:function:New/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [61], "all_end_bytes": [564], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["github.com/spf13/cobra", "time"], "symbols_referenced_strict": ["AddCommand", "Command", "Duration", "New", "PersistentFlags", "Second", "Short", "String", "cmd.AddCommand", "cmd.PersistentFlags", "cobra.Command", "time.Second"], "header_context_minimal": "package serve\nimport (\n    \"github.com/spf13/cobra\"\n    \"time\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/cmd/serve/root.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package core\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "core"], "doc_head": "package core", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 6, "text": "import (\n\t\"time\"\n)\n", "n_tokens": 6, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 6], "def_symbols": [], "symbols": ["import", "time"], "doc_head": "import (\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 7, "end_line": 18, "text": "// ClassificationComparator is a comparator for airlines and airports classification\ntype ClassificationComparator int8\n\nconst (\n\t// ClassificationGreaterComparator is a comparator for greater than\n\tClassificationGreaterComparator ClassificationComparator = iota + 1\n\t// ClassificationEqualComparator is a comparator for equal\n\tClassificationEqualComparator\n\t// ClassificationLesserComparator is a comparator for lesser than\n\tClassificationLesserComparator\n)\n", "n_tokens": 80, "primary_symbol": "ClassificationComparator", "primary_kind": "type", "primary_span": [7, 18], "def_symbols": [], "symbols": ["ClassificationComparator", "comparator", "for", "airlines", "and", "airports", "classification", "type", "int8", "const", "ClassificationGreaterComparator", "greater", "than", "iota", "ClassificationEqualComparator", "equal", "ClassificationLesserComparator", "lesser"], "doc_head": "// ClassificationComparator is a comparator for airlines and airports classification\ntype ClassificationComparator int8\nconst (\n\t// ClassificationGreaterComparator is a comparator for greater than\n\tClassificationGreaterComparator ClassificationComparator = iota + 1\n\t// ClassificationEqualComparator is a comparator for equal\n\tClassificationEqualComparator\n\t// ClassificationLesserComparator is a comparator for lesser than\n\tClassificationLesserComparator\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:ClassificationComparator (alias)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "ClassificationComparator", "type_kind": "alias", "is_multi_declaration": false, "all_symbols": ["ClassificationComparator"], "all_kinds": ["type"], "all_ast_paths": ["go:type:ClassificationComparator (alias)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["ClassificationComparator"], "all_type_kinds": ["alias"], "all_start_bytes": [124], "all_end_bytes": [153], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["ClassificationComparator", "ClassificationEqualComparator", "ClassificationGreaterComparator", "ClassificationLesserComparator"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 19, "end_line": 19, "text": "type (", "n_tokens": 2, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [19, 19], "def_symbols": [], "symbols": ["type"], "doc_head": "type (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:block", "package": "core", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 20, "end_line": 24, "text": "\tClassification struct {\n\t\tC          int8\n\t\tComparator ClassificationComparator\n\t}\n", "n_tokens": 18, "primary_symbol": "Classification", "primary_kind": "type", "primary_span": [20, 24], "def_symbols": [], "symbols": ["Classification", "struct", "int8", "Comparator", "ClassificationComparator"], "doc_head": "\tClassification struct {\n\t\tC          int8\n\t\tComparator ClassificationComparator\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Classification (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Classification", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Classification"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Classification (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Classification"], "all_type_kinds": ["struct"], "all_start_bytes": [502], "all_end_bytes": [584], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Classification", "ClassificationComparator", "Comparator"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 25, "end_line": 32, "text": "\tAirline struct {\n\t\tID             string\n\t\tDesignator     string\n\t\tIATA           *string\n\t\tICAO           *string\n\t\tClassification int64\n\t}\n", "n_tokens": 40, "primary_symbol": "Airline", "primary_kind": "type", "primary_span": [25, 32], "def_symbols": [], "symbols": ["Airline", "struct", "string", "Designator", "IATA", "ICAO", "Classification", "int64"], "doc_head": "\tAirline struct {\n\t\tID             string\n\t\tDesignator     string\n\t\tIATA           *string\n\t\tICAO           *string\n\t\tClassification int64\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Airline (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airline", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airline"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airline (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airline"], "all_type_kinds": ["struct"], "all_start_bytes": [587], "all_end_bytes": [727], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "Classification", "Designator"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 33, "end_line": 40, "text": "\tAirport struct {\n\t\tID             string\n\t\tDesignator     string\n\t\tIATA           *string\n\t\tICAO           *string\n\t\tClassification int64\n\t}\n", "n_tokens": 40, "primary_symbol": "Airport", "primary_kind": "type", "primary_span": [33, 40], "def_symbols": [], "symbols": ["Airport", "struct", "string", "Designator", "IATA", "ICAO", "Classification", "int64"], "doc_head": "\tAirport struct {\n\t\tID             string\n\t\tDesignator     string\n\t\tIATA           *string\n\t\tICAO           *string\n\t\tClassification int64\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Airport (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airport", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airport"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airport (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airport"], "all_type_kinds": ["struct"], "all_start_bytes": [730], "all_end_bytes": [870], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Classification", "Designator"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 41, "end_line": 62, "text": "\tLiveFlight struct {\n\t\tID                    string\n\t\tFlightID              *string\n\t\tFlightNumber          string\n\t\tAirlineDesignator     string\n\t\tAirlineClassification int\n\t\tDepartureTime         time.Time\n\t\tDepartureAirportIATA  string\n\t\tDepartureAirportICAO  string\n\t\tArrivalAirportIATA    string\n\t\tArrivalAirportICAO    string\n\t\tPosition              Coordinate\n\t\tAltitude              float64\n\t\tHeadingDirection      float64\n\t\tGroundSpeed           float64\n\t\tVerticalSpeed         float64\n\t\tSquawk                int\n\t\tTracks                []TrackPoint\n\t\tCreatedAt             time.Time\n\t\tUpdatedAt             time.Time\n\t}\n", "n_tokens": 159, "primary_symbol": "LiveFlight", "primary_kind": "type", "primary_span": [41, 62], "def_symbols": [], "symbols": ["LiveFlight", "struct", "string", "FlightID", "FlightNumber", "AirlineDesignator", "AirlineClassification", "int", "DepartureTime", "time", "Time", "DepartureAirportIATA", "DepartureAirportICAO", "ArrivalAirportIATA", "ArrivalAirportICAO", "Position", "Coordinate", "Altitude", "float64", "HeadingDirection", "GroundSpeed", "VerticalSpeed", "Squawk", "Tracks", "TrackPoint", "CreatedAt", "UpdatedAt"], "doc_head": "\tLiveFlight struct {\n\t\tID                    string\n\t\tFlightID              *string\n\t\tFlightNumber          string\n\t\tAirlineDesignator     string\n\t\tAirlineClassification int\n\t\tDepartureTime         time.Time\n\t\tDepartureAirportIATA  string\n\t\tDepartureAirportICAO  string\n\t\tArrivalAirportIATA    string\n\t\tArrivalAirportICAO    string\n\t\tPosition              Coordinate\n\t\tAltitude              float64\n\t\tHeadingDirection      float64\n\t\tGroundSpeed           float64\n\t\tVerticalSpeed         float64\n\t\tSquawk                int\n\t\tTracks                []TrackPoint\n\t\tCreatedAt             time.Time\n\t\tUpdatedAt             time.Time\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:LiveFlight (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "LiveFlight", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["LiveFlight"], "all_kinds": ["type"], "all_ast_paths": ["go:type:LiveFlight (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["LiveFlight"], "all_type_kinds": ["struct"], "all_start_bytes": [873], "all_end_bytes": [1502], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["AirlineClassification", "AirlineDesignator", "Altitude", "ArrivalAirportIATA", "ArrivalAirportICAO", "Coordinate", "CreatedAt", "DepartureAirportIATA", "DepartureAirportICAO", "DepartureTime", "FlightID", "FlightNumber", "GroundSpeed", "HeadingDirection", "LiveFlight", "Position", "Squawk", "Time", "TrackPoint", "Tracks", "UpdatedAt", "VerticalSpeed", "time.Time"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 63, "end_line": 67, "text": "\tCoordinate struct {\n\t\tLat float64\n\t\tLon float64\n\t}\n", "n_tokens": 19, "primary_symbol": "Coordinate", "primary_kind": "type", "primary_span": [63, 67], "def_symbols": [], "symbols": ["Coordinate", "struct", "Lat", "float64", "Lon"], "doc_head": "\tCoordinate struct {\n\t\tLat float64\n\t\tLon float64\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Coordinate (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Coordinate", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Coordinate"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Coordinate (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Coordinate"], "all_type_kinds": ["struct"], "all_start_bytes": [1505], "all_end_bytes": [1555], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Coordinate", "Lat", "Lon"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 68, "end_line": 78, "text": "\tTrackPoint struct {\n\t\tLiveFlightID     string\n\t\tPosition         Coordinate\n\t\tAltitude         float64\n\t\tHeadingDirection float64\n\t\tGroundSpeed      float64\n\t\tVerticalSpeed    float64\n\t\tSquawk           int\n\t\tCreatedAt        time.Time\n\t}\n", "n_tokens": 66, "primary_symbol": "TrackPoint", "primary_kind": "type", "primary_span": [68, 78], "def_symbols": [], "symbols": ["TrackPoint", "struct", "LiveFlightID", "string", "Position", "Coordinate", "Altitude", "float64", "HeadingDirection", "GroundSpeed", "VerticalSpeed", "Squawk", "int", "CreatedAt", "time", "Time"], "doc_head": "\tTrackPoint struct {\n\t\tLiveFlightID     string\n\t\tPosition         Coordinate\n\t\tAltitude         float64\n\t\tHeadingDirection float64\n\t\tGroundSpeed      float64\n\t\tVerticalSpeed    float64\n\t\tSquawk           int\n\t\tCreatedAt        time.Time\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:TrackPoint (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "TrackPoint", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["TrackPoint"], "all_kinds": ["type"], "all_ast_paths": ["go:type:TrackPoint (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["TrackPoint"], "all_type_kinds": ["struct"], "all_start_bytes": [1558], "all_end_bytes": [1796], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Altitude", "Coordinate", "CreatedAt", "GroundSpeed", "HeadingDirection", "LiveFlightID", "Position", "Squawk", "Time", "TrackPoint", "VerticalSpeed", "time.Time"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 79, "end_line": 96, "text": "\tLiveFlightUpdate struct {\n\t\tID                   string\n\t\tFlightNumber         string\n\t\tAirlineDesignator    string\n\t\tDepartureTime        time.Time\n\t\tDepartureAirportIATA string\n\t\tDepartureAirportICAO string\n\t\tArrivalAirportIATA   string\n\t\tArrivalAirportICAO   string\n\t\tPosition             Coordinate\n\t\tAltitude             float64\n\t\tHeadingDirection     float64\n\t\tGroundSpeed          float64\n\t\tVerticalSpeed        float64\n\t\tSquawk               int\n\t\tCreatedAt            time.Time\n\t}\n", "n_tokens": 128, "primary_symbol": "LiveFlightUpdate", "primary_kind": "type", "primary_span": [79, 96], "def_symbols": [], "symbols": ["LiveFlightUpdate", "struct", "string", "FlightNumber", "AirlineDesignator", "DepartureTime", "time", "Time", "DepartureAirportIATA", "DepartureAirportICAO", "ArrivalAirportIATA", "ArrivalAirportICAO", "Position", "Coordinate", "Altitude", "float64", "HeadingDirection", "GroundSpeed", "VerticalSpeed", "Squawk", "int", "CreatedAt"], "doc_head": "\tLiveFlightUpdate struct {\n\t\tID                   string\n\t\tFlightNumber         string\n\t\tAirlineDesignator    string\n\t\tDepartureTime        time.Time\n\t\tDepartureAirportIATA string\n\t\tDepartureAirportICAO string\n\t\tArrivalAirportIATA   string\n\t\tArrivalAirportICAO   string\n\t\tPosition             Coordinate\n\t\tAltitude             float64\n\t\tHeadingDirection     float64\n\t\tGroundSpeed          float64\n\t\tVerticalSpeed        float64\n\t\tSquawk               int\n\t\tCreatedAt            time.Time\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:LiveFlightUpdate (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "LiveFlightUpdate", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["LiveFlightUpdate"], "all_kinds": ["type"], "all_ast_paths": ["go:type:LiveFlightUpdate (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["LiveFlightUpdate"], "all_type_kinds": ["struct"], "all_start_bytes": [1799], "all_end_bytes": [2288], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["AirlineDesignator", "Altitude", "ArrivalAirportIATA", "ArrivalAirportICAO", "Coordinate", "CreatedAt", "DepartureAirportIATA", "DepartureAirportICAO", "DepartureTime", "FlightNumber", "GroundSpeed", "HeadingDirection", "LiveFlightUpdate", "Position", "Squawk", "Time", "VerticalSpeed", "time.Time"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 97, "end_line": 102, "text": "\tBoundingBox struct {\n\t\tTopLeft     *Coordinate\n\t\tBottomRight *Coordinate\n\t}\n)\n", "n_tokens": 22, "primary_symbol": "BoundingBox", "primary_kind": "type", "primary_span": [97, 102], "def_symbols": [], "symbols": ["BoundingBox", "struct", "TopLeft", "Coordinate", "BottomRight"], "doc_head": "\tBoundingBox struct {\n\t\tTopLeft     *Coordinate\n\t\tBottomRight *Coordinate\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:BoundingBox (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "BoundingBox", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["BoundingBox"], "all_kinds": ["type"], "all_ast_paths": ["go:type:BoundingBox (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["BoundingBox"], "all_type_kinds": ["struct"], "all_start_bytes": [2291], "all_end_bytes": [2366], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["BottomRight", "BoundingBox", "Coordinate", "TopLeft"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 103, "end_line": 103, "text": "type (", "n_tokens": 2, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [103, 103], "def_symbols": [], "symbols": ["type"], "doc_head": "type (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:block", "package": "core", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 104, "end_line": 110, "text": "\tEnrichedFlightData struct {\n\t\tLiveFlightID   string\n\t\tFlightID       *string\n\t\tClassification int64\n\t}\n)\n", "n_tokens": 33, "primary_symbol": "EnrichedFlightData", "primary_kind": "type", "primary_span": [104, 110], "def_symbols": [], "symbols": ["EnrichedFlightData", "struct", "LiveFlightID", "string", "FlightID", "Classification", "int64"], "doc_head": "\tEnrichedFlightData struct {\n\t\tLiveFlightID   string\n\t\tFlightID       *string\n\t\tClassification int64\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:EnrichedFlightData (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "EnrichedFlightData", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["EnrichedFlightData"], "all_kinds": ["type"], "all_ast_paths": ["go:type:EnrichedFlightData (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["EnrichedFlightData"], "all_type_kinds": ["struct"], "all_start_bytes": [2378], "all_end_bytes": [2480], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Classification", "EnrichedFlightData", "FlightID", "LiveFlightID"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 111, "end_line": 111, "text": "type (", "n_tokens": 2, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [111, 111], "def_symbols": [], "symbols": ["type"], "doc_head": "type (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:block", "package": "core", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#14", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#16", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go", "rel_path": "internal/core/models.go", "ext": "go", "language": "go", "chunk_number": 16, "start_line": 112, "end_line": 118, "text": "\tFlightsWithin struct {\n\t\tBoundingBox           *BoundingBox\n\t\tMaxAge                time.Duration\n\t\tAirlineClassification *Classification\n\t}\n)\n", "n_tokens": 32, "primary_symbol": "FlightsWithin", "primary_kind": "type", "primary_span": [112, 118], "def_symbols": [], "symbols": ["FlightsWithin", "struct", "BoundingBox", "MaxAge", "time", "Duration", "AirlineClassification", "Classification"], "doc_head": "\tFlightsWithin struct {\n\t\tBoundingBox           *BoundingBox\n\t\tMaxAge                time.Duration\n\t\tAirlineClassification *Classification\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:FlightsWithin (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "FlightsWithin", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["FlightsWithin"], "all_kinds": ["type"], "all_ast_paths": ["go:type:FlightsWithin (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["FlightsWithin"], "all_type_kinds": ["struct"], "all_start_bytes": [2492], "all_end_bytes": [2632], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["AirlineClassification", "BoundingBox", "Classification", "Duration", "FlightsWithin", "MaxAge", "time.Duration"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/models.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go", "rel_path": "internal/core/service.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package core\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "core"], "doc_head": "package core", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go", "rel_path": "internal/core/service.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 7, "text": "import (\n\t\"context\"\n\t\"github.com/cockroachdb/errors\"\n)\n", "n_tokens": 15, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 7], "def_symbols": [], "symbols": ["import", "context", "github", "com", "cockroachdb", "errors"], "doc_head": "import (\n\t\"context\"\n\t\"github.com/cockroachdb/errors\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go", "rel_path": "internal/core/service.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 8, "end_line": 14, "text": "//go:generate mockgen -source=service.go -destination=mocks/service_mocks.go -package=mocks\ntype liveFlightsRepository interface {\n\tFilter(context.Context, *FlightsWithin) ([]*LiveFlight, error)\n\tGetFlightDetailsByLiveFlightID(context.Context, string) (*LiveFlight, error)\n\tGetFlightDetailsByFlightID(context.Context, string) (*LiveFlight, error)\n}\n", "n_tokens": 86, "primary_symbol": "liveFlightsRepository", "primary_kind": "type", "primary_span": [8, 14], "def_symbols": [], "symbols": ["generate", "mockgen", "source", "service", "destination", "mocks", "service_mocks", "package", "type", "liveFlightsRepository", "interface", "Filter", "context", "Context", "FlightsWithin", "LiveFlight", "error", "GetFlightDetailsByLiveFlightID", "string", "GetFlightDetailsByFlightID"], "doc_head": "//go:generate mockgen -source=service.go -destination=mocks/service_mocks.go -package=mocks\ntype liveFlightsRepository interface {\n\tFilter(context.Context, *FlightsWithin) ([]*LiveFlight, error)\n\tGetFlightDetailsByLiveFlightID(context.Context, string) (*LiveFlight, error)\n\tGetFlightDetailsByFlightID(context.Context, string) (*LiveFlight, error)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:liveFlightsRepository (interface)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "liveFlightsRepository", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["liveFlightsRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:liveFlightsRepository (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["liveFlightsRepository"], "all_type_kinds": ["interface"], "all_start_bytes": [167], "all_end_bytes": [418], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "Filter", "FlightsWithin", "GetFlightDetailsByFlightID", "GetFlightDetailsByLiveFlightID", "LiveFlight", "context.Context"], "header_context_minimal": "package core\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go", "rel_path": "internal/core/service.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 15, "end_line": 19, "text": "type filesystemLiveFlightsRepository interface {\n\tGetLiveFlight(context.Context, string) (*LiveFlight, error)\n\tSaveLiveFlight(context.Context, string, *LiveFlight) error\n}\n", "n_tokens": 38, "primary_symbol": "filesystemLiveFlightsRepository", "primary_kind": "type", "primary_span": [15, 19], "def_symbols": [], "symbols": ["type", "filesystemLiveFlightsRepository", "interface", "GetLiveFlight", "context", "Context", "string", "LiveFlight", "error", "SaveLiveFlight"], "doc_head": "type filesystemLiveFlightsRepository interface {\n\tGetLiveFlight(context.Context, string) (*LiveFlight, error)\n\tSaveLiveFlight(context.Context, string, *LiveFlight) error\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:filesystemLiveFlightsRepository (interface)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "filesystemLiveFlightsRepository", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["filesystemLiveFlightsRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:filesystemLiveFlightsRepository (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["filesystemLiveFlightsRepository"], "all_type_kinds": ["interface"], "all_start_bytes": [425], "all_end_bytes": [591], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "GetLiveFlight", "LiveFlight", "SaveLiveFlight", "context.Context"], "header_context_minimal": "package core\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go", "rel_path": "internal/core/service.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 20, "end_line": 24, "text": "type Service struct {\n\trepo liveFlightsRepository\n\tfs   filesystemLiveFlightsRepository\n}\n", "n_tokens": 20, "primary_symbol": "Service", "primary_kind": "type", "primary_span": [20, 24], "def_symbols": [], "symbols": ["type", "Service", "struct", "repo", "liveFlightsRepository", "filesystemLiveFlightsRepository"], "doc_head": "type Service struct {\n\trepo liveFlightsRepository\n\tfs   filesystemLiveFlightsRepository\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Service (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Service", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Service"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Service (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Service"], "all_type_kinds": ["struct"], "all_start_bytes": [598], "all_end_bytes": [682], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Service"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go", "rel_path": "internal/core/service.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 25, "end_line": 31, "text": "func NewService(repo liveFlightsRepository, fs filesystemLiveFlightsRepository) *Service {\n\treturn &Service{\n\t\trepo: repo,\n\t\tfs:   fs,\n\t}\n}\n", "n_tokens": 38, "primary_symbol": "NewService", "primary_kind": "function", "primary_span": [25, 31], "def_symbols": [], "symbols": ["NewService", "func", "repo", "liveFlightsRepository", "filesystemLiveFlightsRepository", "Service", "return"], "doc_head": "func NewService(repo liveFlightsRepository, fs filesystemLiveFlightsRepository) *Service {\n\treturn &Service{\n\t\trepo: repo,\n\t\tfs:   fs,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewService/complete", "package": "core", "node_kind": "function", "receiver": "", "function_name": "NewService", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewService"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewService/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [684], "all_end_bytes": [823], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["NewService", "Service"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go", "rel_path": "internal/core/service.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 32, "end_line": 35, "text": "func (s *Service) FilterLiveFlights(ctx context.Context, f *FlightsWithin) ([]*LiveFlight, error) {\n\treturn s.repo.Filter(ctx, f)\n}\n", "n_tokens": 37, "primary_symbol": "FilterLiveFlights", "primary_kind": "method", "primary_span": [32, 35], "def_symbols": [], "symbols": ["FilterLiveFlights", "func", "Service", "ctx", "context", "Context", "FlightsWithin", "LiveFlight", "error", "return", "repo", "Filter"], "doc_head": "func (s *Service) FilterLiveFlights(ctx context.Context, f *FlightsWithin) ([]*LiveFlight, error) {\n\treturn s.repo.Filter(ctx, f)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Service).FilterLiveFlights/complete", "package": "core", "node_kind": "method", "receiver": "s *Service", "function_name": "", "method_name": "FilterLiveFlights", "type_name": "Service", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["FilterLiveFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Service).FilterLiveFlights/complete"], "all_roles": ["complete"], "all_receivers": ["s *Service"], "all_type_names": ["Service"], "all_type_kinds": [null], "all_start_bytes": [825], "all_end_bytes": [956], "primary_index": 0, "all_receivers_normalized": ["(*Service)"], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "Filter", "FilterLiveFlights", "FlightsWithin", "LiveFlight", "Service", "context.Context", "s.repo"], "header_context_minimal": "package core\nimport \"context\"\n// receiver: s *Service", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go", "rel_path": "internal/core/service.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 36, "end_line": 39, "text": "func (s *Service) GetLiveFlightDetailsByLiveFlightID(ctx context.Context, id string) (*LiveFlight, error) {\n\treturn s.repo.GetFlightDetailsByLiveFlightID(ctx, id)\n}\n", "n_tokens": 43, "primary_symbol": "GetLiveFlightDetailsByLiveFlightID", "primary_kind": "method", "primary_span": [36, 39], "def_symbols": [], "symbols": ["GetLiveFlightDetailsByLiveFlightID", "func", "Service", "ctx", "context", "Context", "string", "LiveFlight", "error", "return", "repo", "GetFlightDetailsByLiveFlightID"], "doc_head": "func (s *Service) GetLiveFlightDetailsByLiveFlightID(ctx context.Context, id string) (*LiveFlight, error) {\n\treturn s.repo.GetFlightDetailsByLiveFlightID(ctx, id)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Service).GetLiveFlightDetailsByLiveFlightID/complete", "package": "core", "node_kind": "method", "receiver": "s *Service", "function_name": "", "method_name": "GetLiveFlightDetailsByLiveFlightID", "type_name": "Service", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLiveFlightDetailsByLiveFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Service).GetLiveFlightDetailsByLiveFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["s *Service"], "all_type_names": ["Service"], "all_type_kinds": [null], "all_start_bytes": [958], "all_end_bytes": [1122], "primary_index": 0, "all_receivers_normalized": ["(*Service)"], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "GetFlightDetailsByLiveFlightID", "GetLiveFlightDetailsByLiveFlightID", "LiveFlight", "Service", "context.Context", "s.repo"], "header_context_minimal": "package core\nimport \"context\"\n// receiver: s *Service", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go", "rel_path": "internal/core/service.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 40, "end_line": 52, "text": "func (s *Service) GetLiveFlightDetailsByFlightID(ctx context.Context, id string) (*LiveFlight, error) {\n\tf, err := s.fs.GetLiveFlight(ctx, id)\n\tif err != nil && !errors.Is(err, ErrFlightNotFound) {\n\t\treturn nil, errors.Wrap(err, \"failed to get flight tracks from filesystem\")\n\t}\n\n\tif f != nil {\n\t\treturn f, nil\n\t}\n\n\treturn s.repo.GetFlightDetailsByFlightID(ctx, id)\n}\n", "n_tokens": 101, "primary_symbol": "GetLiveFlightDetailsByFlightID", "primary_kind": "method", "primary_span": [40, 52], "def_symbols": [], "symbols": ["GetLiveFlightDetailsByFlightID", "func", "Service", "ctx", "context", "Context", "string", "LiveFlight", "error", "err", "GetLiveFlight", "nil", "errors", "ErrFlightNotFound", "return", "Wrap", "failed", "get", "flight", "tracks", "from", "filesystem", "repo", "GetFlightDetailsByFlightID"], "doc_head": "func (s *Service) GetLiveFlightDetailsByFlightID(ctx context.Context, id string) (*LiveFlight, error) {\n\tf, err := s.fs.GetLiveFlight(ctx, id)\n\tif err != nil && !errors.Is(err, ErrFlightNotFound) {\n\t\treturn nil, errors.Wrap(err, \"failed to get flight tracks from filesystem\")\n\t}\n\tif f != nil {\n\t\treturn f, nil\n\t}\n\treturn s.repo.GetFlightDetailsByFlightID(ctx, id)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Service).GetLiveFlightDetailsByFlightID/complete", "package": "core", "node_kind": "method", "receiver": "s *Service", "function_name": "", "method_name": "GetLiveFlightDetailsByFlightID", "type_name": "Service", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLiveFlightDetailsByFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Service).GetLiveFlightDetailsByFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["s *Service"], "all_type_names": ["Service"], "all_type_kinds": [null], "all_start_bytes": [1124], "all_end_bytes": [1491], "primary_index": 0, "all_receivers_normalized": ["(*Service)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors"], "symbols_referenced_strict": ["Context", "ErrFlightNotFound", "GetFlightDetailsByFlightID", "GetLiveFlight", "GetLiveFlightDetailsByFlightID", "LiveFlight", "Service", "Wrap", "context.Context", "errors.Is", "errors.Wrap", "s.fs", "s.repo"], "header_context_minimal": "package core\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n)\n// receiver: s *Service", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/service.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_archive_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go", "rel_path": "internal/core/flights_archive_service.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package core\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "core"], "doc_head": "package core", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_archive_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go", "rel_path": "internal/core/flights_archive_service.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 9, "text": "import (\n\t\"context\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"time\"\n)\n", "n_tokens": 26, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 9], "def_symbols": [], "symbols": ["import", "context", "impalastudios", "com", "log", "uber", "org", "zap", "time"], "doc_head": "import (\n\t\"context\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_archive_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go", "rel_path": "internal/core/flights_archive_service.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 10, "end_line": 11, "text": "//go:generate mockgen -source=flights_archive_service.go -destination=mocks/flights_archive_service_mocks.go -package=mocks\ntype (", "n_tokens": 34, "primary_symbol": "", "primary_kind": "header", "primary_span": [10, 11], "def_symbols": [], "symbols": ["generate", "mockgen", "source", "flights_archive_service", "destination", "mocks", "flights_archive_service_mocks", "package", "type"], "doc_head": "//go:generate mockgen -source=flights_archive_service.go -destination=mocks/flights_archive_service_mocks.go -package=mocks\ntype (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_archive_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go", "rel_path": "internal/core/flights_archive_service.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 12, "end_line": 17, "text": "\tflightArchivesRepository interface {\n\t\tGetArchivableFlights(context.Context, int) ([]*LiveFlight, error)\n\t\tDeleteFlights(context.Context, []*LiveFlight) error\n\t}\n)\n", "n_tokens": 41, "primary_symbol": "flightArchivesRepository", "primary_kind": "type", "primary_span": [12, 17], "def_symbols": [], "symbols": ["flightArchivesRepository", "interface", "GetArchivableFlights", "context", "Context", "int", "LiveFlight", "error", "DeleteFlights"], "doc_head": "\tflightArchivesRepository interface {\n\t\tGetArchivableFlights(context.Context, int) ([]*LiveFlight, error)\n\t\tDeleteFlights(context.Context, []*LiveFlight) error\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:flightArchivesRepository (interface)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "flightArchivesRepository", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["flightArchivesRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:flightArchivesRepository (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["flightArchivesRepository"], "all_type_kinds": ["interface"], "all_start_bytes": [224], "all_end_bytes": [385], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "DeleteFlights", "GetArchivableFlights", "LiveFlight", "context.Context"], "header_context_minimal": "package core\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_archive_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go", "rel_path": "internal/core/flights_archive_service.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 18, "end_line": 25, "text": "type FlightArchiveService struct {\n\tarchives         flightArchivesRepository\n\tfilesystem       filesystemLiveFlightsRepository\n\tarchivePageSize  int\n\tmaxArchiveCycles int\n\tmetrics          archiveMetrics\n}\n", "n_tokens": 42, "primary_symbol": "FlightArchiveService", "primary_kind": "type", "primary_span": [18, 25], "def_symbols": [], "symbols": ["type", "FlightArchiveService", "struct", "archives", "flightArchivesRepository", "filesystem", "filesystemLiveFlightsRepository", "archivePageSize", "int", "maxArchiveCycles", "metrics", "archiveMetrics"], "doc_head": "type FlightArchiveService struct {\n\tarchives         flightArchivesRepository\n\tfilesystem       filesystemLiveFlightsRepository\n\tarchivePageSize  int\n\tmaxArchiveCycles int\n\tmetrics          archiveMetrics\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:FlightArchiveService (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "FlightArchiveService", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["FlightArchiveService"], "all_kinds": ["type"], "all_ast_paths": ["go:type:FlightArchiveService (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["FlightArchiveService"], "all_type_kinds": ["struct"], "all_start_bytes": [394], "all_end_bytes": [595], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["FlightArchiveService"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_archive_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go", "rel_path": "internal/core/flights_archive_service.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 26, "end_line": 34, "text": "type archiveMetrics struct {\n\ttotalCalls    int\n\ttotalArchived int\n\ttotalSkipped  int\n\ttotalFailed   int\n\ttotalDeleted  int\n\tlastReport    time.Time\n}\n", "n_tokens": 38, "primary_symbol": "archiveMetrics", "primary_kind": "type", "primary_span": [26, 34], "def_symbols": [], "symbols": ["type", "archiveMetrics", "struct", "totalCalls", "int", "totalArchived", "totalSkipped", "totalFailed", "totalDeleted", "lastReport", "time", "Time"], "doc_head": "type archiveMetrics struct {\n\ttotalCalls    int\n\ttotalArchived int\n\ttotalSkipped  int\n\ttotalFailed   int\n\ttotalDeleted  int\n\tlastReport    time.Time\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:archiveMetrics (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "archiveMetrics", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["archiveMetrics"], "all_kinds": ["type"], "all_ast_paths": ["go:type:archiveMetrics (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["archiveMetrics"], "all_type_kinds": ["struct"], "all_start_bytes": [602], "all_end_bytes": [747], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Time", "time.Time"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_archive_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go", "rel_path": "internal/core/flights_archive_service.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 35, "end_line": 57, "text": "func NewFlightArchiveService(\n\tarchives flightArchivesRepository,\n\tfilesystem filesystemLiveFlightsRepository,\n\tarchivePageSize int,\n\tmaxArchiveCycles int,\n) *FlightArchiveService {\n\tif archivePageSize <= 0 {\n\t\tarchivePageSize = 100\n\t}\n\tif maxArchiveCycles <= 0 {\n\t\tmaxArchiveCycles = 1\n\t}\n\treturn &FlightArchiveService{\n\t\tarchives:         archives,\n\t\tfilesystem:       filesystem,\n\t\tarchivePageSize:  archivePageSize,\n\t\tmaxArchiveCycles: maxArchiveCycles,\n\t\tmetrics: archiveMetrics{\n\t\t\tlastReport: time.Now().Add(-5 * time.Minute),\n\t\t},\n\t}\n}\n", "n_tokens": 142, "primary_symbol": "NewFlightArchiveService", "primary_kind": "function", "primary_span": [35, 57], "def_symbols": [], "symbols": ["NewFlightArchiveService", "func", "archives", "flightArchivesRepository", "filesystem", "filesystemLiveFlightsRepository", "archivePageSize", "int", "maxArchiveCycles", "FlightArchiveService", "return", "metrics", "archiveMetrics", "lastReport", "time", "Now", "Add", "Minute"], "doc_head": "func NewFlightArchiveService(\n\tarchives flightArchivesRepository,\n\tfilesystem filesystemLiveFlightsRepository,\n\tarchivePageSize int,\n\tmaxArchiveCycles int,\n) *FlightArchiveService {\n\tif archivePageSize <= 0 {\n\t\tarchivePageSize = 100\n\t}\n\tif maxArchiveCycles <= 0 {\n\t\tmaxArchiveCycles = 1\n\t}\n\treturn &FlightArchiveService{\n\t\tarchives:         archives,\n\t\tfilesystem:       filesystem,\n\t\tarchivePageSize:  archivePageSize,\n\t\tmaxArchiveCycles: maxArchiveCycles,\n\t\tmetrics: archiveMetrics{\n\t\t\tlastReport: time.Now().Add(-5 * time.Minute),\n\t\t},\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewFlightArchiveService/complete", "package": "core", "node_kind": "function", "receiver": "", "function_name": "NewFlightArchiveService", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewFlightArchiveService"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewFlightArchiveService/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [749], "all_end_bytes": [1292], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Add", "FlightArchiveService", "Minute", "NewFlightArchiveService", "Now", "time.Minute", "time.Now"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_archive_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go", "rel_path": "internal/core/flights_archive_service.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 58, "end_line": 106, "text": "func (s *FlightArchiveService) Archive(ctx context.Context) error {\n\ts.metrics.totalCalls++\n\n\tvar totalArchived int\n\n\tfor i := 0; i < s.maxArchiveCycles; i++ {\n\t\tflights, err := s.archives.GetArchivableFlights(ctx, s.archivePageSize)\n\t\tif err != nil {\n\t\t\tlog.Error(ctx, \"Failed to fetch archivable flights\", zap.Error(err))\n\t\t\treturn err\n\t\t}\n\n\t\tvar archived, skipped, failed int\n\n\t\tfor _, flight := range flights {\n\t\t\tif flight.FlightID == nil {\n\t\t\t\tskipped++\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tif err := s.filesystem.SaveLiveFlight(ctx, *flight.FlightID, flight); err != nil {\n\t\t\t\tfailed++\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tarchived++\n\t\t}\n\n\t\tif err := s.archives.DeleteFlights(ctx, flights); err != nil {\n\t\t\tlog.Error(ctx, \"Failed to delete archived flights\", zap.Error(err))\n\t\t\treturn err\n\t\t}\n\n\t\ts.metrics.totalArchived += archived\n\t\ts.metrics.totalSkipped += skipped\n\t\ts.metrics.totalFailed += failed\n\t\ts.metrics.totalDeleted += len(flights)\n\n\t\ttotalArchived += archived\n\n\t\tif archived == 0 {\n\t\t\tbreak\n\t\t}\n\t}\n\n\ts.logMetricsIfNeeded(ctx)\n\treturn nil\n}\n", "n_tokens": 281, "primary_symbol": "Archive", "primary_kind": "method", "primary_span": [58, 106], "def_symbols": [], "symbols": ["Archive", "func", "FlightArchiveService", "ctx", "context", "Context", "error", "metrics", "totalCalls", "var", "totalArchived", "int", "for", "maxArchiveCycles", "flights", "err", "archives", "GetArchivableFlights", "archivePageSize", "nil", "log", "Error", "Failed", "fetch", "archivable", "zap", "return", "archived", "skipped", "failed", "flight", "range", "FlightID", "continue", "filesystem", "SaveLiveFlight", "DeleteFlights", "delete", "totalSkipped", "totalFailed", "totalDeleted", "len", "break", "logMetricsIfNeeded"], "doc_head": "func (s *FlightArchiveService) Archive(ctx context.Context) error {\n\ts.metrics.totalCalls++\n\tvar totalArchived int\n\tfor i := 0; i < s.maxArchiveCycles; i++ {\n\t\tflights, err := s.archives.GetArchivableFlights(ctx, s.archivePageSize)\n\t\tif err != nil {\n\t\t\tlog.Error(ctx, \"Failed to fetch archivable flights\", zap.Error(err))\n\t\t\treturn err\n\t\t}\n\t\tvar archived, skipped, failed int\n\t\tfor _, flight := range flights {\n\t\t\tif flight.FlightID == nil {\n\t\t\t\tskipped++\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif err := s.filesystem.SaveLiveFlight(ctx, *flight.FlightID, flight); err != nil {\n\t\t\t\tfailed++\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tarchived++\n\t\t}\n\t\tif err := s.archives.DeleteFlights(ctx, flights); err != nil {\n\t\t\tlog.Error(ctx, \"Failed to delete archived flights\", zap.Error(err))\n\t\t\treturn err\n\t\t}\n\t\ts.metrics.totalArchived += archived\n\t\ts.metrics.totalSkipped += skipped\n\t\ts.metrics.totalFailed += failed\n\t\ts.metrics.totalDeleted += len(flights)\n\t\ttotalArchived += archived\n\t\tif archived == 0 {\n\t\t\tbreak\n\t\t}\n\t}\n\ts.logMetricsIfNeeded(ctx)\n\treturn nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightArchiveService).Archive/complete", "package": "core", "node_kind": "method", "receiver": "s *FlightArchiveService", "function_name": "", "method_name": "Archive", "type_name": "FlightArchiveService", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Archive"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightArchiveService).Archive/complete"], "all_roles": ["complete"], "all_receivers": ["s *FlightArchiveService"], "all_type_names": ["FlightArchiveService"], "all_type_kinds": [null], "all_start_bytes": [1294], "all_end_bytes": [2322], "primary_index": 0, "all_receivers_normalized": ["(*FlightArchiveService)"], "imports_used_minimal": ["context", "go.impalastudios.com/log", "go.uber.org/zap"], "symbols_referenced_strict": ["Archive", "Context", "DeleteFlights", "Error", "FlightArchiveService", "FlightID", "GetArchivableFlights", "SaveLiveFlight", "context.Context", "flight.FlightID", "log.Error", "s.archivePageSize", "s.archives", "s.filesystem", "s.logMetricsIfNeeded", "s.maxArchiveCycles", "s.metrics", "zap.Error"], "header_context_minimal": "package core\nimport (\n    \"context\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n)\n// receiver: s *FlightArchiveService", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_archive_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go", "rel_path": "internal/core/flights_archive_service.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 107, "end_line": 125, "text": "func (s *FlightArchiveService) logMetricsIfNeeded(ctx context.Context) {\n\tnow := time.Now()\n\tif now.Sub(s.metrics.lastReport) < 5*time.Minute {\n\t\treturn\n\t}\n\n\tlog.Debug(ctx, \"Flight archiver metrics (last 5 min)\",\n\t\tzap.Int(\"calls\", s.metrics.totalCalls),\n\t\tzap.Int(\"archived\", s.metrics.totalArchived),\n\t\tzap.Int(\"skipped\", s.metrics.totalSkipped),\n\t\tzap.Int(\"failed\", s.metrics.totalFailed),\n\t\tzap.Int(\"deleted\", s.metrics.totalDeleted),\n\t)\n\n\ts.metrics = archiveMetrics{\n\t\tlastReport: now,\n\t}\n}\n", "n_tokens": 136, "primary_symbol": "logMetricsIfNeeded", "primary_kind": "method", "primary_span": [107, 125], "def_symbols": [], "symbols": ["logMetricsIfNeeded", "func", "FlightArchiveService", "ctx", "context", "Context", "now", "time", "Now", "Sub", "metrics", "lastReport", "Minute", "return", "log", "Debug", "Flight", "archiver", "last", "min", "zap", "Int", "calls", "totalCalls", "archived", "totalArchived", "skipped", "totalSkipped", "failed", "totalFailed", "deleted", "totalDeleted", "archiveMetrics"], "doc_head": "func (s *FlightArchiveService) logMetricsIfNeeded(ctx context.Context) {\n\tnow := time.Now()\n\tif now.Sub(s.metrics.lastReport) < 5*time.Minute {\n\t\treturn\n\t}\n\tlog.Debug(ctx, \"Flight archiver metrics (last 5 min)\",\n\t\tzap.Int(\"calls\", s.metrics.totalCalls),\n\t\tzap.Int(\"archived\", s.metrics.totalArchived),\n\t\tzap.Int(\"skipped\", s.metrics.totalSkipped),\n\t\tzap.Int(\"failed\", s.metrics.totalFailed),\n\t\tzap.Int(\"deleted\", s.metrics.totalDeleted),\n\t)\n\ts.metrics = archiveMetrics{\n\t\tlastReport: now,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightArchiveService).logMetricsIfNeeded/complete", "package": "core", "node_kind": "method", "receiver": "s *FlightArchiveService", "function_name": "", "method_name": "logMetricsIfNeeded", "type_name": "FlightArchiveService", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["logMetricsIfNeeded"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightArchiveService).logMetricsIfNeeded/complete"], "all_roles": ["complete"], "all_receivers": ["s *FlightArchiveService"], "all_type_names": ["FlightArchiveService"], "all_type_kinds": [null], "all_start_bytes": [2324], "all_end_bytes": [2819], "primary_index": 0, "all_receivers_normalized": ["(*FlightArchiveService)"], "imports_used_minimal": ["context", "go.impalastudios.com/log", "go.uber.org/zap", "time"], "symbols_referenced_strict": ["Context", "Debug", "FlightArchiveService", "Int", "Minute", "Now", "Sub", "context.Context", "log.Debug", "now.Sub", "s.metrics", "time.Minute", "time.Now", "zap.Int"], "header_context_minimal": "package core\nimport (\n    \"context\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n    \"time\"\n)\n// receiver: s *FlightArchiveService", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_archive_service.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package core\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "core"], "doc_head": "package core", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 10, "text": "import (\n\t\"context\"\n\t\"time\"\n\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n)\n", "n_tokens": 26, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 10], "def_symbols": [], "symbols": ["import", "context", "time", "impalastudios", "com", "log", "uber", "org", "zap"], "doc_head": "import (\n\t\"context\"\n\t\"time\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 11, "end_line": 12, "text": "//go:generate mockgen -source=flights_ingest_service.go -destination=mocks/flights_ingest_service_mocks.go -package=mocks\ntype (", "n_tokens": 36, "primary_symbol": "", "primary_kind": "header", "primary_span": [11, 12], "def_symbols": [], "symbols": ["generate", "mockgen", "source", "flights_ingest_service", "destination", "mocks", "flights_ingest_service_mocks", "package", "type"], "doc_head": "//go:generate mockgen -source=flights_ingest_service.go -destination=mocks/flights_ingest_service_mocks.go -package=mocks\ntype (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 13, "end_line": 16, "text": "\tflightUpdatesRepository interface {\n\t\tUpsertMany(context.Context, []*LiveFlightUpdate) error\n\t}\n", "n_tokens": 23, "primary_symbol": "flightUpdatesRepository", "primary_kind": "type", "primary_span": [13, 16], "def_symbols": [], "symbols": ["flightUpdatesRepository", "interface", "UpsertMany", "context", "Context", "LiveFlightUpdate", "error"], "doc_head": "\tflightUpdatesRepository interface {\n\t\tUpsertMany(context.Context, []*LiveFlightUpdate) error\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:flightUpdatesRepository (interface)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "flightUpdatesRepository", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["flightUpdatesRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:flightUpdatesRepository (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["flightUpdatesRepository"], "all_type_kinds": ["interface"], "all_start_bytes": [223], "all_end_bytes": [318], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "LiveFlightUpdate", "UpsertMany", "context.Context"], "header_context_minimal": "package core\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 17, "end_line": 21, "text": "\trealtimeFlightUpdatesClient interface {\n\t\tRead(context.Context, chan<- LiveFlightUpdate) error\n\t}\n)\n", "n_tokens": 23, "primary_symbol": "realtimeFlightUpdatesClient", "primary_kind": "type", "primary_span": [17, 21], "def_symbols": [], "symbols": ["realtimeFlightUpdatesClient", "interface", "Read", "context", "Context", "chan", "LiveFlightUpdate", "error"], "doc_head": "\trealtimeFlightUpdatesClient interface {\n\t\tRead(context.Context, chan<- LiveFlightUpdate) error\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:realtimeFlightUpdatesClient (interface)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "realtimeFlightUpdatesClient", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["realtimeFlightUpdatesClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:realtimeFlightUpdatesClient (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["realtimeFlightUpdatesClient"], "all_type_kinds": ["interface"], "all_start_bytes": [321], "all_end_bytes": [418], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "LiveFlightUpdate", "Read", "context.Context"], "header_context_minimal": "package core\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 22, "end_line": 28, "text": "type ingestMetrics struct {\n\ttotalBatches  int\n\ttotalUpdates  int\n\ttotalDuration time.Duration\n\tlastReport    time.Time\n}\n", "n_tokens": 28, "primary_symbol": "ingestMetrics", "primary_kind": "type", "primary_span": [22, 28], "def_symbols": [], "symbols": ["type", "ingestMetrics", "struct", "totalBatches", "int", "totalUpdates", "totalDuration", "time", "Duration", "lastReport", "Time"], "doc_head": "type ingestMetrics struct {\n\ttotalBatches  int\n\ttotalUpdates  int\n\ttotalDuration time.Duration\n\tlastReport    time.Time\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:ingestMetrics (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "ingestMetrics", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["ingestMetrics"], "all_kinds": ["type"], "all_ast_paths": ["go:type:ingestMetrics (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["ingestMetrics"], "all_type_kinds": ["struct"], "all_start_bytes": [427], "all_end_bytes": [543], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Duration", "Time", "time.Duration", "time.Time"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 29, "end_line": 37, "text": "type FlightsIngestService struct {\n\tflightUpdatesRepo           flightUpdatesRepository\n\trealtimeFlightUpdatesClient realtimeFlightUpdatesClient\n\n\tbatchStoreInterval time.Duration\n\n\tmetrics ingestMetrics\n}\n", "n_tokens": 40, "primary_symbol": "FlightsIngestService", "primary_kind": "type", "primary_span": [29, 37], "def_symbols": [], "symbols": ["type", "FlightsIngestService", "struct", "flightUpdatesRepo", "flightUpdatesRepository", "realtimeFlightUpdatesClient", "batchStoreInterval", "time", "Duration", "metrics", "ingestMetrics"], "doc_head": "type FlightsIngestService struct {\n\tflightUpdatesRepo           flightUpdatesRepository\n\trealtimeFlightUpdatesClient realtimeFlightUpdatesClient\n\tbatchStoreInterval time.Duration\n\tmetrics ingestMetrics\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:FlightsIngestService (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "FlightsIngestService", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["FlightsIngestService"], "all_kinds": ["type"], "all_ast_paths": ["go:type:FlightsIngestService (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["FlightsIngestService"], "all_type_kinds": ["struct"], "all_start_bytes": [550], "all_end_bytes": [750], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Duration", "FlightsIngestService", "time.Duration"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 38, "end_line": 52, "text": "func NewFlightsIngestService(\n\tflightUpdatesRepository flightUpdatesRepository,\n\trealtimeFlightUpdatesClient realtimeFlightUpdatesClient,\n\tbatchStoreInterval time.Duration,\n) *FlightsIngestService {\n\treturn &FlightsIngestService{\n\t\tflightUpdatesRepo:           flightUpdatesRepository,\n\t\trealtimeFlightUpdatesClient: realtimeFlightUpdatesClient,\n\t\tbatchStoreInterval:          batchStoreInterval,\n\t\tmetrics: ingestMetrics{\n\t\t\tlastReport: time.Now().Add(-5 * time.Minute),\n\t\t},\n\t}\n}\n", "n_tokens": 110, "primary_symbol": "NewFlightsIngestService", "primary_kind": "function", "primary_span": [38, 52], "def_symbols": [], "symbols": ["NewFlightsIngestService", "func", "flightUpdatesRepository", "realtimeFlightUpdatesClient", "batchStoreInterval", "time", "Duration", "FlightsIngestService", "return", "flightUpdatesRepo", "metrics", "ingestMetrics", "lastReport", "Now", "Add", "Minute"], "doc_head": "func NewFlightsIngestService(\n\tflightUpdatesRepository flightUpdatesRepository,\n\trealtimeFlightUpdatesClient realtimeFlightUpdatesClient,\n\tbatchStoreInterval time.Duration,\n) *FlightsIngestService {\n\treturn &FlightsIngestService{\n\t\tflightUpdatesRepo:           flightUpdatesRepository,\n\t\trealtimeFlightUpdatesClient: realtimeFlightUpdatesClient,\n\t\tbatchStoreInterval:          batchStoreInterval,\n\t\tmetrics: ingestMetrics{\n\t\t\tlastReport: time.Now().Add(-5 * time.Minute),\n\t\t},\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewFlightsIngestService/complete", "package": "core", "node_kind": "function", "receiver": "", "function_name": "NewFlightsIngestService", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewFlightsIngestService"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewFlightsIngestService/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [752], "all_end_bytes": [1233], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Add", "Duration", "FlightsIngestService", "Minute", "NewFlightsIngestService", "Now", "time.Duration", "time.Minute", "time.Now"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 53, "end_line": 84, "text": "// ConsumeFlightUpdates consumes flight updates from the realtime flight updates client\nfunc (s *FlightsIngestService) ConsumeFlightUpdates(ctx context.Context) error {\n\tsubscriber := make(chan LiveFlightUpdate)\n\n\trealtimeFlightDataStreamErr := make(chan error)\n\n\tgo func() {\n\t\tif err := s.realtimeFlightUpdatesClient.Read(ctx, subscriber); err != nil {\n\t\t\trealtimeFlightDataStreamErr <- err\n\t\t}\n\t}()\n\n\tuniqueFlightUpdates := make(map[string]LiveFlightUpdate)\n\tticker := time.NewTicker(s.batchStoreInterval)\n\n\tfor {\n\t\tselect {\n\t\tcase flightupdate := <-subscriber:\n\t\t\tuniqueFlightUpdates[flightupdate.ID] = flightupdate\n\t\tcase <-ticker.C:\n\t\t\ts.insertBatchFlightUpdates(ctx, uniqueFlightUpdates)\n\t\t\tclear(uniqueFlightUpdates)\n\t\tcase <-ctx.Done():\n\t\t\tlog.Info(ctx, \"Shutting down the flight updates service...\")\n\t\t\treturn nil\n\t\tcase err := <-realtimeFlightDataStreamErr:\n\t\t\tlog.Error(ctx, \"Realtime data stream raised an error unexpectedly\", zap.Error(err))\n\t\t\treturn err\n\t\t}\n\t}\n}\n", "n_tokens": 230, "primary_symbol": "ConsumeFlightUpdates", "primary_kind": "method", "primary_span": [54, 84], "def_symbols": [], "symbols": ["ConsumeFlightUpdates", "consumes", "flight", "updates", "from", "the", "realtime", "client", "func", "FlightsIngestService", "ctx", "context", "Context", "error", "subscriber", "make", "chan", "LiveFlightUpdate", "realtimeFlightDataStreamErr", "err", "realtimeFlightUpdatesClient", "Read", "nil", "uniqueFlightUpdates", "map", "string", "ticker", "time", "NewTicker", "batchStoreInterval", "for", "select", "case", "flightupdate", "insertBatchFlightUpdates", "clear", "Done", "log", "Info", "Shutting", "down", "service", "return", "Error", "Realtime", "data", "stream", "raised", "unexpectedly", "zap"], "doc_head": "// ConsumeFlightUpdates consumes flight updates from the realtime flight updates client\nfunc (s *FlightsIngestService) ConsumeFlightUpdates(ctx context.Context) error {\n\tsubscriber := make(chan LiveFlightUpdate)\n\trealtimeFlightDataStreamErr := make(chan error)\n\tgo func() {\n\t\tif err := s.realtimeFlightUpdatesClient.Read(ctx, subscriber); err != nil {\n\t\t\trealtimeFlightDataStreamErr <- err\n\t\t}\n\t}()\n\tuniqueFlightUpdates := make(map[string]LiveFlightUpdate)\n\tticker := time.NewTicker(s.batchStoreInterval)\n\tfor {\n\t\tselect {\n\t\tcase flightupdate := <-subscriber:\n\t\t\tuniqueFlightUpdates[flightupdate.ID] = flightupdate\n\t\tcase <-ticker.C:\n\t\t\ts.insertBatchFlightUpdates(ctx, uniqueFlightUpdates)\n\t\t\tclear(uniqueFlightUpdates)\n\t\tcase <-ctx.Done():\n\t\t\tlog.Info(ctx, \"Shutting down the flight updates service...\")\n\t\t\treturn nil\n\t\tcase err := <-realtimeFlightDataStreamErr:\n\t\t\tlog.Error(ctx, \"Realtime data stream raised an error unexpectedly\", zap.Error(err))\n\t\t\treturn err\n\t\t}\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsIngestService).ConsumeFlightUpdates/complete", "package": "core", "node_kind": "method", "receiver": "s *FlightsIngestService", "function_name": "", "method_name": "ConsumeFlightUpdates", "type_name": "FlightsIngestService", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ConsumeFlightUpdates"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsIngestService).ConsumeFlightUpdates/complete"], "all_roles": ["complete"], "all_receivers": ["s *FlightsIngestService"], "all_type_names": ["FlightsIngestService"], "all_type_kinds": [null], "all_start_bytes": [1323], "all_end_bytes": [2212], "primary_index": 0, "all_receivers_normalized": ["(*FlightsIngestService)"], "imports_used_minimal": ["context", "go.impalastudios.com/log", "go.uber.org/zap", "time"], "symbols_referenced_strict": ["ConsumeFlightUpdates", "Context", "Done", "Error", "FlightsIngestService", "Info", "LiveFlightUpdate", "NewTicker", "Read", "context.Context", "ctx.Done", "flightupdate.ID", "log.Error", "log.Info", "s.batchStoreInterval", "s.insertBatchFlightUpdates", "s.realtimeFlightUpdatesClient", "ticker.C", "time.NewTicker", "zap.Error"], "header_context_minimal": "package core\nimport (\n    \"context\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n    \"time\"\n)\n// receiver: s *FlightsIngestService", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 85, "end_line": 116, "text": "func (s *FlightsIngestService) insertBatchFlightUpdates(ctx context.Context, uniqueUpdates map[string]LiveFlightUpdate) {\n\tif len(uniqueUpdates) == 0 {\n\t\tlog.Debug(ctx, \"There are no flight updates to store\")\n\t\treturn\n\t}\n\n\tflightUpdatesBatch := make([]*LiveFlightUpdate, 0, len(uniqueUpdates))\n\n\tfor _, update := range uniqueUpdates {\n\t\tflightUpdatesBatch = append(flightUpdatesBatch, &update)\n\t}\n\n\tstart := time.Now()\n\terr := s.flightUpdatesRepo.UpsertMany(ctx, flightUpdatesBatch)\n\tdur := time.Since(start)\n\n\tif err != nil {\n\t\tlog.Error(ctx, \"Failed to insert batch records of realtime flight updates\",\n\t\t\tzap.Error(err),\n\t\t\tzap.Int(\"count\", len(flightUpdatesBatch)),\n\t\t)\n\n\t\treturn\n\t}\n\n\ts.metrics.totalBatches++\n\ts.metrics.totalUpdates += len(flightUpdatesBatch)\n\ts.metrics.totalDuration += dur\n\n\ts.logMetricsIfNeeded(ctx)\n}\n", "n_tokens": 207, "primary_symbol": "insertBatchFlightUpdates", "primary_kind": "method", "primary_span": [85, 116], "def_symbols": [], "symbols": ["insertBatchFlightUpdates", "func", "FlightsIngestService", "ctx", "context", "Context", "uniqueUpdates", "map", "string", "LiveFlightUpdate", "len", "log", "Debug", "There", "are", "flight", "updates", "store", "return", "flightUpdatesBatch", "make", "for", "update", "range", "append", "start", "time", "Now", "err", "flightUpdatesRepo", "UpsertMany", "dur", "Since", "nil", "Error", "Failed", "insert", "batch", "records", "realtime", "zap", "Int", "count", "metrics", "totalBatches", "totalUpdates", "totalDuration", "logMetricsIfNeeded"], "doc_head": "func (s *FlightsIngestService) insertBatchFlightUpdates(ctx context.Context, uniqueUpdates map[string]LiveFlightUpdate) {\n\tif len(uniqueUpdates) == 0 {\n\t\tlog.Debug(ctx, \"There are no flight updates to store\")\n\t\treturn\n\t}\n\tflightUpdatesBatch := make([]*LiveFlightUpdate, 0, len(uniqueUpdates))\n\tfor _, update := range uniqueUpdates {\n\t\tflightUpdatesBatch = append(flightUpdatesBatch, &update)\n\t}\n\tstart := time.Now()\n\terr := s.flightUpdatesRepo.UpsertMany(ctx, flightUpdatesBatch)\n\tdur := time.Since(start)\n\tif err != nil {\n\t\tlog.Error(ctx, \"Failed to insert batch records of realtime flight updates\",\n\t\t\tzap.Error(err),\n\t\t\tzap.Int(\"count\", len(flightUpdatesBatch)),\n\t\t)\n\t\treturn\n\t}\n\ts.metrics.totalBatches++\n\ts.metrics.totalUpdates += len(flightUpdatesBatch)\n\ts.metrics.totalDuration += dur\n\ts.logMetricsIfNeeded(ctx)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsIngestService).insertBatchFlightUpdates/complete", "package": "core", "node_kind": "method", "receiver": "s *FlightsIngestService", "function_name": "", "method_name": "insertBatchFlightUpdates", "type_name": "FlightsIngestService", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["insertBatchFlightUpdates"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsIngestService).insertBatchFlightUpdates/complete"], "all_roles": ["complete"], "all_receivers": ["s *FlightsIngestService"], "all_type_names": ["FlightsIngestService"], "all_type_kinds": [null], "all_start_bytes": [2214], "all_end_bytes": [3040], "primary_index": 0, "all_receivers_normalized": ["(*FlightsIngestService)"], "imports_used_minimal": ["context", "go.impalastudios.com/log", "go.uber.org/zap", "time"], "symbols_referenced_strict": ["Context", "Debug", "Error", "FlightsIngestService", "Int", "LiveFlightUpdate", "Now", "Since", "UpsertMany", "context.Context", "log.Debug", "log.Error", "s.flightUpdatesRepo", "s.logMetricsIfNeeded", "s.metrics", "time.Now", "time.Since", "zap.Error", "zap.Int"], "header_context_minimal": "package core\nimport (\n    \"context\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n    \"time\"\n)\n// receiver: s *FlightsIngestService", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_ingest_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go", "rel_path": "internal/core/flights_ingest_service.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 117, "end_line": 140, "text": "func (s *FlightsIngestService) logMetricsIfNeeded(ctx context.Context) {\n\tnow := time.Now()\n\tif now.Sub(s.metrics.lastReport) < 5*time.Minute {\n\t\treturn\n\t}\n\n\tvar avgBatchDur time.Duration\n\tvar avgUpdatesPerBatch float64\n\n\tif s.metrics.totalBatches > 0 {\n\t\tavgBatchDur = s.metrics.totalDuration / time.Duration(s.metrics.totalBatches)\n\t\tavgUpdatesPerBatch = float64(s.metrics.totalUpdates) / float64(s.metrics.totalBatches)\n\t}\n\n\tlog.Debug(ctx, \"Ingest metrics report\",\n\t\tzap.Int(\"batches\", s.metrics.totalBatches),\n\t\tzap.Int(\"total_updates\", s.metrics.totalUpdates),\n\t\tzap.Duration(\"avg_batch_duration\", avgBatchDur),\n\t\tzap.Float64(\"avg_updates_per_batch\", avgUpdatesPerBatch),\n\t)\n\n\ts.metrics = ingestMetrics{lastReport: now}\n}\n", "n_tokens": 191, "primary_symbol": "logMetricsIfNeeded", "primary_kind": "method", "primary_span": [117, 140], "def_symbols": [], "symbols": ["logMetricsIfNeeded", "func", "FlightsIngestService", "ctx", "context", "Context", "now", "time", "Now", "Sub", "metrics", "lastReport", "Minute", "return", "var", "avgBatchDur", "Duration", "avgUpdatesPerBatch", "float64", "totalBatches", "totalDuration", "totalUpdates", "log", "Debug", "Ingest", "report", "zap", "Int", "batches", "total_updates", "avg_batch_duration", "Float64", "avg_updates_per_batch", "ingestMetrics"], "doc_head": "func (s *FlightsIngestService) logMetricsIfNeeded(ctx context.Context) {\n\tnow := time.Now()\n\tif now.Sub(s.metrics.lastReport) < 5*time.Minute {\n\t\treturn\n\t}\n\tvar avgBatchDur time.Duration\n\tvar avgUpdatesPerBatch float64\n\tif s.metrics.totalBatches > 0 {\n\t\tavgBatchDur = s.metrics.totalDuration / time.Duration(s.metrics.totalBatches)\n\t\tavgUpdatesPerBatch = float64(s.metrics.totalUpdates) / float64(s.metrics.totalBatches)\n\t}\n\tlog.Debug(ctx, \"Ingest metrics report\",\n\t\tzap.Int(\"batches\", s.metrics.totalBatches),\n\t\tzap.Int(\"total_updates\", s.metrics.totalUpdates),\n\t\tzap.Duration(\"avg_batch_duration\", avgBatchDur),\n\t\tzap.Float64(\"avg_updates_per_batch\", avgUpdatesPerBatch),\n\t)\n\ts.metrics = ingestMetrics{lastReport: now}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsIngestService).logMetricsIfNeeded/complete", "package": "core", "node_kind": "method", "receiver": "s *FlightsIngestService", "function_name": "", "method_name": "logMetricsIfNeeded", "type_name": "FlightsIngestService", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["logMetricsIfNeeded"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsIngestService).logMetricsIfNeeded/complete"], "all_roles": ["complete"], "all_receivers": ["s *FlightsIngestService"], "all_type_names": ["FlightsIngestService"], "all_type_kinds": [null], "all_start_bytes": [3042], "all_end_bytes": [3768], "primary_index": 0, "all_receivers_normalized": ["(*FlightsIngestService)"], "imports_used_minimal": ["context", "go.impalastudios.com/log", "go.uber.org/zap", "time"], "symbols_referenced_strict": ["Context", "Debug", "Duration", "FlightsIngestService", "Float64", "Int", "Minute", "Now", "Sub", "context.Context", "log.Debug", "now.Sub", "s.metrics", "time.Duration", "time.Minute", "time.Now", "zap.Duration", "zap.Float64", "zap.Int"], "header_context_minimal": "package core\nimport (\n    \"context\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n    \"time\"\n)\n// receiver: s *FlightsIngestService", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_ingest_service.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package core\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "core"], "doc_head": "package core", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 11, "text": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"sort\"\n\t\"time\"\n)\n", "n_tokens": 33, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 11], "def_symbols": [], "symbols": ["import", "context", "fmt", "impalastudios", "com", "log", "uber", "org", "zap", "sort", "time"], "doc_head": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"sort\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 13, "text": "//go:generate mockgen -source=flights_enrich_service.go -destination=mocks/flights_enrich_service_mocks.go -package=mocks\ntype (", "n_tokens": 36, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 13], "def_symbols": [], "symbols": ["generate", "mockgen", "source", "flights_enrich_service", "destination", "mocks", "flights_enrich_service_mocks", "package", "type"], "doc_head": "//go:generate mockgen -source=flights_enrich_service.go -destination=mocks/flights_enrich_service_mocks.go -package=mocks\ntype (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 14, "end_line": 17, "text": "\tairlinesRepository interface {\n\t\tGetByDesignator(context.Context, string) (*Airline, error)\n\t}\n", "n_tokens": 24, "primary_symbol": "airlinesRepository", "primary_kind": "type", "primary_span": [14, 17], "def_symbols": [], "symbols": ["airlinesRepository", "interface", "GetByDesignator", "context", "Context", "string", "Airline", "error"], "doc_head": "\tairlinesRepository interface {\n\t\tGetByDesignator(context.Context, string) (*Airline, error)\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:airlinesRepository (interface)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "airlinesRepository", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["airlinesRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:airlinesRepository (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["airlinesRepository"], "all_type_kinds": ["interface"], "all_start_bytes": [237], "all_end_bytes": [331], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Airline", "Context", "GetByDesignator", "context.Context"], "header_context_minimal": "package core\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 18, "end_line": 21, "text": "\tairportsRepository interface {\n\t\tGetByICAOOrIATA(context.Context, *string, *string) (*Airport, error)\n\t}\n", "n_tokens": 30, "primary_symbol": "airportsRepository", "primary_kind": "type", "primary_span": [18, 21], "def_symbols": [], "symbols": ["airportsRepository", "interface", "GetByICAOOrIATA", "context", "Context", "string", "Airport", "error"], "doc_head": "\tairportsRepository interface {\n\t\tGetByICAOOrIATA(context.Context, *string, *string) (*Airport, error)\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:airportsRepository (interface)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "airportsRepository", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["airportsRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:airportsRepository (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["airportsRepository"], "all_type_kinds": ["interface"], "all_start_bytes": [334], "all_end_bytes": [438], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Airport", "Context", "GetByICAOOrIATA", "context.Context"], "header_context_minimal": "package core\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 22, "end_line": 27, "text": "\tflightsEnrichRepository interface {\n\t\tGetUnenrichedFlights(ctx context.Context, limit int) ([]*LiveFlight, error)\n\t\tEnrichFlights(ctx context.Context, enriched []*EnrichedFlightData) error\n\t}\n)\n", "n_tokens": 52, "primary_symbol": "flightsEnrichRepository", "primary_kind": "type", "primary_span": [22, 27], "def_symbols": [], "symbols": ["flightsEnrichRepository", "interface", "GetUnenrichedFlights", "ctx", "context", "Context", "limit", "int", "LiveFlight", "error", "EnrichFlights", "enriched", "EnrichedFlightData"], "doc_head": "\tflightsEnrichRepository interface {\n\t\tGetUnenrichedFlights(ctx context.Context, limit int) ([]*LiveFlight, error)\n\t\tEnrichFlights(ctx context.Context, enriched []*EnrichedFlightData) error\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:flightsEnrichRepository (interface)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "flightsEnrichRepository", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["flightsEnrichRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:flightsEnrichRepository (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["flightsEnrichRepository"], "all_type_kinds": ["interface"], "all_start_bytes": [441], "all_end_bytes": [632], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "EnrichFlights", "EnrichedFlightData", "GetUnenrichedFlights", "LiveFlight", "context.Context"], "header_context_minimal": "package core\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 28, "end_line": 37, "text": "type FlightsEnrichService struct {\n\tenrichRepo flightsEnrichRepository\n\tairlines   airlinesRepository\n\tairports   airportsRepository\n\n\tenrichPageSize  int\n\tmaxEnrichCycles int\n\tmetrics         enrichMetrics\n}\n", "n_tokens": 50, "primary_symbol": "FlightsEnrichService", "primary_kind": "type", "primary_span": [28, 37], "def_symbols": [], "symbols": ["type", "FlightsEnrichService", "struct", "enrichRepo", "flightsEnrichRepository", "airlines", "airlinesRepository", "airports", "airportsRepository", "enrichPageSize", "int", "maxEnrichCycles", "metrics", "enrichMetrics"], "doc_head": "type FlightsEnrichService struct {\n\tenrichRepo flightsEnrichRepository\n\tairlines   airlinesRepository\n\tairports   airportsRepository\n\tenrichPageSize  int\n\tmaxEnrichCycles int\n\tmetrics         enrichMetrics\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:FlightsEnrichService (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "FlightsEnrichService", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["FlightsEnrichService"], "all_kinds": ["type"], "all_ast_paths": ["go:type:FlightsEnrichService (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["FlightsEnrichService"], "all_type_kinds": ["struct"], "all_start_bytes": [641], "all_end_bytes": [844], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["FlightsEnrichService"], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 38, "end_line": 51, "text": "type enrichMetrics struct {\n\ttotalCalls      int\n\ttotalEnriched   int\n\ttotalFailed     int\n\ttotalSkipped    int\n\tmissingFlightID int\n\n\tairlineNotFound          map[string]int\n\tdepartureAirportNotFound map[string]int\n\tarrivalAirportNotFound   map[string]int\n\n\tlastReport time.Time\n}\n", "n_tokens": 66, "primary_symbol": "enrichMetrics", "primary_kind": "type", "primary_span": [38, 51], "def_symbols": [], "symbols": ["type", "enrichMetrics", "struct", "totalCalls", "int", "totalEnriched", "totalFailed", "totalSkipped", "missingFlightID", "airlineNotFound", "map", "string", "departureAirportNotFound", "arrivalAirportNotFound", "lastReport", "time", "Time"], "doc_head": "type enrichMetrics struct {\n\ttotalCalls      int\n\ttotalEnriched   int\n\ttotalFailed     int\n\ttotalSkipped    int\n\tmissingFlightID int\n\tairlineNotFound          map[string]int\n\tdepartureAirportNotFound map[string]int\n\tarrivalAirportNotFound   map[string]int\n\tlastReport time.Time\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:enrichMetrics (struct)", "package": "core", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "enrichMetrics", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["enrichMetrics"], "all_kinds": ["type"], "all_ast_paths": ["go:type:enrichMetrics (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["enrichMetrics"], "all_type_kinds": ["struct"], "all_start_bytes": [851], "all_end_bytes": [1127], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Time", "time.Time"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 52, "end_line": 80, "text": "func NewFlightsEnrichService(\n\tenrichRepo flightsEnrichRepository,\n\tairlines airlinesRepository,\n\tairports airportsRepository,\n\tenrichPageSize int,\n\tmaxEnrichCycles int,\n) *FlightsEnrichService {\n\tif enrichPageSize <= 0 {\n\t\tenrichPageSize = 100\n\t}\n\tif maxEnrichCycles <= 0 {\n\t\tmaxEnrichCycles = 1\n\t}\n\n\treturn &FlightsEnrichService{\n\t\tenrichRepo:      enrichRepo,\n\t\tairlines:        airlines,\n\t\tairports:        airports,\n\t\tenrichPageSize:  enrichPageSize,\n\t\tmaxEnrichCycles: maxEnrichCycles,\n\t\tmetrics: enrichMetrics{\n\t\t\tairlineNotFound:          make(map[string]int),\n\t\t\tdepartureAirportNotFound: make(map[string]int),\n\t\t\tarrivalAirportNotFound:   make(map[string]int),\n\t\t\tlastReport:               time.Now().Add(-5 * time.Minute),\n\t\t},\n\t}\n}\n", "n_tokens": 205, "primary_symbol": "NewFlightsEnrichService", "primary_kind": "function", "primary_span": [52, 80], "def_symbols": [], "symbols": ["NewFlightsEnrichService", "func", "enrichRepo", "flightsEnrichRepository", "airlines", "airlinesRepository", "airports", "airportsRepository", "enrichPageSize", "int", "maxEnrichCycles", "FlightsEnrichService", "return", "metrics", "enrichMetrics", "airlineNotFound", "make", "map", "string", "departureAirportNotFound", "arrivalAirportNotFound", "lastReport", "time", "Now", "Add", "Minute"], "doc_head": "func NewFlightsEnrichService(\n\tenrichRepo flightsEnrichRepository,\n\tairlines airlinesRepository,\n\tairports airportsRepository,\n\tenrichPageSize int,\n\tmaxEnrichCycles int,\n) *FlightsEnrichService {\n\tif enrichPageSize <= 0 {\n\t\tenrichPageSize = 100\n\t}\n\tif maxEnrichCycles <= 0 {\n\t\tmaxEnrichCycles = 1\n\t}\n\treturn &FlightsEnrichService{\n\t\tenrichRepo:      enrichRepo,\n\t\tairlines:        airlines,\n\t\tairports:        airports,\n\t\tenrichPageSize:  enrichPageSize,\n\t\tmaxEnrichCycles: maxEnrichCycles,\n\t\tmetrics: enrichMetrics{\n\t\t\tairlineNotFound:          make(map[string]int),\n\t\t\tdepartureAirportNotFound: make(map[string]int),\n\t\t\tarrivalAirportNotFound:   make(map[string]int),\n\t\t\tlastReport:               time.Now().Add(-5 * time.Minute),\n\t\t},\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewFlightsEnrichService/complete", "package": "core", "node_kind": "function", "receiver": "", "function_name": "NewFlightsEnrichService", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewFlightsEnrichService"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewFlightsEnrichService/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1129], "all_end_bytes": [1872], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Add", "FlightsEnrichService", "Minute", "NewFlightsEnrichService", "Now", "time.Minute", "time.Now"], "header_context_minimal": "package core\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 81, "end_line": 124, "text": "func (s *FlightsEnrichService) Enrich(ctx context.Context) error {\n\ts.metrics.totalCalls++\n\n\tfor i := 0; i < s.maxEnrichCycles; i++ {\n\t\tflights, err := s.enrichRepo.GetUnenrichedFlights(ctx, s.enrichPageSize)\n\t\tif err != nil {\n\t\t\tlog.Error(ctx, \"Failed to retrieve unenriched flights\", zap.Error(err))\n\t\t\ts.metrics.totalFailed++\n\t\t\ts.logMetricsIfNeeded(ctx)\n\t\t\treturn err\n\t\t}\n\t\tif len(flights) == 0 {\n\t\t\tbreak\n\t\t}\n\n\t\tvar enriched []*EnrichedFlightData\n\t\tfor _, flight := range flights {\n\t\t\tdata := s.buildEnrichedFlightData(ctx, flight)\n\t\t\tif data != nil {\n\t\t\t\tenriched = append(enriched, data)\n\t\t\t\ts.metrics.totalEnriched++\n\n\t\t\t\tif data.FlightID == nil {\n\t\t\t\t\ts.metrics.missingFlightID++\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ts.metrics.totalSkipped++\n\t\t\t}\n\t\t}\n\n\t\tif len(enriched) > 0 {\n\t\t\tif err := s.enrichRepo.EnrichFlights(ctx, enriched); err != nil {\n\t\t\t\tlog.Error(ctx, \"Failed to bulk enrich flights\", zap.Error(err))\n\t\t\t\ts.metrics.totalFailed++\n\t\t\t\ts.logMetricsIfNeeded(ctx)\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t}\n\n\ts.logMetricsIfNeeded(ctx)\n\treturn nil\n}\n", "n_tokens": 304, "primary_symbol": "Enrich", "primary_kind": "method", "primary_span": [81, 124], "def_symbols": [], "symbols": ["Enrich", "func", "FlightsEnrichService", "ctx", "context", "Context", "error", "metrics", "totalCalls", "for", "maxEnrichCycles", "flights", "err", "enrichRepo", "GetUnenrichedFlights", "enrichPageSize", "nil", "log", "Error", "Failed", "retrieve", "unenriched", "zap", "totalFailed", "logMetricsIfNeeded", "return", "len", "break", "var", "enriched", "EnrichedFlightData", "flight", "range", "data", "buildEnrichedFlightData", "append", "totalEnriched", "FlightID", "missingFlightID", "else", "totalSkipped", "EnrichFlights", "bulk", "enrich"], "doc_head": "func (s *FlightsEnrichService) Enrich(ctx context.Context) error {\n\ts.metrics.totalCalls++\n\tfor i := 0; i < s.maxEnrichCycles; i++ {\n\t\tflights, err := s.enrichRepo.GetUnenrichedFlights(ctx, s.enrichPageSize)\n\t\tif err != nil {\n\t\t\tlog.Error(ctx, \"Failed to retrieve unenriched flights\", zap.Error(err))\n\t\t\ts.metrics.totalFailed++\n\t\t\ts.logMetricsIfNeeded(ctx)\n\t\t\treturn err\n\t\t}\n\t\tif len(flights) == 0 {\n\t\t\tbreak\n\t\t}\n\t\tvar enriched []*EnrichedFlightData\n\t\tfor _, flight := range flights {\n\t\t\tdata := s.buildEnrichedFlightData(ctx, flight)\n\t\t\tif data != nil {\n\t\t\t\tenriched = append(enriched, data)\n\t\t\t\ts.metrics.totalEnriched++\n\t\t\t\tif data.FlightID == nil {\n\t\t\t\t\ts.metrics.missingFlightID++\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ts.metrics.totalSkipped++\n\t\t\t}\n\t\t}\n\t\tif len(enriched) > 0 {\n\t\t\tif err := s.enrichRepo.EnrichFlights(ctx, enriched); err != nil {\n\t\t\t\tlog.Error(ctx, \"Failed to bulk enrich flights\", zap.Error(err))\n\t\t\t\ts.metrics.totalFailed++\n\t\t\t\ts.logMetricsIfNeeded(ctx)\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t}\n\ts.logMetricsIfNeeded(ctx)\n\treturn nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsEnrichService).Enrich/complete", "package": "core", "node_kind": "method", "receiver": "s *FlightsEnrichService", "function_name": "", "method_name": "Enrich", "type_name": "FlightsEnrichService", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Enrich"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsEnrichService).Enrich/complete"], "all_roles": ["complete"], "all_receivers": ["s *FlightsEnrichService"], "all_type_names": ["FlightsEnrichService"], "all_type_kinds": [null], "all_start_bytes": [1874], "all_end_bytes": [2908], "primary_index": 0, "all_receivers_normalized": ["(*FlightsEnrichService)"], "imports_used_minimal": ["context", "go.impalastudios.com/log", "go.uber.org/zap"], "symbols_referenced_strict": ["Context", "Enrich", "EnrichFlights", "EnrichedFlightData", "Error", "FlightID", "FlightsEnrichService", "GetUnenrichedFlights", "context.Context", "data.FlightID", "log.Error", "s.buildEnrichedFlightData", "s.enrichPageSize", "s.enrichRepo", "s.logMetricsIfNeeded", "s.maxEnrichCycles", "s.metrics", "zap.Error"], "header_context_minimal": "package core\nimport (\n    \"context\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n)\n// receiver: s *FlightsEnrichService", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 125, "end_line": 190, "text": "func (s *FlightsEnrichService) buildEnrichedFlightData(ctx context.Context, flight *LiveFlight) *EnrichedFlightData {\n\tconst defaultClassification = 5\n\n\tdata := &EnrichedFlightData{\n\t\tLiveFlightID:   flight.ID,\n\t\tClassification: defaultClassification,\n\t}\n\n\tif flight.AirlineDesignator != \"\" {\n\t\tairline, err := s.airlines.GetByDesignator(ctx, flight.AirlineDesignator)\n\t\tif err != nil {\n\t\t\ts.metrics.airlineNotFound[flight.AirlineDesignator]++\n\t\t} else if airline != nil {\n\t\t\tdata.Classification = int64(airline.Classification)\n\t\t}\n\t}\n\n\tvar departureCode string\n\tif flight.DepartureAirportICAO != \"\" || flight.DepartureAirportIATA != \"\" {\n\t\tdeparture, err := s.airports.GetByICAOOrIATA(\n\t\t\tctx,\n\t\t\toptionalString(flight.DepartureAirportICAO),\n\t\t\toptionalString(flight.DepartureAirportIATA),\n\t\t)\n\t\tif err != nil {\n\t\t\tkey := flight.DepartureAirportICAO + \"/\" + flight.DepartureAirportIATA\n\t\t\ts.metrics.departureAirportNotFound[key]++\n\t\t} else if departure != nil {\n\t\t\tdepartureCode = departure.Designator\n\t\t}\n\t}\n\n\tvar arrivalCode string\n\tif flight.ArrivalAirportICAO != \"\" || flight.ArrivalAirportIATA != \"\" {\n\t\tarrival, err := s.airports.GetByICAOOrIATA(\n\t\t\tctx,\n\t\t\toptionalString(flight.ArrivalAirportICAO),\n\t\t\toptionalString(flight.ArrivalAirportIATA),\n\t\t)\n\n\t\tif err != nil {\n\t\t\tkey := flight.ArrivalAirportICAO + \"/\" + flight.ArrivalAirportIATA\n\t\t\ts.metrics.arrivalAirportNotFound[key]++\n\t\t} else if arrival != nil {\n\t\t\tarrivalCode = arrival.Designator\n\t\t}\n\t}\n\n\tif !flight.DepartureTime.IsZero() && flight.FlightNumber != \"\" &&\n\t\tflight.AirlineDesignator != \"\" && departureCode != \"\" && arrivalCode != \"\" {\n\n\t\t//TODO: FlightID logic\n\t\tflightID := fmt.Sprintf(\n\t\t\t\"%s_%s_%s_%s_%s\",\n\t\t\tflight.DepartureTime.Format(\"20060102\"),\n\t\t\tflight.AirlineDesignator,\n\t\t\tflight.FlightNumber,\n\t\t\tdepartureCode,\n\t\t\tarrivalCode,\n\t\t)\n\t\tdata.FlightID = &flightID\n\t}\n\n\treturn data\n}\n", "n_tokens": 545, "primary_symbol": "buildEnrichedFlightData", "primary_kind": "method", "primary_span": [125, 190], "def_symbols": [], "symbols": ["buildEnrichedFlightData", "func", "FlightsEnrichService", "ctx", "context", "Context", "flight", "LiveFlight", "EnrichedFlightData", "const", "defaultClassification", "data", "LiveFlightID", "Classification", "AirlineDesignator", "airline", "err", "airlines", "GetByDesignator", "nil", "metrics", "airlineNotFound", "else", "int64", "var", "departureCode", "string", "DepartureAirportICAO", "DepartureAirportIATA", "departure", "airports", "GetByICAOOrIATA", "optionalString", "key", "departureAirportNotFound", "Designator", "arrivalCode", "ArrivalAirportICAO", "ArrivalAirportIATA", "arrival", "arrivalAirportNotFound", "DepartureTime", "IsZero", "FlightNumber", "TODO", "FlightID", "logic", "flightID", "fmt", "Sprintf", "Format", "return"], "doc_head": "func (s *FlightsEnrichService) buildEnrichedFlightData(ctx context.Context, flight *LiveFlight) *EnrichedFlightData {\n\tconst defaultClassification = 5\n\tdata := &EnrichedFlightData{\n\t\tLiveFlightID:   flight.ID,\n\t\tClassification: defaultClassification,\n\t}\n\tif flight.AirlineDesignator != \"\" {\n\t\tairline, err := s.airlines.GetByDesignator(ctx, flight.AirlineDesignator)\n\t\tif err != nil {\n\t\t\ts.metrics.airlineNotFound[flight.AirlineDesignator]++\n\t\t} else if airline != nil {\n\t\t\tdata.Classification = int64(airline.Classification)\n\t\t}\n\t}\n\tvar departureCode string\n\tif flight.DepartureAirportICAO != \"\" || flight.DepartureAirportIATA != \"\" {\n\t\tdeparture, err := s.airports.GetByICAOOrIATA(\n\t\t\tctx,\n\t\t\toptionalString(flight.DepartureAirportICAO),\n\t\t\toptionalString(flight.DepartureAirportIATA),\n\t\t)\n\t\tif err != nil {\n\t\t\tkey := flight.DepartureAirportICAO + \"/\" + flight.DepartureAirportIATA\n\t\t\ts.metrics.departureAirportNotFound[key]++\n\t\t} else if departure != nil {\n\t\t\tdepartureCode = departure.Designator\n\t\t}\n\t}\n\tvar arrivalCode string\n\tif flight.ArrivalAirportICAO != \"\" || flight.ArrivalAirportIATA != \"\" {\n\t\tarrival, err := s.airports.GetByICAOOrIATA(\n\t\t\tctx,", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsEnrichService).buildEnrichedFlightData/complete", "package": "core", "node_kind": "method", "receiver": "s *FlightsEnrichService", "function_name": "", "method_name": "buildEnrichedFlightData", "type_name": "FlightsEnrichService", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["buildEnrichedFlightData"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsEnrichService).buildEnrichedFlightData/complete"], "all_roles": ["complete"], "all_receivers": ["s *FlightsEnrichService"], "all_type_names": ["FlightsEnrichService"], "all_type_kinds": [null], "all_start_bytes": [2910], "all_end_bytes": [4774], "primary_index": 0, "all_receivers_normalized": ["(*FlightsEnrichService)"], "imports_used_minimal": ["context", "fmt"], "symbols_referenced_strict": ["AirlineDesignator", "ArrivalAirportIATA", "ArrivalAirportICAO", "Classification", "Context", "DepartureAirportIATA", "DepartureAirportICAO", "DepartureTime", "Designator", "EnrichedFlightData", "FlightID", "FlightNumber", "FlightsEnrichService", "Format", "GetByDesignator", "GetByICAOOrIATA", "IsZero", "LiveFlight", "LiveFlightID", "Sprintf", "airline.Classification", "arrival.Designator", "context.Context", "data.Classification", "data.FlightID", "departure.Designator", "flight.AirlineDesignator", "flight.ArrivalAirportIATA", "flight.ArrivalAirportICAO", "flight.DepartureAirportIATA", "flight.DepartureAirportICAO", "flight.DepartureTime", "flight.FlightNumber", "flight.ID", "fmt.Sprintf", "s.airlines", "s.airports", "s.metrics"], "header_context_minimal": "package core\nimport (\n    \"context\"\n    \"fmt\"\n)\n// receiver: s *FlightsEnrichService", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 191, "end_line": 197, "text": "func optionalString(s string) *string {\n\tif s == \"\" {\n\t\treturn nil\n\t}\n\treturn &s\n}\n", "n_tokens": 25, "primary_symbol": "optionalString", "primary_kind": "function", "primary_span": [191, 197], "def_symbols": [], "symbols": ["optionalString", "func", "string", "return", "nil"], "doc_head": "func optionalString(s string) *string {\n\tif s == \"\" {\n\t\treturn nil\n\t}\n\treturn &s\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:optionalString/complete", "package": "core", "node_kind": "function", "receiver": "", "function_name": "optionalString", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["optionalString"], "all_kinds": ["function"], "all_ast_paths": ["go:function:optionalString/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [4776], "all_end_bytes": [4858], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/flights_enrich_service.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go", "rel_path": "internal/core/flights_enrich_service.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 198, "end_line": 270, "text": "func (s *FlightsEnrichService) logMetricsIfNeeded(ctx context.Context) {\n\tnow := time.Now()\n\tif now.Sub(s.metrics.lastReport) < 5*time.Minute {\n\t\treturn\n\t}\n\n\tlog.Debug(ctx, \"Flights enrich metrics (last 5 min)\",\n\t\tzap.Int(\"calls\", s.metrics.totalCalls),\n\t\tzap.Int(\"enriched\", s.metrics.totalEnriched),\n\t\tzap.Int(\"failed\", s.metrics.totalFailed),\n\t\tzap.Int(\"skipped\", s.metrics.totalSkipped),\n\t\tzap.Int(\"missing_flight_id\", s.metrics.missingFlightID),\n\t)\n\n\ttype pair struct {\n\t\tkey   string\n\t\tcount int\n\t}\n\texplain := func(data map[string]int) (distinct int, top10 []string) {\n\t\tdistinct = len(data)\n\n\t\tpairs := make([]pair, 0, distinct)\n\t\tfor k, v := range data {\n\t\t\tpairs = append(pairs, pair{k, v})\n\t\t}\n\n\t\tsort.Slice(pairs, func(i, j int) bool {\n\t\t\treturn pairs[i].count > pairs[j].count\n\t\t})\n\n\t\tn := 10\n\t\tif len(pairs) < n {\n\t\t\tn = len(pairs)\n\t\t}\n\t\ttop10 = make([]string, 0, n)\n\t\tfor i := 0; i < n; i++ {\n\t\t\ttop10 = append(top10, fmt.Sprintf(\"%s(%d)\", pairs[i].key, pairs[i].count))\n\t\t}\n\t\treturn\n\t}\n\n\taDistinct, aTop := explain(s.metrics.airlineNotFound)\n\tif aDistinct > 0 {\n\t\tlog.Debug(ctx, \"Airlines not found summary\",\n\t\t\tzap.Int(\"distinct_airlines_not_found_count\", aDistinct),\n\t\t\tzap.Strings(\"top_airlines_not_found\", aTop),\n\t\t)\n\t}\n\n\tdDistinct, dTop := explain(s.metrics.departureAirportNotFound)\n\tif dDistinct > 0 {\n\t\tlog.Debug(ctx, \"Departure airports not found summary\",\n\t\t\tzap.Int(\"distinct_departures_not_found_count\", dDistinct),\n\t\t\tzap.Strings(\"top_departures_not_found\", dTop),\n\t\t)\n\t}\n\n\trDistinct, rTop := explain(s.metrics.arrivalAirportNotFound)\n\tif rDistinct > 0 {\n\t\tlog.Debug(ctx, \"Arrival airports not found summary\",\n\t\t\tzap.Int(\"distinct_arrivals_not_found_count\", rDistinct),\n\t\t\tzap.Strings(\"top_arrivals_not_found\", rTop),\n\t\t)\n\t}\n\n\ts.metrics = enrichMetrics{\n\t\tairlineNotFound:          make(map[string]int),\n\t\tdepartureAirportNotFound: make(map[string]int),\n\t\tarrivalAirportNotFound:   make(map[string]int),\n\t\tlastReport:               now,\n\t}\n}\n", "n_tokens": 575, "primary_symbol": "logMetricsIfNeeded", "primary_kind": "method", "primary_span": [198, 270], "def_symbols": [], "symbols": ["logMetricsIfNeeded", "func", "FlightsEnrichService", "ctx", "context", "Context", "now", "time", "Now", "Sub", "metrics", "lastReport", "Minute", "return", "log", "Debug", "Flights", "enrich", "last", "min", "zap", "Int", "calls", "totalCalls", "enriched", "totalEnriched", "failed", "totalFailed", "skipped", "totalSkipped", "missing_flight_id", "missingFlightID", "type", "pair", "struct", "key", "string", "count", "int", "explain", "data", "map", "distinct", "top10", "len", "pairs", "make", "for", "range", "append", "sort", "Slice", "bool", "fmt", "Sprintf", "aDistinct", "aTop", "airlineNotFound", "Airlines", "not", "found", "summary", "distinct_airlines_not_found_count", "Strings", "top_airlines_not_found", "dDistinct", "dTop", "departureAirportNotFound", "Departure", "airports", "distinct_departures_not_found_count", "top_departures_not_found", "rDistinct", "rTop", "arrivalAirportNotFound", "Arrival", "distinct_arrivals_not_found_count", "top_arrivals_not_found", "enrichMetrics"], "doc_head": "func (s *FlightsEnrichService) logMetricsIfNeeded(ctx context.Context) {\n\tnow := time.Now()\n\tif now.Sub(s.metrics.lastReport) < 5*time.Minute {\n\t\treturn\n\t}\n\tlog.Debug(ctx, \"Flights enrich metrics (last 5 min)\",\n\t\tzap.Int(\"calls\", s.metrics.totalCalls),\n\t\tzap.Int(\"enriched\", s.metrics.totalEnriched),\n\t\tzap.Int(\"failed\", s.metrics.totalFailed),\n\t\tzap.Int(\"skipped\", s.metrics.totalSkipped),\n\t\tzap.Int(\"missing_flight_id\", s.metrics.missingFlightID),\n\t)\n\ttype pair struct {\n\t\tkey   string\n\t\tcount int\n\t}\n\texplain := func(data map[string]int) (distinct int, top10 []string) {\n\t\tdistinct = len(data)\n\t\tpairs := make([]pair, 0, distinct)\n\t\tfor k, v := range data {\n\t\t\tpairs = append(pairs, pair{k, v})\n\t\t}\n\t\tsort.Slice(pairs, func(i, j int) bool {\n\t\t\treturn pairs[i].count > pairs[j].count\n\t\t})\n\t\tn := 10\n\t\tif len(pairs) < n {\n\t\t\tn = len(pairs)\n\t\t}\n\t\ttop10 = make([]string, 0, n)\n\t\tfor i := 0; i < n; i++ {\n\t\t\ttop10 = append(top10, fmt.Sprintf(\"%s(%d)\", pairs[i].key, pairs[i].count))\n\t\t}\n\t\treturn\n\t}\n\taDistinct, aTop := explain(s.metrics.airlineNotFound)\n\tif aDistinct > 0 {\n\t\tlog.Debug(ctx, \"Airlines not found summary\",\n\t\t\tzap.Int(\"distinct_airlines_not_found_count\", aDistinct),", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsEnrichService).logMetricsIfNeeded/complete", "package": "core", "node_kind": "method", "receiver": "s *FlightsEnrichService", "function_name": "", "method_name": "logMetricsIfNeeded", "type_name": "FlightsEnrichService", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["logMetricsIfNeeded"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsEnrichService).logMetricsIfNeeded/complete"], "all_roles": ["complete"], "all_receivers": ["s *FlightsEnrichService"], "all_type_names": ["FlightsEnrichService"], "all_type_kinds": [null], "all_start_bytes": [4860], "all_end_bytes": [6830], "primary_index": 0, "all_receivers_normalized": ["(*FlightsEnrichService)"], "imports_used_minimal": ["context", "fmt", "go.impalastudios.com/log", "go.uber.org/zap", "sort", "time"], "symbols_referenced_strict": ["Context", "Debug", "FlightsEnrichService", "Int", "Minute", "Now", "Slice", "Sprintf", "Strings", "Sub", "context.Context", "fmt.Sprintf", "log.Debug", "now.Sub", "s.metrics", "sort.Slice", "time.Minute", "time.Now", "zap.Int", "zap.Strings"], "header_context_minimal": "package core\nimport (\n    \"context\"\n    \"fmt\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n    \"sort\"\n)\n// receiver: s *FlightsEnrichService", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/flights_enrich_service.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/errors.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/errors.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/errors.go", "rel_path": "internal/core/errors.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package core\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "core"], "doc_head": "package core", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "core", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package core", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/errors.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/errors.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/errors.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/errors.go", "rel_path": "internal/core/errors.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 9, "text": "import \"github.com/cockroachdb/errors\"\n\nvar (\n\tErrFlightNotFound = errors.New(\"flight not found\")\n\tErrCacheMiss      = errors.New(\"cache miss\")\n)\n", "n_tokens": 37, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [3, 9], "def_symbols": [], "symbols": ["import", "github", "com", "cockroachdb", "errors", "var", "ErrFlightNotFound", "New", "flight", "not", "found", "ErrCacheMiss", "cache", "miss"], "doc_head": "import \"github.com/cockroachdb/errors\"\nvar (\n\tErrFlightNotFound = errors.New(\"flight not found\")\n\tErrCacheMiss      = errors.New(\"cache miss\")\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:block", "package": "core", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["github.com/cockroachdb/errors"], "symbols_referenced_strict": ["ErrCacheMiss", "ErrFlightNotFound", "New", "errors.New"], "header_context_minimal": "package core\nimport \"github.com/cockroachdb/errors\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/errors.go#1"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 8, "text": "// Code generated by MockGen. DO NOT EDIT.\n// Source: service.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=service.go -destination=mocks/service_mocks.go -package=mocks\n//\n", "n_tokens": 49, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 8], "def_symbols": [], "symbols": ["Code", "generated", "MockGen", "NOT", "EDIT", "Source", "service", "Generated", "this", "command", "mockgen", "source", "destination", "mocks", "service_mocks", "package"], "doc_head": "// Code generated by MockGen. DO NOT EDIT.\n// Source: service.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=service.go -destination=mocks/service_mocks.go -package=mocks\n//", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 9, "end_line": 11, "text": "// Package mocks is a generated GoMock package.\npackage mocks\n", "n_tokens": 13, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 11], "def_symbols": [], "symbols": ["Package", "mocks", "generated", "GoMock", "package"], "doc_head": "// Package mocks is a generated GoMock package.\npackage mocks", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 19, "text": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)\n", "n_tokens": 42, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 19], "def_symbols": [], "symbols": ["import", "context", "reflect", "core", "impalastudios", "com", "aviation", "liveflights", "internal", "gomock", "uber", "org", "mock"], "doc_head": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 20, "end_line": 26, "text": "// MockliveFlightsRepository is a mock of liveFlightsRepository interface.\ntype MockliveFlightsRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockliveFlightsRepositoryMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 48, "primary_symbol": "MockliveFlightsRepository", "primary_kind": "type", "primary_span": [20, 26], "def_symbols": [], "symbols": ["MockliveFlightsRepository", "mock", "liveFlightsRepository", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockliveFlightsRepositoryMockRecorder", "isgomock"], "doc_head": "// MockliveFlightsRepository is a mock of liveFlightsRepository interface.\ntype MockliveFlightsRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockliveFlightsRepositoryMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockliveFlightsRepository (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockliveFlightsRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockliveFlightsRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockliveFlightsRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockliveFlightsRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [478], "all_end_bytes": [611], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockliveFlightsRepository", "MockliveFlightsRepositoryMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 27, "end_line": 31, "text": "// MockliveFlightsRepositoryMockRecorder is the mock recorder for MockliveFlightsRepository.\ntype MockliveFlightsRepositoryMockRecorder struct {\n\tmock *MockliveFlightsRepository\n}\n", "n_tokens": 38, "primary_symbol": "MockliveFlightsRepositoryMockRecorder", "primary_kind": "type", "primary_span": [27, 31], "def_symbols": [], "symbols": ["MockliveFlightsRepositoryMockRecorder", "the", "mock", "recorder", "for", "MockliveFlightsRepository", "type", "struct"], "doc_head": "// MockliveFlightsRepositoryMockRecorder is the mock recorder for MockliveFlightsRepository.\ntype MockliveFlightsRepositoryMockRecorder struct {\n\tmock *MockliveFlightsRepository\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockliveFlightsRepositoryMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockliveFlightsRepositoryMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockliveFlightsRepositoryMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockliveFlightsRepositoryMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockliveFlightsRepositoryMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [711], "all_end_bytes": [792], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockliveFlightsRepository", "MockliveFlightsRepositoryMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 32, "end_line": 38, "text": "// NewMockliveFlightsRepository creates a new mock instance.\nfunc NewMockliveFlightsRepository(ctrl *gomock.Controller) *MockliveFlightsRepository {\n\tmock := &MockliveFlightsRepository{ctrl: ctrl}\n\tmock.recorder = &MockliveFlightsRepositoryMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 65, "primary_symbol": "NewMockliveFlightsRepository", "primary_kind": "function", "primary_span": [33, 38], "def_symbols": [], "symbols": ["NewMockliveFlightsRepository", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockliveFlightsRepository", "recorder", "MockliveFlightsRepositoryMockRecorder", "return"], "doc_head": "// NewMockliveFlightsRepository creates a new mock instance.\nfunc NewMockliveFlightsRepository(ctrl *gomock.Controller) *MockliveFlightsRepository {\n\tmock := &MockliveFlightsRepository{ctrl: ctrl}\n\tmock.recorder = &MockliveFlightsRepositoryMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockliveFlightsRepository/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockliveFlightsRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockliveFlightsRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockliveFlightsRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [855], "all_end_bytes": [1067], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockliveFlightsRepository", "MockliveFlightsRepositoryMockRecorder", "NewMockliveFlightsRepository", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 39, "end_line": 43, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockliveFlightsRepository) EXPECT() *MockliveFlightsRepositoryMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 41, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [40, 43], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockliveFlightsRepository", "MockliveFlightsRepositoryMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockliveFlightsRepository) EXPECT() *MockliveFlightsRepositoryMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockliveFlightsRepository).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockliveFlightsRepository", "function_name": "", "method_name": "EXPECT", "type_name": "MockliveFlightsRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockliveFlightsRepository).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockliveFlightsRepository"], "all_type_names": ["MockliveFlightsRepository"], "all_type_kinds": [null], "all_start_bytes": [1146], "all_end_bytes": [1252], "primary_index": 0, "all_receivers_normalized": ["(*MockliveFlightsRepository)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockliveFlightsRepository", "MockliveFlightsRepositoryMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockliveFlightsRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 44, "end_line": 52, "text": "// Filter mocks base method.\nfunc (m *MockliveFlightsRepository) Filter(arg0 context.Context, arg1 *core.FlightsWithin) ([]*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Filter\", arg0, arg1)\n\tret0, _ := ret[0].([]*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 94, "primary_symbol": "Filter", "primary_kind": "method", "primary_span": [45, 52], "def_symbols": [], "symbols": ["Filter", "mocks", "base", "method", "func", "MockliveFlightsRepository", "arg0", "context", "Context", "arg1", "core", "FlightsWithin", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// Filter mocks base method.\nfunc (m *MockliveFlightsRepository) Filter(arg0 context.Context, arg1 *core.FlightsWithin) ([]*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Filter\", arg0, arg1)\n\tret0, _ := ret[0].([]*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockliveFlightsRepository).Filter/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockliveFlightsRepository", "function_name": "", "method_name": "Filter", "type_name": "MockliveFlightsRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Filter"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockliveFlightsRepository).Filter/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockliveFlightsRepository"], "all_type_names": ["MockliveFlightsRepository"], "all_type_kinds": [null], "all_start_bytes": [1283], "all_end_bytes": [1555], "primary_index": 0, "all_receivers_normalized": ["(*MockliveFlightsRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "Filter", "FlightsWithin", "Helper", "LiveFlight", "MockliveFlightsRepository", "T.Helper", "context.Context", "core.FlightsWithin", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockliveFlightsRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 53, "end_line": 58, "text": "// Filter indicates an expected call of Filter.\nfunc (mr *MockliveFlightsRepositoryMockRecorder) Filter(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Filter\", reflect.TypeOf((*MockliveFlightsRepository)(nil).Filter), arg0, arg1)\n}\n", "n_tokens": 77, "primary_symbol": "Filter", "primary_kind": "method", "primary_span": [54, 58], "def_symbols": [], "symbols": ["Filter", "indicates", "expected", "call", "func", "MockliveFlightsRepositoryMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockliveFlightsRepository", "nil"], "doc_head": "// Filter indicates an expected call of Filter.\nfunc (mr *MockliveFlightsRepositoryMockRecorder) Filter(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Filter\", reflect.TypeOf((*MockliveFlightsRepository)(nil).Filter), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockliveFlightsRepositoryMockRecorder).Filter/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockliveFlightsRepositoryMockRecorder", "function_name": "", "method_name": "Filter", "type_name": "MockliveFlightsRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Filter"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockliveFlightsRepositoryMockRecorder).Filter/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockliveFlightsRepositoryMockRecorder"], "all_type_names": ["MockliveFlightsRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1605], "all_end_bytes": [1853], "primary_index": 0, "all_receivers_normalized": ["(*MockliveFlightsRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Filter", "Helper", "MockliveFlightsRepository", "MockliveFlightsRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockliveFlightsRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 59, "end_line": 67, "text": "// GetFlightDetailsByFlightID mocks base method.\nfunc (m *MockliveFlightsRepository) GetFlightDetailsByFlightID(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetFlightDetailsByFlightID\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 104, "primary_symbol": "GetFlightDetailsByFlightID", "primary_kind": "method", "primary_span": [60, 67], "def_symbols": [], "symbols": ["GetFlightDetailsByFlightID", "mocks", "base", "method", "func", "MockliveFlightsRepository", "arg0", "context", "Context", "arg1", "string", "core", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetFlightDetailsByFlightID mocks base method.\nfunc (m *MockliveFlightsRepository) GetFlightDetailsByFlightID(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetFlightDetailsByFlightID\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockliveFlightsRepository).GetFlightDetailsByFlightID/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockliveFlightsRepository", "function_name": "", "method_name": "GetFlightDetailsByFlightID", "type_name": "MockliveFlightsRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFlightDetailsByFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockliveFlightsRepository).GetFlightDetailsByFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockliveFlightsRepository"], "all_type_names": ["MockliveFlightsRepository"], "all_type_kinds": [null], "all_start_bytes": [1904], "all_end_bytes": [2199], "primary_index": 0, "all_receivers_normalized": ["(*MockliveFlightsRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "GetFlightDetailsByFlightID", "Helper", "LiveFlight", "MockliveFlightsRepository", "T.Helper", "context.Context", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockliveFlightsRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 68, "end_line": 73, "text": "// GetFlightDetailsByFlightID indicates an expected call of GetFlightDetailsByFlightID.\nfunc (mr *MockliveFlightsRepositoryMockRecorder) GetFlightDetailsByFlightID(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetFlightDetailsByFlightID\", reflect.TypeOf((*MockliveFlightsRepository)(nil).GetFlightDetailsByFlightID), arg0, arg1)\n}\n", "n_tokens": 102, "primary_symbol": "GetFlightDetailsByFlightID", "primary_kind": "method", "primary_span": [69, 73], "def_symbols": [], "symbols": ["GetFlightDetailsByFlightID", "indicates", "expected", "call", "func", "MockliveFlightsRepositoryMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockliveFlightsRepository", "nil"], "doc_head": "// GetFlightDetailsByFlightID indicates an expected call of GetFlightDetailsByFlightID.\nfunc (mr *MockliveFlightsRepositoryMockRecorder) GetFlightDetailsByFlightID(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetFlightDetailsByFlightID\", reflect.TypeOf((*MockliveFlightsRepository)(nil).GetFlightDetailsByFlightID), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockliveFlightsRepositoryMockRecorder).GetFlightDetailsByFlightID/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockliveFlightsRepositoryMockRecorder", "function_name": "", "method_name": "GetFlightDetailsByFlightID", "type_name": "MockliveFlightsRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFlightDetailsByFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockliveFlightsRepositoryMockRecorder).GetFlightDetailsByFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockliveFlightsRepositoryMockRecorder"], "all_type_names": ["MockliveFlightsRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [2289], "all_end_bytes": [2597], "primary_index": 0, "all_receivers_normalized": ["(*MockliveFlightsRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetFlightDetailsByFlightID", "Helper", "MockliveFlightsRepository", "MockliveFlightsRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockliveFlightsRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 74, "end_line": 82, "text": "// GetFlightDetailsByLiveFlightID mocks base method.\nfunc (m *MockliveFlightsRepository) GetFlightDetailsByLiveFlightID(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetFlightDetailsByLiveFlightID\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 107, "primary_symbol": "GetFlightDetailsByLiveFlightID", "primary_kind": "method", "primary_span": [75, 82], "def_symbols": [], "symbols": ["GetFlightDetailsByLiveFlightID", "mocks", "base", "method", "func", "MockliveFlightsRepository", "arg0", "context", "Context", "arg1", "string", "core", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetFlightDetailsByLiveFlightID mocks base method.\nfunc (m *MockliveFlightsRepository) GetFlightDetailsByLiveFlightID(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetFlightDetailsByLiveFlightID\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockliveFlightsRepository).GetFlightDetailsByLiveFlightID/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockliveFlightsRepository", "function_name": "", "method_name": "GetFlightDetailsByLiveFlightID", "type_name": "MockliveFlightsRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFlightDetailsByLiveFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockliveFlightsRepository).GetFlightDetailsByLiveFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockliveFlightsRepository"], "all_type_names": ["MockliveFlightsRepository"], "all_type_kinds": [null], "all_start_bytes": [2652], "all_end_bytes": [2955], "primary_index": 0, "all_receivers_normalized": ["(*MockliveFlightsRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "GetFlightDetailsByLiveFlightID", "Helper", "LiveFlight", "MockliveFlightsRepository", "T.Helper", "context.Context", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockliveFlightsRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 83, "end_line": 88, "text": "// GetFlightDetailsByLiveFlightID indicates an expected call of GetFlightDetailsByLiveFlightID.\nfunc (mr *MockliveFlightsRepositoryMockRecorder) GetFlightDetailsByLiveFlightID(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetFlightDetailsByLiveFlightID\", reflect.TypeOf((*MockliveFlightsRepository)(nil).GetFlightDetailsByLiveFlightID), arg0, arg1)\n}\n", "n_tokens": 107, "primary_symbol": "GetFlightDetailsByLiveFlightID", "primary_kind": "method", "primary_span": [84, 88], "def_symbols": [], "symbols": ["GetFlightDetailsByLiveFlightID", "indicates", "expected", "call", "func", "MockliveFlightsRepositoryMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockliveFlightsRepository", "nil"], "doc_head": "// GetFlightDetailsByLiveFlightID indicates an expected call of GetFlightDetailsByLiveFlightID.\nfunc (mr *MockliveFlightsRepositoryMockRecorder) GetFlightDetailsByLiveFlightID(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetFlightDetailsByLiveFlightID\", reflect.TypeOf((*MockliveFlightsRepository)(nil).GetFlightDetailsByLiveFlightID), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockliveFlightsRepositoryMockRecorder).GetFlightDetailsByLiveFlightID/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockliveFlightsRepositoryMockRecorder", "function_name": "", "method_name": "GetFlightDetailsByLiveFlightID", "type_name": "MockliveFlightsRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFlightDetailsByLiveFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockliveFlightsRepositoryMockRecorder).GetFlightDetailsByLiveFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockliveFlightsRepositoryMockRecorder"], "all_type_names": ["MockliveFlightsRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [3053], "all_end_bytes": [3373], "primary_index": 0, "all_receivers_normalized": ["(*MockliveFlightsRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetFlightDetailsByLiveFlightID", "Helper", "MockliveFlightsRepository", "MockliveFlightsRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockliveFlightsRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 89, "end_line": 95, "text": "// MockfilesystemLiveFlightsRepository is a mock of filesystemLiveFlightsRepository interface.\ntype MockfilesystemLiveFlightsRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockfilesystemLiveFlightsRepositoryMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 52, "primary_symbol": "MockfilesystemLiveFlightsRepository", "primary_kind": "type", "primary_span": [89, 95], "def_symbols": [], "symbols": ["MockfilesystemLiveFlightsRepository", "mock", "filesystemLiveFlightsRepository", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockfilesystemLiveFlightsRepositoryMockRecorder", "isgomock"], "doc_head": "// MockfilesystemLiveFlightsRepository is a mock of filesystemLiveFlightsRepository interface.\ntype MockfilesystemLiveFlightsRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockfilesystemLiveFlightsRepositoryMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockfilesystemLiveFlightsRepository (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockfilesystemLiveFlightsRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockfilesystemLiveFlightsRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockfilesystemLiveFlightsRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockfilesystemLiveFlightsRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [3475], "all_end_bytes": [3628], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockfilesystemLiveFlightsRepository", "MockfilesystemLiveFlightsRepositoryMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 96, "end_line": 100, "text": "// MockfilesystemLiveFlightsRepositoryMockRecorder is the mock recorder for MockfilesystemLiveFlightsRepository.\ntype MockfilesystemLiveFlightsRepositoryMockRecorder struct {\n\tmock *MockfilesystemLiveFlightsRepository\n}\n", "n_tokens": 42, "primary_symbol": "MockfilesystemLiveFlightsRepositoryMockRecorder", "primary_kind": "type", "primary_span": [96, 100], "def_symbols": [], "symbols": ["MockfilesystemLiveFlightsRepositoryMockRecorder", "the", "mock", "recorder", "for", "MockfilesystemLiveFlightsRepository", "type", "struct"], "doc_head": "// MockfilesystemLiveFlightsRepositoryMockRecorder is the mock recorder for MockfilesystemLiveFlightsRepository.\ntype MockfilesystemLiveFlightsRepositoryMockRecorder struct {\n\tmock *MockfilesystemLiveFlightsRepository\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockfilesystemLiveFlightsRepositoryMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockfilesystemLiveFlightsRepositoryMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockfilesystemLiveFlightsRepositoryMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockfilesystemLiveFlightsRepositoryMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockfilesystemLiveFlightsRepositoryMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [3748], "all_end_bytes": [3849], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockfilesystemLiveFlightsRepository", "MockfilesystemLiveFlightsRepositoryMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#14", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#16", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 16, "start_line": 101, "end_line": 107, "text": "// NewMockfilesystemLiveFlightsRepository creates a new mock instance.\nfunc NewMockfilesystemLiveFlightsRepository(ctrl *gomock.Controller) *MockfilesystemLiveFlightsRepository {\n\tmock := &MockfilesystemLiveFlightsRepository{ctrl: ctrl}\n\tmock.recorder = &MockfilesystemLiveFlightsRepositoryMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 70, "primary_symbol": "NewMockfilesystemLiveFlightsRepository", "primary_kind": "function", "primary_span": [102, 107], "def_symbols": [], "symbols": ["NewMockfilesystemLiveFlightsRepository", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockfilesystemLiveFlightsRepository", "recorder", "MockfilesystemLiveFlightsRepositoryMockRecorder", "return"], "doc_head": "// NewMockfilesystemLiveFlightsRepository creates a new mock instance.\nfunc NewMockfilesystemLiveFlightsRepository(ctrl *gomock.Controller) *MockfilesystemLiveFlightsRepository {\n\tmock := &MockfilesystemLiveFlightsRepository{ctrl: ctrl}\n\tmock.recorder = &MockfilesystemLiveFlightsRepositoryMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockfilesystemLiveFlightsRepository/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockfilesystemLiveFlightsRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockfilesystemLiveFlightsRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockfilesystemLiveFlightsRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [3922], "all_end_bytes": [4174], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockfilesystemLiveFlightsRepository", "MockfilesystemLiveFlightsRepositoryMockRecorder", "NewMockfilesystemLiveFlightsRepository", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#15", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#17"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#17", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 17, "start_line": 108, "end_line": 112, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockfilesystemLiveFlightsRepository) EXPECT() *MockfilesystemLiveFlightsRepositoryMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 43, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [109, 112], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockfilesystemLiveFlightsRepository", "MockfilesystemLiveFlightsRepositoryMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockfilesystemLiveFlightsRepository) EXPECT() *MockfilesystemLiveFlightsRepositoryMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockfilesystemLiveFlightsRepository).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockfilesystemLiveFlightsRepository", "function_name": "", "method_name": "EXPECT", "type_name": "MockfilesystemLiveFlightsRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockfilesystemLiveFlightsRepository).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockfilesystemLiveFlightsRepository"], "all_type_names": ["MockfilesystemLiveFlightsRepository"], "all_type_kinds": [null], "all_start_bytes": [4253], "all_end_bytes": [4379], "primary_index": 0, "all_receivers_normalized": ["(*MockfilesystemLiveFlightsRepository)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockfilesystemLiveFlightsRepository", "MockfilesystemLiveFlightsRepositoryMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockfilesystemLiveFlightsRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#16", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#18"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#18", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 18, "start_line": 113, "end_line": 121, "text": "// GetLiveFlight mocks base method.\nfunc (m *MockfilesystemLiveFlightsRepository) GetLiveFlight(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetLiveFlight\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 96, "primary_symbol": "GetLiveFlight", "primary_kind": "method", "primary_span": [114, 121], "def_symbols": [], "symbols": ["GetLiveFlight", "mocks", "base", "method", "func", "MockfilesystemLiveFlightsRepository", "arg0", "context", "Context", "arg1", "string", "core", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetLiveFlight mocks base method.\nfunc (m *MockfilesystemLiveFlightsRepository) GetLiveFlight(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetLiveFlight\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockfilesystemLiveFlightsRepository).GetLiveFlight/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockfilesystemLiveFlightsRepository", "function_name": "", "method_name": "GetLiveFlight", "type_name": "MockfilesystemLiveFlightsRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLiveFlight"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockfilesystemLiveFlightsRepository).GetLiveFlight/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockfilesystemLiveFlightsRepository"], "all_type_names": ["MockfilesystemLiveFlightsRepository"], "all_type_kinds": [null], "all_start_bytes": [4417], "all_end_bytes": [4696], "primary_index": 0, "all_receivers_normalized": ["(*MockfilesystemLiveFlightsRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "GetLiveFlight", "Helper", "LiveFlight", "MockfilesystemLiveFlightsRepository", "T.Helper", "context.Context", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockfilesystemLiveFlightsRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#17", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#19"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#19", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 19, "start_line": 122, "end_line": 127, "text": "// GetLiveFlight indicates an expected call of GetLiveFlight.\nfunc (mr *MockfilesystemLiveFlightsRepositoryMockRecorder) GetLiveFlight(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetLiveFlight\", reflect.TypeOf((*MockfilesystemLiveFlightsRepository)(nil).GetLiveFlight), arg0, arg1)\n}\n", "n_tokens": 89, "primary_symbol": "GetLiveFlight", "primary_kind": "method", "primary_span": [123, 127], "def_symbols": [], "symbols": ["GetLiveFlight", "indicates", "expected", "call", "func", "MockfilesystemLiveFlightsRepositoryMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockfilesystemLiveFlightsRepository", "nil"], "doc_head": "// GetLiveFlight indicates an expected call of GetLiveFlight.\nfunc (mr *MockfilesystemLiveFlightsRepositoryMockRecorder) GetLiveFlight(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetLiveFlight\", reflect.TypeOf((*MockfilesystemLiveFlightsRepository)(nil).GetLiveFlight), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockfilesystemLiveFlightsRepositoryMockRecorder).GetLiveFlight/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockfilesystemLiveFlightsRepositoryMockRecorder", "function_name": "", "method_name": "GetLiveFlight", "type_name": "MockfilesystemLiveFlightsRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLiveFlight"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockfilesystemLiveFlightsRepositoryMockRecorder).GetLiveFlight/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockfilesystemLiveFlightsRepositoryMockRecorder"], "all_type_names": ["MockfilesystemLiveFlightsRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [4760], "all_end_bytes": [5049], "primary_index": 0, "all_receivers_normalized": ["(*MockfilesystemLiveFlightsRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetLiveFlight", "Helper", "MockfilesystemLiveFlightsRepository", "MockfilesystemLiveFlightsRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockfilesystemLiveFlightsRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#18", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#20"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#20", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 20, "start_line": 128, "end_line": 135, "text": "// SaveLiveFlight mocks base method.\nfunc (m *MockfilesystemLiveFlightsRepository) SaveLiveFlight(arg0 context.Context, arg1 string, arg2 *core.LiveFlight) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"SaveLiveFlight\", arg0, arg1, arg2)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 83, "primary_symbol": "SaveLiveFlight", "primary_kind": "method", "primary_span": [129, 135], "def_symbols": [], "symbols": ["SaveLiveFlight", "mocks", "base", "method", "func", "MockfilesystemLiveFlightsRepository", "arg0", "context", "Context", "arg1", "string", "arg2", "core", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// SaveLiveFlight mocks base method.\nfunc (m *MockfilesystemLiveFlightsRepository) SaveLiveFlight(arg0 context.Context, arg1 string, arg2 *core.LiveFlight) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"SaveLiveFlight\", arg0, arg1, arg2)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockfilesystemLiveFlightsRepository).SaveLiveFlight/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockfilesystemLiveFlightsRepository", "function_name": "", "method_name": "SaveLiveFlight", "type_name": "MockfilesystemLiveFlightsRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["SaveLiveFlight"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockfilesystemLiveFlightsRepository).SaveLiveFlight/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockfilesystemLiveFlightsRepository"], "all_type_names": ["MockfilesystemLiveFlightsRepository"], "all_type_kinds": [null], "all_start_bytes": [5088], "all_end_bytes": [5334], "primary_index": 0, "all_receivers_normalized": ["(*MockfilesystemLiveFlightsRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "Helper", "LiveFlight", "MockfilesystemLiveFlightsRepository", "SaveLiveFlight", "T.Helper", "context.Context", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockfilesystemLiveFlightsRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#19", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#21"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#21", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go", "rel_path": "internal/core/mocks/service_mocks.go", "ext": "go", "language": "go", "chunk_number": 21, "start_line": 136, "end_line": 141, "text": "// SaveLiveFlight indicates an expected call of SaveLiveFlight.\nfunc (mr *MockfilesystemLiveFlightsRepositoryMockRecorder) SaveLiveFlight(arg0, arg1, arg2 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"SaveLiveFlight\", reflect.TypeOf((*MockfilesystemLiveFlightsRepository)(nil).SaveLiveFlight), arg0, arg1, arg2)\n}\n", "n_tokens": 95, "primary_symbol": "SaveLiveFlight", "primary_kind": "method", "primary_span": [137, 141], "def_symbols": [], "symbols": ["SaveLiveFlight", "indicates", "expected", "call", "func", "MockfilesystemLiveFlightsRepositoryMockRecorder", "arg0", "arg1", "arg2", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockfilesystemLiveFlightsRepository", "nil"], "doc_head": "// SaveLiveFlight indicates an expected call of SaveLiveFlight.\nfunc (mr *MockfilesystemLiveFlightsRepositoryMockRecorder) SaveLiveFlight(arg0, arg1, arg2 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"SaveLiveFlight\", reflect.TypeOf((*MockfilesystemLiveFlightsRepository)(nil).SaveLiveFlight), arg0, arg1, arg2)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockfilesystemLiveFlightsRepositoryMockRecorder).SaveLiveFlight/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockfilesystemLiveFlightsRepositoryMockRecorder", "function_name": "", "method_name": "SaveLiveFlight", "type_name": "MockfilesystemLiveFlightsRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["SaveLiveFlight"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockfilesystemLiveFlightsRepositoryMockRecorder).SaveLiveFlight/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockfilesystemLiveFlightsRepositoryMockRecorder"], "all_type_names": ["MockfilesystemLiveFlightsRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [5400], "all_end_bytes": [5704], "primary_index": 0, "all_receivers_normalized": ["(*MockfilesystemLiveFlightsRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Helper", "MockfilesystemLiveFlightsRepository", "MockfilesystemLiveFlightsRepositoryMockRecorder", "RecordCallWithMethodType", "SaveLiveFlight", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockfilesystemLiveFlightsRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/service_mocks.go#20"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 8, "text": "// Code generated by MockGen. DO NOT EDIT.\n// Source: flights_ingest_service.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=flights_ingest_service.go -destination=mocks/flights_ingest_service_mocks.go -package=mocks\n//\n", "n_tokens": 60, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 8], "def_symbols": [], "symbols": ["Code", "generated", "MockGen", "NOT", "EDIT", "Source", "flights_ingest_service", "Generated", "this", "command", "mockgen", "source", "destination", "mocks", "flights_ingest_service_mocks", "package"], "doc_head": "// Code generated by MockGen. DO NOT EDIT.\n// Source: flights_ingest_service.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=flights_ingest_service.go -destination=mocks/flights_ingest_service_mocks.go -package=mocks\n//", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 9, "end_line": 11, "text": "// Package mocks is a generated GoMock package.\npackage mocks\n", "n_tokens": 13, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 11], "def_symbols": [], "symbols": ["Package", "mocks", "generated", "GoMock", "package"], "doc_head": "// Package mocks is a generated GoMock package.\npackage mocks", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 19, "text": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)\n", "n_tokens": 42, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 19], "def_symbols": [], "symbols": ["import", "context", "reflect", "core", "impalastudios", "com", "aviation", "liveflights", "internal", "gomock", "uber", "org", "mock"], "doc_head": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 20, "end_line": 26, "text": "// MockflightUpdatesRepository is a mock of flightUpdatesRepository interface.\ntype MockflightUpdatesRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockflightUpdatesRepositoryMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 44, "primary_symbol": "MockflightUpdatesRepository", "primary_kind": "type", "primary_span": [20, 26], "def_symbols": [], "symbols": ["MockflightUpdatesRepository", "mock", "flightUpdatesRepository", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockflightUpdatesRepositoryMockRecorder", "isgomock"], "doc_head": "// MockflightUpdatesRepository is a mock of flightUpdatesRepository interface.\ntype MockflightUpdatesRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockflightUpdatesRepositoryMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockflightUpdatesRepository (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockflightUpdatesRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockflightUpdatesRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockflightUpdatesRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockflightUpdatesRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [527], "all_end_bytes": [664], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockflightUpdatesRepository", "MockflightUpdatesRepositoryMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 27, "end_line": 31, "text": "// MockflightUpdatesRepositoryMockRecorder is the mock recorder for MockflightUpdatesRepository.\ntype MockflightUpdatesRepositoryMockRecorder struct {\n\tmock *MockflightUpdatesRepository\n}\n", "n_tokens": 34, "primary_symbol": "MockflightUpdatesRepositoryMockRecorder", "primary_kind": "type", "primary_span": [27, 31], "def_symbols": [], "symbols": ["MockflightUpdatesRepositoryMockRecorder", "the", "mock", "recorder", "for", "MockflightUpdatesRepository", "type", "struct"], "doc_head": "// MockflightUpdatesRepositoryMockRecorder is the mock recorder for MockflightUpdatesRepository.\ntype MockflightUpdatesRepositoryMockRecorder struct {\n\tmock *MockflightUpdatesRepository\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockflightUpdatesRepositoryMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockflightUpdatesRepositoryMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockflightUpdatesRepositoryMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockflightUpdatesRepositoryMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockflightUpdatesRepositoryMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [768], "all_end_bytes": [853], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockflightUpdatesRepository", "MockflightUpdatesRepositoryMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 32, "end_line": 38, "text": "// NewMockflightUpdatesRepository creates a new mock instance.\nfunc NewMockflightUpdatesRepository(ctrl *gomock.Controller) *MockflightUpdatesRepository {\n\tmock := &MockflightUpdatesRepository{ctrl: ctrl}\n\tmock.recorder = &MockflightUpdatesRepositoryMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 60, "primary_symbol": "NewMockflightUpdatesRepository", "primary_kind": "function", "primary_span": [33, 38], "def_symbols": [], "symbols": ["NewMockflightUpdatesRepository", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockflightUpdatesRepository", "recorder", "MockflightUpdatesRepositoryMockRecorder", "return"], "doc_head": "// NewMockflightUpdatesRepository creates a new mock instance.\nfunc NewMockflightUpdatesRepository(ctrl *gomock.Controller) *MockflightUpdatesRepository {\n\tmock := &MockflightUpdatesRepository{ctrl: ctrl}\n\tmock.recorder = &MockflightUpdatesRepositoryMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockflightUpdatesRepository/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockflightUpdatesRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockflightUpdatesRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockflightUpdatesRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [918], "all_end_bytes": [1138], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockflightUpdatesRepository", "MockflightUpdatesRepositoryMockRecorder", "NewMockflightUpdatesRepository", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 39, "end_line": 43, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockflightUpdatesRepository) EXPECT() *MockflightUpdatesRepositoryMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 39, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [40, 43], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockflightUpdatesRepository", "MockflightUpdatesRepositoryMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockflightUpdatesRepository) EXPECT() *MockflightUpdatesRepositoryMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightUpdatesRepository).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockflightUpdatesRepository", "function_name": "", "method_name": "EXPECT", "type_name": "MockflightUpdatesRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightUpdatesRepository).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockflightUpdatesRepository"], "all_type_names": ["MockflightUpdatesRepository"], "all_type_kinds": [null], "all_start_bytes": [1217], "all_end_bytes": [1327], "primary_index": 0, "all_receivers_normalized": ["(*MockflightUpdatesRepository)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockflightUpdatesRepository", "MockflightUpdatesRepositoryMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockflightUpdatesRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 44, "end_line": 51, "text": "// UpsertMany mocks base method.\nfunc (m *MockflightUpdatesRepository) UpsertMany(arg0 context.Context, arg1 []*core.LiveFlightUpdate) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"UpsertMany\", arg0, arg1)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 75, "primary_symbol": "UpsertMany", "primary_kind": "method", "primary_span": [45, 51], "def_symbols": [], "symbols": ["UpsertMany", "mocks", "base", "method", "func", "MockflightUpdatesRepository", "arg0", "context", "Context", "arg1", "core", "LiveFlightUpdate", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// UpsertMany mocks base method.\nfunc (m *MockflightUpdatesRepository) UpsertMany(arg0 context.Context, arg1 []*core.LiveFlightUpdate) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"UpsertMany\", arg0, arg1)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightUpdatesRepository).UpsertMany/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockflightUpdatesRepository", "function_name": "", "method_name": "UpsertMany", "type_name": "MockflightUpdatesRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["UpsertMany"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightUpdatesRepository).UpsertMany/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockflightUpdatesRepository"], "all_type_names": ["MockflightUpdatesRepository"], "all_type_kinds": [null], "all_start_bytes": [1362], "all_end_bytes": [1581], "primary_index": 0, "all_receivers_normalized": ["(*MockflightUpdatesRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "Helper", "LiveFlightUpdate", "MockflightUpdatesRepository", "T.Helper", "UpsertMany", "context.Context", "core.LiveFlightUpdate", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockflightUpdatesRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 52, "end_line": 57, "text": "// UpsertMany indicates an expected call of UpsertMany.\nfunc (mr *MockflightUpdatesRepositoryMockRecorder) UpsertMany(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"UpsertMany\", reflect.TypeOf((*MockflightUpdatesRepository)(nil).UpsertMany), arg0, arg1)\n}\n", "n_tokens": 85, "primary_symbol": "UpsertMany", "primary_kind": "method", "primary_span": [53, 57], "def_symbols": [], "symbols": ["UpsertMany", "indicates", "expected", "call", "func", "MockflightUpdatesRepositoryMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockflightUpdatesRepository", "nil"], "doc_head": "// UpsertMany indicates an expected call of UpsertMany.\nfunc (mr *MockflightUpdatesRepositoryMockRecorder) UpsertMany(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"UpsertMany\", reflect.TypeOf((*MockflightUpdatesRepository)(nil).UpsertMany), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightUpdatesRepositoryMockRecorder).UpsertMany/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockflightUpdatesRepositoryMockRecorder", "function_name": "", "method_name": "UpsertMany", "type_name": "MockflightUpdatesRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["UpsertMany"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightUpdatesRepositoryMockRecorder).UpsertMany/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockflightUpdatesRepositoryMockRecorder"], "all_type_names": ["MockflightUpdatesRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1639], "all_end_bytes": [1903], "primary_index": 0, "all_receivers_normalized": ["(*MockflightUpdatesRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Helper", "MockflightUpdatesRepository", "MockflightUpdatesRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "UpsertMany", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockflightUpdatesRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 58, "end_line": 64, "text": "// MockrealtimeFlightUpdatesClient is a mock of realtimeFlightUpdatesClient interface.\ntype MockrealtimeFlightUpdatesClient struct {\n\tctrl     *gomock.Controller\n\trecorder *MockrealtimeFlightUpdatesClientMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 51, "primary_symbol": "MockrealtimeFlightUpdatesClient", "primary_kind": "type", "primary_span": [58, 64], "def_symbols": [], "symbols": ["MockrealtimeFlightUpdatesClient", "mock", "realtimeFlightUpdatesClient", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockrealtimeFlightUpdatesClientMockRecorder", "isgomock"], "doc_head": "// MockrealtimeFlightUpdatesClient is a mock of realtimeFlightUpdatesClient interface.\ntype MockrealtimeFlightUpdatesClient struct {\n\tctrl     *gomock.Controller\n\trecorder *MockrealtimeFlightUpdatesClientMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockrealtimeFlightUpdatesClient (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockrealtimeFlightUpdatesClient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockrealtimeFlightUpdatesClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockrealtimeFlightUpdatesClient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockrealtimeFlightUpdatesClient"], "all_type_kinds": ["struct"], "all_start_bytes": [1997], "all_end_bytes": [2142], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockrealtimeFlightUpdatesClient", "MockrealtimeFlightUpdatesClientMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 65, "end_line": 69, "text": "// MockrealtimeFlightUpdatesClientMockRecorder is the mock recorder for MockrealtimeFlightUpdatesClient.\ntype MockrealtimeFlightUpdatesClientMockRecorder struct {\n\tmock *MockrealtimeFlightUpdatesClient\n}\n", "n_tokens": 42, "primary_symbol": "MockrealtimeFlightUpdatesClientMockRecorder", "primary_kind": "type", "primary_span": [65, 69], "def_symbols": [], "symbols": ["MockrealtimeFlightUpdatesClientMockRecorder", "the", "mock", "recorder", "for", "MockrealtimeFlightUpdatesClient", "type", "struct"], "doc_head": "// MockrealtimeFlightUpdatesClientMockRecorder is the mock recorder for MockrealtimeFlightUpdatesClient.\ntype MockrealtimeFlightUpdatesClientMockRecorder struct {\n\tmock *MockrealtimeFlightUpdatesClient\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockrealtimeFlightUpdatesClientMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockrealtimeFlightUpdatesClientMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockrealtimeFlightUpdatesClientMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockrealtimeFlightUpdatesClientMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockrealtimeFlightUpdatesClientMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [2254], "all_end_bytes": [2347], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockrealtimeFlightUpdatesClient", "MockrealtimeFlightUpdatesClientMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 70, "end_line": 76, "text": "// NewMockrealtimeFlightUpdatesClient creates a new mock instance.\nfunc NewMockrealtimeFlightUpdatesClient(ctrl *gomock.Controller) *MockrealtimeFlightUpdatesClient {\n\tmock := &MockrealtimeFlightUpdatesClient{ctrl: ctrl}\n\tmock.recorder = &MockrealtimeFlightUpdatesClientMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 70, "primary_symbol": "NewMockrealtimeFlightUpdatesClient", "primary_kind": "function", "primary_span": [71, 76], "def_symbols": [], "symbols": ["NewMockrealtimeFlightUpdatesClient", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockrealtimeFlightUpdatesClient", "recorder", "MockrealtimeFlightUpdatesClientMockRecorder", "return"], "doc_head": "// NewMockrealtimeFlightUpdatesClient creates a new mock instance.\nfunc NewMockrealtimeFlightUpdatesClient(ctrl *gomock.Controller) *MockrealtimeFlightUpdatesClient {\n\tmock := &MockrealtimeFlightUpdatesClient{ctrl: ctrl}\n\tmock.recorder = &MockrealtimeFlightUpdatesClientMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockrealtimeFlightUpdatesClient/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockrealtimeFlightUpdatesClient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockrealtimeFlightUpdatesClient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockrealtimeFlightUpdatesClient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2416], "all_end_bytes": [2652], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockrealtimeFlightUpdatesClient", "MockrealtimeFlightUpdatesClientMockRecorder", "NewMockrealtimeFlightUpdatesClient", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 77, "end_line": 81, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockrealtimeFlightUpdatesClient) EXPECT() *MockrealtimeFlightUpdatesClientMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 43, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [78, 81], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockrealtimeFlightUpdatesClient", "MockrealtimeFlightUpdatesClientMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockrealtimeFlightUpdatesClient) EXPECT() *MockrealtimeFlightUpdatesClientMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockrealtimeFlightUpdatesClient).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockrealtimeFlightUpdatesClient", "function_name": "", "method_name": "EXPECT", "type_name": "MockrealtimeFlightUpdatesClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockrealtimeFlightUpdatesClient).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockrealtimeFlightUpdatesClient"], "all_type_names": ["MockrealtimeFlightUpdatesClient"], "all_type_kinds": [null], "all_start_bytes": [2731], "all_end_bytes": [2849], "primary_index": 0, "all_receivers_normalized": ["(*MockrealtimeFlightUpdatesClient)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockrealtimeFlightUpdatesClient", "MockrealtimeFlightUpdatesClientMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockrealtimeFlightUpdatesClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 82, "end_line": 89, "text": "// Read mocks base method.\nfunc (m *MockrealtimeFlightUpdatesClient) Read(arg0 context.Context, arg1 chan<- core.LiveFlightUpdate) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Read\", arg0, arg1)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 72, "primary_symbol": "Read", "primary_kind": "method", "primary_span": [83, 89], "def_symbols": [], "symbols": ["Read", "mocks", "base", "method", "func", "MockrealtimeFlightUpdatesClient", "arg0", "context", "Context", "arg1", "chan", "core", "LiveFlightUpdate", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// Read mocks base method.\nfunc (m *MockrealtimeFlightUpdatesClient) Read(arg0 context.Context, arg1 chan<- core.LiveFlightUpdate) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Read\", arg0, arg1)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockrealtimeFlightUpdatesClient).Read/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockrealtimeFlightUpdatesClient", "function_name": "", "method_name": "Read", "type_name": "MockrealtimeFlightUpdatesClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Read"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockrealtimeFlightUpdatesClient).Read/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockrealtimeFlightUpdatesClient"], "all_type_names": ["MockrealtimeFlightUpdatesClient"], "all_type_kinds": [null], "all_start_bytes": [2878], "all_end_bytes": [3093], "primary_index": 0, "all_receivers_normalized": ["(*MockrealtimeFlightUpdatesClient)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "Helper", "LiveFlightUpdate", "MockrealtimeFlightUpdatesClient", "Read", "T.Helper", "context.Context", "core.LiveFlightUpdate", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockrealtimeFlightUpdatesClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_ingest_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go", "rel_path": "internal/core/mocks/flights_ingest_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 90, "end_line": 95, "text": "// Read indicates an expected call of Read.\nfunc (mr *MockrealtimeFlightUpdatesClientMockRecorder) Read(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Read\", reflect.TypeOf((*MockrealtimeFlightUpdatesClient)(nil).Read), arg0, arg1)\n}\n", "n_tokens": 79, "primary_symbol": "Read", "primary_kind": "method", "primary_span": [91, 95], "def_symbols": [], "symbols": ["Read", "indicates", "expected", "call", "func", "MockrealtimeFlightUpdatesClientMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockrealtimeFlightUpdatesClient", "nil"], "doc_head": "// Read indicates an expected call of Read.\nfunc (mr *MockrealtimeFlightUpdatesClientMockRecorder) Read(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Read\", reflect.TypeOf((*MockrealtimeFlightUpdatesClient)(nil).Read), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockrealtimeFlightUpdatesClientMockRecorder).Read/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockrealtimeFlightUpdatesClientMockRecorder", "function_name": "", "method_name": "Read", "type_name": "MockrealtimeFlightUpdatesClientMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Read"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockrealtimeFlightUpdatesClientMockRecorder).Read/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockrealtimeFlightUpdatesClientMockRecorder"], "all_type_names": ["MockrealtimeFlightUpdatesClientMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [3139], "all_end_bytes": [3393], "primary_index": 0, "all_receivers_normalized": ["(*MockrealtimeFlightUpdatesClientMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Helper", "MockrealtimeFlightUpdatesClient", "MockrealtimeFlightUpdatesClientMockRecorder", "Read", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockrealtimeFlightUpdatesClientMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_ingest_service_mocks.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 8, "text": "// Code generated by MockGen. DO NOT EDIT.\n// Source: flights_enrich_service.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=flights_enrich_service.go -destination=mocks/flights_enrich_service_mocks.go -package=mocks\n//\n", "n_tokens": 60, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 8], "def_symbols": [], "symbols": ["Code", "generated", "MockGen", "NOT", "EDIT", "Source", "flights_enrich_service", "Generated", "this", "command", "mockgen", "source", "destination", "mocks", "flights_enrich_service_mocks", "package"], "doc_head": "// Code generated by MockGen. DO NOT EDIT.\n// Source: flights_enrich_service.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=flights_enrich_service.go -destination=mocks/flights_enrich_service_mocks.go -package=mocks\n//", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 9, "end_line": 11, "text": "// Package mocks is a generated GoMock package.\npackage mocks\n", "n_tokens": 13, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 11], "def_symbols": [], "symbols": ["Package", "mocks", "generated", "GoMock", "package"], "doc_head": "// Package mocks is a generated GoMock package.\npackage mocks", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 19, "text": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)\n", "n_tokens": 42, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 19], "def_symbols": [], "symbols": ["import", "context", "reflect", "core", "impalastudios", "com", "aviation", "liveflights", "internal", "gomock", "uber", "org", "mock"], "doc_head": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 20, "end_line": 26, "text": "// MockairlinesRepository is a mock of airlinesRepository interface.\ntype MockairlinesRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockairlinesRepositoryMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 43, "primary_symbol": "MockairlinesRepository", "primary_kind": "type", "primary_span": [20, 26], "def_symbols": [], "symbols": ["MockairlinesRepository", "mock", "airlinesRepository", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockairlinesRepositoryMockRecorder", "isgomock"], "doc_head": "// MockairlinesRepository is a mock of airlinesRepository interface.\ntype MockairlinesRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockairlinesRepositoryMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockairlinesRepository (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockairlinesRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockairlinesRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockairlinesRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockairlinesRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [517], "all_end_bytes": [644], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockairlinesRepository", "MockairlinesRepositoryMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 27, "end_line": 31, "text": "// MockairlinesRepositoryMockRecorder is the mock recorder for MockairlinesRepository.\ntype MockairlinesRepositoryMockRecorder struct {\n\tmock *MockairlinesRepository\n}\n", "n_tokens": 34, "primary_symbol": "MockairlinesRepositoryMockRecorder", "primary_kind": "type", "primary_span": [27, 31], "def_symbols": [], "symbols": ["MockairlinesRepositoryMockRecorder", "the", "mock", "recorder", "for", "MockairlinesRepository", "type", "struct"], "doc_head": "// MockairlinesRepositoryMockRecorder is the mock recorder for MockairlinesRepository.\ntype MockairlinesRepositoryMockRecorder struct {\n\tmock *MockairlinesRepository\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockairlinesRepositoryMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockairlinesRepositoryMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockairlinesRepositoryMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockairlinesRepositoryMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockairlinesRepositoryMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [738], "all_end_bytes": [813], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockairlinesRepository", "MockairlinesRepositoryMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 32, "end_line": 38, "text": "// NewMockairlinesRepository creates a new mock instance.\nfunc NewMockairlinesRepository(ctrl *gomock.Controller) *MockairlinesRepository {\n\tmock := &MockairlinesRepository{ctrl: ctrl}\n\tmock.recorder = &MockairlinesRepositoryMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 60, "primary_symbol": "NewMockairlinesRepository", "primary_kind": "function", "primary_span": [33, 38], "def_symbols": [], "symbols": ["NewMockairlinesRepository", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockairlinesRepository", "recorder", "MockairlinesRepositoryMockRecorder", "return"], "doc_head": "// NewMockairlinesRepository creates a new mock instance.\nfunc NewMockairlinesRepository(ctrl *gomock.Controller) *MockairlinesRepository {\n\tmock := &MockairlinesRepository{ctrl: ctrl}\n\tmock.recorder = &MockairlinesRepositoryMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockairlinesRepository/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockairlinesRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockairlinesRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockairlinesRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [873], "all_end_bytes": [1073], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockairlinesRepository", "MockairlinesRepositoryMockRecorder", "NewMockairlinesRepository", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 39, "end_line": 43, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockairlinesRepository) EXPECT() *MockairlinesRepositoryMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 39, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [40, 43], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockairlinesRepository", "MockairlinesRepositoryMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockairlinesRepository) EXPECT() *MockairlinesRepositoryMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockairlinesRepository).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockairlinesRepository", "function_name": "", "method_name": "EXPECT", "type_name": "MockairlinesRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockairlinesRepository).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockairlinesRepository"], "all_type_names": ["MockairlinesRepository"], "all_type_kinds": [null], "all_start_bytes": [1152], "all_end_bytes": [1252], "primary_index": 0, "all_receivers_normalized": ["(*MockairlinesRepository)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockairlinesRepository", "MockairlinesRepositoryMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockairlinesRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 44, "end_line": 52, "text": "// GetByDesignator mocks base method.\nfunc (m *MockairlinesRepository) GetByDesignator(arg0 context.Context, arg1 string) (*core.Airline, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetByDesignator\", arg0, arg1)\n\tret0, _ := ret[0].(*core.Airline)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 99, "primary_symbol": "GetByDesignator", "primary_kind": "method", "primary_span": [45, 52], "def_symbols": [], "symbols": ["GetByDesignator", "mocks", "base", "method", "func", "MockairlinesRepository", "arg0", "context", "Context", "arg1", "string", "core", "Airline", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetByDesignator mocks base method.\nfunc (m *MockairlinesRepository) GetByDesignator(arg0 context.Context, arg1 string) (*core.Airline, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetByDesignator\", arg0, arg1)\n\tret0, _ := ret[0].(*core.Airline)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockairlinesRepository).GetByDesignator/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockairlinesRepository", "function_name": "", "method_name": "GetByDesignator", "type_name": "MockairlinesRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockairlinesRepository).GetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockairlinesRepository"], "all_type_names": ["MockairlinesRepository"], "all_type_kinds": [null], "all_start_bytes": [1292], "all_end_bytes": [1556], "primary_index": 0, "all_receivers_normalized": ["(*MockairlinesRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airline", "Call", "Context", "GetByDesignator", "Helper", "MockairlinesRepository", "T.Helper", "context.Context", "core.Airline", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockairlinesRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 53, "end_line": 58, "text": "// GetByDesignator indicates an expected call of GetByDesignator.\nfunc (mr *MockairlinesRepositoryMockRecorder) GetByDesignator(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetByDesignator\", reflect.TypeOf((*MockairlinesRepository)(nil).GetByDesignator), arg0, arg1)\n}\n", "n_tokens": 90, "primary_symbol": "GetByDesignator", "primary_kind": "method", "primary_span": [54, 58], "def_symbols": [], "symbols": ["GetByDesignator", "indicates", "expected", "call", "func", "MockairlinesRepositoryMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockairlinesRepository", "nil"], "doc_head": "// GetByDesignator indicates an expected call of GetByDesignator.\nfunc (mr *MockairlinesRepositoryMockRecorder) GetByDesignator(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetByDesignator\", reflect.TypeOf((*MockairlinesRepository)(nil).GetByDesignator), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockairlinesRepositoryMockRecorder).GetByDesignator/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockairlinesRepositoryMockRecorder", "function_name": "", "method_name": "GetByDesignator", "type_name": "MockairlinesRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockairlinesRepositoryMockRecorder).GetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockairlinesRepositoryMockRecorder"], "all_type_names": ["MockairlinesRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1624], "all_end_bytes": [1893], "primary_index": 0, "all_receivers_normalized": ["(*MockairlinesRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetByDesignator", "Helper", "MockairlinesRepository", "MockairlinesRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockairlinesRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 59, "end_line": 65, "text": "// MockairportsRepository is a mock of airportsRepository interface.\ntype MockairportsRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockairportsRepositoryMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 43, "primary_symbol": "MockairportsRepository", "primary_kind": "type", "primary_span": [59, 65], "def_symbols": [], "symbols": ["MockairportsRepository", "mock", "airportsRepository", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockairportsRepositoryMockRecorder", "isgomock"], "doc_head": "// MockairportsRepository is a mock of airportsRepository interface.\ntype MockairportsRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockairportsRepositoryMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockairportsRepository (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockairportsRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockairportsRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockairportsRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockairportsRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [1969], "all_end_bytes": [2096], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockairportsRepository", "MockairportsRepositoryMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 66, "end_line": 70, "text": "// MockairportsRepositoryMockRecorder is the mock recorder for MockairportsRepository.\ntype MockairportsRepositoryMockRecorder struct {\n\tmock *MockairportsRepository\n}\n", "n_tokens": 34, "primary_symbol": "MockairportsRepositoryMockRecorder", "primary_kind": "type", "primary_span": [66, 70], "def_symbols": [], "symbols": ["MockairportsRepositoryMockRecorder", "the", "mock", "recorder", "for", "MockairportsRepository", "type", "struct"], "doc_head": "// MockairportsRepositoryMockRecorder is the mock recorder for MockairportsRepository.\ntype MockairportsRepositoryMockRecorder struct {\n\tmock *MockairportsRepository\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockairportsRepositoryMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockairportsRepositoryMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockairportsRepositoryMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockairportsRepositoryMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockairportsRepositoryMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [2190], "all_end_bytes": [2265], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockairportsRepository", "MockairportsRepositoryMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 71, "end_line": 77, "text": "// NewMockairportsRepository creates a new mock instance.\nfunc NewMockairportsRepository(ctrl *gomock.Controller) *MockairportsRepository {\n\tmock := &MockairportsRepository{ctrl: ctrl}\n\tmock.recorder = &MockairportsRepositoryMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 60, "primary_symbol": "NewMockairportsRepository", "primary_kind": "function", "primary_span": [72, 77], "def_symbols": [], "symbols": ["NewMockairportsRepository", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockairportsRepository", "recorder", "MockairportsRepositoryMockRecorder", "return"], "doc_head": "// NewMockairportsRepository creates a new mock instance.\nfunc NewMockairportsRepository(ctrl *gomock.Controller) *MockairportsRepository {\n\tmock := &MockairportsRepository{ctrl: ctrl}\n\tmock.recorder = &MockairportsRepositoryMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockairportsRepository/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockairportsRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockairportsRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockairportsRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2325], "all_end_bytes": [2525], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockairportsRepository", "MockairportsRepositoryMockRecorder", "NewMockairportsRepository", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 78, "end_line": 82, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockairportsRepository) EXPECT() *MockairportsRepositoryMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 39, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [79, 82], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockairportsRepository", "MockairportsRepositoryMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockairportsRepository) EXPECT() *MockairportsRepositoryMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockairportsRepository).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockairportsRepository", "function_name": "", "method_name": "EXPECT", "type_name": "MockairportsRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockairportsRepository).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockairportsRepository"], "all_type_names": ["MockairportsRepository"], "all_type_kinds": [null], "all_start_bytes": [2604], "all_end_bytes": [2704], "primary_index": 0, "all_receivers_normalized": ["(*MockairportsRepository)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockairportsRepository", "MockairportsRepositoryMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockairportsRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 83, "end_line": 91, "text": "// GetByICAOOrIATA mocks base method.\nfunc (m *MockairportsRepository) GetByICAOOrIATA(arg0 context.Context, arg1, arg2 *string) (*core.Airport, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetByICAOOrIATA\", arg0, arg1, arg2)\n\tret0, _ := ret[0].(*core.Airport)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 115, "primary_symbol": "GetByICAOOrIATA", "primary_kind": "method", "primary_span": [84, 91], "def_symbols": [], "symbols": ["GetByICAOOrIATA", "mocks", "base", "method", "func", "MockairportsRepository", "arg0", "context", "Context", "arg1", "arg2", "string", "core", "Airport", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetByICAOOrIATA mocks base method.\nfunc (m *MockairportsRepository) GetByICAOOrIATA(arg0 context.Context, arg1, arg2 *string) (*core.Airport, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetByICAOOrIATA\", arg0, arg1, arg2)\n\tret0, _ := ret[0].(*core.Airport)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockairportsRepository).GetByICAOOrIATA/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockairportsRepository", "function_name": "", "method_name": "GetByICAOOrIATA", "type_name": "MockairportsRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByICAOOrIATA"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockairportsRepository).GetByICAOOrIATA/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockairportsRepository"], "all_type_names": ["MockairportsRepository"], "all_type_kinds": [null], "all_start_bytes": [2744], "all_end_bytes": [3021], "primary_index": 0, "all_receivers_normalized": ["(*MockairportsRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airport", "Call", "Context", "GetByICAOOrIATA", "Helper", "MockairportsRepository", "T.Helper", "context.Context", "core.Airport", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockairportsRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 92, "end_line": 97, "text": "// GetByICAOOrIATA indicates an expected call of GetByICAOOrIATA.\nfunc (mr *MockairportsRepositoryMockRecorder) GetByICAOOrIATA(arg0, arg1, arg2 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetByICAOOrIATA\", reflect.TypeOf((*MockairportsRepository)(nil).GetByICAOOrIATA), arg0, arg1, arg2)\n}\n", "n_tokens": 111, "primary_symbol": "GetByICAOOrIATA", "primary_kind": "method", "primary_span": [93, 97], "def_symbols": [], "symbols": ["GetByICAOOrIATA", "indicates", "expected", "call", "func", "MockairportsRepositoryMockRecorder", "arg0", "arg1", "arg2", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockairportsRepository", "nil"], "doc_head": "// GetByICAOOrIATA indicates an expected call of GetByICAOOrIATA.\nfunc (mr *MockairportsRepositoryMockRecorder) GetByICAOOrIATA(arg0, arg1, arg2 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetByICAOOrIATA\", reflect.TypeOf((*MockairportsRepository)(nil).GetByICAOOrIATA), arg0, arg1, arg2)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockairportsRepositoryMockRecorder).GetByICAOOrIATA/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockairportsRepositoryMockRecorder", "function_name": "", "method_name": "GetByICAOOrIATA", "type_name": "MockairportsRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByICAOOrIATA"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockairportsRepositoryMockRecorder).GetByICAOOrIATA/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockairportsRepositoryMockRecorder"], "all_type_names": ["MockairportsRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [3089], "all_end_bytes": [3370], "primary_index": 0, "all_receivers_normalized": ["(*MockairportsRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetByICAOOrIATA", "Helper", "MockairportsRepository", "MockairportsRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockairportsRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#14", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#16", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 16, "start_line": 98, "end_line": 104, "text": "// MockflightsEnrichRepository is a mock of flightsEnrichRepository interface.\ntype MockflightsEnrichRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockflightsEnrichRepositoryMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 51, "primary_symbol": "MockflightsEnrichRepository", "primary_kind": "type", "primary_span": [98, 104], "def_symbols": [], "symbols": ["MockflightsEnrichRepository", "mock", "flightsEnrichRepository", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockflightsEnrichRepositoryMockRecorder", "isgomock"], "doc_head": "// MockflightsEnrichRepository is a mock of flightsEnrichRepository interface.\ntype MockflightsEnrichRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockflightsEnrichRepositoryMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockflightsEnrichRepository (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockflightsEnrichRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockflightsEnrichRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockflightsEnrichRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockflightsEnrichRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [3456], "all_end_bytes": [3593], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockflightsEnrichRepository", "MockflightsEnrichRepositoryMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#15", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#17"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#17", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 17, "start_line": 105, "end_line": 109, "text": "// MockflightsEnrichRepositoryMockRecorder is the mock recorder for MockflightsEnrichRepository.\ntype MockflightsEnrichRepositoryMockRecorder struct {\n\tmock *MockflightsEnrichRepository\n}\n", "n_tokens": 42, "primary_symbol": "MockflightsEnrichRepositoryMockRecorder", "primary_kind": "type", "primary_span": [105, 109], "def_symbols": [], "symbols": ["MockflightsEnrichRepositoryMockRecorder", "the", "mock", "recorder", "for", "MockflightsEnrichRepository", "type", "struct"], "doc_head": "// MockflightsEnrichRepositoryMockRecorder is the mock recorder for MockflightsEnrichRepository.\ntype MockflightsEnrichRepositoryMockRecorder struct {\n\tmock *MockflightsEnrichRepository\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockflightsEnrichRepositoryMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockflightsEnrichRepositoryMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockflightsEnrichRepositoryMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockflightsEnrichRepositoryMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockflightsEnrichRepositoryMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [3697], "all_end_bytes": [3782], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockflightsEnrichRepository", "MockflightsEnrichRepositoryMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#16", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#18"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#18", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 18, "start_line": 110, "end_line": 116, "text": "// NewMockflightsEnrichRepository creates a new mock instance.\nfunc NewMockflightsEnrichRepository(ctrl *gomock.Controller) *MockflightsEnrichRepository {\n\tmock := &MockflightsEnrichRepository{ctrl: ctrl}\n\tmock.recorder = &MockflightsEnrichRepositoryMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 70, "primary_symbol": "NewMockflightsEnrichRepository", "primary_kind": "function", "primary_span": [111, 116], "def_symbols": [], "symbols": ["NewMockflightsEnrichRepository", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockflightsEnrichRepository", "recorder", "MockflightsEnrichRepositoryMockRecorder", "return"], "doc_head": "// NewMockflightsEnrichRepository creates a new mock instance.\nfunc NewMockflightsEnrichRepository(ctrl *gomock.Controller) *MockflightsEnrichRepository {\n\tmock := &MockflightsEnrichRepository{ctrl: ctrl}\n\tmock.recorder = &MockflightsEnrichRepositoryMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockflightsEnrichRepository/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockflightsEnrichRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockflightsEnrichRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockflightsEnrichRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [3847], "all_end_bytes": [4067], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockflightsEnrichRepository", "MockflightsEnrichRepositoryMockRecorder", "NewMockflightsEnrichRepository", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#17", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#19"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#19", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 19, "start_line": 117, "end_line": 121, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockflightsEnrichRepository) EXPECT() *MockflightsEnrichRepositoryMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 43, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [118, 121], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockflightsEnrichRepository", "MockflightsEnrichRepositoryMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockflightsEnrichRepository) EXPECT() *MockflightsEnrichRepositoryMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightsEnrichRepository).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockflightsEnrichRepository", "function_name": "", "method_name": "EXPECT", "type_name": "MockflightsEnrichRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightsEnrichRepository).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockflightsEnrichRepository"], "all_type_names": ["MockflightsEnrichRepository"], "all_type_kinds": [null], "all_start_bytes": [4146], "all_end_bytes": [4256], "primary_index": 0, "all_receivers_normalized": ["(*MockflightsEnrichRepository)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockflightsEnrichRepository", "MockflightsEnrichRepositoryMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockflightsEnrichRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#18", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#20"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#20", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 20, "start_line": 122, "end_line": 129, "text": "// EnrichFlights mocks base method.\nfunc (m *MockflightsEnrichRepository) EnrichFlights(ctx context.Context, enriched []*core.EnrichedFlightData) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"EnrichFlights\", ctx, enriched)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 78, "primary_symbol": "EnrichFlights", "primary_kind": "method", "primary_span": [123, 129], "def_symbols": [], "symbols": ["EnrichFlights", "mocks", "base", "method", "func", "MockflightsEnrichRepository", "ctx", "context", "Context", "enriched", "core", "EnrichedFlightData", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// EnrichFlights mocks base method.\nfunc (m *MockflightsEnrichRepository) EnrichFlights(ctx context.Context, enriched []*core.EnrichedFlightData) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"EnrichFlights\", ctx, enriched)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightsEnrichRepository).EnrichFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockflightsEnrichRepository", "function_name": "", "method_name": "EnrichFlights", "type_name": "MockflightsEnrichRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EnrichFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightsEnrichRepository).EnrichFlights/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockflightsEnrichRepository"], "all_type_names": ["MockflightsEnrichRepository"], "all_type_kinds": [null], "all_start_bytes": [4294], "all_end_bytes": [4527], "primary_index": 0, "all_receivers_normalized": ["(*MockflightsEnrichRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "EnrichFlights", "EnrichedFlightData", "Helper", "MockflightsEnrichRepository", "T.Helper", "context.Context", "core.EnrichedFlightData", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockflightsEnrichRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#19", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#21"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#21", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 21, "start_line": 130, "end_line": 135, "text": "// EnrichFlights indicates an expected call of EnrichFlights.\nfunc (mr *MockflightsEnrichRepositoryMockRecorder) EnrichFlights(ctx, enriched any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"EnrichFlights\", reflect.TypeOf((*MockflightsEnrichRepository)(nil).EnrichFlights), ctx, enriched)\n}\n", "n_tokens": 90, "primary_symbol": "EnrichFlights", "primary_kind": "method", "primary_span": [131, 135], "def_symbols": [], "symbols": ["EnrichFlights", "indicates", "expected", "call", "func", "MockflightsEnrichRepositoryMockRecorder", "ctx", "enriched", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockflightsEnrichRepository", "nil"], "doc_head": "// EnrichFlights indicates an expected call of EnrichFlights.\nfunc (mr *MockflightsEnrichRepositoryMockRecorder) EnrichFlights(ctx, enriched any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"EnrichFlights\", reflect.TypeOf((*MockflightsEnrichRepository)(nil).EnrichFlights), ctx, enriched)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightsEnrichRepositoryMockRecorder).EnrichFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockflightsEnrichRepositoryMockRecorder", "function_name": "", "method_name": "EnrichFlights", "type_name": "MockflightsEnrichRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EnrichFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightsEnrichRepositoryMockRecorder).EnrichFlights/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockflightsEnrichRepositoryMockRecorder"], "all_type_names": ["MockflightsEnrichRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [4591], "all_end_bytes": [4870], "primary_index": 0, "all_receivers_normalized": ["(*MockflightsEnrichRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "EnrichFlights", "Helper", "MockflightsEnrichRepository", "MockflightsEnrichRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockflightsEnrichRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#20", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#22"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#22", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 22, "start_line": 136, "end_line": 144, "text": "// GetUnenrichedFlights mocks base method.\nfunc (m *MockflightsEnrichRepository) GetUnenrichedFlights(ctx context.Context, limit int) ([]*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetUnenrichedFlights\", ctx, limit)\n\tret0, _ := ret[0].([]*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 105, "primary_symbol": "GetUnenrichedFlights", "primary_kind": "method", "primary_span": [137, 144], "def_symbols": [], "symbols": ["GetUnenrichedFlights", "mocks", "base", "method", "func", "MockflightsEnrichRepository", "ctx", "context", "Context", "limit", "int", "core", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetUnenrichedFlights mocks base method.\nfunc (m *MockflightsEnrichRepository) GetUnenrichedFlights(ctx context.Context, limit int) ([]*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetUnenrichedFlights\", ctx, limit)\n\tret0, _ := ret[0].([]*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightsEnrichRepository).GetUnenrichedFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockflightsEnrichRepository", "function_name": "", "method_name": "GetUnenrichedFlights", "type_name": "MockflightsEnrichRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUnenrichedFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightsEnrichRepository).GetUnenrichedFlights/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockflightsEnrichRepository"], "all_type_names": ["MockflightsEnrichRepository"], "all_type_kinds": [null], "all_start_bytes": [4915], "all_end_bytes": [5201], "primary_index": 0, "all_receivers_normalized": ["(*MockflightsEnrichRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "GetUnenrichedFlights", "Helper", "LiveFlight", "MockflightsEnrichRepository", "T.Helper", "context.Context", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockflightsEnrichRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#21", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#23"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#23", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_enrich_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go", "rel_path": "internal/core/mocks/flights_enrich_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 23, "start_line": 145, "end_line": 150, "text": "// GetUnenrichedFlights indicates an expected call of GetUnenrichedFlights.\nfunc (mr *MockflightsEnrichRepositoryMockRecorder) GetUnenrichedFlights(ctx, limit any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetUnenrichedFlights\", reflect.TypeOf((*MockflightsEnrichRepository)(nil).GetUnenrichedFlights), ctx, limit)\n}\n", "n_tokens": 105, "primary_symbol": "GetUnenrichedFlights", "primary_kind": "method", "primary_span": [146, 150], "def_symbols": [], "symbols": ["GetUnenrichedFlights", "indicates", "expected", "call", "func", "MockflightsEnrichRepositoryMockRecorder", "ctx", "limit", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockflightsEnrichRepository", "nil"], "doc_head": "// GetUnenrichedFlights indicates an expected call of GetUnenrichedFlights.\nfunc (mr *MockflightsEnrichRepositoryMockRecorder) GetUnenrichedFlights(ctx, limit any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetUnenrichedFlights\", reflect.TypeOf((*MockflightsEnrichRepository)(nil).GetUnenrichedFlights), ctx, limit)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightsEnrichRepositoryMockRecorder).GetUnenrichedFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockflightsEnrichRepositoryMockRecorder", "function_name": "", "method_name": "GetUnenrichedFlights", "type_name": "MockflightsEnrichRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUnenrichedFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightsEnrichRepositoryMockRecorder).GetUnenrichedFlights/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockflightsEnrichRepositoryMockRecorder"], "all_type_names": ["MockflightsEnrichRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [5279], "all_end_bytes": [5573], "primary_index": 0, "all_receivers_normalized": ["(*MockflightsEnrichRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetUnenrichedFlights", "Helper", "MockflightsEnrichRepository", "MockflightsEnrichRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockflightsEnrichRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_enrich_service_mocks.go#22"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 8, "text": "// Code generated by MockGen. DO NOT EDIT.\n// Source: flights_archive_service.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=flights_archive_service.go -destination=mocks/flights_archive_service_mocks.go -package=mocks\n//\n", "n_tokens": 57, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 8], "def_symbols": [], "symbols": ["Code", "generated", "MockGen", "NOT", "EDIT", "Source", "flights_archive_service", "Generated", "this", "command", "mockgen", "source", "destination", "mocks", "flights_archive_service_mocks", "package"], "doc_head": "// Code generated by MockGen. DO NOT EDIT.\n// Source: flights_archive_service.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=flights_archive_service.go -destination=mocks/flights_archive_service_mocks.go -package=mocks\n//", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 9, "end_line": 11, "text": "// Package mocks is a generated GoMock package.\npackage mocks\n", "n_tokens": 13, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 11], "def_symbols": [], "symbols": ["Package", "mocks", "generated", "GoMock", "package"], "doc_head": "// Package mocks is a generated GoMock package.\npackage mocks", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 19, "text": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)\n", "n_tokens": 42, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 19], "def_symbols": [], "symbols": ["import", "context", "reflect", "core", "impalastudios", "com", "aviation", "liveflights", "internal", "gomock", "uber", "org", "mock"], "doc_head": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 20, "end_line": 26, "text": "// MockflightArchivesRepository is a mock of flightArchivesRepository interface.\ntype MockflightArchivesRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockflightArchivesRepositoryMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 48, "primary_symbol": "MockflightArchivesRepository", "primary_kind": "type", "primary_span": [20, 26], "def_symbols": [], "symbols": ["MockflightArchivesRepository", "mock", "flightArchivesRepository", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockflightArchivesRepositoryMockRecorder", "isgomock"], "doc_head": "// MockflightArchivesRepository is a mock of flightArchivesRepository interface.\ntype MockflightArchivesRepository struct {\n\tctrl     *gomock.Controller\n\trecorder *MockflightArchivesRepositoryMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockflightArchivesRepository (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockflightArchivesRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockflightArchivesRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockflightArchivesRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockflightArchivesRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [532], "all_end_bytes": [671], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockflightArchivesRepository", "MockflightArchivesRepositoryMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 27, "end_line": 31, "text": "// MockflightArchivesRepositoryMockRecorder is the mock recorder for MockflightArchivesRepository.\ntype MockflightArchivesRepositoryMockRecorder struct {\n\tmock *MockflightArchivesRepository\n}\n", "n_tokens": 38, "primary_symbol": "MockflightArchivesRepositoryMockRecorder", "primary_kind": "type", "primary_span": [27, 31], "def_symbols": [], "symbols": ["MockflightArchivesRepositoryMockRecorder", "the", "mock", "recorder", "for", "MockflightArchivesRepository", "type", "struct"], "doc_head": "// MockflightArchivesRepositoryMockRecorder is the mock recorder for MockflightArchivesRepository.\ntype MockflightArchivesRepositoryMockRecorder struct {\n\tmock *MockflightArchivesRepository\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockflightArchivesRepositoryMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockflightArchivesRepositoryMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockflightArchivesRepositoryMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockflightArchivesRepositoryMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockflightArchivesRepositoryMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [777], "all_end_bytes": [864], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockflightArchivesRepository", "MockflightArchivesRepositoryMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 32, "end_line": 38, "text": "// NewMockflightArchivesRepository creates a new mock instance.\nfunc NewMockflightArchivesRepository(ctrl *gomock.Controller) *MockflightArchivesRepository {\n\tmock := &MockflightArchivesRepository{ctrl: ctrl}\n\tmock.recorder = &MockflightArchivesRepositoryMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 65, "primary_symbol": "NewMockflightArchivesRepository", "primary_kind": "function", "primary_span": [33, 38], "def_symbols": [], "symbols": ["NewMockflightArchivesRepository", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockflightArchivesRepository", "recorder", "MockflightArchivesRepositoryMockRecorder", "return"], "doc_head": "// NewMockflightArchivesRepository creates a new mock instance.\nfunc NewMockflightArchivesRepository(ctrl *gomock.Controller) *MockflightArchivesRepository {\n\tmock := &MockflightArchivesRepository{ctrl: ctrl}\n\tmock.recorder = &MockflightArchivesRepositoryMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockflightArchivesRepository/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockflightArchivesRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockflightArchivesRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockflightArchivesRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [930], "all_end_bytes": [1154], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockflightArchivesRepository", "MockflightArchivesRepositoryMockRecorder", "NewMockflightArchivesRepository", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 39, "end_line": 43, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockflightArchivesRepository) EXPECT() *MockflightArchivesRepositoryMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 41, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [40, 43], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockflightArchivesRepository", "MockflightArchivesRepositoryMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockflightArchivesRepository) EXPECT() *MockflightArchivesRepositoryMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightArchivesRepository).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockflightArchivesRepository", "function_name": "", "method_name": "EXPECT", "type_name": "MockflightArchivesRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightArchivesRepository).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockflightArchivesRepository"], "all_type_names": ["MockflightArchivesRepository"], "all_type_kinds": [null], "all_start_bytes": [1233], "all_end_bytes": [1345], "primary_index": 0, "all_receivers_normalized": ["(*MockflightArchivesRepository)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockflightArchivesRepository", "MockflightArchivesRepositoryMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockflightArchivesRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 44, "end_line": 51, "text": "// DeleteFlights mocks base method.\nfunc (m *MockflightArchivesRepository) DeleteFlights(arg0 context.Context, arg1 []*core.LiveFlight) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"DeleteFlights\", arg0, arg1)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 75, "primary_symbol": "DeleteFlights", "primary_kind": "method", "primary_span": [45, 51], "def_symbols": [], "symbols": ["DeleteFlights", "mocks", "base", "method", "func", "MockflightArchivesRepository", "arg0", "context", "Context", "arg1", "core", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// DeleteFlights mocks base method.\nfunc (m *MockflightArchivesRepository) DeleteFlights(arg0 context.Context, arg1 []*core.LiveFlight) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"DeleteFlights\", arg0, arg1)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightArchivesRepository).DeleteFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockflightArchivesRepository", "function_name": "", "method_name": "DeleteFlights", "type_name": "MockflightArchivesRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["DeleteFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightArchivesRepository).DeleteFlights/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockflightArchivesRepository"], "all_type_names": ["MockflightArchivesRepository"], "all_type_kinds": [null], "all_start_bytes": [1383], "all_end_bytes": [1603], "primary_index": 0, "all_receivers_normalized": ["(*MockflightArchivesRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "DeleteFlights", "Helper", "LiveFlight", "MockflightArchivesRepository", "T.Helper", "context.Context", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockflightArchivesRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 52, "end_line": 57, "text": "// DeleteFlights indicates an expected call of DeleteFlights.\nfunc (mr *MockflightArchivesRepositoryMockRecorder) DeleteFlights(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"DeleteFlights\", reflect.TypeOf((*MockflightArchivesRepository)(nil).DeleteFlights), arg0, arg1)\n}\n", "n_tokens": 87, "primary_symbol": "DeleteFlights", "primary_kind": "method", "primary_span": [53, 57], "def_symbols": [], "symbols": ["DeleteFlights", "indicates", "expected", "call", "func", "MockflightArchivesRepositoryMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockflightArchivesRepository", "nil"], "doc_head": "// DeleteFlights indicates an expected call of DeleteFlights.\nfunc (mr *MockflightArchivesRepositoryMockRecorder) DeleteFlights(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"DeleteFlights\", reflect.TypeOf((*MockflightArchivesRepository)(nil).DeleteFlights), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightArchivesRepositoryMockRecorder).DeleteFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockflightArchivesRepositoryMockRecorder", "function_name": "", "method_name": "DeleteFlights", "type_name": "MockflightArchivesRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["DeleteFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightArchivesRepositoryMockRecorder).DeleteFlights/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockflightArchivesRepositoryMockRecorder"], "all_type_names": ["MockflightArchivesRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1667], "all_end_bytes": [1942], "primary_index": 0, "all_receivers_normalized": ["(*MockflightArchivesRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "DeleteFlights", "Helper", "MockflightArchivesRepository", "MockflightArchivesRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockflightArchivesRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 58, "end_line": 66, "text": "// GetArchivableFlights mocks base method.\nfunc (m *MockflightArchivesRepository) GetArchivableFlights(arg0 context.Context, arg1 int) ([]*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetArchivableFlights\", arg0, arg1)\n\tret0, _ := ret[0].([]*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 102, "primary_symbol": "GetArchivableFlights", "primary_kind": "method", "primary_span": [59, 66], "def_symbols": [], "symbols": ["GetArchivableFlights", "mocks", "base", "method", "func", "MockflightArchivesRepository", "arg0", "context", "Context", "arg1", "int", "core", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetArchivableFlights mocks base method.\nfunc (m *MockflightArchivesRepository) GetArchivableFlights(arg0 context.Context, arg1 int) ([]*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetArchivableFlights\", arg0, arg1)\n\tret0, _ := ret[0].([]*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightArchivesRepository).GetArchivableFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockflightArchivesRepository", "function_name": "", "method_name": "GetArchivableFlights", "type_name": "MockflightArchivesRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetArchivableFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightArchivesRepository).GetArchivableFlights/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockflightArchivesRepository"], "all_type_names": ["MockflightArchivesRepository"], "all_type_kinds": [null], "all_start_bytes": [1987], "all_end_bytes": [2274], "primary_index": 0, "all_receivers_normalized": ["(*MockflightArchivesRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "GetArchivableFlights", "Helper", "LiveFlight", "MockflightArchivesRepository", "T.Helper", "context.Context", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockflightArchivesRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/core/mocks/flights_archive_service_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go", "rel_path": "internal/core/mocks/flights_archive_service_mocks.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 67, "end_line": 72, "text": "// GetArchivableFlights indicates an expected call of GetArchivableFlights.\nfunc (mr *MockflightArchivesRepositoryMockRecorder) GetArchivableFlights(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetArchivableFlights\", reflect.TypeOf((*MockflightArchivesRepository)(nil).GetArchivableFlights), arg0, arg1)\n}\n", "n_tokens": 97, "primary_symbol": "GetArchivableFlights", "primary_kind": "method", "primary_span": [68, 72], "def_symbols": [], "symbols": ["GetArchivableFlights", "indicates", "expected", "call", "func", "MockflightArchivesRepositoryMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockflightArchivesRepository", "nil"], "doc_head": "// GetArchivableFlights indicates an expected call of GetArchivableFlights.\nfunc (mr *MockflightArchivesRepositoryMockRecorder) GetArchivableFlights(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetArchivableFlights\", reflect.TypeOf((*MockflightArchivesRepository)(nil).GetArchivableFlights), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockflightArchivesRepositoryMockRecorder).GetArchivableFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockflightArchivesRepositoryMockRecorder", "function_name": "", "method_name": "GetArchivableFlights", "type_name": "MockflightArchivesRepositoryMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetArchivableFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockflightArchivesRepositoryMockRecorder).GetArchivableFlights/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockflightArchivesRepositoryMockRecorder"], "all_type_names": ["MockflightArchivesRepositoryMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [2352], "all_end_bytes": [2648], "primary_index": 0, "all_receivers_normalized": ["(*MockflightArchivesRepositoryMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetArchivableFlights", "Helper", "MockflightArchivesRepository", "MockflightArchivesRepositoryMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockflightArchivesRepositoryMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/core/mocks/flights_archive_service_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airlines_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go", "rel_path": "internal/adapters/airlines_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package adapter\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "adapter"], "doc_head": "package adapter", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "adapter", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package adapter", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airlines_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go", "rel_path": "internal/adapters/airlines_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 17, "text": "import (\n\t\"context\"\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tv0 \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"strings\"\n\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)\n", "n_tokens": 119, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 17], "def_symbols": [], "symbols": ["import", "context", "github", "com", "cockroachdb", "errors", "impalastudios", "aviation", "liveflights", "internal", "core", "pkg", "grpc", "airlines", "log", "uber", "org", "zap", "strings", "xotel", "otel", "opentelemetry", "attribute", "codes", "trace"], "doc_head": "import (\n\t\"context\"\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tv0 \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"strings\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "adapter", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package adapter", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airlines_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go", "rel_path": "internal/adapters/airlines_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 18, "end_line": 23, "text": "//go:generate mockgen -source=airlines_grpc_client.go -destination=mocks/airlines_grpc_client_mocks.go -package=mocks\ntype AirlinesCache interface {\n\tGet(ctx context.Context, designator string) (core.Airline, error)\n\tSet(ctx context.Context, designator string, airline core.Airline) error\n}\n", "n_tokens": 75, "primary_symbol": "AirlinesCache", "primary_kind": "type", "primary_span": [18, 23], "def_symbols": [], "symbols": ["generate", "mockgen", "source", "airlines_grpc_client", "destination", "mocks", "airlines_grpc_client_mocks", "package", "type", "AirlinesCache", "interface", "Get", "ctx", "context", "Context", "designator", "string", "core", "Airline", "error", "Set", "airline"], "doc_head": "//go:generate mockgen -source=airlines_grpc_client.go -destination=mocks/airlines_grpc_client_mocks.go -package=mocks\ntype AirlinesCache interface {\n\tGet(ctx context.Context, designator string) (core.Airline, error)\n\tSet(ctx context.Context, designator string, airline core.Airline) error\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:AirlinesCache (interface)", "package": "adapter", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirlinesCache", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["AirlinesCache"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirlinesCache (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirlinesCache"], "all_type_kinds": ["interface"], "all_start_bytes": [524], "all_end_bytes": [691], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airline", "AirlinesCache", "Context", "Get", "Set", "context.Context", "core.Airline"], "header_context_minimal": "package adapter\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airlines_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go", "rel_path": "internal/adapters/airlines_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 24, "end_line": 30, "text": "// AirlineGrpcClient is a wrapper around the grpc client for the airline service.\n// It contains a cache to avoid unnecessary calls to the service.\ntype AirlinesGrpcClient struct {\n\tclient v0.AirlinesServiceClient\n\tcache  AirlinesCache\n}\n", "n_tokens": 52, "primary_symbol": "AirlinesGrpcClient", "primary_kind": "type", "primary_span": [24, 30], "def_symbols": [], "symbols": ["AirlineGrpcClient", "wrapper", "around", "the", "grpc", "client", "for", "airline", "service", "contains", "cache", "avoid", "unnecessary", "calls", "type", "AirlinesGrpcClient", "struct", "AirlinesServiceClient", "AirlinesCache"], "doc_head": "// AirlineGrpcClient is a wrapper around the grpc client for the airline service.\n// It contains a cache to avoid unnecessary calls to the service.\ntype AirlinesGrpcClient struct {\n\tclient v0.AirlinesServiceClient\n\tcache  AirlinesCache\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:AirlinesGrpcClient (struct)", "package": "adapter", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirlinesGrpcClient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["AirlinesGrpcClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirlinesGrpcClient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirlinesGrpcClient"], "all_type_kinds": ["struct"], "all_start_bytes": [846], "all_end_bytes": [930], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0"], "symbols_referenced_strict": ["AirlinesCache", "AirlinesGrpcClient", "AirlinesServiceClient", "v0.AirlinesServiceClient"], "header_context_minimal": "package adapter\nimport \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airlines_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go", "rel_path": "internal/adapters/airlines_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 31, "end_line": 37, "text": "func NewAirlinesGrpcClient(client v0.AirlinesServiceClient, cache AirlinesCache) *AirlinesGrpcClient {\n\treturn &AirlinesGrpcClient{\n\t\tclient: client,\n\t\tcache:  cache,\n\t}\n}\n", "n_tokens": 48, "primary_symbol": "NewAirlinesGrpcClient", "primary_kind": "function", "primary_span": [31, 37], "def_symbols": [], "symbols": ["NewAirlinesGrpcClient", "func", "client", "AirlinesServiceClient", "cache", "AirlinesCache", "AirlinesGrpcClient", "return"], "doc_head": "func NewAirlinesGrpcClient(client v0.AirlinesServiceClient, cache AirlinesCache) *AirlinesGrpcClient {\n\treturn &AirlinesGrpcClient{\n\t\tclient: client,\n\t\tcache:  cache,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewAirlinesGrpcClient/complete", "package": "adapter", "node_kind": "function", "receiver": "", "function_name": "NewAirlinesGrpcClient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewAirlinesGrpcClient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewAirlinesGrpcClient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [932], "all_end_bytes": [1103], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0"], "symbols_referenced_strict": ["AirlinesCache", "AirlinesGrpcClient", "AirlinesServiceClient", "NewAirlinesGrpcClient", "v0.AirlinesServiceClient"], "header_context_minimal": "package adapter\nimport \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airlines_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go", "rel_path": "internal/adapters/airlines_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 38, "end_line": 92, "text": "func (c *AirlinesGrpcClient) GetByDesignator(ctx context.Context, designator string) (*core.Airline, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirlinesGrpcClient:GetByDesignator\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.String(\"designator\", designator),\n\t)\n\n\tkey := strings.ToUpper(strings.TrimSpace(designator))\n\n\tif c.cache != nil {\n\t\tairline, err := c.cache.Get(ctx, key)\n\t\tif err == nil {\n\t\t\treturn &airline, nil\n\t\t}\n\t\tif !errors.Is(err, core.ErrCacheMiss) {\n\t\t\tspan.RecordError(err)\n\t\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\t\tlog.Warn(ctx, \"Cache failure\", zap.Error(err))\n\t\t}\n\t}\n\n\treq := &v0.GetByDesignatorRequest{Designator: designator}\n\tresp, err := c.client.GetByDesignator(ctx, req)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"failed to request airline\")\n\t}\n\tif resp.Airline == nil {\n\t\treturn nil, nil\n\t}\n\n\tcacheDesignator := key\n\tif resp.Airline.Designator != nil {\n\t\tcacheDesignator = strings.ToUpper(strings.TrimSpace(*resp.Airline.Designator))\n\t}\n\n\tairline := &core.Airline{\n\t\tID:             resp.Airline.Id,\n\t\tDesignator:     cacheDesignator,\n\t\tIATA:           resp.Airline.Iata,\n\t\tICAO:           resp.Airline.Icao,\n\t\tClassification: resp.Airline.Classification,\n\t}\n\n\tif c.cache != nil {\n\t\t_ = c.cache.Set(ctx, cacheDesignator, *airline)\n\t}\n\n\treturn airline, nil\n}\n", "n_tokens": 402, "primary_symbol": "GetByDesignator", "primary_kind": "method", "primary_span": [38, 92], "def_symbols": [], "symbols": ["GetByDesignator", "func", "AirlinesGrpcClient", "ctx", "context", "Context", "designator", "string", "core", "Airline", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "key", "strings", "ToUpper", "TrimSpace", "cache", "nil", "airline", "err", "Get", "return", "errors", "ErrCacheMiss", "RecordError", "SetStatus", "codes", "Error", "log", "Warn", "Cache", "failure", "zap", "req", "GetByDesignatorRequest", "Designator", "resp", "client", "Wrap", "failed", "request", "cacheDesignator", "IATA", "Iata", "ICAO", "Icao", "Classification", "Set"], "doc_head": "func (c *AirlinesGrpcClient) GetByDesignator(ctx context.Context, designator string) (*core.Airline, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirlinesGrpcClient:GetByDesignator\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.String(\"designator\", designator),\n\t)\n\tkey := strings.ToUpper(strings.TrimSpace(designator))\n\tif c.cache != nil {\n\t\tairline, err := c.cache.Get(ctx, key)\n\t\tif err == nil {\n\t\t\treturn &airline, nil\n\t\t}\n\t\tif !errors.Is(err, core.ErrCacheMiss) {\n\t\t\tspan.RecordError(err)\n\t\t\tspan.SetStatus(codes.Error, err.Error())\n\t\t\tlog.Warn(ctx, \"Cache failure\", zap.Error(err))\n\t\t}\n\t}\n\treq := &v0.GetByDesignatorRequest{Designator: designator}\n\tresp, err := c.client.GetByDesignator(ctx, req)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\treturn nil, errors.Wrap(err, \"failed to request airline\")\n\t}\n\tif resp.Airline == nil {\n\t\treturn nil, nil\n\t}\n\tcacheDesignator := key\n\tif resp.Airline.Designator != nil {\n\t\tcacheDesignator = strings.ToUpper(strings.TrimSpace(*resp.Airline.Designator))\n\t}\n\tairline := &core.Airline{\n\t\tID:             resp.Airline.Id,\n\t\tDesignator:     cacheDesignator,", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*AirlinesGrpcClient).GetByDesignator/complete", "package": "adapter", "node_kind": "method", "receiver": "c *AirlinesGrpcClient", "function_name": "", "method_name": "GetByDesignator", "type_name": "AirlinesGrpcClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlinesGrpcClient).GetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["c *AirlinesGrpcClient"], "all_type_names": ["AirlinesGrpcClient"], "all_type_kinds": [null], "all_start_bytes": [1105], "all_end_bytes": [2525], "primary_index": 0, "all_receivers_normalized": ["(*AirlinesGrpcClient)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0", "go.impalastudios.com/log", "go.impalastudios.com/otel", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace", "go.uber.org/zap", "strings"], "symbols_referenced_strict": ["Airline", "AirlinesGrpcClient", "Classification", "Context", "Designator", "End", "ErrCacheMiss", "Error", "Get", "GetByDesignator", "GetByDesignatorRequest", "Iata", "Icao", "RecordError", "Set", "SetAttributes", "SetStatus", "SpanKindClient", "Start", "String", "ToUpper", "Tracer", "TrimSpace", "Warn", "WithSpanKind", "Wrap", "attribute.String", "c.cache", "c.client", "codes.Error", "context.Context", "core.Airline", "core.ErrCacheMiss", "err.Error", "errors.Is", "errors.Wrap", "log.Warn", "resp.Airline", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "strings.ToUpper", "strings.TrimSpace", "trace.SpanKindClient", "trace.WithSpanKind", "v0.GetByDesignatorRequest", "xotel.Tracer", "zap.Error"], "header_context_minimal": "package adapter\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airlines/v0\"\n    \"go.impalastudios.com/log\"\n)\n// receiver: c *AirlinesGrpcClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airlines_grpc_client.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airports_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go", "rel_path": "internal/adapters/airports_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package adapter\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "adapter"], "doc_head": "package adapter", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "adapter", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package adapter", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airports_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go", "rel_path": "internal/adapters/airports_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 19, "text": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"strings\"\n\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tv0 \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0\"\n\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)\n", "n_tokens": 122, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 19], "def_symbols": [], "symbols": ["import", "context", "fmt", "impalastudios", "com", "log", "uber", "org", "zap", "strings", "github", "cockroachdb", "errors", "aviation", "liveflights", "internal", "core", "pkg", "grpc", "airports", "xotel", "otel", "opentelemetry", "attribute", "codes", "trace"], "doc_head": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"strings\"\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tv0 \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "adapter", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package adapter", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airports_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go", "rel_path": "internal/adapters/airports_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 20, "end_line": 25, "text": "//go:generate mockgen -source=airports_grpc_client.go -destination=mocks/airports_grpc_client_grpc_client_mocks.go -package=mocks\ntype AirportsCache interface {\n\tGet(ctx context.Context, key string) (core.Airport, error)\n\tSet(ctx context.Context, key string, airport core.Airport) error\n}\n", "n_tokens": 77, "primary_symbol": "AirportsCache", "primary_kind": "type", "primary_span": [20, 25], "def_symbols": [], "symbols": ["generate", "mockgen", "source", "airports_grpc_client", "destination", "mocks", "airports_grpc_client_grpc_client_mocks", "package", "type", "AirportsCache", "interface", "Get", "ctx", "context", "Context", "key", "string", "core", "Airport", "error", "Set", "airport"], "doc_head": "//go:generate mockgen -source=airports_grpc_client.go -destination=mocks/airports_grpc_client_grpc_client_mocks.go -package=mocks\ntype AirportsCache interface {\n\tGet(ctx context.Context, key string) (core.Airport, error)\n\tSet(ctx context.Context, key string, airport core.Airport) error\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:AirportsCache (interface)", "package": "adapter", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirportsCache", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["AirportsCache"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirportsCache (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirportsCache"], "all_type_kinds": ["interface"], "all_start_bytes": [544], "all_end_bytes": [697], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airport", "AirportsCache", "Context", "Get", "Set", "context.Context", "core.Airport"], "header_context_minimal": "package adapter\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airports_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go", "rel_path": "internal/adapters/airports_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 26, "end_line": 31, "text": "type AirportsGrpcClient struct {\n\tclient      v0.AirportsServiceClient\n\tcache       AirportsCache\n\tsearchLimit int\n}\n", "n_tokens": 29, "primary_symbol": "AirportsGrpcClient", "primary_kind": "type", "primary_span": [26, 31], "def_symbols": [], "symbols": ["type", "AirportsGrpcClient", "struct", "client", "AirportsServiceClient", "cache", "AirportsCache", "searchLimit", "int"], "doc_head": "type AirportsGrpcClient struct {\n\tclient      v0.AirportsServiceClient\n\tcache       AirportsCache\n\tsearchLimit int\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:AirportsGrpcClient (struct)", "package": "adapter", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirportsGrpcClient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["AirportsGrpcClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirportsGrpcClient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirportsGrpcClient"], "all_type_kinds": ["struct"], "all_start_bytes": [704], "all_end_bytes": [815], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0"], "symbols_referenced_strict": ["AirportsCache", "AirportsGrpcClient", "AirportsServiceClient", "v0.AirportsServiceClient"], "header_context_minimal": "package adapter\nimport \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airports_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go", "rel_path": "internal/adapters/airports_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 32, "end_line": 35, "text": "func NewAirportsGrpcClient(client v0.AirportsServiceClient, cache AirportsCache, searchLimit int) *AirportsGrpcClient {\n\treturn &AirportsGrpcClient{client: client, cache: cache, searchLimit: searchLimit}\n}\n", "n_tokens": 55, "primary_symbol": "NewAirportsGrpcClient", "primary_kind": "function", "primary_span": [32, 35], "def_symbols": [], "symbols": ["NewAirportsGrpcClient", "func", "client", "AirportsServiceClient", "cache", "AirportsCache", "searchLimit", "int", "AirportsGrpcClient", "return"], "doc_head": "func NewAirportsGrpcClient(client v0.AirportsServiceClient, cache AirportsCache, searchLimit int) *AirportsGrpcClient {\n\treturn &AirportsGrpcClient{client: client, cache: cache, searchLimit: searchLimit}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewAirportsGrpcClient/complete", "package": "adapter", "node_kind": "function", "receiver": "", "function_name": "NewAirportsGrpcClient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewAirportsGrpcClient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewAirportsGrpcClient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [817], "all_end_bytes": [1022], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0"], "symbols_referenced_strict": ["AirportsCache", "AirportsGrpcClient", "AirportsServiceClient", "NewAirportsGrpcClient", "v0.AirportsServiceClient"], "header_context_minimal": "package adapter\nimport \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airports_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go", "rel_path": "internal/adapters/airports_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 36, "end_line": 140, "text": "func (c *AirportsGrpcClient) GetByICAOOrIATA(ctx context.Context, icao, iata *string) (*core.Airport, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirportsGrpcClient:GetByICAOOrIATA\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.String(\"icao\", str(icao)),\n\t\tattribute.String(\"iata\", str(iata)),\n\t)\n\n\tvar icaoCode, iataCode string\n\tif icao != nil {\n\t\ticaoCode = strings.ToUpper(strings.TrimSpace(*icao))\n\t}\n\tif iata != nil {\n\t\tiataCode = strings.ToUpper(strings.TrimSpace(*iata))\n\t}\n\tcompositeKey := fmt.Sprintf(\"%s:%s\", icaoCode, iataCode)\n\n\tif a, err := c.cache.Get(ctx, compositeKey); err == nil {\n\t\treturn &a, nil\n\t} else if !errors.Is(err, core.ErrCacheMiss) {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\tlog.Warn(ctx, \"Cache failure\", zap.Error(err))\n\t}\n\n\tvar airportsList []*v0.Airport\n\tif icaoCode != \"\" {\n\t\tresp, err := c.client.Search(ctx, &v0.SearchAirportsRequest{Q: icaoCode, Limit: uint32(c.searchLimit)})\n\t\tif err != nil {\n\t\t\tspan.RecordError(err)\n\t\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\t\tlog.Debug(ctx, \"ICAO search failed\", zap.Error(err))\n\t\t}\n\t\tairportsList = append(airportsList, resp.Result...)\n\t}\n\tif iataCode != \"\" {\n\t\tresp, err := c.client.Search(ctx, &v0.SearchAirportsRequest{Q: iataCode, Limit: uint32(c.searchLimit)})\n\t\tif err != nil {\n\t\t\tspan.RecordError(err)\n\t\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\t\tlog.Debug(ctx, \"ICAO search failed\", zap.Error(err))\n\t\t}\n\t\tairportsList = append(airportsList, resp.Result...)\n\t}\n\n\tvar bestBoth, bestIATA, bestICAO *core.Airport\n\tseen := make(map[string]struct{})\n\n\tfor _, airportResult := range airportsList {\n\t\tif airportResult.Designator == nil {\n\t\t\tcontinue\n\t\t}\n\t\ta := &core.Airport{\n\t\t\tID:             airportResult.Id,\n\t\t\tDesignator:     *airportResult.Designator,\n\t\t\tIATA:           airportResult.Iata,\n\t\t\tICAO:           airportResult.Icao,\n\t\t\tClassification: airportResult.Classification,\n\t\t}\n\t\tvar dbICAO, dbIATA string\n\t\tif a.ICAO != nil {\n\t\t\tdbICAO = strings.ToUpper(strings.TrimSpace(*a.ICAO))\n\t\t}\n\t\tif a.IATA != nil {\n\t\t\tdbIATA = strings.ToUpper(strings.TrimSpace(*a.IATA))\n\t\t}\n\t\tkey := fmt.Sprintf(\"%s:%s\", dbICAO, dbIATA)\n\t\tif _, exists := seen[key]; exists {\n\t\t\tcontinue\n\t\t}\n\t\tseen[key] = struct{}{}\n\t\t_ = c.cache.Set(ctx, key, *a)\n\n\t\tbothMatch := icaoCode != \"\" && iataCode != \"\" && dbICAO == icaoCode && dbIATA == iataCode\n\t\tiataMatch := iataCode != \"\" && dbIATA == iataCode\n\t\ticaoMatch := icaoCode != \"\" && dbICAO == icaoCode\n\n\t\tif bothMatch {\n\t\t\tbestBoth = a\n\t\t\tbreak\n\t\t}\n\t\tif bestIATA == nil && iataMatch {\n\t\t\tbestIATA = a\n\t\t}\n\t\tif bestICAO == nil && icaoMatch {\n\t\t\tbestICAO = a\n\t\t}\n\t}\n\n\tif bestBoth != nil {\n\t\treturn bestBoth, nil\n\t}\n\tif bestIATA != nil {\n\t\treturn bestIATA, nil\n\t}\n\tif bestICAO != nil {\n\t\treturn bestICAO, nil\n\t}\n\treturn nil, nil\n}\n", "n_tokens": 877, "primary_symbol": "GetByICAOOrIATA", "primary_kind": "method", "primary_span": [36, 140], "def_symbols": [], "symbols": ["GetByICAOOrIATA", "func", "AirportsGrpcClient", "ctx", "context", "Context", "icao", "iata", "string", "core", "Airport", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "str", "var", "icaoCode", "iataCode", "nil", "strings", "ToUpper", "TrimSpace", "compositeKey", "fmt", "Sprintf", "err", "cache", "Get", "return", "else", "errors", "ErrCacheMiss", "RecordError", "SetStatus", "codes", "Error", "log", "Warn", "Cache", "failure", "zap", "airportsList", "resp", "client", "Search", "SearchAirportsRequest", "Limit", "uint32", "searchLimit", "Debug", "ICAO", "search", "failed", "append", "Result", "bestBoth", "bestIATA", "bestICAO", "seen", "make", "map", "struct", "for", "airportResult", "range", "Designator", "continue", "IATA", "Iata", "Icao", "Classification", "dbICAO", "dbIATA", "key", "exists", "Set", "bothMatch", "iataMatch", "icaoMatch", "break"], "doc_head": "func (c *AirportsGrpcClient) GetByICAOOrIATA(ctx context.Context, icao, iata *string) (*core.Airport, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirportsGrpcClient:GetByICAOOrIATA\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.String(\"icao\", str(icao)),\n\t\tattribute.String(\"iata\", str(iata)),\n\t)\n\tvar icaoCode, iataCode string\n\tif icao != nil {\n\t\ticaoCode = strings.ToUpper(strings.TrimSpace(*icao))\n\t}\n\tif iata != nil {\n\t\tiataCode = strings.ToUpper(strings.TrimSpace(*iata))\n\t}\n\tcompositeKey := fmt.Sprintf(\"%s:%s\", icaoCode, iataCode)\n\tif a, err := c.cache.Get(ctx, compositeKey); err == nil {\n\t\treturn &a, nil\n\t} else if !errors.Is(err, core.ErrCacheMiss) {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\tlog.Warn(ctx, \"Cache failure\", zap.Error(err))\n\t}\n\tvar airportsList []*v0.Airport\n\tif icaoCode != \"\" {\n\t\tresp, err := c.client.Search(ctx, &v0.SearchAirportsRequest{Q: icaoCode, Limit: uint32(c.searchLimit)})\n\t\tif err != nil {\n\t\t\tspan.RecordError(err)\n\t\t\tspan.SetStatus(codes.Error, err.Error())\n\t\t\tlog.Debug(ctx, \"ICAO search failed\", zap.Error(err))\n\t\t}\n\t\tairportsList = append(airportsList, resp.Result...)\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*AirportsGrpcClient).GetByICAOOrIATA/complete", "package": "adapter", "node_kind": "method", "receiver": "c *AirportsGrpcClient", "function_name": "", "method_name": "GetByICAOOrIATA", "type_name": "AirportsGrpcClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByICAOOrIATA"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportsGrpcClient).GetByICAOOrIATA/complete"], "all_roles": ["complete"], "all_receivers": ["c *AirportsGrpcClient"], "all_type_names": ["AirportsGrpcClient"], "all_type_kinds": [null], "all_start_bytes": [1024], "all_end_bytes": [3849], "primary_index": 0, "all_receivers_normalized": ["(*AirportsGrpcClient)"], "imports_used_minimal": ["context", "fmt", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0", "go.impalastudios.com/log", "go.impalastudios.com/otel", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace", "go.uber.org/zap", "strings"], "symbols_referenced_strict": ["Airport", "AirportsGrpcClient", "Classification", "Context", "Debug", "Designator", "End", "ErrCacheMiss", "Error", "Get", "GetByICAOOrIATA", "Iata", "Icao", "Limit", "RecordError", "Result", "Search", "SearchAirportsRequest", "Set", "SetAttributes", "SetStatus", "SpanKindClient", "Sprintf", "Start", "String", "ToUpper", "Tracer", "TrimSpace", "Warn", "WithSpanKind", "a.IATA", "a.ICAO", "airportResult.Classification", "airportResult.Designator", "airportResult.Iata", "airportResult.Icao", "airportResult.Id", "attribute.String", "c.cache", "c.client", "c.searchLimit", "codes.Error", "context.Context", "core.Airport", "core.ErrCacheMiss", "err.Error", "errors.Is", "fmt.Sprintf", "log.Debug", "log.Warn", "resp.Result", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "strings.ToUpper", "strings.TrimSpace", "trace.SpanKindClient", "trace.WithSpanKind", "v0.Airport", "v0.SearchAirportsRequest", "xotel.Tracer", "zap.Error"], "header_context_minimal": "package adapter\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/grpc/airports/v0\"\n)\n// receiver: c *AirportsGrpcClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/airports_grpc_client.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go", "rel_path": "internal/adapters/airports_grpc_client.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 141, "end_line": 147, "text": "func str(s *string) string {\n\tif s != nil {\n\t\treturn *s\n\t}\n\treturn \"\"\n}\n", "n_tokens": 23, "primary_symbol": "str", "primary_kind": "function", "primary_span": [141, 147], "def_symbols": [], "symbols": ["str", "func", "string", "nil", "return"], "doc_head": "func str(s *string) string {\n\tif s != nil {\n\t\treturn *s\n\t}\n\treturn \"\"\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:str/complete", "package": "adapter", "node_kind": "function", "receiver": "", "function_name": "str", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["str"], "all_kinds": ["function"], "all_ast_paths": ["go:function:str/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [3851], "all_end_bytes": [3922], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package adapter", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/airports_grpc_client.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 8, "text": "// Code generated by MockGen. DO NOT EDIT.\n// Source: airlines_grpc_client.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=airlines_grpc_client.go -destination=mocks/airlines_grpc_client_mocks.go -package=mocks\n//\n", "n_tokens": 61, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 8], "def_symbols": [], "symbols": ["Code", "generated", "MockGen", "NOT", "EDIT", "Source", "airlines_grpc_client", "Generated", "this", "command", "mockgen", "source", "destination", "mocks", "airlines_grpc_client_mocks", "package"], "doc_head": "// Code generated by MockGen. DO NOT EDIT.\n// Source: airlines_grpc_client.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=airlines_grpc_client.go -destination=mocks/airlines_grpc_client_mocks.go -package=mocks\n//", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 9, "end_line": 11, "text": "// Package mocks is a generated GoMock package.\npackage mocks\n", "n_tokens": 13, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 11], "def_symbols": [], "symbols": ["Package", "mocks", "generated", "GoMock", "package"], "doc_head": "// Package mocks is a generated GoMock package.\npackage mocks", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 19, "text": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)\n", "n_tokens": 42, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 19], "def_symbols": [], "symbols": ["import", "context", "reflect", "core", "impalastudios", "com", "aviation", "liveflights", "internal", "gomock", "uber", "org", "mock"], "doc_head": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 20, "end_line": 26, "text": "// MockAirlinesCache is a mock of AirlinesCache interface.\ntype MockAirlinesCache struct {\n\tctrl     *gomock.Controller\n\trecorder *MockAirlinesCacheMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 43, "primary_symbol": "MockAirlinesCache", "primary_kind": "type", "primary_span": [20, 26], "def_symbols": [], "symbols": ["MockAirlinesCache", "mock", "AirlinesCache", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockAirlinesCacheMockRecorder", "isgomock"], "doc_head": "// MockAirlinesCache is a mock of AirlinesCache interface.\ntype MockAirlinesCache struct {\n\tctrl     *gomock.Controller\n\trecorder *MockAirlinesCacheMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockAirlinesCache (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockAirlinesCache", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockAirlinesCache"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockAirlinesCache (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockAirlinesCache"], "all_type_kinds": ["struct"], "all_start_bytes": [501], "all_end_bytes": [618], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockAirlinesCache", "MockAirlinesCacheMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 27, "end_line": 31, "text": "// MockAirlinesCacheMockRecorder is the mock recorder for MockAirlinesCache.\ntype MockAirlinesCacheMockRecorder struct {\n\tmock *MockAirlinesCache\n}\n", "n_tokens": 34, "primary_symbol": "MockAirlinesCacheMockRecorder", "primary_kind": "type", "primary_span": [27, 31], "def_symbols": [], "symbols": ["MockAirlinesCacheMockRecorder", "the", "mock", "recorder", "for", "MockAirlinesCache", "type", "struct"], "doc_head": "// MockAirlinesCacheMockRecorder is the mock recorder for MockAirlinesCache.\ntype MockAirlinesCacheMockRecorder struct {\n\tmock *MockAirlinesCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockAirlinesCacheMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockAirlinesCacheMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockAirlinesCacheMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockAirlinesCacheMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockAirlinesCacheMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [702], "all_end_bytes": [767], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockAirlinesCache", "MockAirlinesCacheMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 32, "end_line": 38, "text": "// NewMockAirlinesCache creates a new mock instance.\nfunc NewMockAirlinesCache(ctrl *gomock.Controller) *MockAirlinesCache {\n\tmock := &MockAirlinesCache{ctrl: ctrl}\n\tmock.recorder = &MockAirlinesCacheMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 60, "primary_symbol": "NewMockAirlinesCache", "primary_kind": "function", "primary_span": [33, 38], "def_symbols": [], "symbols": ["NewMockAirlinesCache", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockAirlinesCache", "recorder", "MockAirlinesCacheMockRecorder", "return"], "doc_head": "// NewMockAirlinesCache creates a new mock instance.\nfunc NewMockAirlinesCache(ctrl *gomock.Controller) *MockAirlinesCache {\n\tmock := &MockAirlinesCache{ctrl: ctrl}\n\tmock.recorder = &MockAirlinesCacheMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockAirlinesCache/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockAirlinesCache", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockAirlinesCache"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockAirlinesCache/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [822], "all_end_bytes": [1002], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockAirlinesCache", "MockAirlinesCacheMockRecorder", "NewMockAirlinesCache", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 39, "end_line": 43, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockAirlinesCache) EXPECT() *MockAirlinesCacheMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 39, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [40, 43], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockAirlinesCache", "MockAirlinesCacheMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockAirlinesCache) EXPECT() *MockAirlinesCacheMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirlinesCache).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockAirlinesCache", "function_name": "", "method_name": "EXPECT", "type_name": "MockAirlinesCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirlinesCache).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockAirlinesCache"], "all_type_names": ["MockAirlinesCache"], "all_type_kinds": [null], "all_start_bytes": [1081], "all_end_bytes": [1171], "primary_index": 0, "all_receivers_normalized": ["(*MockAirlinesCache)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockAirlinesCache", "MockAirlinesCacheMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockAirlinesCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 44, "end_line": 52, "text": "// Get mocks base method.\nfunc (m *MockAirlinesCache) Get(ctx context.Context, designator string) (core.Airline, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Get\", ctx, designator)\n\tret0, _ := ret[0].(core.Airline)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 88, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [45, 52], "def_symbols": [], "symbols": ["Get", "mocks", "base", "method", "func", "MockAirlinesCache", "ctx", "context", "Context", "designator", "string", "core", "Airline", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// Get mocks base method.\nfunc (m *MockAirlinesCache) Get(ctx context.Context, designator string) (core.Airline, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Get\", ctx, designator)\n\tret0, _ := ret[0].(core.Airline)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirlinesCache).Get/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockAirlinesCache", "function_name": "", "method_name": "Get", "type_name": "MockAirlinesCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirlinesCache).Get/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockAirlinesCache"], "all_type_names": ["MockAirlinesCache"], "all_type_kinds": [null], "all_start_bytes": [1199], "all_end_bytes": [1442], "primary_index": 0, "all_receivers_normalized": ["(*MockAirlinesCache)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airline", "Call", "Context", "Get", "Helper", "MockAirlinesCache", "T.Helper", "context.Context", "core.Airline", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockAirlinesCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 53, "end_line": 58, "text": "// Get indicates an expected call of Get.\nfunc (mr *MockAirlinesCacheMockRecorder) Get(ctx, designator any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Get\", reflect.TypeOf((*MockAirlinesCache)(nil).Get), ctx, designator)\n}\n", "n_tokens": 73, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [54, 58], "def_symbols": [], "symbols": ["Get", "indicates", "expected", "call", "func", "MockAirlinesCacheMockRecorder", "ctx", "designator", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockAirlinesCache", "nil"], "doc_head": "// Get indicates an expected call of Get.\nfunc (mr *MockAirlinesCacheMockRecorder) Get(ctx, designator any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Get\", reflect.TypeOf((*MockAirlinesCache)(nil).Get), ctx, designator)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirlinesCacheMockRecorder).Get/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockAirlinesCacheMockRecorder", "function_name": "", "method_name": "Get", "type_name": "MockAirlinesCacheMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirlinesCacheMockRecorder).Get/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockAirlinesCacheMockRecorder"], "all_type_names": ["MockAirlinesCacheMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1486], "all_end_bytes": [1719], "primary_index": 0, "all_receivers_normalized": ["(*MockAirlinesCacheMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Get", "Helper", "MockAirlinesCache", "MockAirlinesCacheMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockAirlinesCacheMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 59, "end_line": 66, "text": "// Set mocks base method.\nfunc (m *MockAirlinesCache) Set(ctx context.Context, designator string, airline core.Airline) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Set\", ctx, designator, airline)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 71, "primary_symbol": "Set", "primary_kind": "method", "primary_span": [60, 66], "def_symbols": [], "symbols": ["Set", "mocks", "base", "method", "func", "MockAirlinesCache", "ctx", "context", "Context", "designator", "string", "airline", "core", "Airline", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// Set mocks base method.\nfunc (m *MockAirlinesCache) Set(ctx context.Context, designator string, airline core.Airline) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Set\", ctx, designator, airline)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirlinesCache).Set/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockAirlinesCache", "function_name": "", "method_name": "Set", "type_name": "MockAirlinesCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Set"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirlinesCache).Set/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockAirlinesCache"], "all_type_names": ["MockAirlinesCache"], "all_type_kinds": [null], "all_start_bytes": [1747], "all_end_bytes": [1965], "primary_index": 0, "all_receivers_normalized": ["(*MockAirlinesCache)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airline", "Call", "Context", "Helper", "MockAirlinesCache", "Set", "T.Helper", "context.Context", "core.Airline", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockAirlinesCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airlines_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 67, "end_line": 72, "text": "// Set indicates an expected call of Set.\nfunc (mr *MockAirlinesCacheMockRecorder) Set(ctx, designator, airline any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Set\", reflect.TypeOf((*MockAirlinesCache)(nil).Set), ctx, designator, airline)\n}\n", "n_tokens": 77, "primary_symbol": "Set", "primary_kind": "method", "primary_span": [68, 72], "def_symbols": [], "symbols": ["Set", "indicates", "expected", "call", "func", "MockAirlinesCacheMockRecorder", "ctx", "designator", "airline", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockAirlinesCache", "nil"], "doc_head": "// Set indicates an expected call of Set.\nfunc (mr *MockAirlinesCacheMockRecorder) Set(ctx, designator, airline any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Set\", reflect.TypeOf((*MockAirlinesCache)(nil).Set), ctx, designator, airline)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirlinesCacheMockRecorder).Set/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockAirlinesCacheMockRecorder", "function_name": "", "method_name": "Set", "type_name": "MockAirlinesCacheMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Set"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirlinesCacheMockRecorder).Set/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockAirlinesCacheMockRecorder"], "all_type_names": ["MockAirlinesCacheMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [2009], "all_end_bytes": [2260], "primary_index": 0, "all_receivers_normalized": ["(*MockAirlinesCacheMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Helper", "MockAirlinesCache", "MockAirlinesCacheMockRecorder", "RecordCallWithMethodType", "Set", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockAirlinesCacheMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airlines_grpc_client_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 8, "text": "// Code generated by MockGen. DO NOT EDIT.\n// Source: airports_grpc_client.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=airports_grpc_client.go -destination=mocks/airports_grpc_client_grpc_client_mocks.go -package=mocks\n//\n", "n_tokens": 64, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 8], "def_symbols": [], "symbols": ["Code", "generated", "MockGen", "NOT", "EDIT", "Source", "airports_grpc_client", "Generated", "this", "command", "mockgen", "source", "destination", "mocks", "airports_grpc_client_grpc_client_mocks", "package"], "doc_head": "// Code generated by MockGen. DO NOT EDIT.\n// Source: airports_grpc_client.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=airports_grpc_client.go -destination=mocks/airports_grpc_client_grpc_client_mocks.go -package=mocks\n//", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 9, "end_line": 11, "text": "// Package mocks is a generated GoMock package.\npackage mocks\n", "n_tokens": 13, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 11], "def_symbols": [], "symbols": ["Package", "mocks", "generated", "GoMock", "package"], "doc_head": "// Package mocks is a generated GoMock package.\npackage mocks", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 19, "text": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)\n", "n_tokens": 42, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 19], "def_symbols": [], "symbols": ["import", "context", "reflect", "core", "impalastudios", "com", "aviation", "liveflights", "internal", "gomock", "uber", "org", "mock"], "doc_head": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 20, "end_line": 26, "text": "// MockAirportsCache is a mock of AirportsCache interface.\ntype MockAirportsCache struct {\n\tctrl     *gomock.Controller\n\trecorder *MockAirportsCacheMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 44, "primary_symbol": "MockAirportsCache", "primary_kind": "type", "primary_span": [20, 26], "def_symbols": [], "symbols": ["MockAirportsCache", "mock", "AirportsCache", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockAirportsCacheMockRecorder", "isgomock"], "doc_head": "// MockAirportsCache is a mock of AirportsCache interface.\ntype MockAirportsCache struct {\n\tctrl     *gomock.Controller\n\trecorder *MockAirportsCacheMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockAirportsCache (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockAirportsCache", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockAirportsCache"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockAirportsCache (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockAirportsCache"], "all_type_kinds": ["struct"], "all_start_bytes": [513], "all_end_bytes": [630], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockAirportsCache", "MockAirportsCacheMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 27, "end_line": 31, "text": "// MockAirportsCacheMockRecorder is the mock recorder for MockAirportsCache.\ntype MockAirportsCacheMockRecorder struct {\n\tmock *MockAirportsCache\n}\n", "n_tokens": 34, "primary_symbol": "MockAirportsCacheMockRecorder", "primary_kind": "type", "primary_span": [27, 31], "def_symbols": [], "symbols": ["MockAirportsCacheMockRecorder", "the", "mock", "recorder", "for", "MockAirportsCache", "type", "struct"], "doc_head": "// MockAirportsCacheMockRecorder is the mock recorder for MockAirportsCache.\ntype MockAirportsCacheMockRecorder struct {\n\tmock *MockAirportsCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockAirportsCacheMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockAirportsCacheMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockAirportsCacheMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockAirportsCacheMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockAirportsCacheMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [714], "all_end_bytes": [779], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["MockAirportsCache", "MockAirportsCacheMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 32, "end_line": 38, "text": "// NewMockAirportsCache creates a new mock instance.\nfunc NewMockAirportsCache(ctrl *gomock.Controller) *MockAirportsCache {\n\tmock := &MockAirportsCache{ctrl: ctrl}\n\tmock.recorder = &MockAirportsCacheMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 60, "primary_symbol": "NewMockAirportsCache", "primary_kind": "function", "primary_span": [33, 38], "def_symbols": [], "symbols": ["NewMockAirportsCache", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "MockAirportsCache", "recorder", "MockAirportsCacheMockRecorder", "return"], "doc_head": "// NewMockAirportsCache creates a new mock instance.\nfunc NewMockAirportsCache(ctrl *gomock.Controller) *MockAirportsCache {\n\tmock := &MockAirportsCache{ctrl: ctrl}\n\tmock.recorder = &MockAirportsCacheMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockAirportsCache/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockAirportsCache", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockAirportsCache"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockAirportsCache/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [834], "all_end_bytes": [1014], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "MockAirportsCache", "MockAirportsCacheMockRecorder", "NewMockAirportsCache", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 39, "end_line": 43, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockAirportsCache) EXPECT() *MockAirportsCacheMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 39, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [40, 43], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "MockAirportsCache", "MockAirportsCacheMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *MockAirportsCache) EXPECT() *MockAirportsCacheMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirportsCache).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockAirportsCache", "function_name": "", "method_name": "EXPECT", "type_name": "MockAirportsCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirportsCache).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockAirportsCache"], "all_type_names": ["MockAirportsCache"], "all_type_kinds": [null], "all_start_bytes": [1093], "all_end_bytes": [1183], "primary_index": 0, "all_receivers_normalized": ["(*MockAirportsCache)"], "imports_used_minimal": [], "symbols_referenced_strict": ["MockAirportsCache", "MockAirportsCacheMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *MockAirportsCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 44, "end_line": 52, "text": "// Get mocks base method.\nfunc (m *MockAirportsCache) Get(ctx context.Context, key string) (core.Airport, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Get\", ctx, key)\n\tret0, _ := ret[0].(core.Airport)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 86, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [45, 52], "def_symbols": [], "symbols": ["Get", "mocks", "base", "method", "func", "MockAirportsCache", "ctx", "context", "Context", "key", "string", "core", "Airport", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// Get mocks base method.\nfunc (m *MockAirportsCache) Get(ctx context.Context, key string) (core.Airport, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Get\", ctx, key)\n\tret0, _ := ret[0].(core.Airport)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirportsCache).Get/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockAirportsCache", "function_name": "", "method_name": "Get", "type_name": "MockAirportsCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirportsCache).Get/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockAirportsCache"], "all_type_names": ["MockAirportsCache"], "all_type_kinds": [null], "all_start_bytes": [1211], "all_end_bytes": [1440], "primary_index": 0, "all_receivers_normalized": ["(*MockAirportsCache)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airport", "Call", "Context", "Get", "Helper", "MockAirportsCache", "T.Helper", "context.Context", "core.Airport", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockAirportsCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 53, "end_line": 58, "text": "// Get indicates an expected call of Get.\nfunc (mr *MockAirportsCacheMockRecorder) Get(ctx, key any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Get\", reflect.TypeOf((*MockAirportsCache)(nil).Get), ctx, key)\n}\n", "n_tokens": 71, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [54, 58], "def_symbols": [], "symbols": ["Get", "indicates", "expected", "call", "func", "MockAirportsCacheMockRecorder", "ctx", "key", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockAirportsCache", "nil"], "doc_head": "// Get indicates an expected call of Get.\nfunc (mr *MockAirportsCacheMockRecorder) Get(ctx, key any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Get\", reflect.TypeOf((*MockAirportsCache)(nil).Get), ctx, key)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirportsCacheMockRecorder).Get/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockAirportsCacheMockRecorder", "function_name": "", "method_name": "Get", "type_name": "MockAirportsCacheMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirportsCacheMockRecorder).Get/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockAirportsCacheMockRecorder"], "all_type_names": ["MockAirportsCacheMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1484], "all_end_bytes": [1703], "primary_index": 0, "all_receivers_normalized": ["(*MockAirportsCacheMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Get", "Helper", "MockAirportsCache", "MockAirportsCacheMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockAirportsCacheMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 59, "end_line": 66, "text": "// Set mocks base method.\nfunc (m *MockAirportsCache) Set(ctx context.Context, key string, airport core.Airport) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Set\", ctx, key, airport)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 69, "primary_symbol": "Set", "primary_kind": "method", "primary_span": [60, 66], "def_symbols": [], "symbols": ["Set", "mocks", "base", "method", "func", "MockAirportsCache", "ctx", "context", "Context", "key", "string", "airport", "core", "Airport", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// Set mocks base method.\nfunc (m *MockAirportsCache) Set(ctx context.Context, key string, airport core.Airport) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Set\", ctx, key, airport)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirportsCache).Set/complete", "package": "mocks", "node_kind": "method", "receiver": "m *MockAirportsCache", "function_name": "", "method_name": "Set", "type_name": "MockAirportsCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Set"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirportsCache).Set/complete"], "all_roles": ["complete"], "all_receivers": ["m *MockAirportsCache"], "all_type_names": ["MockAirportsCache"], "all_type_kinds": [null], "all_start_bytes": [1731], "all_end_bytes": [1935], "primary_index": 0, "all_receivers_normalized": ["(*MockAirportsCache)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airport", "Call", "Context", "Helper", "MockAirportsCache", "Set", "T.Helper", "context.Context", "core.Airport", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *MockAirportsCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "rel_path": "internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 67, "end_line": 72, "text": "// Set indicates an expected call of Set.\nfunc (mr *MockAirportsCacheMockRecorder) Set(ctx, key, airport any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Set\", reflect.TypeOf((*MockAirportsCache)(nil).Set), ctx, key, airport)\n}\n", "n_tokens": 75, "primary_symbol": "Set", "primary_kind": "method", "primary_span": [68, 72], "def_symbols": [], "symbols": ["Set", "indicates", "expected", "call", "func", "MockAirportsCacheMockRecorder", "ctx", "key", "airport", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "MockAirportsCache", "nil"], "doc_head": "// Set indicates an expected call of Set.\nfunc (mr *MockAirportsCacheMockRecorder) Set(ctx, key, airport any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Set\", reflect.TypeOf((*MockAirportsCache)(nil).Set), ctx, key, airport)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockAirportsCacheMockRecorder).Set/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockAirportsCacheMockRecorder", "function_name": "", "method_name": "Set", "type_name": "MockAirportsCacheMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Set"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockAirportsCacheMockRecorder).Set/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockAirportsCacheMockRecorder"], "all_type_names": ["MockAirportsCacheMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1979], "all_end_bytes": [2216], "primary_index": 0, "all_receivers_normalized": ["(*MockAirportsCacheMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Helper", "MockAirportsCache", "MockAirportsCacheMockRecorder", "RecordCallWithMethodType", "Set", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockAirportsCacheMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mocks/airports_grpc_client_grpc_client_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go", "rel_path": "internal/adapters/cache/models.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package cache\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "cache"], "doc_head": "package cache", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go", "rel_path": "internal/adapters/cache/models.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 4, "text": "import \"go.impalastudios.com/aviation/liveflights/internal/core\"\n", "n_tokens": 17, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 4], "def_symbols": [], "symbols": ["import", "impalastudios", "com", "aviation", "liveflights", "internal", "core"], "doc_head": "import \"go.impalastudios.com/aviation/liveflights/internal/core\"", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go", "rel_path": "internal/adapters/cache/models.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 5, "end_line": 12, "text": "type airline struct {\n\tID             string  `json:\"id\"`\n\tDesignator     string  `json:\"designator\"`\n\tICAO           *string `json:\"icao,omitempty\"`\n\tIATA           *string `json:\"iata,omitempty\"`\n\tClassification int64   `json:\"classification\"`\n}\n", "n_tokens": 60, "primary_symbol": "airline", "primary_kind": "type", "primary_span": [5, 12], "def_symbols": [], "symbols": ["type", "airline", "struct", "string", "json", "Designator", "designator", "ICAO", "icao", "omitempty", "IATA", "iata", "Classification", "int64", "classification"], "doc_head": "type airline struct {\n\tID             string  `json:\"id\"`\n\tDesignator     string  `json:\"designator\"`\n\tICAO           *string `json:\"icao,omitempty\"`\n\tIATA           *string `json:\"iata,omitempty\"`\n\tClassification int64   `json:\"classification\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:airline (struct)", "package": "cache", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "airline", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["airline"], "all_kinds": ["type"], "all_ast_paths": ["go:type:airline (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["airline"], "all_type_kinds": ["struct"], "all_start_bytes": [86], "all_end_bytes": [328], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Classification", "Designator"], "header_context_minimal": "package cache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go", "rel_path": "internal/adapters/cache/models.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 13, "end_line": 20, "text": "type airport struct {\n\tID             string  `json:\"id\"`\n\tDesignator     string  `json:\"designator\"`\n\tICAO           *string `json:\"icao,omitempty\"`\n\tIATA           *string `json:\"iata,omitempty\"`\n\tClassification int64   `json:\"classification\"`\n}\n", "n_tokens": 60, "primary_symbol": "airport", "primary_kind": "type", "primary_span": [13, 20], "def_symbols": [], "symbols": ["type", "airport", "struct", "string", "json", "Designator", "designator", "ICAO", "icao", "omitempty", "IATA", "iata", "Classification", "int64", "classification"], "doc_head": "type airport struct {\n\tID             string  `json:\"id\"`\n\tDesignator     string  `json:\"designator\"`\n\tICAO           *string `json:\"icao,omitempty\"`\n\tIATA           *string `json:\"iata,omitempty\"`\n\tClassification int64   `json:\"classification\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:airport (struct)", "package": "cache", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "airport", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["airport"], "all_kinds": ["type"], "all_ast_paths": ["go:type:airport (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["airport"], "all_type_kinds": ["struct"], "all_start_bytes": [335], "all_end_bytes": [577], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Classification", "Designator"], "header_context_minimal": "package cache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go", "rel_path": "internal/adapters/cache/models.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 21, "end_line": 30, "text": "func airlineFromDomain(a core.Airline) airline {\n\treturn airline{\n\t\tID:             a.ID,\n\t\tDesignator:     a.Designator,\n\t\tICAO:           a.ICAO,\n\t\tIATA:           a.IATA,\n\t\tClassification: a.Classification,\n\t}\n}\n", "n_tokens": 62, "primary_symbol": "airlineFromDomain", "primary_kind": "function", "primary_span": [21, 30], "def_symbols": [], "symbols": ["airlineFromDomain", "func", "core", "Airline", "airline", "return", "Designator", "ICAO", "IATA", "Classification"], "doc_head": "func airlineFromDomain(a core.Airline) airline {\n\treturn airline{\n\t\tID:             a.ID,\n\t\tDesignator:     a.Designator,\n\t\tICAO:           a.ICAO,\n\t\tIATA:           a.IATA,\n\t\tClassification: a.Classification,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:airlineFromDomain/complete", "package": "cache", "node_kind": "function", "receiver": "", "function_name": "airlineFromDomain", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["airlineFromDomain"], "all_kinds": ["function"], "all_ast_paths": ["go:function:airlineFromDomain/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [579], "all_end_bytes": [793], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airline", "Classification", "Designator", "a.Classification", "a.Designator", "a.IATA", "a.ICAO", "a.ID", "core.Airline"], "header_context_minimal": "package cache\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go", "rel_path": "internal/adapters/cache/models.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 31, "end_line": 40, "text": "func (a airline) toDomain() core.Airline {\n\treturn core.Airline{\n\t\tID:             a.ID,\n\t\tDesignator:     a.Designator,\n\t\tICAO:           a.ICAO,\n\t\tIATA:           a.IATA,\n\t\tClassification: a.Classification,\n\t}\n}\n", "n_tokens": 66, "primary_symbol": "toDomain", "primary_kind": "method", "primary_span": [31, 40], "def_symbols": [], "symbols": ["toDomain", "func", "airline", "core", "Airline", "return", "Designator", "ICAO", "IATA", "Classification"], "doc_head": "func (a airline) toDomain() core.Airline {\n\treturn core.Airline{\n\t\tID:             a.ID,\n\t\tDesignator:     a.Designator,\n\t\tICAO:           a.ICAO,\n\t\tIATA:           a.IATA,\n\t\tClassification: a.Classification,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(airline).toDomain/complete", "package": "cache", "node_kind": "method", "receiver": "a airline", "function_name": "", "method_name": "toDomain", "type_name": "airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["toDomain"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(airline).toDomain/complete"], "all_roles": ["complete"], "all_receivers": ["a airline"], "all_type_names": ["airline"], "all_type_kinds": [null], "all_start_bytes": [795], "all_end_bytes": [1008], "primary_index": 0, "all_receivers_normalized": ["(airline)"], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airline", "Classification", "Designator", "a.Classification", "a.Designator", "a.IATA", "a.ICAO", "a.ID", "core.Airline"], "header_context_minimal": "package cache\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"\n// receiver: a airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go", "rel_path": "internal/adapters/cache/models.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 41, "end_line": 50, "text": "func airportFromDomain(a core.Airport) airport {\n\treturn airport{\n\t\tID:             a.ID,\n\t\tDesignator:     a.Designator,\n\t\tICAO:           a.ICAO,\n\t\tIATA:           a.IATA,\n\t\tClassification: a.Classification,\n\t}\n}\n", "n_tokens": 62, "primary_symbol": "airportFromDomain", "primary_kind": "function", "primary_span": [41, 50], "def_symbols": [], "symbols": ["airportFromDomain", "func", "core", "Airport", "airport", "return", "Designator", "ICAO", "IATA", "Classification"], "doc_head": "func airportFromDomain(a core.Airport) airport {\n\treturn airport{\n\t\tID:             a.ID,\n\t\tDesignator:     a.Designator,\n\t\tICAO:           a.ICAO,\n\t\tIATA:           a.IATA,\n\t\tClassification: a.Classification,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:airportFromDomain/complete", "package": "cache", "node_kind": "function", "receiver": "", "function_name": "airportFromDomain", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["airportFromDomain"], "all_kinds": ["function"], "all_ast_paths": ["go:function:airportFromDomain/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1010], "all_end_bytes": [1224], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airport", "Classification", "Designator", "a.Classification", "a.Designator", "a.IATA", "a.ICAO", "a.ID", "core.Airport"], "header_context_minimal": "package cache\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go", "rel_path": "internal/adapters/cache/models.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 51, "end_line": 60, "text": "func (a airport) toDomain() core.Airport {\n\treturn core.Airport{\n\t\tID:             a.ID,\n\t\tDesignator:     a.Designator,\n\t\tICAO:           a.ICAO,\n\t\tIATA:           a.IATA,\n\t\tClassification: a.Classification,\n\t}\n}\n", "n_tokens": 66, "primary_symbol": "toDomain", "primary_kind": "method", "primary_span": [51, 60], "def_symbols": [], "symbols": ["toDomain", "func", "airport", "core", "Airport", "return", "Designator", "ICAO", "IATA", "Classification"], "doc_head": "func (a airport) toDomain() core.Airport {\n\treturn core.Airport{\n\t\tID:             a.ID,\n\t\tDesignator:     a.Designator,\n\t\tICAO:           a.ICAO,\n\t\tIATA:           a.IATA,\n\t\tClassification: a.Classification,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(airport).toDomain/complete", "package": "cache", "node_kind": "method", "receiver": "a airport", "function_name": "", "method_name": "toDomain", "type_name": "airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["toDomain"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(airport).toDomain/complete"], "all_roles": ["complete"], "all_receivers": ["a airport"], "all_type_names": ["airport"], "all_type_kinds": [null], "all_start_bytes": [1226], "all_end_bytes": [1439], "primary_index": 0, "all_receivers_normalized": ["(airport)"], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Airport", "Classification", "Designator", "a.Classification", "a.Designator", "a.IATA", "a.ICAO", "a.ID", "core.Airport"], "header_context_minimal": "package cache\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"\n// receiver: a airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/models.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airlines_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go", "rel_path": "internal/adapters/cache/airlines_cache.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package cache\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "cache"], "doc_head": "package cache", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airlines_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go", "rel_path": "internal/adapters/cache/airlines_cache.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 15, "text": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/go-redis/cache/v9\"\n\t\"github.com/pkg/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n\t\"time\"\n)\n", "n_tokens": 89, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 15], "def_symbols": [], "symbols": ["import", "context", "fmt", "github", "com", "redis", "cache", "pkg", "errors", "impalastudios", "aviation", "liveflights", "internal", "core", "xotel", "otel", "opentelemetry", "attribute", "codes", "trace", "time"], "doc_head": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/go-redis/cache/v9\"\n\t\"github.com/pkg/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airlines_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go", "rel_path": "internal/adapters/cache/airlines_cache.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 16, "end_line": 20, "text": "type AirlinesCache struct {\n\tclient client\n\tttl    time.Duration\n}\n", "n_tokens": 15, "primary_symbol": "AirlinesCache", "primary_kind": "type", "primary_span": [16, 20], "def_symbols": [], "symbols": ["type", "AirlinesCache", "struct", "client", "ttl", "time", "Duration"], "doc_head": "type AirlinesCache struct {\n\tclient client\n\tttl    time.Duration\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:AirlinesCache (struct)", "package": "cache", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirlinesCache", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["AirlinesCache"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirlinesCache (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirlinesCache"], "all_type_kinds": ["struct"], "all_start_bytes": [315], "all_end_bytes": [376], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["AirlinesCache", "Duration", "time.Duration"], "header_context_minimal": "package cache\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airlines_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go", "rel_path": "internal/adapters/cache/airlines_cache.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 21, "end_line": 27, "text": "func NewAirlinesCache(client client, ttl time.Duration) *AirlinesCache {\n\treturn &AirlinesCache{\n\t\tclient: client,\n\t\tttl:    ttl,\n\t}\n}\n", "n_tokens": 38, "primary_symbol": "NewAirlinesCache", "primary_kind": "function", "primary_span": [21, 27], "def_symbols": [], "symbols": ["NewAirlinesCache", "func", "client", "ttl", "time", "Duration", "AirlinesCache", "return"], "doc_head": "func NewAirlinesCache(client client, ttl time.Duration) *AirlinesCache {\n\treturn &AirlinesCache{\n\t\tclient: client,\n\t\tttl:    ttl,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewAirlinesCache/complete", "package": "cache", "node_kind": "function", "receiver": "", "function_name": "NewAirlinesCache", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewAirlinesCache"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewAirlinesCache/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [378], "all_end_bytes": [512], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["AirlinesCache", "Duration", "NewAirlinesCache", "time.Duration"], "header_context_minimal": "package cache\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airlines_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go", "rel_path": "internal/adapters/cache/airlines_cache.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 28, "end_line": 50, "text": "func (c *AirlinesCache) Get(ctx context.Context, designator string) (core.Airline, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirlinesCache:Get\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(attribute.String(\"designator\", designator))\n\n\tkey := fmt.Sprintf(\"airlines:%s\", designator)\n\n\tvar item airline\n\terr := c.client.Get(ctx, key, &item)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\tif errors.Is(err, cache.ErrCacheMiss) {\n\t\t\treturn core.Airline{}, core.ErrCacheMiss\n\t\t}\n\t\treturn core.Airline{}, errors.Wrap(err, \"failed to get airline from cache\")\n\t}\n\n\treturn item.toDomain(), nil\n}\n", "n_tokens": 178, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [28, 50], "def_symbols": [], "symbols": ["Get", "func", "AirlinesCache", "ctx", "context", "Context", "designator", "string", "core", "Airline", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "key", "fmt", "Sprintf", "airlines", "var", "item", "airline", "err", "client", "nil", "RecordError", "SetStatus", "codes", "Error", "errors", "cache", "ErrCacheMiss", "return", "Wrap", "failed", "get", "from", "toDomain"], "doc_head": "func (c *AirlinesCache) Get(ctx context.Context, designator string) (core.Airline, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirlinesCache:Get\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(attribute.String(\"designator\", designator))\n\tkey := fmt.Sprintf(\"airlines:%s\", designator)\n\tvar item airline\n\terr := c.client.Get(ctx, key, &item)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\tif errors.Is(err, cache.ErrCacheMiss) {\n\t\t\treturn core.Airline{}, core.ErrCacheMiss\n\t\t}\n\t\treturn core.Airline{}, errors.Wrap(err, \"failed to get airline from cache\")\n\t}\n\treturn item.toDomain(), nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*AirlinesCache).Get/complete", "package": "cache", "node_kind": "method", "receiver": "c *AirlinesCache", "function_name": "", "method_name": "Get", "type_name": "AirlinesCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlinesCache).Get/complete"], "all_roles": ["complete"], "all_receivers": ["c *AirlinesCache"], "all_type_names": ["AirlinesCache"], "all_type_kinds": [null], "all_start_bytes": [514], "all_end_bytes": [1182], "primary_index": 0, "all_receivers_normalized": ["(*AirlinesCache)"], "imports_used_minimal": ["context", "fmt", "github.com/pkg/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["Airline", "AirlinesCache", "Context", "End", "ErrCacheMiss", "Error", "Get", "RecordError", "SetAttributes", "SetStatus", "SpanKindClient", "Sprintf", "Start", "String", "Tracer", "WithSpanKind", "Wrap", "attribute.String", "c.client", "cache.ErrCacheMiss", "codes.Error", "context.Context", "core.Airline", "core.ErrCacheMiss", "err.Error", "errors.Is", "errors.Wrap", "fmt.Sprintf", "item.toDomain", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package cache\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/pkg/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n)\n// receiver: c *AirlinesCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airlines_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go", "rel_path": "internal/adapters/cache/airlines_cache.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 51, "end_line": 69, "text": "func (c *AirlinesCache) Set(ctx context.Context, designator string, airline core.Airline) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirlinesCache:Set\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.String(\"designator\", designator),\n\t\tattribute.String(\"cache_ttl\", c.ttl.String()),\n\t)\n\n\tkey := fmt.Sprintf(\"airlines:%s\", designator)\n\n\treturn c.client.Set(&cache.Item{\n\t\tCtx:   ctx,\n\t\tKey:   key,\n\t\tValue: airlineFromDomain(airline),\n\t\tTTL:   c.ttl,\n\t})\n}\n", "n_tokens": 142, "primary_symbol": "Set", "primary_kind": "method", "primary_span": [51, 69], "def_symbols": [], "symbols": ["Set", "func", "AirlinesCache", "ctx", "context", "Context", "designator", "string", "airline", "core", "Airline", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "cache_ttl", "ttl", "key", "fmt", "Sprintf", "airlines", "return", "client", "cache", "Item", "Ctx", "Key", "Value", "airlineFromDomain", "TTL"], "doc_head": "func (c *AirlinesCache) Set(ctx context.Context, designator string, airline core.Airline) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirlinesCache:Set\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.String(\"designator\", designator),\n\t\tattribute.String(\"cache_ttl\", c.ttl.String()),\n\t)\n\tkey := fmt.Sprintf(\"airlines:%s\", designator)\n\treturn c.client.Set(&cache.Item{\n\t\tCtx:   ctx,\n\t\tKey:   key,\n\t\tValue: airlineFromDomain(airline),\n\t\tTTL:   c.ttl,\n\t})\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*AirlinesCache).Set/complete", "package": "cache", "node_kind": "method", "receiver": "c *AirlinesCache", "function_name": "", "method_name": "Set", "type_name": "AirlinesCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Set"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlinesCache).Set/complete"], "all_roles": ["complete"], "all_receivers": ["c *AirlinesCache"], "all_type_names": ["AirlinesCache"], "all_type_kinds": [null], "all_start_bytes": [1184], "all_end_bytes": [1690], "primary_index": 0, "all_receivers_normalized": ["(*AirlinesCache)"], "imports_used_minimal": ["context", "fmt", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["Airline", "AirlinesCache", "Context", "Ctx", "End", "Item", "Key", "Set", "SetAttributes", "SpanKindClient", "Sprintf", "Start", "String", "Tracer", "Value", "WithSpanKind", "attribute.String", "c.client", "c.ttl", "cache.Item", "context.Context", "core.Airline", "fmt.Sprintf", "span.End", "span.SetAttributes", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package cache\nimport (\n    \"context\"\n    \"fmt\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.opentelemetry.io/otel/attribute\"\n)\n// receiver: c *AirlinesCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airlines_cache.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airports_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go", "rel_path": "internal/adapters/cache/airports_cache.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package cache\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "cache"], "doc_head": "package cache", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airports_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go", "rel_path": "internal/adapters/cache/airports_cache.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 15, "text": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/go-redis/cache/v9\"\n\t\"github.com/pkg/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n\t\"time\"\n)\n", "n_tokens": 89, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 15], "def_symbols": [], "symbols": ["import", "context", "fmt", "github", "com", "redis", "cache", "pkg", "errors", "impalastudios", "aviation", "liveflights", "internal", "core", "xotel", "otel", "opentelemetry", "attribute", "codes", "trace", "time"], "doc_head": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/go-redis/cache/v9\"\n\t\"github.com/pkg/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airports_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go", "rel_path": "internal/adapters/cache/airports_cache.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 16, "end_line": 20, "text": "type AirportsCache struct {\n\tclient client\n\tttl    time.Duration\n}\n", "n_tokens": 16, "primary_symbol": "AirportsCache", "primary_kind": "type", "primary_span": [16, 20], "def_symbols": [], "symbols": ["type", "AirportsCache", "struct", "client", "ttl", "time", "Duration"], "doc_head": "type AirportsCache struct {\n\tclient client\n\tttl    time.Duration\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:AirportsCache (struct)", "package": "cache", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirportsCache", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["AirportsCache"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirportsCache (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirportsCache"], "all_type_kinds": ["struct"], "all_start_bytes": [315], "all_end_bytes": [376], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["AirportsCache", "Duration", "time.Duration"], "header_context_minimal": "package cache\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airports_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go", "rel_path": "internal/adapters/cache/airports_cache.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 21, "end_line": 27, "text": "func NewAirportsCache(client client, ttl time.Duration) *AirportsCache {\n\treturn &AirportsCache{\n\t\tclient: client,\n\t\tttl:    ttl,\n\t}\n}\n", "n_tokens": 38, "primary_symbol": "NewAirportsCache", "primary_kind": "function", "primary_span": [21, 27], "def_symbols": [], "symbols": ["NewAirportsCache", "func", "client", "ttl", "time", "Duration", "AirportsCache", "return"], "doc_head": "func NewAirportsCache(client client, ttl time.Duration) *AirportsCache {\n\treturn &AirportsCache{\n\t\tclient: client,\n\t\tttl:    ttl,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewAirportsCache/complete", "package": "cache", "node_kind": "function", "receiver": "", "function_name": "NewAirportsCache", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewAirportsCache"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewAirportsCache/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [378], "all_end_bytes": [512], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["AirportsCache", "Duration", "NewAirportsCache", "time.Duration"], "header_context_minimal": "package cache\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airports_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go", "rel_path": "internal/adapters/cache/airports_cache.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 28, "end_line": 50, "text": "func (c *AirportsCache) Get(ctx context.Context, designator string) (core.Airport, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirportsCache:Get\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(attribute.String(\"designator\", designator))\n\n\tkey := fmt.Sprintf(\"airports:%s\", designator)\n\n\tvar item airport\n\terr := c.client.Get(ctx, key, &item)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\tif errors.Is(err, cache.ErrCacheMiss) {\n\t\t\treturn core.Airport{}, core.ErrCacheMiss\n\t\t}\n\t\treturn core.Airport{}, errors.Wrap(err, \"failed to get airport from cache\")\n\t}\n\n\treturn item.toDomain(), nil\n}\n", "n_tokens": 178, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [28, 50], "def_symbols": [], "symbols": ["Get", "func", "AirportsCache", "ctx", "context", "Context", "designator", "string", "core", "Airport", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "key", "fmt", "Sprintf", "airports", "var", "item", "airport", "err", "client", "nil", "RecordError", "SetStatus", "codes", "Error", "errors", "cache", "ErrCacheMiss", "return", "Wrap", "failed", "get", "from", "toDomain"], "doc_head": "func (c *AirportsCache) Get(ctx context.Context, designator string) (core.Airport, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirportsCache:Get\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(attribute.String(\"designator\", designator))\n\tkey := fmt.Sprintf(\"airports:%s\", designator)\n\tvar item airport\n\terr := c.client.Get(ctx, key, &item)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\tif errors.Is(err, cache.ErrCacheMiss) {\n\t\t\treturn core.Airport{}, core.ErrCacheMiss\n\t\t}\n\t\treturn core.Airport{}, errors.Wrap(err, \"failed to get airport from cache\")\n\t}\n\treturn item.toDomain(), nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*AirportsCache).Get/complete", "package": "cache", "node_kind": "method", "receiver": "c *AirportsCache", "function_name": "", "method_name": "Get", "type_name": "AirportsCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportsCache).Get/complete"], "all_roles": ["complete"], "all_receivers": ["c *AirportsCache"], "all_type_names": ["AirportsCache"], "all_type_kinds": [null], "all_start_bytes": [514], "all_end_bytes": [1182], "primary_index": 0, "all_receivers_normalized": ["(*AirportsCache)"], "imports_used_minimal": ["context", "fmt", "github.com/pkg/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["Airport", "AirportsCache", "Context", "End", "ErrCacheMiss", "Error", "Get", "RecordError", "SetAttributes", "SetStatus", "SpanKindClient", "Sprintf", "Start", "String", "Tracer", "WithSpanKind", "Wrap", "attribute.String", "c.client", "cache.ErrCacheMiss", "codes.Error", "context.Context", "core.Airport", "core.ErrCacheMiss", "err.Error", "errors.Is", "errors.Wrap", "fmt.Sprintf", "item.toDomain", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package cache\nimport (\n    \"context\"\n    \"fmt\"\n    \"github.com/pkg/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n)\n// receiver: c *AirportsCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/airports_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go", "rel_path": "internal/adapters/cache/airports_cache.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 51, "end_line": 67, "text": "func (c *AirportsCache) Set(ctx context.Context, designator string, airport core.Airport) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirportsCache:Set\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(attribute.String(\"designator\", designator))\n\tspan.SetAttributes(attribute.String(\"cache_ttl\", c.ttl.String()))\n\n\tkey := fmt.Sprintf(\"airports:%s\", designator)\n\n\treturn c.client.Set(&cache.Item{\n\t\tCtx:   ctx,\n\t\tKey:   key,\n\t\tValue: airportFromDomain(airport),\n\t\tTTL:   c.ttl,\n\t})\n}\n", "n_tokens": 138, "primary_symbol": "Set", "primary_kind": "method", "primary_span": [51, 67], "def_symbols": [], "symbols": ["Set", "func", "AirportsCache", "ctx", "context", "Context", "designator", "string", "airport", "core", "Airport", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "cache_ttl", "ttl", "key", "fmt", "Sprintf", "airports", "return", "client", "cache", "Item", "Ctx", "Key", "Value", "airportFromDomain", "TTL"], "doc_head": "func (c *AirportsCache) Set(ctx context.Context, designator string, airport core.Airport) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"AirportsCache:Set\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(attribute.String(\"designator\", designator))\n\tspan.SetAttributes(attribute.String(\"cache_ttl\", c.ttl.String()))\n\tkey := fmt.Sprintf(\"airports:%s\", designator)\n\treturn c.client.Set(&cache.Item{\n\t\tCtx:   ctx,\n\t\tKey:   key,\n\t\tValue: airportFromDomain(airport),\n\t\tTTL:   c.ttl,\n\t})\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*AirportsCache).Set/complete", "package": "cache", "node_kind": "method", "receiver": "c *AirportsCache", "function_name": "", "method_name": "Set", "type_name": "AirportsCache", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Set"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportsCache).Set/complete"], "all_roles": ["complete"], "all_receivers": ["c *AirportsCache"], "all_type_names": ["AirportsCache"], "all_type_kinds": [null], "all_start_bytes": [1184], "all_end_bytes": [1702], "primary_index": 0, "all_receivers_normalized": ["(*AirportsCache)"], "imports_used_minimal": ["context", "fmt", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["Airport", "AirportsCache", "Context", "Ctx", "End", "Item", "Key", "Set", "SetAttributes", "SpanKindClient", "Sprintf", "Start", "String", "Tracer", "Value", "WithSpanKind", "attribute.String", "c.client", "c.ttl", "cache.Item", "context.Context", "core.Airport", "fmt.Sprintf", "span.End", "span.SetAttributes", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package cache\nimport (\n    \"context\"\n    \"fmt\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.opentelemetry.io/otel/attribute\"\n)\n// receiver: c *AirportsCache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/airports_cache.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/redis_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go", "rel_path": "internal/adapters/cache/redis_cache.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package cache\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "cache"], "doc_head": "package cache", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/redis_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go", "rel_path": "internal/adapters/cache/redis_cache.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 8, "text": "import (\n\t\"context\"\n\t\"github.com/go-redis/cache/v9\"\n\t\"github.com/redis/go-redis/v9\"\n)\n", "n_tokens": 27, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 8], "def_symbols": [], "symbols": ["import", "context", "github", "com", "redis", "cache"], "doc_head": "import (\n\t\"context\"\n\t\"github.com/go-redis/cache/v9\"\n\t\"github.com/redis/go-redis/v9\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/redis_cache.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go", "rel_path": "internal/adapters/cache/redis_cache.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 9, "end_line": 18, "text": "//go:generate mockgen -source=redis_cache.go -destination=mocks/redis_cache_mocks.go -package=mocks\ntype client interface {\n\tSet(*cache.Item) error\n\tGet(context.Context, string, interface{}) error\n\tDelete(context.Context, string) error\n\tKeys(context.Context, string) *redis.StringSliceCmd\n\tPipelined(context.Context, func(redis.Pipeliner) error) ([]redis.Cmder, error)\n\tExists(context.Context, string) bool\n}\n", "n_tokens": 103, "primary_symbol": "client", "primary_kind": "type", "primary_span": [9, 18], "def_symbols": [], "symbols": ["generate", "mockgen", "source", "redis_cache", "destination", "mocks", "redis_cache_mocks", "package", "type", "client", "interface", "Set", "cache", "Item", "error", "Get", "context", "Context", "string", "Delete", "Keys", "redis", "StringSliceCmd", "Pipelined", "func", "Pipeliner", "Cmder", "Exists", "bool"], "doc_head": "//go:generate mockgen -source=redis_cache.go -destination=mocks/redis_cache_mocks.go -package=mocks\ntype client interface {\n\tSet(*cache.Item) error\n\tGet(context.Context, string, interface{}) error\n\tDelete(context.Context, string) error\n\tKeys(context.Context, string) *redis.StringSliceCmd\n\tPipelined(context.Context, func(redis.Pipeliner) error) ([]redis.Cmder, error)\n\tExists(context.Context, string) bool\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:client (interface)", "package": "cache", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "client", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["client"], "all_kinds": ["type"], "all_ast_paths": ["go:type:client (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["client"], "all_type_kinds": ["interface"], "all_start_bytes": [207], "all_end_bytes": [510], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Cmder", "Context", "Delete", "Exists", "Get", "Item", "Keys", "Pipelined", "Pipeliner", "Set", "StringSliceCmd", "cache.Item", "context.Context", "redis.Cmder", "redis.Pipeliner", "redis.StringSliceCmd"], "header_context_minimal": "package cache\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/redis_cache.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 8, "text": "// Code generated by MockGen. DO NOT EDIT.\n// Source: redis_cache.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=redis_cache.go -destination=mocks/redis_cache_mocks.go -package=mocks\n//\n", "n_tokens": 53, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 8], "def_symbols": [], "symbols": ["Code", "generated", "MockGen", "NOT", "EDIT", "Source", "redis_cache", "Generated", "this", "command", "mockgen", "source", "destination", "mocks", "redis_cache_mocks", "package"], "doc_head": "// Code generated by MockGen. DO NOT EDIT.\n// Source: redis_cache.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=redis_cache.go -destination=mocks/redis_cache_mocks.go -package=mocks\n//", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 9, "end_line": 11, "text": "// Package mocks is a generated GoMock package.\npackage mocks\n", "n_tokens": 13, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 11], "def_symbols": [], "symbols": ["Package", "mocks", "generated", "GoMock", "package"], "doc_head": "// Package mocks is a generated GoMock package.\npackage mocks", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 20, "text": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\n\tcache \"github.com/go-redis/cache/v9\"\n\tredis \"github.com/redis/go-redis/v9\"\n\tgomock \"go.uber.org/mock/gomock\"\n)\n", "n_tokens": 49, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 20], "def_symbols": [], "symbols": ["import", "context", "reflect", "cache", "github", "com", "redis", "gomock", "uber", "org", "mock"], "doc_head": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\tcache \"github.com/go-redis/cache/v9\"\n\tredis \"github.com/redis/go-redis/v9\"\n\tgomock \"go.uber.org/mock/gomock\"\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 21, "end_line": 27, "text": "// Mockclient is a mock of client interface.\ntype Mockclient struct {\n\tctrl     *gomock.Controller\n\trecorder *MockclientMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 36, "primary_symbol": "Mockclient", "primary_kind": "type", "primary_span": [21, 27], "def_symbols": [], "symbols": ["Mockclient", "mock", "client", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MockclientMockRecorder", "isgomock"], "doc_head": "// Mockclient is a mock of client interface.\ntype Mockclient struct {\n\tctrl     *gomock.Controller\n\trecorder *MockclientMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Mockclient (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Mockclient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Mockclient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Mockclient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Mockclient"], "all_type_kinds": ["struct"], "all_start_bytes": [472], "all_end_bytes": [575], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "Mockclient", "MockclientMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 28, "end_line": 32, "text": "// MockclientMockRecorder is the mock recorder for Mockclient.\ntype MockclientMockRecorder struct {\n\tmock *Mockclient\n}\n", "n_tokens": 26, "primary_symbol": "MockclientMockRecorder", "primary_kind": "type", "primary_span": [28, 32], "def_symbols": [], "symbols": ["MockclientMockRecorder", "the", "mock", "recorder", "for", "Mockclient", "type", "struct"], "doc_head": "// MockclientMockRecorder is the mock recorder for Mockclient.\ntype MockclientMockRecorder struct {\n\tmock *Mockclient\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:MockclientMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MockclientMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MockclientMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MockclientMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MockclientMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [645], "all_end_bytes": [696], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Mockclient", "MockclientMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 33, "end_line": 39, "text": "// NewMockclient creates a new mock instance.\nfunc NewMockclient(ctrl *gomock.Controller) *Mockclient {\n\tmock := &Mockclient{ctrl: ctrl}\n\tmock.recorder = &MockclientMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 50, "primary_symbol": "NewMockclient", "primary_kind": "function", "primary_span": [34, 39], "def_symbols": [], "symbols": ["NewMockclient", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "Mockclient", "recorder", "MockclientMockRecorder", "return"], "doc_head": "// NewMockclient creates a new mock instance.\nfunc NewMockclient(ctrl *gomock.Controller) *Mockclient {\n\tmock := &Mockclient{ctrl: ctrl}\n\tmock.recorder = &MockclientMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMockclient/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMockclient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMockclient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMockclient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [744], "all_end_bytes": [896], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "Mockclient", "MockclientMockRecorder", "NewMockclient", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 40, "end_line": 44, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *Mockclient) EXPECT() *MockclientMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 35, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [41, 44], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "Mockclient", "MockclientMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *Mockclient) EXPECT() *MockclientMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mockclient).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mockclient", "function_name": "", "method_name": "EXPECT", "type_name": "Mockclient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mockclient).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mockclient"], "all_type_names": ["Mockclient"], "all_type_kinds": [null], "all_start_bytes": [975], "all_end_bytes": [1051], "primary_index": 0, "all_receivers_normalized": ["(*Mockclient)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Mockclient", "MockclientMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *Mockclient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 45, "end_line": 52, "text": "// Delete mocks base method.\nfunc (m *Mockclient) Delete(arg0 context.Context, arg1 string) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Delete\", arg0, arg1)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 63, "primary_symbol": "Delete", "primary_kind": "method", "primary_span": [46, 52], "def_symbols": [], "symbols": ["Delete", "mocks", "base", "method", "func", "Mockclient", "arg0", "context", "Context", "arg1", "string", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// Delete mocks base method.\nfunc (m *Mockclient) Delete(arg0 context.Context, arg1 string) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Delete\", arg0, arg1)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mockclient).Delete/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mockclient", "function_name": "", "method_name": "Delete", "type_name": "Mockclient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Delete"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mockclient).Delete/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mockclient"], "all_type_names": ["Mockclient"], "all_type_kinds": [null], "all_start_bytes": [1082], "all_end_bytes": [1258], "primary_index": 0, "all_receivers_normalized": ["(*Mockclient)"], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Call", "Context", "Delete", "Helper", "Mockclient", "T.Helper", "context.Context", "m.ctrl"], "header_context_minimal": "package mocks\nimport \"context\"\n// receiver: m *Mockclient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 53, "end_line": 58, "text": "// Delete indicates an expected call of Delete.\nfunc (mr *MockclientMockRecorder) Delete(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Delete\", reflect.TypeOf((*Mockclient)(nil).Delete), arg0, arg1)\n}\n", "n_tokens": 71, "primary_symbol": "Delete", "primary_kind": "method", "primary_span": [54, 58], "def_symbols": [], "symbols": ["Delete", "indicates", "expected", "call", "func", "MockclientMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mockclient", "nil"], "doc_head": "// Delete indicates an expected call of Delete.\nfunc (mr *MockclientMockRecorder) Delete(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Delete\", reflect.TypeOf((*Mockclient)(nil).Delete), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockclientMockRecorder).Delete/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockclientMockRecorder", "function_name": "", "method_name": "Delete", "type_name": "MockclientMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Delete"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockclientMockRecorder).Delete/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockclientMockRecorder"], "all_type_names": ["MockclientMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1308], "all_end_bytes": [1526], "primary_index": 0, "all_receivers_normalized": ["(*MockclientMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Delete", "Helper", "Mockclient", "MockclientMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockclientMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 59, "end_line": 66, "text": "// Exists mocks base method.\nfunc (m *Mockclient) Exists(arg0 context.Context, arg1 string) bool {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Exists\", arg0, arg1)\n\tret0, _ := ret[0].(bool)\n\treturn ret0\n}\n", "n_tokens": 63, "primary_symbol": "Exists", "primary_kind": "method", "primary_span": [60, 66], "def_symbols": [], "symbols": ["Exists", "mocks", "base", "method", "func", "Mockclient", "arg0", "context", "Context", "arg1", "string", "bool", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// Exists mocks base method.\nfunc (m *Mockclient) Exists(arg0 context.Context, arg1 string) bool {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Exists\", arg0, arg1)\n\tret0, _ := ret[0].(bool)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mockclient).Exists/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mockclient", "function_name": "", "method_name": "Exists", "type_name": "Mockclient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Exists"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mockclient).Exists/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mockclient"], "all_type_names": ["Mockclient"], "all_type_kinds": [null], "all_start_bytes": [1557], "all_end_bytes": [1731], "primary_index": 0, "all_receivers_normalized": ["(*Mockclient)"], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Call", "Context", "Exists", "Helper", "Mockclient", "T.Helper", "context.Context", "m.ctrl"], "header_context_minimal": "package mocks\nimport \"context\"\n// receiver: m *Mockclient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 67, "end_line": 72, "text": "// Exists indicates an expected call of Exists.\nfunc (mr *MockclientMockRecorder) Exists(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Exists\", reflect.TypeOf((*Mockclient)(nil).Exists), arg0, arg1)\n}\n", "n_tokens": 71, "primary_symbol": "Exists", "primary_kind": "method", "primary_span": [68, 72], "def_symbols": [], "symbols": ["Exists", "indicates", "expected", "call", "func", "MockclientMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mockclient", "nil"], "doc_head": "// Exists indicates an expected call of Exists.\nfunc (mr *MockclientMockRecorder) Exists(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Exists\", reflect.TypeOf((*Mockclient)(nil).Exists), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockclientMockRecorder).Exists/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockclientMockRecorder", "function_name": "", "method_name": "Exists", "type_name": "MockclientMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Exists"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockclientMockRecorder).Exists/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockclientMockRecorder"], "all_type_names": ["MockclientMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1781], "all_end_bytes": [1999], "primary_index": 0, "all_receivers_normalized": ["(*MockclientMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Exists", "Helper", "Mockclient", "MockclientMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockclientMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 73, "end_line": 80, "text": "// Get mocks base method.\nfunc (m *Mockclient) Get(arg0 context.Context, arg1 string, arg2 any) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Get\", arg0, arg1, arg2)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 70, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [74, 80], "def_symbols": [], "symbols": ["Get", "mocks", "base", "method", "func", "Mockclient", "arg0", "context", "Context", "arg1", "string", "arg2", "any", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// Get mocks base method.\nfunc (m *Mockclient) Get(arg0 context.Context, arg1 string, arg2 any) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Get\", arg0, arg1, arg2)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mockclient).Get/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mockclient", "function_name": "", "method_name": "Get", "type_name": "Mockclient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mockclient).Get/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mockclient"], "all_type_names": ["Mockclient"], "all_type_kinds": [null], "all_start_bytes": [2027], "all_end_bytes": [2213], "primary_index": 0, "all_receivers_normalized": ["(*Mockclient)"], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Call", "Context", "Get", "Helper", "Mockclient", "T.Helper", "context.Context", "m.ctrl"], "header_context_minimal": "package mocks\nimport \"context\"\n// receiver: m *Mockclient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 81, "end_line": 86, "text": "// Get indicates an expected call of Get.\nfunc (mr *MockclientMockRecorder) Get(arg0, arg1, arg2 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Get\", reflect.TypeOf((*Mockclient)(nil).Get), arg0, arg1, arg2)\n}\n", "n_tokens": 77, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [82, 86], "def_symbols": [], "symbols": ["Get", "indicates", "expected", "call", "func", "MockclientMockRecorder", "arg0", "arg1", "arg2", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mockclient", "nil"], "doc_head": "// Get indicates an expected call of Get.\nfunc (mr *MockclientMockRecorder) Get(arg0, arg1, arg2 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Get\", reflect.TypeOf((*Mockclient)(nil).Get), arg0, arg1, arg2)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockclientMockRecorder).Get/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockclientMockRecorder", "function_name": "", "method_name": "Get", "type_name": "MockclientMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockclientMockRecorder).Get/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockclientMockRecorder"], "all_type_names": ["MockclientMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [2257], "all_end_bytes": [2478], "primary_index": 0, "all_receivers_normalized": ["(*MockclientMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Get", "Helper", "Mockclient", "MockclientMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockclientMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 87, "end_line": 94, "text": "// Keys mocks base method.\nfunc (m *Mockclient) Keys(arg0 context.Context, arg1 string) *redis.StringSliceCmd {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Keys\", arg0, arg1)\n\tret0, _ := ret[0].(*redis.StringSliceCmd)\n\treturn ret0\n}\n", "n_tokens": 70, "primary_symbol": "Keys", "primary_kind": "method", "primary_span": [88, 94], "def_symbols": [], "symbols": ["Keys", "mocks", "base", "method", "func", "Mockclient", "arg0", "context", "Context", "arg1", "string", "redis", "StringSliceCmd", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// Keys mocks base method.\nfunc (m *Mockclient) Keys(arg0 context.Context, arg1 string) *redis.StringSliceCmd {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Keys\", arg0, arg1)\n\tret0, _ := ret[0].(*redis.StringSliceCmd)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mockclient).Keys/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mockclient", "function_name": "", "method_name": "Keys", "type_name": "Mockclient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Keys"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mockclient).Keys/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mockclient"], "all_type_names": ["Mockclient"], "all_type_kinds": [null], "all_start_bytes": [2507], "all_end_bytes": [2711], "primary_index": 0, "all_receivers_normalized": ["(*Mockclient)"], "imports_used_minimal": ["context", "github.com/redis/go-redis/v9"], "symbols_referenced_strict": ["Call", "Context", "Helper", "Keys", "Mockclient", "StringSliceCmd", "T.Helper", "context.Context", "m.ctrl", "redis.StringSliceCmd"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"github.com/redis/go-redis/v9\"\n)\n// receiver: m *Mockclient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 95, "end_line": 100, "text": "// Keys indicates an expected call of Keys.\nfunc (mr *MockclientMockRecorder) Keys(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Keys\", reflect.TypeOf((*Mockclient)(nil).Keys), arg0, arg1)\n}\n", "n_tokens": 71, "primary_symbol": "Keys", "primary_kind": "method", "primary_span": [96, 100], "def_symbols": [], "symbols": ["Keys", "indicates", "expected", "call", "func", "MockclientMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mockclient", "nil"], "doc_head": "// Keys indicates an expected call of Keys.\nfunc (mr *MockclientMockRecorder) Keys(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Keys\", reflect.TypeOf((*Mockclient)(nil).Keys), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockclientMockRecorder).Keys/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockclientMockRecorder", "function_name": "", "method_name": "Keys", "type_name": "MockclientMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Keys"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockclientMockRecorder).Keys/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockclientMockRecorder"], "all_type_names": ["MockclientMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [2757], "all_end_bytes": [2969], "primary_index": 0, "all_receivers_normalized": ["(*MockclientMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Helper", "Keys", "Mockclient", "MockclientMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockclientMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#14", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#16", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 16, "start_line": 101, "end_line": 109, "text": "// Pipelined mocks base method.\nfunc (m *Mockclient) Pipelined(arg0 context.Context, arg1 func(redis.Pipeliner) error) ([]redis.Cmder, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Pipelined\", arg0, arg1)\n\tret0, _ := ret[0].([]redis.Cmder)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 100, "primary_symbol": "Pipelined", "primary_kind": "method", "primary_span": [102, 109], "def_symbols": [], "symbols": ["Pipelined", "mocks", "base", "method", "func", "Mockclient", "arg0", "context", "Context", "arg1", "redis", "Pipeliner", "error", "Cmder", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// Pipelined mocks base method.\nfunc (m *Mockclient) Pipelined(arg0 context.Context, arg1 func(redis.Pipeliner) error) ([]redis.Cmder, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Pipelined\", arg0, arg1)\n\tret0, _ := ret[0].([]redis.Cmder)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mockclient).Pipelined/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mockclient", "function_name": "", "method_name": "Pipelined", "type_name": "Mockclient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Pipelined"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mockclient).Pipelined/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mockclient"], "all_type_names": ["Mockclient"], "all_type_kinds": [null], "all_start_bytes": [3003], "all_end_bytes": [3264], "primary_index": 0, "all_receivers_normalized": ["(*Mockclient)"], "imports_used_minimal": ["context", "github.com/redis/go-redis/v9"], "symbols_referenced_strict": ["Call", "Cmder", "Context", "Helper", "Mockclient", "Pipelined", "Pipeliner", "T.Helper", "context.Context", "m.ctrl", "redis.Cmder", "redis.Pipeliner"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"github.com/redis/go-redis/v9\"\n)\n// receiver: m *Mockclient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#15", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#17"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#17", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 17, "start_line": 110, "end_line": 115, "text": "// Pipelined indicates an expected call of Pipelined.\nfunc (mr *MockclientMockRecorder) Pipelined(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Pipelined\", reflect.TypeOf((*Mockclient)(nil).Pipelined), arg0, arg1)\n}\n", "n_tokens": 81, "primary_symbol": "Pipelined", "primary_kind": "method", "primary_span": [111, 115], "def_symbols": [], "symbols": ["Pipelined", "indicates", "expected", "call", "func", "MockclientMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mockclient", "nil"], "doc_head": "// Pipelined indicates an expected call of Pipelined.\nfunc (mr *MockclientMockRecorder) Pipelined(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Pipelined\", reflect.TypeOf((*Mockclient)(nil).Pipelined), arg0, arg1)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockclientMockRecorder).Pipelined/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockclientMockRecorder", "function_name": "", "method_name": "Pipelined", "type_name": "MockclientMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Pipelined"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockclientMockRecorder).Pipelined/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockclientMockRecorder"], "all_type_names": ["MockclientMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [3320], "all_end_bytes": [3547], "primary_index": 0, "all_receivers_normalized": ["(*MockclientMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Helper", "Mockclient", "MockclientMockRecorder", "Pipelined", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockclientMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#16", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#18"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#18", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 18, "start_line": 116, "end_line": 123, "text": "// Set mocks base method.\nfunc (m *Mockclient) Set(arg0 *cache.Item) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Set\", arg0)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}\n", "n_tokens": 57, "primary_symbol": "Set", "primary_kind": "method", "primary_span": [117, 123], "def_symbols": [], "symbols": ["Set", "mocks", "base", "method", "func", "Mockclient", "arg0", "cache", "Item", "error", "ctrl", "Helper", "ret", "Call", "ret0", "return"], "doc_head": "// Set mocks base method.\nfunc (m *Mockclient) Set(arg0 *cache.Item) error {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"Set\", arg0)\n\tret0, _ := ret[0].(error)\n\treturn ret0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mockclient).Set/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mockclient", "function_name": "", "method_name": "Set", "type_name": "Mockclient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Set"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mockclient).Set/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mockclient"], "all_type_names": ["Mockclient"], "all_type_kinds": [null], "all_start_bytes": [3575], "all_end_bytes": [3722], "primary_index": 0, "all_receivers_normalized": ["(*Mockclient)"], "imports_used_minimal": ["github.com/go-redis/cache/v9"], "symbols_referenced_strict": ["Call", "Helper", "Item", "Mockclient", "Set", "T.Helper", "cache.Item", "m.ctrl"], "header_context_minimal": "package mocks\nimport \"github.com/go-redis/cache/v9\"\n// receiver: m *Mockclient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#17", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#19"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#19", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go", "rel_path": "internal/adapters/cache/mocks/redis_cache_mocks.go", "ext": "go", "language": "go", "chunk_number": 19, "start_line": 124, "end_line": 129, "text": "// Set indicates an expected call of Set.\nfunc (mr *MockclientMockRecorder) Set(arg0 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Set\", reflect.TypeOf((*Mockclient)(nil).Set), arg0)\n}\n", "n_tokens": 65, "primary_symbol": "Set", "primary_kind": "method", "primary_span": [125, 129], "def_symbols": [], "symbols": ["Set", "indicates", "expected", "call", "func", "MockclientMockRecorder", "arg0", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mockclient", "nil"], "doc_head": "// Set indicates an expected call of Set.\nfunc (mr *MockclientMockRecorder) Set(arg0 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"Set\", reflect.TypeOf((*Mockclient)(nil).Set), arg0)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*MockclientMockRecorder).Set/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MockclientMockRecorder", "function_name": "", "method_name": "Set", "type_name": "MockclientMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Set"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MockclientMockRecorder).Set/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MockclientMockRecorder"], "all_type_names": ["MockclientMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [3766], "all_end_bytes": [3963], "primary_index": 0, "all_receivers_normalized": ["(*MockclientMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Helper", "Mockclient", "MockclientMockRecorder", "RecordCallWithMethodType", "Set", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MockclientMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/cache/mocks/redis_cache_mocks.go#18"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go", "rel_path": "internal/adapters/filesystem/s3.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package filesystem\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "filesystem"], "doc_head": "package filesystem", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "filesystem", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package filesystem", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go", "rel_path": "internal/adapters/filesystem/s3.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 21, "text": "import (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"github.com/aws/aws-sdk-go-v2/aws\"\n\t\"github.com/aws/aws-sdk-go-v2/service/s3\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"regexp\"\n\t\"strings\"\n\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)\n", "n_tokens": 125, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 21], "def_symbols": [], "symbols": ["import", "bytes", "context", "encoding", "json", "fmt", "github", "com", "aws", "sdk", "service", "impalastudios", "aviation", "liveflights", "internal", "core", "log", "uber", "org", "zap", "regexp", "strings", "xotel", "otel", "opentelemetry", "attribute", "codes", "trace"], "doc_head": "import (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"github.com/aws/aws-sdk-go-v2/aws\"\n\t\"github.com/aws/aws-sdk-go-v2/service/s3\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"regexp\"\n\t\"strings\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "filesystem", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package filesystem", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go", "rel_path": "internal/adapters/filesystem/s3.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 22, "end_line": 27, "text": "//go:generate mockgen -source=s3.go -destination=mocks/s3_mocks.go -package=mocks\ntype s3Client interface {\n\tPutObject(ctx context.Context, params *s3.PutObjectInput, optFns ...func(*s3.Options)) (*s3.PutObjectOutput, error)\n\tGetObject(ctx context.Context, params *s3.GetObjectInput, optFns ...func(*s3.Options)) (*s3.GetObjectOutput, error)\n}\n", "n_tokens": 99, "primary_symbol": "s3Client", "primary_kind": "type", "primary_span": [22, 27], "def_symbols": [], "symbols": ["generate", "mockgen", "source", "destination", "mocks", "s3_mocks", "package", "type", "s3Client", "interface", "PutObject", "ctx", "context", "Context", "params", "PutObjectInput", "optFns", "func", "Options", "PutObjectOutput", "error", "GetObject", "GetObjectInput", "GetObjectOutput"], "doc_head": "//go:generate mockgen -source=s3.go -destination=mocks/s3_mocks.go -package=mocks\ntype s3Client interface {\n\tPutObject(ctx context.Context, params *s3.PutObjectInput, optFns ...func(*s3.Options)) (*s3.PutObjectOutput, error)\n\tGetObject(ctx context.Context, params *s3.GetObjectInput, optFns ...func(*s3.Options)) (*s3.GetObjectOutput, error)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:s3Client (interface)", "package": "filesystem", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "s3Client", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["s3Client"], "all_kinds": ["type"], "all_ast_paths": ["go:type:s3Client (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["s3Client"], "all_type_kinds": ["interface"], "all_start_bytes": [511], "all_end_bytes": [767], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "github.com/aws/aws-sdk-go-v2/service/s3"], "symbols_referenced_strict": ["Context", "GetObject", "GetObjectInput", "GetObjectOutput", "Options", "PutObject", "PutObjectInput", "PutObjectOutput", "context.Context", "s3.GetObjectInput", "s3.GetObjectOutput", "s3.Options", "s3.PutObjectInput", "s3.PutObjectOutput"], "header_context_minimal": "package filesystem\nimport (\n    \"context\"\n    \"github.com/aws/aws-sdk-go-v2/service/s3\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go", "rel_path": "internal/adapters/filesystem/s3.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 28, "end_line": 32, "text": "type S3Filesystem struct {\n\tbucket string\n\tclient s3Client\n}\n", "n_tokens": 17, "primary_symbol": "S3Filesystem", "primary_kind": "type", "primary_span": [28, 32], "def_symbols": [], "symbols": ["type", "S3Filesystem", "struct", "bucket", "string", "client", "s3Client"], "doc_head": "type S3Filesystem struct {\n\tbucket string\n\tclient s3Client\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:S3Filesystem (struct)", "package": "filesystem", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "S3Filesystem", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["S3Filesystem"], "all_kinds": ["type"], "all_ast_paths": ["go:type:S3Filesystem (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["S3Filesystem"], "all_type_kinds": ["struct"], "all_start_bytes": [774], "all_end_bytes": [829], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["S3Filesystem"], "header_context_minimal": "package filesystem", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go", "rel_path": "internal/adapters/filesystem/s3.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 33, "end_line": 36, "text": "func NewS3Filesystem(bucket string, client s3Client) *S3Filesystem {\n\treturn &S3Filesystem{bucket: bucket, client: client}\n}\n", "n_tokens": 36, "primary_symbol": "NewS3Filesystem", "primary_kind": "function", "primary_span": [33, 36], "def_symbols": [], "symbols": ["NewS3Filesystem", "func", "bucket", "string", "client", "s3Client", "S3Filesystem", "return"], "doc_head": "func NewS3Filesystem(bucket string, client s3Client) *S3Filesystem {\n\treturn &S3Filesystem{bucket: bucket, client: client}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewS3Filesystem/complete", "package": "filesystem", "node_kind": "function", "receiver": "", "function_name": "NewS3Filesystem", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewS3Filesystem"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewS3Filesystem/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [831], "all_end_bytes": [955], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["NewS3Filesystem", "S3Filesystem"], "header_context_minimal": "package filesystem", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go", "rel_path": "internal/adapters/filesystem/s3.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 37, "end_line": 86, "text": "func (fs *S3Filesystem) GetLiveFlight(ctx context.Context, flightID string) (*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"S3Filesystem:GetLiveFlight\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.String(\"flight_id\", flightID),\n\t)\n\n\tkey := fs.buildS3Key(flightID)\n\tresp, err := fs.client.GetObject(ctx, &s3.GetObjectInput{\n\t\tBucket: aws.String(fs.bucket),\n\t\tKey:    aws.String(key),\n\t})\n\tif err != nil {\n\t\tif isNotFoundErr(err) {\n\t\t\tlog.Debug(ctx, \"LiveFlight object not found in S3\",\n\t\t\t\tzap.String(\"flight_id\", flightID),\n\t\t\t\tzap.String(\"bucket\", fs.bucket),\n\t\t\t\tzap.String(\"key\", key),\n\t\t\t\tzap.Error(err),\n\t\t\t)\n\n\t\t\treturn nil, core.ErrFlightNotFound\n\t\t}\n\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\tlog.Error(ctx, \"Failed to get LiveFlight object from S3\",\n\t\t\tzap.String(\"flight_id\", flightID),\n\t\t\tzap.String(\"bucket\", fs.bucket),\n\t\t\tzap.String(\"key\", key),\n\t\t\tzap.Error(err),\n\t\t)\n\t\treturn nil, err\n\t}\n\tdefer func() {\n\t\t_ = resp.Body.Close()\n\t}()\n\n\tvar f core.LiveFlight\n\tif err := json.NewDecoder(resp.Body).Decode(&f); err != nil {\n\t\tlog.Error(ctx, \"Failed to decode LiveFlight JSON\", zap.Error(err))\n\t\treturn nil, err\n\t}\n\treturn &f, nil\n}\n\nvar safeIDChars = regexp.MustCompile(`[^a-zA-Z0-9]+`)\n", "n_tokens": 371, "primary_symbol": "GetLiveFlight", "primary_kind": "method", "primary_span": [37, 86], "def_symbols": [], "symbols": ["GetLiveFlight", "func", "S3Filesystem", "ctx", "context", "Context", "flightID", "string", "core", "LiveFlight", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "flight_id", "key", "buildS3Key", "resp", "err", "client", "GetObject", "GetObjectInput", "Bucket", "aws", "bucket", "Key", "nil", "isNotFoundErr", "log", "Debug", "object", "not", "found", "zap", "Error", "return", "ErrFlightNotFound", "RecordError", "SetStatus", "codes", "Failed", "get", "from", "Body", "Close", "var", "json", "NewDecoder", "Decode", "decode", "JSON", "safeIDChars", "regexp", "MustCompile"], "doc_head": "func (fs *S3Filesystem) GetLiveFlight(ctx context.Context, flightID string) (*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"S3Filesystem:GetLiveFlight\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.String(\"flight_id\", flightID),\n\t)\n\tkey := fs.buildS3Key(flightID)\n\tresp, err := fs.client.GetObject(ctx, &s3.GetObjectInput{\n\t\tBucket: aws.String(fs.bucket),\n\t\tKey:    aws.String(key),\n\t})\n\tif err != nil {\n\t\tif isNotFoundErr(err) {\n\t\t\tlog.Debug(ctx, \"LiveFlight object not found in S3\",\n\t\t\t\tzap.String(\"flight_id\", flightID),\n\t\t\t\tzap.String(\"bucket\", fs.bucket),\n\t\t\t\tzap.String(\"key\", key),\n\t\t\t\tzap.Error(err),\n\t\t\t)\n\t\t\treturn nil, core.ErrFlightNotFound\n\t\t}\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\tlog.Error(ctx, \"Failed to get LiveFlight object from S3\",\n\t\t\tzap.String(\"flight_id\", flightID),\n\t\t\tzap.String(\"bucket\", fs.bucket),\n\t\t\tzap.String(\"key\", key),\n\t\t\tzap.Error(err),\n\t\t)\n\t\treturn nil, err\n\t}\n\tdefer func() {\n\t\t_ = resp.Body.Close()\n\t}()\n\tvar f core.LiveFlight\n\tif err := json.NewDecoder(resp.Body).Decode(&f); err != nil {\n\t\tlog.Error(ctx, \"Failed to decode LiveFlight JSON\", zap.Error(err))", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*S3Filesystem).GetLiveFlight/complete", "package": "filesystem", "node_kind": "method", "receiver": "fs *S3Filesystem", "function_name": "", "method_name": "GetLiveFlight", "type_name": "S3Filesystem", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLiveFlight"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*S3Filesystem).GetLiveFlight/complete"], "all_roles": ["complete"], "all_receivers": ["fs *S3Filesystem"], "all_type_names": ["S3Filesystem"], "all_type_kinds": [null], "all_start_bytes": [957], "all_end_bytes": [2196], "primary_index": 0, "all_receivers_normalized": ["(*S3Filesystem)"], "imports_used_minimal": ["context", "encoding/json", "github.com/aws/aws-sdk-go-v2/aws", "github.com/aws/aws-sdk-go-v2/service/s3", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/log", "go.impalastudios.com/otel", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace", "go.uber.org/zap", "regexp"], "symbols_referenced_strict": ["Body", "Bucket", "Close", "Context", "Debug", "Decode", "End", "ErrFlightNotFound", "Error", "GetLiveFlight", "GetObject", "GetObjectInput", "Key", "LiveFlight", "MustCompile", "NewDecoder", "RecordError", "S3Filesystem", "SetAttributes", "SetStatus", "SpanKindClient", "Start", "String", "Tracer", "WithSpanKind", "attribute.String", "aws.String", "codes.Error", "context.Context", "core.ErrFlightNotFound", "core.LiveFlight", "err.Error", "fs.bucket", "fs.buildS3Key", "fs.client", "json.NewDecoder", "log.Debug", "log.Error", "regexp.MustCompile", "resp.Body", "s3.GetObjectInput", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer", "zap.Error", "zap.String"], "header_context_minimal": "package filesystem\nimport (\n    \"context\"\n    \"encoding/json\"\n    \"github.com/aws/aws-sdk-go-v2/aws\"\n    \"github.com/aws/aws-sdk-go-v2/service/s3\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: fs *S3Filesystem", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go", "rel_path": "internal/adapters/filesystem/s3.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 87, "end_line": 96, "text": "func (fs *S3Filesystem) buildS3Key(flightID string) string {\n\tsafeID := safeIDChars.ReplaceAllString(flightID, \"\")\n\n\tprefix := \"xxx\"\n\tif len(safeID) >= 3 {\n\t\tprefix = safeID[len(safeID)-3:]\n\t}\n\treturn fmt.Sprintf(\"live-flights/%s/%s.json\", prefix, flightID)\n}\n", "n_tokens": 85, "primary_symbol": "buildS3Key", "primary_kind": "method", "primary_span": [87, 96], "def_symbols": [], "symbols": ["buildS3Key", "func", "S3Filesystem", "flightID", "string", "safeID", "safeIDChars", "ReplaceAllString", "prefix", "xxx", "len", "return", "fmt", "Sprintf", "live", "flights", "json"], "doc_head": "func (fs *S3Filesystem) buildS3Key(flightID string) string {\n\tsafeID := safeIDChars.ReplaceAllString(flightID, \"\")\n\tprefix := \"xxx\"\n\tif len(safeID) >= 3 {\n\t\tprefix = safeID[len(safeID)-3:]\n\t}\n\treturn fmt.Sprintf(\"live-flights/%s/%s.json\", prefix, flightID)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*S3Filesystem).buildS3Key/complete", "package": "filesystem", "node_kind": "method", "receiver": "fs *S3Filesystem", "function_name": "", "method_name": "buildS3Key", "type_name": "S3Filesystem", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["buildS3Key"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*S3Filesystem).buildS3Key/complete"], "all_roles": ["complete"], "all_receivers": ["fs *S3Filesystem"], "all_type_names": ["S3Filesystem"], "all_type_kinds": [null], "all_start_bytes": [2253], "all_end_bytes": [2512], "primary_index": 0, "all_receivers_normalized": ["(*S3Filesystem)"], "imports_used_minimal": ["fmt"], "symbols_referenced_strict": ["ReplaceAllString", "S3Filesystem", "Sprintf", "fmt.Sprintf", "safeIDChars.ReplaceAllString"], "header_context_minimal": "package filesystem\nimport \"fmt\"\n// receiver: fs *S3Filesystem", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go", "rel_path": "internal/adapters/filesystem/s3.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 97, "end_line": 100, "text": "func isNotFoundErr(err error) bool {\n\treturn strings.Contains(err.Error(), \"NoSuchKey\")\n}\n", "n_tokens": 20, "primary_symbol": "isNotFoundErr", "primary_kind": "function", "primary_span": [97, 100], "def_symbols": [], "symbols": ["isNotFoundErr", "func", "err", "error", "bool", "return", "strings", "Contains", "Error", "NoSuchKey"], "doc_head": "func isNotFoundErr(err error) bool {\n\treturn strings.Contains(err.Error(), \"NoSuchKey\")\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:isNotFoundErr/complete", "package": "filesystem", "node_kind": "function", "receiver": "", "function_name": "isNotFoundErr", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["isNotFoundErr"], "all_kinds": ["function"], "all_ast_paths": ["go:function:isNotFoundErr/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2514], "all_end_bytes": [2603], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["strings"], "symbols_referenced_strict": ["Contains", "Error", "err.Error", "strings.Contains"], "header_context_minimal": "package filesystem\nimport \"strings\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go", "rel_path": "internal/adapters/filesystem/s3.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 101, "end_line": 133, "text": "func (fs *S3Filesystem) SaveLiveFlight(ctx context.Context, flightID string, flight *core.LiveFlight) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"S3Filesystem:SaveLiveFlight\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.String(\"flight_id\", flightID),\n\t)\n\n\tkey := fs.buildS3Key(flightID)\n\tdata, err := json.Marshal(flight)\n\tif err != nil {\n\t\tlog.Error(ctx, \"Failed to marshal LiveFlight for S3\", zap.Error(err))\n\t\treturn err\n\t}\n\n\tinput := &s3.PutObjectInput{\n\t\tBucket:      aws.String(fs.bucket),\n\t\tKey:         aws.String(key),\n\t\tBody:        bytes.NewReader(data),\n\t\tContentType: aws.String(\"application/json\"),\n\t}\n\n\t_, err = fs.client.PutObject(ctx, input)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\tlog.Error(ctx, \"Failed to upload LiveFlight data to S3\", zap.Error(err))\n\t\treturn err\n\t}\n\treturn nil\n}\n", "n_tokens": 244, "primary_symbol": "SaveLiveFlight", "primary_kind": "method", "primary_span": [101, 133], "def_symbols": [], "symbols": ["SaveLiveFlight", "func", "S3Filesystem", "ctx", "context", "Context", "flightID", "string", "flight", "core", "LiveFlight", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "flight_id", "key", "buildS3Key", "data", "err", "json", "Marshal", "nil", "log", "Error", "Failed", "marshal", "for", "zap", "return", "input", "PutObjectInput", "Bucket", "aws", "bucket", "Key", "Body", "bytes", "NewReader", "ContentType", "application", "client", "PutObject", "RecordError", "SetStatus", "codes", "upload"], "doc_head": "func (fs *S3Filesystem) SaveLiveFlight(ctx context.Context, flightID string, flight *core.LiveFlight) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"S3Filesystem:SaveLiveFlight\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.String(\"flight_id\", flightID),\n\t)\n\tkey := fs.buildS3Key(flightID)\n\tdata, err := json.Marshal(flight)\n\tif err != nil {\n\t\tlog.Error(ctx, \"Failed to marshal LiveFlight for S3\", zap.Error(err))\n\t\treturn err\n\t}\n\tinput := &s3.PutObjectInput{\n\t\tBucket:      aws.String(fs.bucket),\n\t\tKey:         aws.String(key),\n\t\tBody:        bytes.NewReader(data),\n\t\tContentType: aws.String(\"application/json\"),\n\t}\n\t_, err = fs.client.PutObject(ctx, input)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\tlog.Error(ctx, \"Failed to upload LiveFlight data to S3\", zap.Error(err))\n\t\treturn err\n\t}\n\treturn nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*S3Filesystem).SaveLiveFlight/complete", "package": "filesystem", "node_kind": "method", "receiver": "fs *S3Filesystem", "function_name": "", "method_name": "SaveLiveFlight", "type_name": "S3Filesystem", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["SaveLiveFlight"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*S3Filesystem).SaveLiveFlight/complete"], "all_roles": ["complete"], "all_receivers": ["fs *S3Filesystem"], "all_type_names": ["S3Filesystem"], "all_type_kinds": [null], "all_start_bytes": [2605], "all_end_bytes": [3506], "primary_index": 0, "all_receivers_normalized": ["(*S3Filesystem)"], "imports_used_minimal": ["bytes", "context", "encoding/json", "github.com/aws/aws-sdk-go-v2/aws", "github.com/aws/aws-sdk-go-v2/service/s3", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/log", "go.impalastudios.com/otel", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace", "go.uber.org/zap"], "symbols_referenced_strict": ["Body", "Bucket", "ContentType", "Context", "End", "Error", "Key", "LiveFlight", "Marshal", "NewReader", "PutObject", "PutObjectInput", "RecordError", "S3Filesystem", "SaveLiveFlight", "SetAttributes", "SetStatus", "SpanKindClient", "Start", "String", "Tracer", "WithSpanKind", "attribute.String", "aws.String", "bytes.NewReader", "codes.Error", "context.Context", "core.LiveFlight", "err.Error", "fs.bucket", "fs.buildS3Key", "fs.client", "json.Marshal", "log.Error", "s3.PutObjectInput", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer", "zap.Error"], "header_context_minimal": "package filesystem\nimport (\n    \"bytes\"\n    \"context\"\n    \"encoding/json\"\n    \"github.com/aws/aws-sdk-go-v2/aws\"\n    \"github.com/aws/aws-sdk-go-v2/service/s3\"\n)\n// receiver: fs *S3Filesystem", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/s3.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 8, "text": "// Code generated by MockGen. DO NOT EDIT.\n// Source: s3.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=s3.go -destination=mocks/s3_mocks.go -package=mocks\n//\n", "n_tokens": 51, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 8], "def_symbols": [], "symbols": ["Code", "generated", "MockGen", "NOT", "EDIT", "Source", "Generated", "this", "command", "mockgen", "source", "destination", "mocks", "s3_mocks", "package"], "doc_head": "// Code generated by MockGen. DO NOT EDIT.\n// Source: s3.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=s3.go -destination=mocks/s3_mocks.go -package=mocks\n//", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 9, "end_line": 11, "text": "// Package mocks is a generated GoMock package.\npackage mocks\n", "n_tokens": 13, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 11], "def_symbols": [], "symbols": ["Package", "mocks", "generated", "GoMock", "package"], "doc_head": "// Package mocks is a generated GoMock package.\npackage mocks", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 19, "text": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\n\ts3 \"github.com/aws/aws-sdk-go-v2/service/s3\"\n\tgomock \"go.uber.org/mock/gomock\"\n)\n", "n_tokens": 40, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 19], "def_symbols": [], "symbols": ["import", "context", "reflect", "github", "com", "aws", "sdk", "service", "gomock", "uber", "org", "mock"], "doc_head": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\ts3 \"github.com/aws/aws-sdk-go-v2/service/s3\"\n\tgomock \"go.uber.org/mock/gomock\"\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 20, "end_line": 26, "text": "// Mocks3Client is a mock of s3Client interface.\ntype Mocks3Client struct {\n\tctrl     *gomock.Controller\n\trecorder *Mocks3ClientMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 43, "primary_symbol": "Mocks3Client", "primary_kind": "type", "primary_span": [20, 26], "def_symbols": [], "symbols": ["Mocks3Client", "mock", "s3Client", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "Mocks3ClientMockRecorder", "isgomock"], "doc_head": "// Mocks3Client is a mock of s3Client interface.\ntype Mocks3Client struct {\n\tctrl     *gomock.Controller\n\trecorder *Mocks3ClientMockRecorder\n\tisgomock struct{}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Mocks3Client (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Mocks3Client", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Mocks3Client"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Mocks3Client (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Mocks3Client"], "all_type_kinds": ["struct"], "all_start_bytes": [419], "all_end_bytes": [526], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "Mocks3Client", "Mocks3ClientMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 27, "end_line": 31, "text": "// Mocks3ClientMockRecorder is the mock recorder for Mocks3Client.\ntype Mocks3ClientMockRecorder struct {\n\tmock *Mocks3Client\n}\n", "n_tokens": 33, "primary_symbol": "Mocks3ClientMockRecorder", "primary_kind": "type", "primary_span": [27, 31], "def_symbols": [], "symbols": ["Mocks3ClientMockRecorder", "the", "mock", "recorder", "for", "Mocks3Client", "type", "struct"], "doc_head": "// Mocks3ClientMockRecorder is the mock recorder for Mocks3Client.\ntype Mocks3ClientMockRecorder struct {\n\tmock *Mocks3Client\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Mocks3ClientMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Mocks3ClientMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Mocks3ClientMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Mocks3ClientMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Mocks3ClientMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [600], "all_end_bytes": [655], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Mocks3Client", "Mocks3ClientMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 32, "end_line": 38, "text": "// NewMocks3Client creates a new mock instance.\nfunc NewMocks3Client(ctrl *gomock.Controller) *Mocks3Client {\n\tmock := &Mocks3Client{ctrl: ctrl}\n\tmock.recorder = &Mocks3ClientMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 55, "primary_symbol": "NewMocks3Client", "primary_kind": "function", "primary_span": [33, 38], "def_symbols": [], "symbols": ["NewMocks3Client", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "Mocks3Client", "recorder", "Mocks3ClientMockRecorder", "return"], "doc_head": "// NewMocks3Client creates a new mock instance.\nfunc NewMocks3Client(ctrl *gomock.Controller) *Mocks3Client {\n\tmock := &Mocks3Client{ctrl: ctrl}\n\tmock.recorder = &Mocks3ClientMockRecorder{mock}\n\treturn mock\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewMocks3Client/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMocks3Client", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMocks3Client"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMocks3Client/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [705], "all_end_bytes": [865], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "Mocks3Client", "Mocks3ClientMockRecorder", "NewMocks3Client", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 39, "end_line": 43, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *Mocks3Client) EXPECT() *Mocks3ClientMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 37, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [40, 43], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "Mocks3Client", "Mocks3ClientMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *Mocks3Client) EXPECT() *Mocks3ClientMockRecorder {\n\treturn m.recorder\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mocks3Client).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mocks3Client", "function_name": "", "method_name": "EXPECT", "type_name": "Mocks3Client", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mocks3Client).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mocks3Client"], "all_type_names": ["Mocks3Client"], "all_type_kinds": [null], "all_start_bytes": [944], "all_end_bytes": [1024], "primary_index": 0, "all_receivers_normalized": ["(*Mocks3Client)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Mocks3Client", "Mocks3ClientMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *Mocks3Client", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 44, "end_line": 56, "text": "// GetObject mocks base method.\nfunc (m *Mocks3Client) GetObject(ctx context.Context, params *s3.GetObjectInput, optFns ...func(*s3.Options)) (*s3.GetObjectOutput, error) {\n\tm.ctrl.T.Helper()\n\tvarargs := []any{ctx, params}\n\tfor _, a := range optFns {\n\t\tvarargs = append(varargs, a)\n\t}\n\tret := m.ctrl.Call(m, \"GetObject\", varargs...)\n\tret0, _ := ret[0].(*s3.GetObjectOutput)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 131, "primary_symbol": "GetObject", "primary_kind": "method", "primary_span": [45, 56], "def_symbols": [], "symbols": ["GetObject", "mocks", "base", "method", "func", "Mocks3Client", "ctx", "context", "Context", "params", "GetObjectInput", "optFns", "Options", "GetObjectOutput", "error", "ctrl", "Helper", "varargs", "any", "for", "range", "append", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetObject mocks base method.\nfunc (m *Mocks3Client) GetObject(ctx context.Context, params *s3.GetObjectInput, optFns ...func(*s3.Options)) (*s3.GetObjectOutput, error) {\n\tm.ctrl.T.Helper()\n\tvarargs := []any{ctx, params}\n\tfor _, a := range optFns {\n\t\tvarargs = append(varargs, a)\n\t}\n\tret := m.ctrl.Call(m, \"GetObject\", varargs...)\n\tret0, _ := ret[0].(*s3.GetObjectOutput)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mocks3Client).GetObject/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mocks3Client", "function_name": "", "method_name": "GetObject", "type_name": "Mocks3Client", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetObject"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mocks3Client).GetObject/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mocks3Client"], "all_type_names": ["Mocks3Client"], "all_type_kinds": [null], "all_start_bytes": [1058], "all_end_bytes": [1447], "primary_index": 0, "all_receivers_normalized": ["(*Mocks3Client)"], "imports_used_minimal": ["context", "github.com/aws/aws-sdk-go-v2/service/s3"], "symbols_referenced_strict": ["Call", "Context", "GetObject", "GetObjectInput", "GetObjectOutput", "Helper", "Mocks3Client", "Options", "T.Helper", "context.Context", "m.ctrl", "s3.GetObjectInput", "s3.GetObjectOutput", "s3.Options"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"github.com/aws/aws-sdk-go-v2/service/s3\"\n)\n// receiver: m *Mocks3Client", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 57, "end_line": 63, "text": "// GetObject indicates an expected call of GetObject.\nfunc (mr *Mocks3ClientMockRecorder) GetObject(ctx, params any, optFns ...any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\tvarargs := append([]any{ctx, params}, optFns...)\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetObject\", reflect.TypeOf((*Mocks3Client)(nil).GetObject), varargs...)\n}\n", "n_tokens": 92, "primary_symbol": "GetObject", "primary_kind": "method", "primary_span": [58, 63], "def_symbols": [], "symbols": ["GetObject", "indicates", "expected", "call", "func", "Mocks3ClientMockRecorder", "ctx", "params", "any", "optFns", "gomock", "Call", "mock", "ctrl", "Helper", "varargs", "append", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mocks3Client", "nil"], "doc_head": "// GetObject indicates an expected call of GetObject.\nfunc (mr *Mocks3ClientMockRecorder) GetObject(ctx, params any, optFns ...any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\tvarargs := append([]any{ctx, params}, optFns...)\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetObject\", reflect.TypeOf((*Mocks3Client)(nil).GetObject), varargs...)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mocks3ClientMockRecorder).GetObject/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *Mocks3ClientMockRecorder", "function_name": "", "method_name": "GetObject", "type_name": "Mocks3ClientMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetObject"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mocks3ClientMockRecorder).GetObject/complete"], "all_roles": ["complete"], "all_receivers": ["mr *Mocks3ClientMockRecorder"], "all_type_names": ["Mocks3ClientMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1503], "all_end_bytes": [1800], "primary_index": 0, "all_receivers_normalized": ["(*Mocks3ClientMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetObject", "Helper", "Mocks3Client", "Mocks3ClientMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *Mocks3ClientMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 64, "end_line": 76, "text": "// PutObject mocks base method.\nfunc (m *Mocks3Client) PutObject(ctx context.Context, params *s3.PutObjectInput, optFns ...func(*s3.Options)) (*s3.PutObjectOutput, error) {\n\tm.ctrl.T.Helper()\n\tvarargs := []any{ctx, params}\n\tfor _, a := range optFns {\n\t\tvarargs = append(varargs, a)\n\t}\n\tret := m.ctrl.Call(m, \"PutObject\", varargs...)\n\tret0, _ := ret[0].(*s3.PutObjectOutput)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 135, "primary_symbol": "PutObject", "primary_kind": "method", "primary_span": [65, 76], "def_symbols": [], "symbols": ["PutObject", "mocks", "base", "method", "func", "Mocks3Client", "ctx", "context", "Context", "params", "PutObjectInput", "optFns", "Options", "PutObjectOutput", "error", "ctrl", "Helper", "varargs", "any", "for", "range", "append", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// PutObject mocks base method.\nfunc (m *Mocks3Client) PutObject(ctx context.Context, params *s3.PutObjectInput, optFns ...func(*s3.Options)) (*s3.PutObjectOutput, error) {\n\tm.ctrl.T.Helper()\n\tvarargs := []any{ctx, params}\n\tfor _, a := range optFns {\n\t\tvarargs = append(varargs, a)\n\t}\n\tret := m.ctrl.Call(m, \"PutObject\", varargs...)\n\tret0, _ := ret[0].(*s3.PutObjectOutput)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mocks3Client).PutObject/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mocks3Client", "function_name": "", "method_name": "PutObject", "type_name": "Mocks3Client", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["PutObject"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mocks3Client).PutObject/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mocks3Client"], "all_type_names": ["Mocks3Client"], "all_type_kinds": [null], "all_start_bytes": [1834], "all_end_bytes": [2223], "primary_index": 0, "all_receivers_normalized": ["(*Mocks3Client)"], "imports_used_minimal": ["context", "github.com/aws/aws-sdk-go-v2/service/s3"], "symbols_referenced_strict": ["Call", "Context", "Helper", "Mocks3Client", "Options", "PutObject", "PutObjectInput", "PutObjectOutput", "T.Helper", "context.Context", "m.ctrl", "s3.Options", "s3.PutObjectInput", "s3.PutObjectOutput"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"github.com/aws/aws-sdk-go-v2/service/s3\"\n)\n// receiver: m *Mocks3Client", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/filesystem/mocks/s3_mocks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go", "rel_path": "internal/adapters/filesystem/mocks/s3_mocks.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 77, "end_line": 83, "text": "// PutObject indicates an expected call of PutObject.\nfunc (mr *Mocks3ClientMockRecorder) PutObject(ctx, params any, optFns ...any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\tvarargs := append([]any{ctx, params}, optFns...)\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"PutObject\", reflect.TypeOf((*Mocks3Client)(nil).PutObject), varargs...)\n}\n", "n_tokens": 94, "primary_symbol": "PutObject", "primary_kind": "method", "primary_span": [78, 83], "def_symbols": [], "symbols": ["PutObject", "indicates", "expected", "call", "func", "Mocks3ClientMockRecorder", "ctx", "params", "any", "optFns", "gomock", "Call", "mock", "ctrl", "Helper", "varargs", "append", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mocks3Client", "nil"], "doc_head": "// PutObject indicates an expected call of PutObject.\nfunc (mr *Mocks3ClientMockRecorder) PutObject(ctx, params any, optFns ...any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\tvarargs := append([]any{ctx, params}, optFns...)\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"PutObject\", reflect.TypeOf((*Mocks3Client)(nil).PutObject), varargs...)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Mocks3ClientMockRecorder).PutObject/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *Mocks3ClientMockRecorder", "function_name": "", "method_name": "PutObject", "type_name": "Mocks3ClientMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["PutObject"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mocks3ClientMockRecorder).PutObject/complete"], "all_roles": ["complete"], "all_receivers": ["mr *Mocks3ClientMockRecorder"], "all_type_names": ["Mocks3ClientMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [2279], "all_end_bytes": [2576], "primary_index": 0, "all_receivers_normalized": ["(*Mocks3ClientMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "Helper", "Mocks3Client", "Mocks3ClientMockRecorder", "PutObject", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *Mocks3ClientMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/filesystem/mocks/s3_mocks.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package mongodb\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "mongodb"], "doc_head": "package mongodb", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 8, "text": "import (\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"time\"\n)\n", "n_tokens": 32, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 8], "def_symbols": [], "symbols": ["import", "impalastudios", "com", "aviation", "liveflights", "internal", "core", "mongodb", "org", "mongo", "driver", "bson", "time"], "doc_head": "import (\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 9, "end_line": 10, "text": "// geoJSON is a struct that represents a geoJSON object\ntype (", "n_tokens": 15, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 10], "def_symbols": [], "symbols": ["geoJSON", "struct", "that", "represents", "object", "type"], "doc_head": "// geoJSON is a struct that represents a geoJSON object\ntype (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 11, "end_line": 15, "text": "\tgeoJSON struct {\n\t\tType        string `json:\"type\"`\n\t\tCoordinates []any  `json:\"coordinates\"`\n\t}\n", "n_tokens": 28, "primary_symbol": "geoJSON", "primary_kind": "type", "primary_span": [11, 15], "def_symbols": [], "symbols": ["geoJSON", "struct", "Type", "string", "json", "type", "Coordinates", "any", "coordinates"], "doc_head": "\tgeoJSON struct {\n\t\tType        string `json:\"type\"`\n\t\tCoordinates []any  `json:\"coordinates\"`\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:geoJSON (struct)", "package": "mongodb", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "geoJSON", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["geoJSON"], "all_kinds": ["type"], "all_ast_paths": ["go:type:geoJSON (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["geoJSON"], "all_type_kinds": ["struct"], "all_start_bytes": [196], "all_end_bytes": [292], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Coordinates", "Type"], "header_context_minimal": "package mongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 16, "end_line": 36, "text": "\tliveFlight struct {\n\t\tID                    string    `bson:\"live_flight_id\"`\n\t\tFlightID              *string   `bson:\"flight_id,omitempty\"`\n\t\tFlightNumber          string    `bson:\"flight_number\"`\n\t\tAirlineDesignator     string    `bson:\"airline_designator\"`\n\t\tAirlineClassification int       `bson:\"airline_classification\"`\n\t\tDepartureTime         time.Time `bson:\"departure_time\"`\n\t\tDepartureAirportICAO  string    `bson:\"departure_airport_icao\"`\n\t\tDepartureAirportIATA  string    `bson:\"departure_airport_iata\"`\n\t\tArrivalAirportICAO    string    `bson:\"arrival_airport_icao\"`\n\t\tArrivalAirportIATA    string    `bson:\"arrival_airport_iata\"`\n\t\tPosition              geoJSON   `bson:\"position\"`\n\t\tAltitude              float64   `bson:\"altitude\"`\n\t\tHeadingDirection      float64   `bson:\"heading_direction\"`\n\t\tGroundSpeed           float64   `bson:\"ground_speed\"`\n\t\tVerticalSpeed         float64   `bson:\"vertical_speed\"`\n\t\tSquawk                int       `bson:\"squawk\"`\n\t\tCreatedAt             time.Time `bson:\"created_at\"`\n\t\tUpdatedAt             time.Time `bson:\"updated_at\"`\n\t}\n", "n_tokens": 272, "primary_symbol": "liveFlight", "primary_kind": "type", "primary_span": [16, 36], "def_symbols": [], "symbols": ["liveFlight", "struct", "string", "bson", "live_flight_id", "FlightID", "flight_id", "omitempty", "FlightNumber", "flight_number", "AirlineDesignator", "airline_designator", "AirlineClassification", "int", "airline_classification", "DepartureTime", "time", "Time", "departure_time", "DepartureAirportICAO", "departure_airport_icao", "DepartureAirportIATA", "departure_airport_iata", "ArrivalAirportICAO", "arrival_airport_icao", "ArrivalAirportIATA", "arrival_airport_iata", "Position", "geoJSON", "position", "Altitude", "float64", "altitude", "HeadingDirection", "heading_direction", "GroundSpeed", "ground_speed", "VerticalSpeed", "vertical_speed", "Squawk", "squawk", "CreatedAt", "created_at", "UpdatedAt", "updated_at"], "doc_head": "\tliveFlight struct {\n\t\tID                    string    `bson:\"live_flight_id\"`\n\t\tFlightID              *string   `bson:\"flight_id,omitempty\"`\n\t\tFlightNumber          string    `bson:\"flight_number\"`\n\t\tAirlineDesignator     string    `bson:\"airline_designator\"`\n\t\tAirlineClassification int       `bson:\"airline_classification\"`\n\t\tDepartureTime         time.Time `bson:\"departure_time\"`\n\t\tDepartureAirportICAO  string    `bson:\"departure_airport_icao\"`\n\t\tDepartureAirportIATA  string    `bson:\"departure_airport_iata\"`\n\t\tArrivalAirportICAO    string    `bson:\"arrival_airport_icao\"`\n\t\tArrivalAirportIATA    string    `bson:\"arrival_airport_iata\"`\n\t\tPosition              geoJSON   `bson:\"position\"`\n\t\tAltitude              float64   `bson:\"altitude\"`\n\t\tHeadingDirection      float64   `bson:\"heading_direction\"`\n\t\tGroundSpeed           float64   `bson:\"ground_speed\"`\n\t\tVerticalSpeed         float64   `bson:\"vertical_speed\"`\n\t\tSquawk                int       `bson:\"squawk\"`\n\t\tCreatedAt             time.Time `bson:\"created_at\"`\n\t\tUpdatedAt             time.Time `bson:\"updated_at\"`\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:liveFlight (struct)", "package": "mongodb", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "liveFlight", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["liveFlight"], "all_kinds": ["type"], "all_ast_paths": ["go:type:liveFlight (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["liveFlight"], "all_type_kinds": ["struct"], "all_start_bytes": [295], "all_end_bytes": [1378], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["AirlineClassification", "AirlineDesignator", "Altitude", "ArrivalAirportIATA", "ArrivalAirportICAO", "CreatedAt", "DepartureAirportIATA", "DepartureAirportICAO", "DepartureTime", "FlightID", "FlightNumber", "GroundSpeed", "HeadingDirection", "Position", "Squawk", "Time", "UpdatedAt", "VerticalSpeed", "time.Time"], "header_context_minimal": "package mongodb\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 37, "end_line": 48, "text": "\ttrackPoint struct {\n\t\tLiveFlightID     string    `bson:\"live_flight_id\"`\n\t\tPosition         geoJSON   `bson:\"position\"`\n\t\tAltitude         float64   `bson:\"altitude\"`\n\t\tHeadingDirection float64   `bson:\"heading_direction\"`\n\t\tGroundSpeed      float64   `bson:\"ground_speed\"`\n\t\tVerticalSpeed    float64   `bson:\"vertical_speed\"`\n\t\tSquawk           int       `bson:\"squawk\"`\n\t\tCreatedAt        time.Time `bson:\"created_at\"`\n\t}\n)\n", "n_tokens": 114, "primary_symbol": "trackPoint", "primary_kind": "type", "primary_span": [37, 48], "def_symbols": [], "symbols": ["trackPoint", "struct", "LiveFlightID", "string", "bson", "live_flight_id", "Position", "geoJSON", "position", "Altitude", "float64", "altitude", "HeadingDirection", "heading_direction", "GroundSpeed", "ground_speed", "VerticalSpeed", "vertical_speed", "Squawk", "int", "squawk", "CreatedAt", "time", "Time", "created_at"], "doc_head": "\ttrackPoint struct {\n\t\tLiveFlightID     string    `bson:\"live_flight_id\"`\n\t\tPosition         geoJSON   `bson:\"position\"`\n\t\tAltitude         float64   `bson:\"altitude\"`\n\t\tHeadingDirection float64   `bson:\"heading_direction\"`\n\t\tGroundSpeed      float64   `bson:\"ground_speed\"`\n\t\tVerticalSpeed    float64   `bson:\"vertical_speed\"`\n\t\tSquawk           int       `bson:\"squawk\"`\n\t\tCreatedAt        time.Time `bson:\"created_at\"`\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:trackPoint (struct)", "package": "mongodb", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "trackPoint", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["trackPoint"], "all_kinds": ["type"], "all_ast_paths": ["go:type:trackPoint (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["trackPoint"], "all_type_kinds": ["struct"], "all_start_bytes": [1381], "all_end_bytes": [1804], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Altitude", "CreatedAt", "GroundSpeed", "HeadingDirection", "LiveFlightID", "Position", "Squawk", "Time", "VerticalSpeed", "time.Time"], "header_context_minimal": "package mongodb\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 49, "end_line": 56, "text": "// newPoint creates a new geoJSON point Object\nfunc newPoint(lon, lat float64) *geoJSON {\n\treturn &geoJSON{\n\t\tType:        \"Point\",\n\t\tCoordinates: []any{lon, lat},\n\t}\n}\n", "n_tokens": 51, "primary_symbol": "newPoint", "primary_kind": "function", "primary_span": [50, 56], "def_symbols": [], "symbols": ["newPoint", "creates", "new", "geoJSON", "point", "Object", "func", "lon", "lat", "float64", "return", "Type", "Point", "Coordinates", "any"], "doc_head": "// newPoint creates a new geoJSON point Object\nfunc newPoint(lon, lat float64) *geoJSON {\n\treturn &geoJSON{\n\t\tType:        \"Point\",\n\t\tCoordinates: []any{lon, lat},\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:newPoint/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "newPoint", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["newPoint"], "all_kinds": ["function"], "all_ast_paths": ["go:function:newPoint/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1855], "all_end_bytes": [1976], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Coordinates", "Type"], "header_context_minimal": "package mongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 57, "end_line": 79, "text": "// coordinateFromPoint returns the coordinates of a geoJSON point object\nfunc coordinateFromPoint(p *geoJSON) core.Coordinate {\n\tif p.Type != \"Point\" {\n\t\treturn core.Coordinate{}\n\t}\n\tcoords := p.Coordinates\n\tif len(coords) != 2 {\n\t\treturn core.Coordinate{}\n\t}\n\tlon, ok := coords[0].(float64)\n\tif !ok {\n\t\treturn core.Coordinate{}\n\t}\n\tlat, ok := coords[1].(float64)\n\tif !ok {\n\t\treturn core.Coordinate{}\n\t}\n\treturn core.Coordinate{\n\t\tLon: lon,\n\t\tLat: lat,\n\t}\n}\n", "n_tokens": 136, "primary_symbol": "coordinateFromPoint", "primary_kind": "function", "primary_span": [58, 79], "def_symbols": [], "symbols": ["coordinateFromPoint", "returns", "the", "coordinates", "geoJSON", "point", "object", "func", "core", "Coordinate", "Type", "Point", "return", "coords", "Coordinates", "len", "lon", "float64", "lat", "Lon", "Lat"], "doc_head": "// coordinateFromPoint returns the coordinates of a geoJSON point object\nfunc coordinateFromPoint(p *geoJSON) core.Coordinate {\n\tif p.Type != \"Point\" {\n\t\treturn core.Coordinate{}\n\t}\n\tcoords := p.Coordinates\n\tif len(coords) != 2 {\n\t\treturn core.Coordinate{}\n\t}\n\tlon, ok := coords[0].(float64)\n\tif !ok {\n\t\treturn core.Coordinate{}\n\t}\n\tlat, ok := coords[1].(float64)\n\tif !ok {\n\t\treturn core.Coordinate{}\n\t}\n\treturn core.Coordinate{\n\t\tLon: lon,\n\t\tLat: lat,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:coordinateFromPoint/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "coordinateFromPoint", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["coordinateFromPoint"], "all_kinds": ["function"], "all_ast_paths": ["go:function:coordinateFromPoint/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2051], "all_end_bytes": [2435], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Coordinate", "Coordinates", "Lat", "Lon", "Type", "core.Coordinate", "p.Coordinates", "p.Type"], "header_context_minimal": "package mongodb\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 80, "end_line": 96, "text": "func toInsertLiveFlight(u *core.LiveFlightUpdate) bson.M {\n\treturn bson.M{\n\t\t\"live_flight_id\":         u.ID,\n\t\t\"flight_id\":              nil,\n\t\t\"flight_number\":          u.FlightNumber,\n\t\t\"airline_designator\":     u.AirlineDesignator,\n\t\t\"departure_time\":         u.DepartureTime,\n\t\t\"departure_airport_icao\": u.DepartureAirportICAO,\n\t\t\"departure_airport_iata\": u.DepartureAirportIATA,\n\t\t\"arrival_airport_icao\":   u.ArrivalAirportICAO,\n\t\t\"arrival_airport_iata\":   u.ArrivalAirportIATA,\n\t\t\"airline_classification\": 5,\n\t\t\"enriched\":               false,\n\t\t\"created_at\":             u.CreatedAt,\n\t}\n}\n", "n_tokens": 184, "primary_symbol": "toInsertLiveFlight", "primary_kind": "function", "primary_span": [80, 96], "def_symbols": [], "symbols": ["toInsertLiveFlight", "func", "core", "LiveFlightUpdate", "bson", "return", "live_flight_id", "flight_id", "nil", "flight_number", "FlightNumber", "airline_designator", "AirlineDesignator", "departure_time", "DepartureTime", "departure_airport_icao", "DepartureAirportICAO", "departure_airport_iata", "DepartureAirportIATA", "arrival_airport_icao", "ArrivalAirportICAO", "arrival_airport_iata", "ArrivalAirportIATA", "airline_classification", "enriched", "false", "created_at", "CreatedAt"], "doc_head": "func toInsertLiveFlight(u *core.LiveFlightUpdate) bson.M {\n\treturn bson.M{\n\t\t\"live_flight_id\":         u.ID,\n\t\t\"flight_id\":              nil,\n\t\t\"flight_number\":          u.FlightNumber,\n\t\t\"airline_designator\":     u.AirlineDesignator,\n\t\t\"departure_time\":         u.DepartureTime,\n\t\t\"departure_airport_icao\": u.DepartureAirportICAO,\n\t\t\"departure_airport_iata\": u.DepartureAirportIATA,\n\t\t\"arrival_airport_icao\":   u.ArrivalAirportICAO,\n\t\t\"arrival_airport_iata\":   u.ArrivalAirportIATA,\n\t\t\"airline_classification\": 5,\n\t\t\"enriched\":               false,\n\t\t\"created_at\":             u.CreatedAt,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:toInsertLiveFlight/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "toInsertLiveFlight", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["toInsertLiveFlight"], "all_kinds": ["function"], "all_ast_paths": ["go:function:toInsertLiveFlight/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2437], "all_end_bytes": [3032], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core", "go.mongodb.org/mongo-driver/bson"], "symbols_referenced_strict": ["AirlineDesignator", "ArrivalAirportIATA", "ArrivalAirportICAO", "CreatedAt", "DepartureAirportIATA", "DepartureAirportICAO", "DepartureTime", "FlightNumber", "LiveFlightUpdate", "bson.M", "core.LiveFlightUpdate", "u.AirlineDesignator", "u.ArrivalAirportIATA", "u.ArrivalAirportICAO", "u.CreatedAt", "u.DepartureAirportIATA", "u.DepartureAirportICAO", "u.DepartureTime", "u.FlightNumber", "u.ID"], "header_context_minimal": "package mongodb\nimport (\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.mongodb.org/mongo-driver/bson\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 97, "end_line": 108, "text": "func toUpdateLiveFlight(u *core.LiveFlightUpdate) bson.M {\n\treturn bson.M{\n\t\t\"position\":          newPoint(u.Position.Lon, u.Position.Lat),\n\t\t\"altitude\":          u.Altitude,\n\t\t\"heading_direction\": u.HeadingDirection,\n\t\t\"ground_speed\":      u.GroundSpeed,\n\t\t\"vertical_speed\":    u.VerticalSpeed,\n\t\t\"squawk\":            u.Squawk,\n\t\t\"updated_at\":        u.CreatedAt,\n\t}\n}\n", "n_tokens": 108, "primary_symbol": "toUpdateLiveFlight", "primary_kind": "function", "primary_span": [97, 108], "def_symbols": [], "symbols": ["toUpdateLiveFlight", "func", "core", "LiveFlightUpdate", "bson", "return", "position", "newPoint", "Position", "Lon", "Lat", "altitude", "Altitude", "heading_direction", "HeadingDirection", "ground_speed", "GroundSpeed", "vertical_speed", "VerticalSpeed", "squawk", "Squawk", "updated_at", "CreatedAt"], "doc_head": "func toUpdateLiveFlight(u *core.LiveFlightUpdate) bson.M {\n\treturn bson.M{\n\t\t\"position\":          newPoint(u.Position.Lon, u.Position.Lat),\n\t\t\"altitude\":          u.Altitude,\n\t\t\"heading_direction\": u.HeadingDirection,\n\t\t\"ground_speed\":      u.GroundSpeed,\n\t\t\"vertical_speed\":    u.VerticalSpeed,\n\t\t\"squawk\":            u.Squawk,\n\t\t\"updated_at\":        u.CreatedAt,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:toUpdateLiveFlight/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "toUpdateLiveFlight", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["toUpdateLiveFlight"], "all_kinds": ["function"], "all_ast_paths": ["go:function:toUpdateLiveFlight/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [3034], "all_end_bytes": [3403], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core", "go.mongodb.org/mongo-driver/bson"], "symbols_referenced_strict": ["Altitude", "CreatedAt", "GroundSpeed", "HeadingDirection", "Lat", "LiveFlightUpdate", "Lon", "Position", "Squawk", "VerticalSpeed", "bson.M", "core.LiveFlightUpdate", "u.Altitude", "u.CreatedAt", "u.GroundSpeed", "u.HeadingDirection", "u.Position", "u.Squawk", "u.VerticalSpeed"], "header_context_minimal": "package mongodb\nimport (\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.mongodb.org/mongo-driver/bson\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 109, "end_line": 121, "text": "func toTrackPointInsert(u *core.LiveFlightUpdate) bson.M {\n\treturn bson.M{\n\t\t\"live_flight_id\":    u.ID,\n\t\t\"position\":          newPoint(u.Position.Lon, u.Position.Lat),\n\t\t\"altitude\":          u.Altitude,\n\t\t\"heading_direction\": u.HeadingDirection,\n\t\t\"ground_speed\":      u.GroundSpeed,\n\t\t\"vertical_speed\":    u.VerticalSpeed,\n\t\t\"squawk\":            u.Squawk,\n\t\t\"created_at\":        u.CreatedAt,\n\t}\n}\n", "n_tokens": 119, "primary_symbol": "toTrackPointInsert", "primary_kind": "function", "primary_span": [109, 121], "def_symbols": [], "symbols": ["toTrackPointInsert", "func", "core", "LiveFlightUpdate", "bson", "return", "live_flight_id", "position", "newPoint", "Position", "Lon", "Lat", "altitude", "Altitude", "heading_direction", "HeadingDirection", "ground_speed", "GroundSpeed", "vertical_speed", "VerticalSpeed", "squawk", "Squawk", "created_at", "CreatedAt"], "doc_head": "func toTrackPointInsert(u *core.LiveFlightUpdate) bson.M {\n\treturn bson.M{\n\t\t\"live_flight_id\":    u.ID,\n\t\t\"position\":          newPoint(u.Position.Lon, u.Position.Lat),\n\t\t\"altitude\":          u.Altitude,\n\t\t\"heading_direction\": u.HeadingDirection,\n\t\t\"ground_speed\":      u.GroundSpeed,\n\t\t\"vertical_speed\":    u.VerticalSpeed,\n\t\t\"squawk\":            u.Squawk,\n\t\t\"created_at\":        u.CreatedAt,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:toTrackPointInsert/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "toTrackPointInsert", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["toTrackPointInsert"], "all_kinds": ["function"], "all_ast_paths": ["go:function:toTrackPointInsert/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [3405], "all_end_bytes": [3803], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core", "go.mongodb.org/mongo-driver/bson"], "symbols_referenced_strict": ["Altitude", "CreatedAt", "GroundSpeed", "HeadingDirection", "Lat", "LiveFlightUpdate", "Lon", "Position", "Squawk", "VerticalSpeed", "bson.M", "core.LiveFlightUpdate", "u.Altitude", "u.CreatedAt", "u.GroundSpeed", "u.HeadingDirection", "u.ID", "u.Position", "u.Squawk", "u.VerticalSpeed"], "header_context_minimal": "package mongodb\nimport (\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.mongodb.org/mongo-driver/bson\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 122, "end_line": 141, "text": "func (u *liveFlight) toDomain() *core.LiveFlight {\n\tcoord := coordinateFromPoint(&u.Position)\n\n\treturn &core.LiveFlight{\n\t\tID:                    u.ID,\n\t\tFlightID:              u.FlightID,\n\t\tFlightNumber:          u.FlightNumber,\n\t\tAirlineDesignator:     u.AirlineDesignator,\n\t\tAirlineClassification: u.AirlineClassification,\n\t\tDepartureTime:         u.DepartureTime,\n\t\tDepartureAirportICAO:  u.DepartureAirportICAO,\n\t\tDepartureAirportIATA:  u.DepartureAirportIATA,\n\t\tArrivalAirportICAO:    u.ArrivalAirportICAO,\n\t\tArrivalAirportIATA:    u.ArrivalAirportIATA,\n\t\tPosition:              coord,\n\t\tCreatedAt:             u.CreatedAt,\n\t\tUpdatedAt:             u.UpdatedAt,\n\t}\n}\n", "n_tokens": 196, "primary_symbol": "toDomain", "primary_kind": "method", "primary_span": [122, 141], "def_symbols": [], "symbols": ["toDomain", "func", "liveFlight", "core", "LiveFlight", "coord", "coordinateFromPoint", "Position", "return", "FlightID", "FlightNumber", "AirlineDesignator", "AirlineClassification", "DepartureTime", "DepartureAirportICAO", "DepartureAirportIATA", "ArrivalAirportICAO", "ArrivalAirportIATA", "CreatedAt", "UpdatedAt"], "doc_head": "func (u *liveFlight) toDomain() *core.LiveFlight {\n\tcoord := coordinateFromPoint(&u.Position)\n\treturn &core.LiveFlight{\n\t\tID:                    u.ID,\n\t\tFlightID:              u.FlightID,\n\t\tFlightNumber:          u.FlightNumber,\n\t\tAirlineDesignator:     u.AirlineDesignator,\n\t\tAirlineClassification: u.AirlineClassification,\n\t\tDepartureTime:         u.DepartureTime,\n\t\tDepartureAirportICAO:  u.DepartureAirportICAO,\n\t\tDepartureAirportIATA:  u.DepartureAirportIATA,\n\t\tArrivalAirportICAO:    u.ArrivalAirportICAO,\n\t\tArrivalAirportIATA:    u.ArrivalAirportIATA,\n\t\tPosition:              coord,\n\t\tCreatedAt:             u.CreatedAt,\n\t\tUpdatedAt:             u.UpdatedAt,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*liveFlight).toDomain/complete", "package": "mongodb", "node_kind": "method", "receiver": "u *liveFlight", "function_name": "", "method_name": "toDomain", "type_name": "liveFlight", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["toDomain"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*liveFlight).toDomain/complete"], "all_roles": ["complete"], "all_receivers": ["u *liveFlight"], "all_type_names": ["liveFlight"], "all_type_kinds": [null], "all_start_bytes": [3805], "all_end_bytes": [4477], "primary_index": 0, "all_receivers_normalized": ["(*liveFlight)"], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["AirlineClassification", "AirlineDesignator", "ArrivalAirportIATA", "ArrivalAirportICAO", "CreatedAt", "DepartureAirportIATA", "DepartureAirportICAO", "DepartureTime", "FlightID", "FlightNumber", "LiveFlight", "Position", "UpdatedAt", "core.LiveFlight", "u.AirlineClassification", "u.AirlineDesignator", "u.ArrivalAirportIATA", "u.ArrivalAirportICAO", "u.CreatedAt", "u.DepartureAirportIATA", "u.DepartureAirportICAO", "u.DepartureTime", "u.FlightID", "u.FlightNumber", "u.ID", "u.Position", "u.UpdatedAt"], "header_context_minimal": "package mongodb\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"\n// receiver: u *liveFlight", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go", "rel_path": "internal/adapters/mongodb/models.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 142, "end_line": 154, "text": "func (tp *trackPoint) toDomain() core.TrackPoint {\n\treturn core.TrackPoint{\n\t\tLiveFlightID:     tp.LiveFlightID,\n\t\tPosition:         coordinateFromPoint(&tp.Position),\n\t\tAltitude:         tp.Altitude,\n\t\tHeadingDirection: tp.HeadingDirection,\n\t\tGroundSpeed:      tp.GroundSpeed,\n\t\tVerticalSpeed:    tp.VerticalSpeed,\n\t\tSquawk:           tp.Squawk,\n\t\tCreatedAt:        tp.CreatedAt,\n\t}\n}\n", "n_tokens": 108, "primary_symbol": "toDomain", "primary_kind": "method", "primary_span": [142, 154], "def_symbols": [], "symbols": ["toDomain", "func", "trackPoint", "core", "TrackPoint", "return", "LiveFlightID", "Position", "coordinateFromPoint", "Altitude", "HeadingDirection", "GroundSpeed", "VerticalSpeed", "Squawk", "CreatedAt"], "doc_head": "func (tp *trackPoint) toDomain() core.TrackPoint {\n\treturn core.TrackPoint{\n\t\tLiveFlightID:     tp.LiveFlightID,\n\t\tPosition:         coordinateFromPoint(&tp.Position),\n\t\tAltitude:         tp.Altitude,\n\t\tHeadingDirection: tp.HeadingDirection,\n\t\tGroundSpeed:      tp.GroundSpeed,\n\t\tVerticalSpeed:    tp.VerticalSpeed,\n\t\tSquawk:           tp.Squawk,\n\t\tCreatedAt:        tp.CreatedAt,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*trackPoint).toDomain/complete", "package": "mongodb", "node_kind": "method", "receiver": "tp *trackPoint", "function_name": "", "method_name": "toDomain", "type_name": "trackPoint", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["toDomain"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*trackPoint).toDomain/complete"], "all_roles": ["complete"], "all_receivers": ["tp *trackPoint"], "all_type_names": ["trackPoint"], "all_type_kinds": [null], "all_start_bytes": [4479], "all_end_bytes": [4864], "primary_index": 0, "all_receivers_normalized": ["(*trackPoint)"], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Altitude", "CreatedAt", "GroundSpeed", "HeadingDirection", "LiveFlightID", "Position", "Squawk", "TrackPoint", "VerticalSpeed", "core.TrackPoint", "tp.Altitude", "tp.CreatedAt", "tp.GroundSpeed", "tp.HeadingDirection", "tp.LiveFlightID", "tp.Position", "tp.Squawk", "tp.VerticalSpeed"], "header_context_minimal": "package mongodb\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"\n// receiver: tp *trackPoint", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/models.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_enrich_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go", "rel_path": "internal/adapters/mongodb/flights_enrich_repository.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package mongodb\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "mongodb"], "doc_head": "package mongodb", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_enrich_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go", "rel_path": "internal/adapters/mongodb/flights_enrich_repository.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 19, "text": "import (\n\t\"context\"\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n\t\"go.mongodb.org/mongo-driver/mongo/readconcern\"\n\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)\n\nconst enrichSatchSize = 10000\n", "n_tokens": 130, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 19], "def_symbols": [], "symbols": ["import", "context", "github", "com", "cockroachdb", "errors", "impalastudios", "aviation", "liveflights", "internal", "core", "mongodb", "org", "mongo", "driver", "bson", "options", "readconcern", "xotel", "otel", "opentelemetry", "attribute", "codes", "trace", "const", "enrichSatchSize"], "doc_head": "import (\n\t\"context\"\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n\t\"go.mongodb.org/mongo-driver/mongo/readconcern\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)\nconst enrichSatchSize = 10000", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_enrich_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go", "rel_path": "internal/adapters/mongodb/flights_enrich_repository.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 20, "end_line": 23, "text": "type FlightsEnrichRepository struct {\n\tcoll *mongo.Collection\n}\n", "n_tokens": 15, "primary_symbol": "FlightsEnrichRepository", "primary_kind": "type", "primary_span": [20, 23], "def_symbols": [], "symbols": ["type", "FlightsEnrichRepository", "struct", "coll", "mongo", "Collection"], "doc_head": "type FlightsEnrichRepository struct {\n\tcoll *mongo.Collection\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:FlightsEnrichRepository (struct)", "package": "mongodb", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "FlightsEnrichRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["FlightsEnrichRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:FlightsEnrichRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["FlightsEnrichRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [477], "all_end_bytes": [535], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.mongodb.org/mongo-driver/mongo"], "symbols_referenced_strict": ["Collection", "FlightsEnrichRepository", "mongo.Collection"], "header_context_minimal": "package mongodb\nimport \"go.mongodb.org/mongo-driver/mongo\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_enrich_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go", "rel_path": "internal/adapters/mongodb/flights_enrich_repository.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 24, "end_line": 32, "text": "func NewFlightsEnrichRepository(db *mongo.Database) *FlightsEnrichRepository {\n\treturn &FlightsEnrichRepository{\n\t\tcoll: db.Collection(\n\t\t\t\"flight_updates\",\n\t\t\toptions.Collection().SetReadConcern(readconcern.Local()),\n\t\t),\n\t}\n}\n", "n_tokens": 58, "primary_symbol": "NewFlightsEnrichRepository", "primary_kind": "function", "primary_span": [24, 32], "def_symbols": [], "symbols": ["NewFlightsEnrichRepository", "func", "mongo", "Database", "FlightsEnrichRepository", "return", "coll", "Collection", "flight_updates", "options", "SetReadConcern", "readconcern", "Local"], "doc_head": "func NewFlightsEnrichRepository(db *mongo.Database) *FlightsEnrichRepository {\n\treturn &FlightsEnrichRepository{\n\t\tcoll: db.Collection(\n\t\t\t\"flight_updates\",\n\t\t\toptions.Collection().SetReadConcern(readconcern.Local()),\n\t\t),\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewFlightsEnrichRepository/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "NewFlightsEnrichRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewFlightsEnrichRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewFlightsEnrichRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [537], "all_end_bytes": [764], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.mongodb.org/mongo-driver/mongo", "go.mongodb.org/mongo-driver/mongo/options", "go.mongodb.org/mongo-driver/mongo/readconcern"], "symbols_referenced_strict": ["Collection", "Database", "FlightsEnrichRepository", "Local", "NewFlightsEnrichRepository", "SetReadConcern", "db.Collection", "mongo.Database", "options.Collection", "readconcern.Local"], "header_context_minimal": "package mongodb\nimport (\n    \"go.mongodb.org/mongo-driver/mongo\"\n    \"go.mongodb.org/mongo-driver/mongo/options\"\n    \"go.mongodb.org/mongo-driver/mongo/readconcern\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_enrich_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go", "rel_path": "internal/adapters/mongodb/flights_enrich_repository.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 33, "end_line": 68, "text": "func (r *FlightsEnrichRepository) GetUnenrichedFlights(ctx context.Context, limit int) ([]*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsEnrichRepository:GetUnenrichedFlights\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.Int(\"limit\", limit),\n\t)\n\n\tfilter := bson.M{\"enriched\": false}\n\tfindOpts := options.Find().SetLimit(int64(limit))\n\n\tcursor, err := r.coll.Find(ctx, filter, findOpts)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find unenriched flights\")\n\t}\n\tdefer func() { _ = cursor.Close(ctx) }()\n\n\tvar raw []liveFlight\n\tif err := cursor.All(ctx, &raw); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to decode unenriched flights\")\n\t}\n\n\tflights := make([]*core.LiveFlight, 0, len(raw))\n\tfor i := range raw {\n\t\tflights = append(flights, raw[i].toDomain())\n\t}\n\n\treturn flights, nil\n}\n", "n_tokens": 286, "primary_symbol": "GetUnenrichedFlights", "primary_kind": "method", "primary_span": [33, 68], "def_symbols": [], "symbols": ["GetUnenrichedFlights", "func", "FlightsEnrichRepository", "ctx", "context", "Context", "limit", "int", "core", "LiveFlight", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "Int", "filter", "bson", "enriched", "false", "findOpts", "options", "Find", "SetLimit", "int64", "cursor", "err", "coll", "nil", "RecordError", "SetStatus", "codes", "Error", "return", "errors", "Wrap", "mongo", "failed", "find", "unenriched", "flights", "Close", "var", "raw", "liveFlight", "All", "decode", "make", "len", "for", "range", "append", "toDomain"], "doc_head": "func (r *FlightsEnrichRepository) GetUnenrichedFlights(ctx context.Context, limit int) ([]*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsEnrichRepository:GetUnenrichedFlights\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.Int(\"limit\", limit),\n\t)\n\tfilter := bson.M{\"enriched\": false}\n\tfindOpts := options.Find().SetLimit(int64(limit))\n\tcursor, err := r.coll.Find(ctx, filter, findOpts)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find unenriched flights\")\n\t}\n\tdefer func() { _ = cursor.Close(ctx) }()\n\tvar raw []liveFlight\n\tif err := cursor.All(ctx, &raw); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to decode unenriched flights\")\n\t}\n\tflights := make([]*core.LiveFlight, 0, len(raw))\n\tfor i := range raw {\n\t\tflights = append(flights, raw[i].toDomain())\n\t}\n\treturn flights, nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsEnrichRepository).GetUnenrichedFlights/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsEnrichRepository", "function_name": "", "method_name": "GetUnenrichedFlights", "type_name": "FlightsEnrichRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUnenrichedFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsEnrichRepository).GetUnenrichedFlights/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsEnrichRepository"], "all_type_names": ["FlightsEnrichRepository"], "all_type_kinds": [null], "all_start_bytes": [766], "all_end_bytes": [1797], "primary_index": 0, "all_receivers_normalized": ["(*FlightsEnrichRepository)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.mongodb.org/mongo-driver/bson", "go.mongodb.org/mongo-driver/mongo/options", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["All", "Close", "Context", "End", "Error", "Find", "FlightsEnrichRepository", "GetUnenrichedFlights", "Int", "LiveFlight", "RecordError", "SetAttributes", "SetLimit", "SetStatus", "SpanKindClient", "Start", "Tracer", "WithSpanKind", "Wrap", "attribute.Int", "bson.M", "codes.Error", "context.Context", "core.LiveFlight", "cursor.All", "cursor.Close", "err.Error", "errors.Wrap", "options.Find", "r.coll", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package mongodb\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.mongodb.org/mongo-driver/bson\"\n)\n// receiver: r *FlightsEnrichRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_enrich_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go", "rel_path": "internal/adapters/mongodb/flights_enrich_repository.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 69, "end_line": 109, "text": "func (r *FlightsEnrichRepository) EnrichFlights(ctx context.Context, enriched []*core.EnrichedFlightData) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsEnrichRepository:EnrichFlights\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.Int(\"enriched_flights_count\", len(enriched)),\n\t)\n\n\twritemodels := make([]mongo.WriteModel, 0, enrichSatchSize)\n\n\tfor i := 0; i < len(enriched); i++ {\n\t\te := enriched[i]\n\n\t\tset := bson.M{\n\t\t\t\"enriched\":               true,\n\t\t\t\"airline_classification\": e.Classification,\n\t\t}\n\t\tif e.FlightID != nil {\n\t\t\tset[\"flight_id\"] = *e.FlightID\n\t\t}\n\n\t\twritemodels = append(writemodels, &mongo.UpdateOneModel{\n\t\t\tFilter: bson.M{\"live_flight_id\": e.LiveFlightID},\n\t\t\tUpdate: bson.M{\"$set\": set},\n\t\t})\n\n\t\tif len(writemodels) == enrichSatchSize || i == len(enriched)-1 {\n\t\t\t_, err := r.coll.BulkWrite(ctx, writemodels, options.BulkWrite().SetOrdered(false))\n\t\t\tif err != nil && !errors.Is(err, mongo.ErrUnacknowledgedWrite) {\n\t\t\t\tspan.RecordError(err)\n\t\t\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\t\t\treturn errors.Wrap(err, \"mongo: failed to enrich flights in bulk\")\n\t\t\t}\n\t\t\twritemodels = writemodels[:0]\n\t\t}\n\t}\n\n\treturn nil\n}\n", "n_tokens": 360, "primary_symbol": "EnrichFlights", "primary_kind": "method", "primary_span": [69, 109], "def_symbols": [], "symbols": ["EnrichFlights", "func", "FlightsEnrichRepository", "ctx", "context", "Context", "enriched", "core", "EnrichedFlightData", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "Int", "enriched_flights_count", "len", "writemodels", "make", "mongo", "WriteModel", "enrichSatchSize", "for", "set", "bson", "true", "airline_classification", "Classification", "FlightID", "nil", "flight_id", "append", "UpdateOneModel", "Filter", "live_flight_id", "LiveFlightID", "Update", "err", "coll", "BulkWrite", "options", "SetOrdered", "false", "errors", "ErrUnacknowledgedWrite", "RecordError", "SetStatus", "codes", "Error", "return", "Wrap", "failed", "enrich", "flights", "bulk"], "doc_head": "func (r *FlightsEnrichRepository) EnrichFlights(ctx context.Context, enriched []*core.EnrichedFlightData) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsEnrichRepository:EnrichFlights\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.Int(\"enriched_flights_count\", len(enriched)),\n\t)\n\twritemodels := make([]mongo.WriteModel, 0, enrichSatchSize)\n\tfor i := 0; i < len(enriched); i++ {\n\t\te := enriched[i]\n\t\tset := bson.M{\n\t\t\t\"enriched\":               true,\n\t\t\t\"airline_classification\": e.Classification,\n\t\t}\n\t\tif e.FlightID != nil {\n\t\t\tset[\"flight_id\"] = *e.FlightID\n\t\t}\n\t\twritemodels = append(writemodels, &mongo.UpdateOneModel{\n\t\t\tFilter: bson.M{\"live_flight_id\": e.LiveFlightID},\n\t\t\tUpdate: bson.M{\"$set\": set},\n\t\t})\n\t\tif len(writemodels) == enrichSatchSize || i == len(enriched)-1 {\n\t\t\t_, err := r.coll.BulkWrite(ctx, writemodels, options.BulkWrite().SetOrdered(false))\n\t\t\tif err != nil && !errors.Is(err, mongo.ErrUnacknowledgedWrite) {\n\t\t\t\tspan.RecordError(err)\n\t\t\t\tspan.SetStatus(codes.Error, err.Error())\n\t\t\t\treturn errors.Wrap(err, \"mongo: failed to enrich flights in bulk\")\n\t\t\t}\n\t\t\twritemodels = writemodels[:0]\n\t\t}\n\t}\n\treturn nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsEnrichRepository).EnrichFlights/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsEnrichRepository", "function_name": "", "method_name": "EnrichFlights", "type_name": "FlightsEnrichRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EnrichFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsEnrichRepository).EnrichFlights/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsEnrichRepository"], "all_type_names": ["FlightsEnrichRepository"], "all_type_kinds": [null], "all_start_bytes": [1799], "all_end_bytes": [2997], "primary_index": 0, "all_receivers_normalized": ["(*FlightsEnrichRepository)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.mongodb.org/mongo-driver/bson", "go.mongodb.org/mongo-driver/mongo", "go.mongodb.org/mongo-driver/mongo/options", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["BulkWrite", "Classification", "Context", "End", "EnrichFlights", "EnrichedFlightData", "ErrUnacknowledgedWrite", "Error", "Filter", "FlightID", "FlightsEnrichRepository", "Int", "LiveFlightID", "RecordError", "SetAttributes", "SetOrdered", "SetStatus", "SpanKindClient", "Start", "Tracer", "Update", "UpdateOneModel", "WithSpanKind", "Wrap", "WriteModel", "attribute.Int", "bson.M", "codes.Error", "context.Context", "core.EnrichedFlightData", "e.Classification", "e.FlightID", "e.LiveFlightID", "err.Error", "errors.Is", "errors.Wrap", "mongo.ErrUnacknowledgedWrite", "mongo.UpdateOneModel", "mongo.WriteModel", "options.BulkWrite", "r.coll", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package mongodb\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.mongodb.org/mongo-driver/bson\"\n)\n// receiver: r *FlightsEnrichRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_enrich_repository.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_archive_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go", "rel_path": "internal/adapters/mongodb/flights_archive_repository.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package mongodb\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "mongodb"], "doc_head": "package mongodb", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_archive_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go", "rel_path": "internal/adapters/mongodb/flights_archive_repository.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 19, "text": "import (\n\t\"context\"\n\t\"time\"\n\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n\t\"go.mongodb.org/mongo-driver/mongo/readconcern\"\n\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)\n", "n_tokens": 123, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 19], "def_symbols": [], "symbols": ["import", "context", "time", "github", "com", "cockroachdb", "errors", "impalastudios", "aviation", "liveflights", "internal", "core", "mongodb", "org", "mongo", "driver", "bson", "options", "readconcern", "xotel", "otel", "opentelemetry", "attribute", "codes", "trace"], "doc_head": "import (\n\t\"context\"\n\t\"time\"\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n\t\"go.mongodb.org/mongo-driver/mongo/readconcern\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_archive_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go", "rel_path": "internal/adapters/mongodb/flights_archive_repository.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 20, "end_line": 27, "text": "// FlightsArchiveRepository handles archiving live flights and their tracks.\ntype FlightsArchiveRepository struct {\n\tflightsColl *mongo.Collection\n\ttracksColl  *mongo.Collection\n}\n\nconst ttl = 24 * time.Hour\n", "n_tokens": 46, "primary_symbol": "FlightsArchiveRepository", "primary_kind": "type", "primary_span": [20, 27], "def_symbols": [], "symbols": ["FlightsArchiveRepository", "handles", "archiving", "live", "flights", "and", "their", "tracks", "type", "struct", "flightsColl", "mongo", "Collection", "tracksColl", "const", "ttl", "time", "Hour"], "doc_head": "// FlightsArchiveRepository handles archiving live flights and their tracks.\ntype FlightsArchiveRepository struct {\n\tflightsColl *mongo.Collection\n\ttracksColl  *mongo.Collection\n}\nconst ttl = 24 * time.Hour", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:FlightsArchiveRepository (struct)", "package": "mongodb", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "FlightsArchiveRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["FlightsArchiveRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:FlightsArchiveRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["FlightsArchiveRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [532], "all_end_bytes": [629], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.mongodb.org/mongo-driver/mongo", "time"], "symbols_referenced_strict": ["Collection", "FlightsArchiveRepository", "Hour", "mongo.Collection", "time.Hour"], "header_context_minimal": "package mongodb\nimport (\n    \"go.mongodb.org/mongo-driver/mongo\"\n    \"time\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_archive_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go", "rel_path": "internal/adapters/mongodb/flights_archive_repository.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 28, "end_line": 40, "text": "// NewFlightsArchiveRepository creates a repository for flight_updates and flight_tracks\nfunc NewFlightsArchiveRepository(db *mongo.Database) *FlightsArchiveRepository {\n\treturn &FlightsArchiveRepository{\n\t\tflightsColl: db.Collection(\n\t\t\t\"flight_updates\",\n\t\t\toptions.Collection().SetReadConcern(&readconcern.ReadConcern{Level: readconcern.Local().Level}),\n\t\t),\n\t\ttracksColl: db.Collection(\n\t\t\t\"flight_tracks\",\n\t\t),\n\t}\n}\n", "n_tokens": 100, "primary_symbol": "NewFlightsArchiveRepository", "primary_kind": "function", "primary_span": [29, 40], "def_symbols": [], "symbols": ["NewFlightsArchiveRepository", "creates", "repository", "for", "flight_updates", "and", "flight_tracks", "func", "mongo", "Database", "FlightsArchiveRepository", "return", "flightsColl", "Collection", "options", "SetReadConcern", "readconcern", "ReadConcern", "Level", "Local", "tracksColl"], "doc_head": "// NewFlightsArchiveRepository creates a repository for flight_updates and flight_tracks\nfunc NewFlightsArchiveRepository(db *mongo.Database) *FlightsArchiveRepository {\n\treturn &FlightsArchiveRepository{\n\t\tflightsColl: db.Collection(\n\t\t\t\"flight_updates\",\n\t\t\toptions.Collection().SetReadConcern(&readconcern.ReadConcern{Level: readconcern.Local().Level}),\n\t\t),\n\t\ttracksColl: db.Collection(\n\t\t\t\"flight_tracks\",\n\t\t),\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewFlightsArchiveRepository/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "NewFlightsArchiveRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewFlightsArchiveRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewFlightsArchiveRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [748], "all_end_bytes": [1078], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.mongodb.org/mongo-driver/mongo", "go.mongodb.org/mongo-driver/mongo/options", "go.mongodb.org/mongo-driver/mongo/readconcern"], "symbols_referenced_strict": ["Collection", "Database", "FlightsArchiveRepository", "Level", "Local", "NewFlightsArchiveRepository", "ReadConcern", "SetReadConcern", "db.Collection", "mongo.Database", "options.Collection", "readconcern.Local", "readconcern.ReadConcern"], "header_context_minimal": "package mongodb\nimport (\n    \"go.mongodb.org/mongo-driver/mongo\"\n    \"go.mongodb.org/mongo-driver/mongo/options\"\n    \"go.mongodb.org/mongo-driver/mongo/readconcern\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_archive_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go", "rel_path": "internal/adapters/mongodb/flights_archive_repository.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 41, "end_line": 112, "text": "// GetArchivableFlights retrieves flights whose TTL has expired, including their tracks\nfunc (r *FlightsArchiveRepository) GetArchivableFlights(ctx context.Context, limit int) ([]*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsArchiveRepository:GetArchivableFlights\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.Int(\"limit\", limit),\n\t)\n\n\tcutoff := time.Now().UTC().Add(-ttl)\n\tfilter := bson.M{\"created_at\": bson.M{\"$lte\": cutoff}}\n\t\n\tfindOpts := options.Find().SetLimit(int64(limit))\n\tcursor, err := r.flightsColl.Find(ctx, filter, findOpts)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find live flights\")\n\t}\n\tdefer func() {\n\t\t_ = cursor.Close(ctx)\n\t}()\n\n\tvar docs []liveFlight\n\tif err := cursor.All(ctx, &docs); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to decode live flights\")\n\t}\n\n\tflights := make([]*core.LiveFlight, len(docs))\n\tids := make([]string, len(docs))\n\tfor i, d := range docs {\n\t\tflights[i] = d.toDomain()\n\t\tids[i] = d.ID\n\t}\n\n\ttrackCursor, err := r.tracksColl.Find(ctx, bson.M{\"live_flight_id\": bson.M{\"$in\": ids}})\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find flight tracks\")\n\t}\n\tdefer func() {\n\t\t_ = trackCursor.Close(ctx)\n\t}()\n\n\tvar tps []trackPoint\n\tif err := trackCursor.All(ctx, &tps); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to decode flight tracks\")\n\t}\n\n\ttracksMap := make(map[string][]core.TrackPoint, len(docs))\n\tfor _, tp := range tps {\n\t\ttracksMap[tp.LiveFlightID] = append(tracksMap[tp.LiveFlightID], tp.toDomain())\n\t}\n\n\tfor _, f := range flights {\n\t\tif pts, ok := tracksMap[f.ID]; ok {\n\t\t\tf.Tracks = pts\n\t\t}\n\t}\n\n\treturn flights, nil\n}\n", "n_tokens": 554, "primary_symbol": "GetArchivableFlights", "primary_kind": "method", "primary_span": [42, 112], "def_symbols": [], "symbols": ["GetArchivableFlights", "retrieves", "flights", "whose", "TTL", "has", "expired", "including", "their", "tracks", "func", "FlightsArchiveRepository", "ctx", "context", "Context", "limit", "int", "core", "LiveFlight", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "Int", "cutoff", "time", "Now", "UTC", "Add", "ttl", "filter", "bson", "created_at", "lte", "findOpts", "options", "Find", "SetLimit", "int64", "cursor", "err", "flightsColl", "nil", "RecordError", "SetStatus", "codes", "Error", "return", "errors", "Wrap", "mongo", "failed", "find", "live", "Close", "var", "docs", "liveFlight", "All", "decode", "make", "len", "ids", "string", "for", "range", "toDomain", "trackCursor", "tracksColl", "live_flight_id", "flight", "tps", "trackPoint", "tracksMap", "map", "TrackPoint", "LiveFlightID", "append", "pts", "Tracks"], "doc_head": "// GetArchivableFlights retrieves flights whose TTL has expired, including their tracks\nfunc (r *FlightsArchiveRepository) GetArchivableFlights(ctx context.Context, limit int) ([]*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsArchiveRepository:GetArchivableFlights\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.Int(\"limit\", limit),\n\t)\n\tcutoff := time.Now().UTC().Add(-ttl)\n\tfilter := bson.M{\"created_at\": bson.M{\"$lte\": cutoff}}\n\tfindOpts := options.Find().SetLimit(int64(limit))\n\tcursor, err := r.flightsColl.Find(ctx, filter, findOpts)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find live flights\")\n\t}\n\tdefer func() {\n\t\t_ = cursor.Close(ctx)\n\t}()\n\tvar docs []liveFlight\n\tif err := cursor.All(ctx, &docs); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to decode live flights\")\n\t}\n\tflights := make([]*core.LiveFlight, len(docs))\n\tids := make([]string, len(docs))\n\tfor i, d := range docs {\n\t\tflights[i] = d.toDomain()\n\t\tids[i] = d.ID\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsArchiveRepository).GetArchivableFlights/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsArchiveRepository", "function_name": "", "method_name": "GetArchivableFlights", "type_name": "FlightsArchiveRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetArchivableFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsArchiveRepository).GetArchivableFlights/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsArchiveRepository"], "all_type_names": ["FlightsArchiveRepository"], "all_type_kinds": [null], "all_start_bytes": [1168], "all_end_bytes": [3073], "primary_index": 0, "all_receivers_normalized": ["(*FlightsArchiveRepository)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.mongodb.org/mongo-driver/bson", "go.mongodb.org/mongo-driver/mongo/options", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace", "time"], "symbols_referenced_strict": ["Add", "All", "Close", "Context", "End", "Error", "Find", "FlightsArchiveRepository", "GetArchivableFlights", "Int", "LiveFlight", "LiveFlightID", "Now", "RecordError", "SetAttributes", "SetLimit", "SetStatus", "SpanKindClient", "Start", "Tracer", "TrackPoint", "Tracks", "WithSpanKind", "Wrap", "attribute.Int", "bson.M", "codes.Error", "context.Context", "core.LiveFlight", "core.TrackPoint", "cursor.All", "cursor.Close", "d.ID", "d.toDomain", "err.Error", "errors.Wrap", "f.ID", "f.Tracks", "options.Find", "r.flightsColl", "r.tracksColl", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "time.Now", "tp.LiveFlightID", "tp.toDomain", "trace.SpanKindClient", "trace.WithSpanKind", "trackCursor.All", "trackCursor.Close", "xotel.Tracer"], "header_context_minimal": "package mongodb\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.mongodb.org/mongo-driver/bson\"\n)\n// receiver: r *FlightsArchiveRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_archive_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go", "rel_path": "internal/adapters/mongodb/flights_archive_repository.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 113, "end_line": 142, "text": "// DeleteFlights removes flights and their associated tracks in a single operation\nfunc (r *FlightsArchiveRepository) DeleteFlights(ctx context.Context, flights []*core.LiveFlight) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsArchiveRepository:DeleteFlights\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tids := flightIDs(flights)\n\n\tspan.SetAttributes(\n\t\tattribute.StringSlice(\"ids\", ids),\n\t)\n\n\tfilter := bson.M{\"live_flight_id\": bson.M{\"$in\": ids}}\n\n\tif _, err := r.flightsColl.DeleteMany(ctx, filter); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn errors.Wrap(err, \"mongo: failed to delete flight updates\")\n\t}\n\n\tif _, err := r.tracksColl.DeleteMany(ctx, filter); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn errors.Wrap(err, \"mongo: failed to delete flight tracks\")\n\t}\n\n\treturn nil\n}\n", "n_tokens": 226, "primary_symbol": "DeleteFlights", "primary_kind": "method", "primary_span": [114, 142], "def_symbols": [], "symbols": ["DeleteFlights", "removes", "flights", "and", "their", "associated", "tracks", "single", "operation", "func", "FlightsArchiveRepository", "ctx", "context", "Context", "core", "LiveFlight", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "ids", "flightIDs", "SetAttributes", "attribute", "StringSlice", "filter", "bson", "live_flight_id", "err", "flightsColl", "DeleteMany", "nil", "RecordError", "SetStatus", "codes", "Error", "return", "errors", "Wrap", "mongo", "failed", "delete", "flight", "updates", "tracksColl"], "doc_head": "// DeleteFlights removes flights and their associated tracks in a single operation\nfunc (r *FlightsArchiveRepository) DeleteFlights(ctx context.Context, flights []*core.LiveFlight) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsArchiveRepository:DeleteFlights\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tids := flightIDs(flights)\n\tspan.SetAttributes(\n\t\tattribute.StringSlice(\"ids\", ids),\n\t)\n\tfilter := bson.M{\"live_flight_id\": bson.M{\"$in\": ids}}\n\tif _, err := r.flightsColl.DeleteMany(ctx, filter); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\treturn errors.Wrap(err, \"mongo: failed to delete flight updates\")\n\t}\n\tif _, err := r.tracksColl.DeleteMany(ctx, filter); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\treturn errors.Wrap(err, \"mongo: failed to delete flight tracks\")\n\t}\n\treturn nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsArchiveRepository).DeleteFlights/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsArchiveRepository", "function_name": "", "method_name": "DeleteFlights", "type_name": "FlightsArchiveRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["DeleteFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsArchiveRepository).DeleteFlights/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsArchiveRepository"], "all_type_names": ["FlightsArchiveRepository"], "all_type_kinds": [null], "all_start_bytes": [3158], "all_end_bytes": [3975], "primary_index": 0, "all_receivers_normalized": ["(*FlightsArchiveRepository)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.mongodb.org/mongo-driver/bson", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["Context", "DeleteFlights", "DeleteMany", "End", "Error", "FlightsArchiveRepository", "LiveFlight", "RecordError", "SetAttributes", "SetStatus", "SpanKindClient", "Start", "StringSlice", "Tracer", "WithSpanKind", "Wrap", "attribute.StringSlice", "bson.M", "codes.Error", "context.Context", "core.LiveFlight", "err.Error", "errors.Wrap", "r.flightsColl", "r.tracksColl", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package mongodb\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.mongodb.org/mongo-driver/bson\"\n)\n// receiver: r *FlightsArchiveRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_archive_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go", "rel_path": "internal/adapters/mongodb/flights_archive_repository.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 143, "end_line": 151, "text": "// flightIDs extracts live_flight_id values\nfunc flightIDs(flights []*core.LiveFlight) []string {\n\tids := make([]string, len(flights))\n\tfor i, f := range flights {\n\t\tids[i] = f.ID\n\t}\n\treturn ids\n}\n", "n_tokens": 56, "primary_symbol": "flightIDs", "primary_kind": "function", "primary_span": [144, 151], "def_symbols": [], "symbols": ["flightIDs", "extracts", "live_flight_id", "values", "func", "flights", "core", "LiveFlight", "string", "ids", "make", "len", "for", "range", "return"], "doc_head": "// flightIDs extracts live_flight_id values\nfunc flightIDs(flights []*core.LiveFlight) []string {\n\tids := make([]string, len(flights))\n\tfor i, f := range flights {\n\t\tids[i] = f.ID\n\t}\n\treturn ids\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:flightIDs/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "flightIDs", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["flightIDs"], "all_kinds": ["function"], "all_ast_paths": ["go:function:flightIDs/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [4021], "all_end_bytes": [4173], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["LiveFlight", "core.LiveFlight", "f.ID"], "header_context_minimal": "package mongodb\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_archive_repository.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package mongodb\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "mongodb"], "doc_head": "package mongodb", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 29, "text": "import (\n\t\"context\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"strings\"\n\t\"sync\"\n\t\"time\"\n\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"go.mongodb.org/mongo-driver/bson/primitive\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n\t\"go.mongodb.org/mongo-driver/mongo/writeconcern\"\n\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)\n\n//const (\n//\tflightBatchSize = 10000\n//\ttrackBatchSize  = 10000\n//)\n", "n_tokens": 184, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 29], "def_symbols": [], "symbols": ["import", "context", "impalastudios", "com", "log", "uber", "org", "zap", "strings", "sync", "time", "github", "cockroachdb", "errors", "aviation", "liveflights", "internal", "core", "mongodb", "mongo", "driver", "bson", "primitive", "options", "writeconcern", "xotel", "otel", "opentelemetry", "attribute", "codes", "trace", "const", "flightBatchSize", "trackBatchSize"], "doc_head": "import (\n\t\"context\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"strings\"\n\t\"sync\"\n\t\"time\"\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.mongodb.org/mongo-driver/bson\"\n\t\"go.mongodb.org/mongo-driver/bson/primitive\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n\t\"go.mongodb.org/mongo-driver/mongo/writeconcern\"\n\txotel \"go.impalastudios.com/otel\"\n\t\"go.opentelemetry.io/otel/attribute\"\n\t\"go.opentelemetry.io/otel/codes\"\n\t\"go.opentelemetry.io/otel/trace\"\n)\n//const (\n//\tflightBatchSize = 10000\n//\ttrackBatchSize  = 10000\n//)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 30, "end_line": 34, "text": "type FlightsUpdateRepository struct {\n\tflightsColl *mongo.Collection\n\ttracksColl  *mongo.Collection\n}\n", "n_tokens": 23, "primary_symbol": "FlightsUpdateRepository", "primary_kind": "type", "primary_span": [30, 34], "def_symbols": [], "symbols": ["type", "FlightsUpdateRepository", "struct", "flightsColl", "mongo", "Collection", "tracksColl"], "doc_head": "type FlightsUpdateRepository struct {\n\tflightsColl *mongo.Collection\n\ttracksColl  *mongo.Collection\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:FlightsUpdateRepository (struct)", "package": "mongodb", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "FlightsUpdateRepository", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["FlightsUpdateRepository"], "all_kinds": ["type"], "all_ast_paths": ["go:type:FlightsUpdateRepository (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["FlightsUpdateRepository"], "all_type_kinds": ["struct"], "all_start_bytes": [637], "all_end_bytes": [733], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.mongodb.org/mongo-driver/mongo"], "symbols_referenced_strict": ["Collection", "FlightsUpdateRepository", "mongo.Collection"], "header_context_minimal": "package mongodb\nimport \"go.mongodb.org/mongo-driver/mongo\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 35, "end_line": 105, "text": "func NewFlightsUpdateRepository(db *mongo.Database) *FlightsUpdateRepository {\n\treturn &FlightsUpdateRepository{\n\t\tflightsColl: db.Collection(\n\t\t\t\"flight_updates\",\n\t\t\toptions.Collection().SetWriteConcern(&writeconcern.WriteConcern{W: 0}),\n\t\t),\n\t\ttracksColl: db.Collection(\n\t\t\t\"flight_tracks\",\n\t\t\toptions.Collection().SetWriteConcern(&writeconcern.WriteConcern{W: 0}),\n\t\t),\n\t}\n}\n\n//// UpsertMany upserts live flight updates in the collection\n//// The location will be added to the path when the flight is already in the collection\n//func (r *FlightsUpdateRepository) UpsertMany(ctx context.Context, updates []*core.LiveFlightUpdate) error {\n//\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:UpsertMany\", trace.WithSpanKind(trace.SpanKindClient))\n//\tdefer span.End()\n//\n//\tspan.SetAttributes(\n//\t\tattribute.Int(\"updates\", len(updates)),\n//\t)\n//\n//\tvar flightModels []mongo.WriteModel\n//\tvar trackModels []mongo.WriteModel\n//\n//\tfor i, u := range updates {\n//\t\t// Flight upsert model\n//\t\tflightModels = append(flightModels, &mongo.UpdateOneModel{\n//\t\t\tUpsert: ptr(true),\n//\t\t\tFilter: bson.M{\"live_flight_id\": u.ID},\n//\t\t\tUpdate: bson.M{\n//\t\t\t\t\"$setOnInsert\": toInsertLiveFlight(u),\n//\t\t\t\t\"$set\":         toUpdateLiveFlight(u),\n//\t\t\t},\n//\t\t})\n//\n//\t\t// Track insert model\n//\t\ttrackDoc := toTrackPointInsert(u)\n//\t\ttrackModels = append(trackModels, &mongo.InsertOneModel{Document: trackDoc})\n//\n//\t\t// Flush in batches\n//\t\tif len(flightModels) >= flightBatchSize || i == len(updates)-1 {\n//\t\t\tif _, err := r.flightsColl.BulkWrite(ctx, flightModels, options.BulkWrite().SetOrdered(false)); err != nil && !errors.Is(err, mongo.ErrUnacknowledgedWrite) {\n//\t\t\t\tspan.RecordError(err)\n//\t\t\t\tspan.SetStatus(codes.Error, err.Error())\n//\n//\t\t\t\tlog.Error(ctx, \"Failed to upsert live flights\", zap.Error(err))\n//\t\t\t\treturn errors.Wrap(err, \"mongo: failed to upsert live flights\")\n//\t\t\t}\n//\t\t\tflightModels = flightModels[:0]\n//\t\t}\n//\n//\t\tif len(trackModels) >= trackBatchSize || i == len(updates)-1 {\n//\t\t\tif _, err := r.tracksColl.BulkWrite(ctx, trackModels, options.BulkWrite().SetOrdered(false)); err != nil && !errors.Is(err, mongo.ErrUnacknowledgedWrite) {\n//\t\t\t\tspan.RecordError(err)\n//\t\t\t\tspan.SetStatus(codes.Error, err.Error())\n//\n//\t\t\t\tlog.Error(ctx, \"Failed to insert flight tracks\", zap.Error(err))\n//\t\t\t\treturn errors.Wrap(err, \"mongo: failed to insert flight tracks\")\n//\t\t\t}\n//\t\t\ttrackModels = trackModels[:0]\n//\t\t}\n//\t}\n//\n//\treturn nil\n//}\n\n// ADD THIS IMPORT:\n// import \"sync\"\n", "n_tokens": 687, "primary_symbol": "NewFlightsUpdateRepository", "primary_kind": "function", "primary_span": [35, 105], "def_symbols": [], "symbols": ["NewFlightsUpdateRepository", "func", "mongo", "Database", "FlightsUpdateRepository", "return", "flightsColl", "Collection", "flight_updates", "options", "SetWriteConcern", "writeconcern", "WriteConcern", "tracksColl", "flight_tracks", "UpsertMany", "upserts", "live", "flight", "updates", "the", "collection", "The", "location", "will", "added", "path", "when", "already", "ctx", "context", "Context", "core", "LiveFlightUpdate", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "Int", "len", "var", "flightModels", "WriteModel", "trackModels", "for", "range", "Flight", "upsert", "model", "append", "UpdateOneModel", "Upsert", "ptr", "true", "Filter", "bson", "live_flight_id", "Update", "setOnInsert", "toInsertLiveFlight", "set", "toUpdateLiveFlight", "Track", "insert", "trackDoc", "toTrackPointInsert", "InsertOneModel", "Document", "Flush", "batches", "flightBatchSize", "err", "BulkWrite", "SetOrdered", "false", "nil", "errors", "ErrUnacknowledgedWrite", "RecordError", "SetStatus", "codes", "Error", "log", "Failed", "flights", "zap", "Wrap", "failed", "trackBatchSize", "tracks", "ADD", "THIS", "IMPORT", "import", "sync"], "doc_head": "func NewFlightsUpdateRepository(db *mongo.Database) *FlightsUpdateRepository {\n\treturn &FlightsUpdateRepository{\n\t\tflightsColl: db.Collection(\n\t\t\t\"flight_updates\",\n\t\t\toptions.Collection().SetWriteConcern(&writeconcern.WriteConcern{W: 0}),\n\t\t),\n\t\ttracksColl: db.Collection(\n\t\t\t\"flight_tracks\",\n\t\t\toptions.Collection().SetWriteConcern(&writeconcern.WriteConcern{W: 0}),\n\t\t),\n\t}\n}\n//// UpsertMany upserts live flight updates in the collection\n//// The location will be added to the path when the flight is already in the collection\n//func (r *FlightsUpdateRepository) UpsertMany(ctx context.Context, updates []*core.LiveFlightUpdate) error {\n//\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:UpsertMany\", trace.WithSpanKind(trace.SpanKindClient))\n//\tdefer span.End()\n//\n//\tspan.SetAttributes(\n//\t\tattribute.Int(\"updates\", len(updates)),\n//\t)\n//\n//\tvar flightModels []mongo.WriteModel\n//\tvar trackModels []mongo.WriteModel\n//\n//\tfor i, u := range updates {\n//\t\t// Flight upsert model\n//\t\tflightModels = append(flightModels, &mongo.UpdateOneModel{\n//\t\t\tUpsert: ptr(true),\n//\t\t\tFilter: bson.M{\"live_flight_id\": u.ID},\n//\t\t\tUpdate: bson.M{\n//\t\t\t\t\"$setOnInsert\": toInsertLiveFlight(u),", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewFlightsUpdateRepository/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "NewFlightsUpdateRepository", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewFlightsUpdateRepository"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewFlightsUpdateRepository/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [735], "all_end_bytes": [1112], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.mongodb.org/mongo-driver/mongo", "go.mongodb.org/mongo-driver/mongo/options", "go.mongodb.org/mongo-driver/mongo/writeconcern"], "symbols_referenced_strict": ["Collection", "Database", "FlightsUpdateRepository", "NewFlightsUpdateRepository", "SetWriteConcern", "WriteConcern", "db.Collection", "mongo.Database", "options.Collection", "writeconcern.WriteConcern"], "header_context_minimal": "package mongodb\nimport (\n    \"go.mongodb.org/mongo-driver/mongo\"\n    \"go.mongodb.org/mongo-driver/mongo/options\"\n    \"go.mongodb.org/mongo-driver/mongo/writeconcern\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 106, "end_line": 232, "text": "func (r *FlightsUpdateRepository) UpsertMany(ctx context.Context, updates []*core.LiveFlightUpdate) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:UpsertMany\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(attribute.Int(\"updates\", len(updates)))\n\n\tif len(updates) == 0 {\n\t\treturn nil\n\t}\n\n\tconst (\n\t\tchunk        = 1250\n\t\tworkers      = 4\n\t\tbulkTimeout  = 15 * time.Second\n\t\tretryBackoff = 250 * time.Millisecond\n\t)\n\n\ttype job struct{ start, end int }\n\tjobs := make(chan job, (len(updates)+chunk-1)/chunk)\n\n\tbwo := options.BulkWrite().\n\t\tSetOrdered(false).\n\t\tSetBypassDocumentValidation(true)\n\n\tvar wg sync.WaitGroup\n\tvar mu sync.Mutex\n\tvar firstErr error\n\n\tsetFirstErr := func(err error) {\n\t\tif err == nil {\n\t\t\treturn\n\t\t}\n\t\tmu.Lock()\n\t\tif firstErr == nil {\n\t\t\tfirstErr = err\n\t\t}\n\t\tmu.Unlock()\n\t}\n\n\tisTransientWrite := func(err error) bool {\n\t\tif err == nil {\n\t\t\treturn false\n\t\t}\n\t\tmsg := err.Error()\n\t\treturn strings.Contains(msg, \"i/o timeout\") ||\n\t\t\tstrings.Contains(msg, \"context deadline exceeded\") ||\n\t\t\tstrings.Contains(msg, \"unable to write wire message\")\n\t}\n\n\tdoBulk := func(parent context.Context, coll *mongo.Collection, models []mongo.WriteModel) error {\n\t\tattempt := func() error {\n\t\t\tbctx, cancel := context.WithTimeout(parent, bulkTimeout)\n\t\t\t_, err := coll.BulkWrite(bctx, models, bwo)\n\t\t\tcancel()\n\t\t\tif errors.Is(err, mongo.ErrUnacknowledgedWrite) {\n\t\t\t\treturn nil\n\t\t\t}\n\t\t\treturn err\n\t\t}\n\n\t\tif err := attempt(); err != nil {\n\t\t\tif isTransientWrite(err) {\n\t\t\t\ttime.Sleep(retryBackoff)\n\t\t\t\treturn attempt()\n\t\t\t}\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t}\n\n\tworker := func() {\n\t\tdefer wg.Done()\n\t\tfor j := range jobs {\n\t\t\tu := updates[j.start:j.end]\n\n\t\t\tflights := make([]mongo.WriteModel, 0, len(u))\n\t\t\ttracks := make([]mongo.WriteModel, 0, len(u))\n\n\t\t\tfor _, x := range u {\n\t\t\t\tflights = append(flights, mongo.NewUpdateOneModel().\n\t\t\t\t\tSetUpsert(true).\n\t\t\t\t\tSetFilter(bson.M{\"live_flight_id\": x.ID}).\n\t\t\t\t\tSetUpdate(bson.M{\n\t\t\t\t\t\t\"$setOnInsert\": toInsertLiveFlight(x),\n\t\t\t\t\t\t\"$set\":         toUpdateLiveFlight(x),\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\ttracks = append(tracks, mongo.NewInsertOneModel().\n\t\t\t\t\tSetDocument(toTrackPointInsert(x)))\n\t\t\t}\n\n\t\t\t// SEQUENTIAL per chunk to cut socket pressure\n\t\t\tif err := doBulk(ctx, r.flightsColl, flights); err != nil {\n\t\t\t\tsetFirstErr(err)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif err := doBulk(ctx, r.tracksColl, tracks); err != nil {\n\t\t\t\tsetFirstErr(err)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\tfor i := 0; i < workers; i++ {\n\t\twg.Add(1)\n\t\tgo worker()\n\t}\n\n\tfor i := 0; i < len(updates); i += chunk {\n\t\tend := i + chunk\n\t\tif end > len(updates) {\n\t\t\tend = len(updates)\n\t\t}\n\t\tjobs <- job{start: i, end: end}\n\t}\n\tclose(jobs)\n\twg.Wait()\n\n\tif firstErr != nil {\n\t\tspan.RecordError(firstErr)\n\t\tspan.SetStatus(codes.Error, firstErr.Error())\n\t\tlog.Error(ctx, \"Failed bulk upsert for live flights/tracks\", zap.Error(firstErr))\n\t\treturn firstErr\n\t}\n\n\treturn nil\n}\n", "n_tokens": 845, "primary_symbol": "UpsertMany", "primary_kind": "method", "primary_span": [106, 232], "def_symbols": [], "symbols": ["UpsertMany", "func", "FlightsUpdateRepository", "ctx", "context", "Context", "updates", "core", "LiveFlightUpdate", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "Int", "len", "return", "nil", "const", "chunk", "workers", "bulkTimeout", "time", "Second", "retryBackoff", "Millisecond", "type", "job", "struct", "start", "end", "int", "jobs", "make", "chan", "bwo", "options", "BulkWrite", "SetOrdered", "false", "SetBypassDocumentValidation", "true", "var", "sync", "WaitGroup", "Mutex", "firstErr", "setFirstErr", "err", "Lock", "Unlock", "isTransientWrite", "bool", "msg", "Error", "strings", "Contains", "timeout", "deadline", "exceeded", "unable", "write", "wire", "message", "doBulk", "parent", "coll", "mongo", "Collection", "models", "WriteModel", "attempt", "bctx", "cancel", "WithTimeout", "errors", "ErrUnacknowledgedWrite", "Sleep", "worker", "Done", "for", "range", "flights", "tracks", "append", "NewUpdateOneModel", "SetUpsert", "SetFilter", "bson", "live_flight_id", "SetUpdate", "setOnInsert", "toInsertLiveFlight", "set", "toUpdateLiveFlight", "NewInsertOneModel", "SetDocument", "toTrackPointInsert", "SEQUENTIAL", "per", "cut", "socket", "pressure", "flightsColl", "tracksColl", "Add", "close", "Wait", "RecordError", "SetStatus", "codes", "log", "Failed", "bulk", "upsert", "live", "zap"], "doc_head": "func (r *FlightsUpdateRepository) UpsertMany(ctx context.Context, updates []*core.LiveFlightUpdate) error {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:UpsertMany\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(attribute.Int(\"updates\", len(updates)))\n\tif len(updates) == 0 {\n\t\treturn nil\n\t}\n\tconst (\n\t\tchunk        = 1250\n\t\tworkers      = 4\n\t\tbulkTimeout  = 15 * time.Second\n\t\tretryBackoff = 250 * time.Millisecond\n\t)\n\ttype job struct{ start, end int }\n\tjobs := make(chan job, (len(updates)+chunk-1)/chunk)\n\tbwo := options.BulkWrite().\n\t\tSetOrdered(false).\n\t\tSetBypassDocumentValidation(true)\n\tvar wg sync.WaitGroup\n\tvar mu sync.Mutex\n\tvar firstErr error\n\tsetFirstErr := func(err error) {\n\t\tif err == nil {\n\t\t\treturn\n\t\t}\n\t\tmu.Lock()\n\t\tif firstErr == nil {\n\t\t\tfirstErr = err\n\t\t}\n\t\tmu.Unlock()\n\t}\n\tisTransientWrite := func(err error) bool {\n\t\tif err == nil {\n\t\t\treturn false\n\t\t}\n\t\tmsg := err.Error()\n\t\treturn strings.Contains(msg, \"i/o timeout\") ||\n\t\t\tstrings.Contains(msg, \"context deadline exceeded\") ||\n\t\t\tstrings.Contains(msg, \"unable to write wire message\")\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsUpdateRepository).UpsertMany/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsUpdateRepository", "function_name": "", "method_name": "UpsertMany", "type_name": "FlightsUpdateRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["UpsertMany"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsUpdateRepository).UpsertMany/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsUpdateRepository"], "all_type_names": ["FlightsUpdateRepository"], "all_type_kinds": [null], "all_start_bytes": [3228], "all_end_bytes": [6136], "primary_index": 0, "all_receivers_normalized": ["(*FlightsUpdateRepository)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/log", "go.impalastudios.com/otel", "go.mongodb.org/mongo-driver/bson", "go.mongodb.org/mongo-driver/mongo", "go.mongodb.org/mongo-driver/mongo/options", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace", "go.uber.org/zap", "strings", "sync", "time"], "symbols_referenced_strict": ["Add", "BulkWrite", "Collection", "Contains", "Context", "Done", "End", "ErrUnacknowledgedWrite", "Error", "FlightsUpdateRepository", "Int", "LiveFlightUpdate", "Lock", "Millisecond", "Mutex", "NewInsertOneModel", "NewUpdateOneModel", "RecordError", "Second", "SetAttributes", "SetBypassDocumentValidation", "SetDocument", "SetFilter", "SetOrdered", "SetStatus", "SetUpdate", "SetUpsert", "Sleep", "SpanKindClient", "Start", "Tracer", "Unlock", "UpsertMany", "Wait", "WaitGroup", "WithSpanKind", "WithTimeout", "WriteModel", "attribute.Int", "bson.M", "codes.Error", "coll.BulkWrite", "context.Context", "context.WithTimeout", "core.LiveFlightUpdate", "err.Error", "errors.Is", "firstErr.Error", "j.end", "j.start", "log.Error", "mongo.Collection", "mongo.ErrUnacknowledgedWrite", "mongo.NewInsertOneModel", "mongo.NewUpdateOneModel", "mongo.WriteModel", "mu.Lock", "mu.Unlock", "options.BulkWrite", "r.flightsColl", "r.tracksColl", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "strings.Contains", "sync.Mutex", "sync.WaitGroup", "time.Millisecond", "time.Second", "time.Sleep", "trace.SpanKindClient", "trace.WithSpanKind", "wg.Add", "wg.Done", "wg.Wait", "x.ID", "xotel.Tracer", "zap.Error"], "header_context_minimal": "package mongodb\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/log\"\n    \"go.impalastudios.com/otel\"\n)\n// receiver: r *FlightsUpdateRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 233, "end_line": 245, "text": "func firstNonNil(errs ...error) error {\n\tfor _, e := range errs {\n\t\tif e != nil {\n\t\t\treturn e\n\t\t}\n\t}\n\treturn nil\n}\n\n//func ptr[T any](t T) *T {\n//\treturn &t\n//}\n", "n_tokens": 55, "primary_symbol": "firstNonNil", "primary_kind": "function", "primary_span": [233, 245], "def_symbols": [], "symbols": ["firstNonNil", "func", "errs", "error", "for", "range", "nil", "return", "ptr", "any"], "doc_head": "func firstNonNil(errs ...error) error {\n\tfor _, e := range errs {\n\t\tif e != nil {\n\t\t\treturn e\n\t\t}\n\t}\n\treturn nil\n}\n//func ptr[T any](t T) *T {\n//\treturn &t\n//}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:firstNonNil/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "firstNonNil", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["firstNonNil"], "all_kinds": ["function"], "all_ast_paths": ["go:function:firstNonNil/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [6138], "all_end_bytes": [6252], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 246, "end_line": 327, "text": "// Filter returns a page of live flights within the bounding BoundingBox\nfunc (r *FlightsUpdateRepository) Filter(ctx context.Context, f *core.FlightsWithin) ([]*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:Filter\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.Float64(\"bounding_box_top_left_lat\", f.BoundingBox.TopLeft.Lat),\n\t\tattribute.Float64(\"bounding_box_top_left_lon\", f.BoundingBox.TopLeft.Lon),\n\t\tattribute.Float64(\"bounding_box_bottom_right_lat\", f.BoundingBox.BottomRight.Lat),\n\t\tattribute.Float64(\"bounding_box_bottom_right_lon\", f.BoundingBox.BottomRight.Lon),\n\t\tattribute.String(\"max_age\", f.MaxAge.String()),\n\t)\n\n\tif f.AirlineClassification != nil {\n\t\tspan.SetAttributes(\n\t\t\tattribute.Int(\"airline_classification_c\", int(f.AirlineClassification.C)),\n\t\t\tattribute.Int(\"airline_classification_comparator\", int(f.AirlineClassification.Comparator)),\n\t\t)\n\t}\n\n\tfilter := bson.M{\n\t\t\"position\": bson.M{\n\t\t\t\"$geoWithin\": bson.M{\n\t\t\t\t\"$geometry\": polygonFromBoundingBox(f.BoundingBox),\n\t\t\t},\n\t\t},\n\t}\n\n\tif f.MaxAge > 0 {\n\t\tcutoff := time.Now().UTC().Add(-f.MaxAge)\n\t\tfilter[\"updated_at\"] = bson.M{\"$gte\": cutoff}\n\t}\n\n\tif f.AirlineClassification != nil && f.AirlineClassification.C > 0 {\n\t\top := r.claimOperationFromClassificationComparator(f.AirlineClassification.Comparator)\n\t\tfilter[\"airline_classification\"] = bson.M{op: f.AirlineClassification.C}\n\t}\n\n\tfindOpts := options.Find().\n\t\tSetProjection(bson.M{\n\t\t\t\"live_flight_id\":    1,\n\t\t\t\"flight_id\":         1,\n\t\t\t\"position\":          1,\n\t\t\t\"altitude\":          1,\n\t\t\t\"heading_direction\": 1,\n\t\t})\n\n\tcursor, err := r.flightsColl.Find(ctx, filter, findOpts)\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find live flights\")\n\t}\n\tdefer func() {\n\t\t_ = cursor.Close(ctx)\n\t}()\n\n\tvar fs []liveFlight\n\tif err := cursor.All(ctx, &fs); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to decode live flights\")\n\t}\n\n\tfsd := make([]*core.LiveFlight, len(fs))\n\tfor i, f := range fs {\n\t\tcoord := coordinateFromPoint(&f.Position)\n\n\t\tfsd[i] = &core.LiveFlight{\n\t\t\tID:               f.ID,\n\t\t\tFlightID:         f.FlightID,\n\t\t\tPosition:         coord,\n\t\t\tAltitude:         f.Altitude,\n\t\t\tHeadingDirection: f.HeadingDirection,\n\t\t}\n\t}\n\n\treturn fsd, nil\n}\n", "n_tokens": 668, "primary_symbol": "Filter", "primary_kind": "method", "primary_span": [247, 327], "def_symbols": [], "symbols": ["Filter", "returns", "page", "live", "flights", "within", "the", "bounding", "BoundingBox", "func", "FlightsUpdateRepository", "ctx", "context", "Context", "core", "FlightsWithin", "LiveFlight", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "Float64", "bounding_box_top_left_lat", "TopLeft", "Lat", "bounding_box_top_left_lon", "Lon", "bounding_box_bottom_right_lat", "BottomRight", "bounding_box_bottom_right_lon", "String", "max_age", "MaxAge", "AirlineClassification", "nil", "Int", "airline_classification_c", "int", "airline_classification_comparator", "Comparator", "filter", "bson", "position", "geoWithin", "geometry", "polygonFromBoundingBox", "cutoff", "time", "Now", "UTC", "Add", "updated_at", "gte", "claimOperationFromClassificationComparator", "airline_classification", "findOpts", "options", "Find", "SetProjection", "live_flight_id", "flight_id", "altitude", "heading_direction", "cursor", "err", "flightsColl", "RecordError", "SetStatus", "codes", "Error", "return", "errors", "Wrap", "mongo", "failed", "find", "Close", "var", "liveFlight", "All", "decode", "fsd", "make", "len", "for", "range", "coord", "coordinateFromPoint", "Position", "FlightID", "Altitude", "HeadingDirection"], "doc_head": "// Filter returns a page of live flights within the bounding BoundingBox\nfunc (r *FlightsUpdateRepository) Filter(ctx context.Context, f *core.FlightsWithin) ([]*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:Filter\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.Float64(\"bounding_box_top_left_lat\", f.BoundingBox.TopLeft.Lat),\n\t\tattribute.Float64(\"bounding_box_top_left_lon\", f.BoundingBox.TopLeft.Lon),\n\t\tattribute.Float64(\"bounding_box_bottom_right_lat\", f.BoundingBox.BottomRight.Lat),\n\t\tattribute.Float64(\"bounding_box_bottom_right_lon\", f.BoundingBox.BottomRight.Lon),\n\t\tattribute.String(\"max_age\", f.MaxAge.String()),\n\t)\n\tif f.AirlineClassification != nil {\n\t\tspan.SetAttributes(\n\t\t\tattribute.Int(\"airline_classification_c\", int(f.AirlineClassification.C)),\n\t\t\tattribute.Int(\"airline_classification_comparator\", int(f.AirlineClassification.Comparator)),\n\t\t)\n\t}\n\tfilter := bson.M{\n\t\t\"position\": bson.M{\n\t\t\t\"$geoWithin\": bson.M{\n\t\t\t\t\"$geometry\": polygonFromBoundingBox(f.BoundingBox),\n\t\t\t},\n\t\t},\n\t}\n\tif f.MaxAge > 0 {\n\t\tcutoff := time.Now().UTC().Add(-f.MaxAge)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsUpdateRepository).Filter/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsUpdateRepository", "function_name": "", "method_name": "Filter", "type_name": "FlightsUpdateRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Filter"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsUpdateRepository).Filter/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsUpdateRepository"], "all_type_names": ["FlightsUpdateRepository"], "all_type_kinds": [null], "all_start_bytes": [6373], "all_end_bytes": [8744], "primary_index": 0, "all_receivers_normalized": ["(*FlightsUpdateRepository)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.mongodb.org/mongo-driver/bson", "go.mongodb.org/mongo-driver/mongo/options", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace", "time"], "symbols_referenced_strict": ["Add", "AirlineClassification", "All", "Altitude", "BottomRight", "BottomRight.Lat", "BottomRight.Lon", "BoundingBox", "Close", "Comparator", "Context", "End", "Error", "Filter", "Find", "FlightID", "FlightsUpdateRepository", "FlightsWithin", "Float64", "HeadingDirection", "Int", "Lat", "LiveFlight", "Lon", "MaxAge", "Now", "Position", "RecordError", "SetAttributes", "SetProjection", "SetStatus", "SpanKindClient", "Start", "String", "TopLeft", "TopLeft.Lat", "TopLeft.Lon", "Tracer", "WithSpanKind", "Wrap", "attribute.Float64", "attribute.Int", "attribute.String", "bson.M", "codes.Error", "context.Context", "core.FlightsWithin", "core.LiveFlight", "cursor.All", "cursor.Close", "err.Error", "errors.Wrap", "f.AirlineClassification", "f.Altitude", "f.BoundingBox", "f.FlightID", "f.HeadingDirection", "f.ID", "f.MaxAge", "f.Position", "options.Find", "r.claimOperationFromClassificationComparator", "r.flightsColl", "span.End", "span.RecordError", "span.SetAttributes", "span.SetStatus", "time.Now", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package mongodb\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.mongodb.org/mongo-driver/bson\"\n)\n// receiver: r *FlightsUpdateRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 328, "end_line": 342, "text": "func polygonFromBoundingBox(bb *core.BoundingBox) primitive.M {\n\treturn primitive.M{\n\t\t\"type\": \"Polygon\",\n\t\t\"coordinates\": []any{\n\t\t\t[][]float64{\n\t\t\t\t{bb.TopLeft.Lon, bb.BottomRight.Lat},     // bottom-left (min_lon, min_lat)\n\t\t\t\t{bb.BottomRight.Lon, bb.BottomRight.Lat}, // bottom-right (max_lon, min_lat)\n\t\t\t\t{bb.BottomRight.Lon, bb.TopLeft.Lat},     // top-right (max_long, max_lat)\n\t\t\t\t{bb.TopLeft.Lon, bb.TopLeft.Lat},         // top-left (min_lon, max_lat)\n\t\t\t\t{bb.TopLeft.Lon, bb.BottomRight.Lat},     // Closing the polygon\n\t\t\t},\n\t\t},\n\t}\n}\n", "n_tokens": 171, "primary_symbol": "polygonFromBoundingBox", "primary_kind": "function", "primary_span": [328, 342], "def_symbols": [], "symbols": ["polygonFromBoundingBox", "func", "core", "BoundingBox", "primitive", "return", "type", "Polygon", "coordinates", "any", "float64", "TopLeft", "Lon", "BottomRight", "Lat", "bottom", "left", "min_lon", "min_lat", "right", "max_lon", "top", "max_long", "max_lat", "Closing", "the", "polygon"], "doc_head": "func polygonFromBoundingBox(bb *core.BoundingBox) primitive.M {\n\treturn primitive.M{\n\t\t\"type\": \"Polygon\",\n\t\t\"coordinates\": []any{\n\t\t\t[][]float64{\n\t\t\t\t{bb.TopLeft.Lon, bb.BottomRight.Lat},     // bottom-left (min_lon, min_lat)\n\t\t\t\t{bb.BottomRight.Lon, bb.BottomRight.Lat}, // bottom-right (max_lon, min_lat)\n\t\t\t\t{bb.BottomRight.Lon, bb.TopLeft.Lat},     // top-right (max_long, max_lat)\n\t\t\t\t{bb.TopLeft.Lon, bb.TopLeft.Lat},         // top-left (min_lon, max_lat)\n\t\t\t\t{bb.TopLeft.Lon, bb.BottomRight.Lat},     // Closing the polygon\n\t\t\t},\n\t\t},\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:polygonFromBoundingBox/complete", "package": "mongodb", "node_kind": "function", "receiver": "", "function_name": "polygonFromBoundingBox", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["polygonFromBoundingBox"], "all_kinds": ["function"], "all_ast_paths": ["go:function:polygonFromBoundingBox/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8746], "all_end_bytes": [9293], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core", "go.mongodb.org/mongo-driver/bson/primitive"], "symbols_referenced_strict": ["BottomRight", "BoundingBox", "Lat", "Lon", "TopLeft", "bb.BottomRight", "bb.TopLeft", "core.BoundingBox", "primitive.M"], "header_context_minimal": "package mongodb\nimport (\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.mongodb.org/mongo-driver/bson/primitive\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 343, "end_line": 353, "text": "func (r *FlightsUpdateRepository) claimOperationFromClassificationComparator(comparator core.ClassificationComparator) string {\n\tswitch comparator {\n\tcase core.ClassificationGreaterComparator:\n\t\treturn \"$lte\"\n\tcase core.ClassificationLesserComparator:\n\t\treturn \"$gte\"\n\tdefault:\n\t\treturn \"$eq\"\n\t}\n}\n", "n_tokens": 61, "primary_symbol": "claimOperationFromClassificationComparator", "primary_kind": "method", "primary_span": [343, 353], "def_symbols": [], "symbols": ["claimOperationFromClassificationComparator", "func", "FlightsUpdateRepository", "comparator", "core", "ClassificationComparator", "string", "switch", "case", "ClassificationGreaterComparator", "return", "lte", "ClassificationLesserComparator", "gte", "default"], "doc_head": "func (r *FlightsUpdateRepository) claimOperationFromClassificationComparator(comparator core.ClassificationComparator) string {\n\tswitch comparator {\n\tcase core.ClassificationGreaterComparator:\n\t\treturn \"$lte\"\n\tcase core.ClassificationLesserComparator:\n\t\treturn \"$gte\"\n\tdefault:\n\t\treturn \"$eq\"\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsUpdateRepository).claimOperationFromClassificationComparator/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsUpdateRepository", "function_name": "", "method_name": "claimOperationFromClassificationComparator", "type_name": "FlightsUpdateRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["claimOperationFromClassificationComparator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsUpdateRepository).claimOperationFromClassificationComparator/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsUpdateRepository"], "all_type_names": ["FlightsUpdateRepository"], "all_type_kinds": [null], "all_start_bytes": [9295], "all_end_bytes": [9592], "primary_index": 0, "all_receivers_normalized": ["(*FlightsUpdateRepository)"], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["ClassificationComparator", "ClassificationGreaterComparator", "ClassificationLesserComparator", "FlightsUpdateRepository", "core.ClassificationComparator", "core.ClassificationGreaterComparator", "core.ClassificationLesserComparator"], "header_context_minimal": "package mongodb\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"\n// receiver: r *FlightsUpdateRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 354, "end_line": 364, "text": "func (r *FlightsUpdateRepository) GetFlightDetailsByLiveFlightID(ctx context.Context, id string) (*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:GetFlightDetailsByLiveFlightID\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.String(\"id\", id),\n\t)\n\n\treturn r.getFlightByFilter(ctx, bson.M{\"live_flight_id\": id})\n}\n", "n_tokens": 102, "primary_symbol": "GetFlightDetailsByLiveFlightID", "primary_kind": "method", "primary_span": [354, 364], "def_symbols": [], "symbols": ["GetFlightDetailsByLiveFlightID", "func", "FlightsUpdateRepository", "ctx", "context", "Context", "string", "core", "LiveFlight", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "return", "getFlightByFilter", "bson", "live_flight_id"], "doc_head": "func (r *FlightsUpdateRepository) GetFlightDetailsByLiveFlightID(ctx context.Context, id string) (*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:GetFlightDetailsByLiveFlightID\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.String(\"id\", id),\n\t)\n\treturn r.getFlightByFilter(ctx, bson.M{\"live_flight_id\": id})\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsUpdateRepository).GetFlightDetailsByLiveFlightID/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsUpdateRepository", "function_name": "", "method_name": "GetFlightDetailsByLiveFlightID", "type_name": "FlightsUpdateRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFlightDetailsByLiveFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsUpdateRepository).GetFlightDetailsByLiveFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsUpdateRepository"], "all_type_names": ["FlightsUpdateRepository"], "all_type_kinds": [null], "all_start_bytes": [9594], "all_end_bytes": [9995], "primary_index": 0, "all_receivers_normalized": ["(*FlightsUpdateRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.mongodb.org/mongo-driver/bson", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["Context", "End", "FlightsUpdateRepository", "GetFlightDetailsByLiveFlightID", "LiveFlight", "SetAttributes", "SpanKindClient", "Start", "String", "Tracer", "WithSpanKind", "attribute.String", "bson.M", "context.Context", "core.LiveFlight", "r.getFlightByFilter", "span.End", "span.SetAttributes", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package mongodb\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.mongodb.org/mongo-driver/bson\"\n    \"go.opentelemetry.io/otel/attribute\"\n)\n// receiver: r *FlightsUpdateRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 365, "end_line": 375, "text": "func (r *FlightsUpdateRepository) GetFlightDetailsByFlightID(ctx context.Context, id string) (*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:GetFlightDetailsByFlightID\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tspan.SetAttributes(\n\t\tattribute.String(\"id\", id),\n\t)\n\n\treturn r.getFlightByFilter(ctx, bson.M{\"flight_id\": id})\n}\n", "n_tokens": 99, "primary_symbol": "GetFlightDetailsByFlightID", "primary_kind": "method", "primary_span": [365, 375], "def_symbols": [], "symbols": ["GetFlightDetailsByFlightID", "func", "FlightsUpdateRepository", "ctx", "context", "Context", "string", "core", "LiveFlight", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "SetAttributes", "attribute", "String", "return", "getFlightByFilter", "bson", "flight_id"], "doc_head": "func (r *FlightsUpdateRepository) GetFlightDetailsByFlightID(ctx context.Context, id string) (*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:GetFlightDetailsByFlightID\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tspan.SetAttributes(\n\t\tattribute.String(\"id\", id),\n\t)\n\treturn r.getFlightByFilter(ctx, bson.M{\"flight_id\": id})\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsUpdateRepository).GetFlightDetailsByFlightID/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsUpdateRepository", "function_name": "", "method_name": "GetFlightDetailsByFlightID", "type_name": "FlightsUpdateRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFlightDetailsByFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsUpdateRepository).GetFlightDetailsByFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsUpdateRepository"], "all_type_names": ["FlightsUpdateRepository"], "all_type_kinds": [null], "all_start_bytes": [9997], "all_end_bytes": [10385], "primary_index": 0, "all_receivers_normalized": ["(*FlightsUpdateRepository)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.mongodb.org/mongo-driver/bson", "go.opentelemetry.io/otel/attribute", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["Context", "End", "FlightsUpdateRepository", "GetFlightDetailsByFlightID", "LiveFlight", "SetAttributes", "SpanKindClient", "Start", "String", "Tracer", "WithSpanKind", "attribute.String", "bson.M", "context.Context", "core.LiveFlight", "r.getFlightByFilter", "span.End", "span.SetAttributes", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package mongodb\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.mongodb.org/mongo-driver/bson\"\n    \"go.opentelemetry.io/otel/attribute\"\n)\n// receiver: r *FlightsUpdateRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/mongodb/flights_updates_repository.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go", "rel_path": "internal/adapters/mongodb/flights_updates_repository.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 376, "end_line": 419, "text": "func (r *FlightsUpdateRepository) getFlightByFilter(ctx context.Context, filter bson.M) (*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:getFlightByFilter\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\n\tvar lf liveFlight\n\tif err := r.flightsColl.FindOne(ctx, filter).Decode(&lf); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\tif errors.Is(err, mongo.ErrNoDocuments) {\n\t\t\treturn nil, core.ErrFlightNotFound\n\t\t}\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find flight\")\n\t}\n\tlfd := lf.toDomain()\n\n\tcursor, err := r.tracksColl.Find(ctx, bson.M{\"live_flight_id\": lfd.ID})\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find flight tracks\")\n\t}\n\tdefer func() {\n\t\t_ = cursor.Close(ctx)\n\t}()\n\n\tvar rawTracks []trackPoint\n\tif err := cursor.All(ctx, &rawTracks); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to decode flight tracks\")\n\t}\n\n\t// Convert and attach tracks\n\tlfd.Tracks = make([]core.TrackPoint, len(rawTracks))\n\tfor i, tp := range rawTracks {\n\t\tlfd.Tracks[i] = tp.toDomain()\n\t}\n\n\treturn lfd, nil\n}\n", "n_tokens": 347, "primary_symbol": "getFlightByFilter", "primary_kind": "method", "primary_span": [376, 419], "def_symbols": [], "symbols": ["getFlightByFilter", "func", "FlightsUpdateRepository", "ctx", "context", "Context", "filter", "bson", "core", "LiveFlight", "error", "span", "xotel", "Tracer", "Start", "trace", "WithSpanKind", "SpanKindClient", "defer", "End", "var", "liveFlight", "err", "flightsColl", "FindOne", "Decode", "nil", "RecordError", "SetStatus", "codes", "Error", "errors", "mongo", "ErrNoDocuments", "return", "ErrFlightNotFound", "Wrap", "failed", "find", "flight", "lfd", "toDomain", "cursor", "tracksColl", "Find", "live_flight_id", "tracks", "Close", "rawTracks", "trackPoint", "All", "decode", "Convert", "and", "attach", "Tracks", "make", "TrackPoint", "len", "for", "range"], "doc_head": "func (r *FlightsUpdateRepository) getFlightByFilter(ctx context.Context, filter bson.M) (*core.LiveFlight, error) {\n\tctx, span := xotel.Tracer.Start(ctx, \"FlightsUpdateRepository:getFlightByFilter\", trace.WithSpanKind(trace.SpanKindClient))\n\tdefer span.End()\n\tvar lf liveFlight\n\tif err := r.flightsColl.FindOne(ctx, filter).Decode(&lf); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\tif errors.Is(err, mongo.ErrNoDocuments) {\n\t\t\treturn nil, core.ErrFlightNotFound\n\t\t}\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find flight\")\n\t}\n\tlfd := lf.toDomain()\n\tcursor, err := r.tracksColl.Find(ctx, bson.M{\"live_flight_id\": lfd.ID})\n\tif err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to find flight tracks\")\n\t}\n\tdefer func() {\n\t\t_ = cursor.Close(ctx)\n\t}()\n\tvar rawTracks []trackPoint\n\tif err := cursor.All(ctx, &rawTracks); err != nil {\n\t\tspan.RecordError(err)\n\t\tspan.SetStatus(codes.Error, err.Error())\n\t\treturn nil, errors.Wrap(err, \"mongo: failed to decode flight tracks\")\n\t}\n\t// Convert and attach tracks\n\tlfd.Tracks = make([]core.TrackPoint, len(rawTracks))", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*FlightsUpdateRepository).getFlightByFilter/complete", "package": "mongodb", "node_kind": "method", "receiver": "r *FlightsUpdateRepository", "function_name": "", "method_name": "getFlightByFilter", "type_name": "FlightsUpdateRepository", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["getFlightByFilter"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*FlightsUpdateRepository).getFlightByFilter/complete"], "all_roles": ["complete"], "all_receivers": ["r *FlightsUpdateRepository"], "all_type_names": ["FlightsUpdateRepository"], "all_type_kinds": [null], "all_start_bytes": [10387], "all_end_bytes": [11653], "primary_index": 0, "all_receivers_normalized": ["(*FlightsUpdateRepository)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/otel", "go.mongodb.org/mongo-driver/bson", "go.mongodb.org/mongo-driver/mongo", "go.opentelemetry.io/otel/codes", "go.opentelemetry.io/otel/trace"], "symbols_referenced_strict": ["All", "Close", "Context", "Decode", "End", "ErrFlightNotFound", "ErrNoDocuments", "Error", "Find", "FindOne", "FlightsUpdateRepository", "LiveFlight", "RecordError", "SetStatus", "SpanKindClient", "Start", "Tracer", "TrackPoint", "Tracks", "WithSpanKind", "Wrap", "bson.M", "codes.Error", "context.Context", "core.ErrFlightNotFound", "core.LiveFlight", "core.TrackPoint", "cursor.All", "cursor.Close", "err.Error", "errors.Is", "errors.Wrap", "lf.toDomain", "lfd.ID", "lfd.Tracks", "mongo.ErrNoDocuments", "r.flightsColl", "r.tracksColl", "span.End", "span.RecordError", "span.SetStatus", "tp.toDomain", "trace.SpanKindClient", "trace.WithSpanKind", "xotel.Tracer"], "header_context_minimal": "package mongodb\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/otel\"\n    \"go.mongodb.org/mongo-driver/bson\"\n)\n// receiver: r *FlightsUpdateRepository", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/mongodb/flights_updates_repository.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go", "rel_path": "internal/adapters/radarbox_tcp/models.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package radarboxtcp\n", "n_tokens": 5, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "radarboxtcp"], "doc_head": "package radarboxtcp", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "radarboxtcp", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package radarboxtcp", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go", "rel_path": "internal/adapters/radarbox_tcp/models.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 12, "text": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n)\n", "n_tokens": 45, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 12], "def_symbols": [], "symbols": ["import", "context", "fmt", "time", "impalastudios", "com", "aviation", "liveflights", "internal", "core", "log", "uber", "org", "zap"], "doc_head": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"time\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "radarboxtcp", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package radarboxtcp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go", "rel_path": "internal/adapters/radarbox_tcp/models.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 13, "end_line": 134, "text": "type RealtimeFlightData struct {\n\tID        int64  `json:\"id\"`\n\tTimestamp string `json:\"t\"`\n\tEpoch     int64  `json:\"epoch\"`\n\n\tAircraftModeSCode       string `json:\"ms\"`\n\tAircraftRegistration    string `json:\"acr\"`\n\tAircraftTypeCode        string `json:\"act\"`\n\tAircraftTypeDescription string `json:\"acd\"`\n\tAircraftPhotoUrl1       string `json:\"acphoto1\"`\n\tAircraftPhotoUrl2       string `json:\"acphoto2\"`\n\tAircraftSerialNumber    string `json:\"acsn\"`\n\tAircraftFirstFlightDate string `json:\"acff\"`\n\tCallSign                string `json:\"cs\"`\n\n\tFlightNumber                       string  `json:\"fnia\"`\n\tAirlineIcaoCode                    string  `json:\"alic\"`\n\tAirlineIataCode                    string  `json:\"alia\"`\n\tAirlineName                        string  `json:\"alna\"`\n\tLat                                float64 `json:\"la\"`\n\tLon                                float64 `json:\"lo\"`\n\tAltitude                           float64 `json:\"alt\"`\n\tHeadingDirection                   float64 `json:\"hd\"`\n\tGroundSpeed                        float64 `json:\"gs\"`\n\tVerticalSpeed                      float64 `json:\"vs\"`\n\tSquawk                             int     `json:\"sq\"`\n\tSource                             string  `json:\"so\"`\n\tEstimatedReportingStationLatitude  float64 `json:\"stcenla\"`\n\tEstimatedReportingStationLongitude float64 `json:\"stcenlo\"`\n\n\tOriginAirportLatitude             float64 `json:\"aporgla\"`\n\tOriginAirportLongitude            float64 `json:\"aporglo\"`\n\tOriginAirportIcaoCode             string  `json:\"aporgic\"`\n\tOriginAirportIataCode             string  `json:\"aporgia\"`\n\tOriginAirportName                 string  `json:\"aporgna\"`\n\tOriginAirportCity                 string  `json:\"aporgci\"`\n\tOriginAirportProvince             string  `json:\"aporgst\"`\n\tOriginAirportCountry              string  `json:\"aporgco\"`\n\tOriginAirportTimezoneUtcOffset    float64 `json:\"aporgtz\"`\n\tOriginAirportTimezoneAbbreviation string  `json:\"aporgtzns\"`\n\tOriginAirportTimezoneName         string  `json:\"aporgtznl\"`\n\n\tDestinationAirportLatitude             float64 `json:\"apdstla\"`\n\tDestinationAirportLongitude            float64 `json:\"apdstlo\"`\n\tDestinationAirportIcaoCode             string  `json:\"apdstic\"`\n\tDestinationAirportIataCode             string  `json:\"apdstia\"`\n\tDestinationAirportName                 string  `json:\"apdstna\"`\n\tDestinationAirportCity                 string  `json:\"apdstci\"`\n\tDestinationAirportProvince             string  `json:\"apdstst\"`\n\tDestinationAirportCountry              string  `json:\"apdstco\"`\n\tDestinationAirportTimezoneUtcOffset    float64 `json:\"apdsttz\"`\n\tDestinationAirportTimezoneAbbreviation string  `json:\"apdsttzns\"`\n\tDestinationAirportTimezoneName         string  `json:\"apdsttznl\"`\n\n\tTakeoffUtcTime                     string  `json:\"tkot\"`\n\tTakeoffRunway                      string  `json:\"tkorw\"`\n\tTakeoffAirportLatitude             float64 `json:\"aptkola\"`\n\tTakeoffAirportLongitude            float64 `json:\"aptkolo\"`\n\tTakeoffAirportIcaoCode             string  `json:\"aptkoic\"`\n\tTakeoffAirportIataCode             string  `json:\"aptkoia\"`\n\tTakeoffAirportName                 string  `json:\"aptkona\"`\n\tTakeoffAirportCity                 string  `json:\"aptkoci\"`\n\tTakeoffAirportProvince             string  `json:\"aptkost\"`\n\tTakeoffAirportCountry              string  `json:\"aptkoco\"`\n\tTakeoffAirportTimezoneUtcOffset    float64 `json:\"aptkotz\"`\n\tTakeoffAirportTimezoneAbbreviation string  `json:\"aptkotzns\"`\n\tTakeoffAirportTimezoneName         string  `json:\"aptkotznl\"`\n\tTakeoffLocalTime                   string  `json:\"tkotcomm\"`\n\n\tLandingUtcTime                     string  `json:\"lngt\"`\n\tLandingRunway                      string  `json:\"lngrw\"`\n\tLandingAirportLatitude             float64 `json:\"aplngla\"`\n\tLandingAirportLongitude            float64 `json:\"aplnglo\"`\n\tLandingAirportIcaoCode             string  `json:\"aplngic\"`\n\tLandingAirportIataCode             string  `json:\"aplngia\"`\n\tLandingAirportName                 string  `json:\"aplngna\"`\n\tLandingAirportCity                 string  `json:\"aplngci\"`\n\tLandingAirportProvince             string  `json:\"aplngst\"`\n\tLandingAirportCountry              string  `json:\"aplngco\"`\n\tLandingAirportTimezoneUtcOffset    float64 `json:\"aplngtz\"`\n\tLandingAirportTimezoneAbbreviation string  `json:\"aplngtzns\"`\n\tLandingAirportTimezoneName         string  `json:\"aplngtznl\"`\n\tLandingLocalTime                   string  `json:\"lngtcomm\"`\n\n\tPlannedFlightWaypoints string `json:\"wp\"`\n\tPlannedFlightRoute     string `json:\"route\"`\n\n\tDepartureScheduledLocalTime string `json:\"deps\"`\n\tDepartureEstimatedLocalTime string `json:\"depe\"`\n\tDepartureActualLocalTime    string `json:\"depa\"`\n\tDepartureTerminal           string `json:\"depterm\"`\n\tDepartureGate               string `json:\"depgate\"`\n\tDepartureCheckInDesk        string `json:\"depchec\"`\n\tDepartureDelayStatusCode    string `json:\"depdels\"`\n\tDepartureDelayDetailCode    string `json:\"depdeld\"`\n\tDepartureDelayReasonCode    string `json:\"depdelr\"`\n\n\tArrivalScheduledLocalTime string `json:\"arrs\"`\n\tArrivalEstimatedLocalTime string `json:\"arre\"`\n\tArrivalActualLocalTime    string `json:\"arra\"`\n\tArrivalTerminal           string `json:\"arrterm\"`\n\tArrivalGate               string `json:\"arrgate\"`\n\tArrivalBaggageClaim       string `json:\"arrbagg\"`\n\tArrivalDelayStatusCode    string `json:\"arrdels\"`\n\tArrivalDelayDetailCode    string `json:\"arrdeld\"`\n\tArrivalDelayReasonCode    string `json:\"arrdelr\"`\n\n\tDiversionAirportLatitude             float64 `json:\"apdivla\"`\n\tDiversionAirportLongitude            float64 `json:\"apdivlo\"`\n\tDiversionAirportIcaoCode             string  `json:\"apdivic\"`\n\tDiversionAirportIataCode             string  `json:\"apdivia\"`\n\tDiversionAirportName                 string  `json:\"apdivna\"`\n\tDiversionAirportCity                 string  `json:\"apdivci\"`\n\tDiversionAirportProvince             string  `json:\"apdivst\"`\n\tDiversionAirportCountry              string  `json:\"apdivco\"`\n\tDiversionAirportTimezoneUtcOffset    float64 `json:\"apdivtz\"`\n\tDiversionAirportTimezoneAbbreviation string  `json:\"apdivtzns\"`\n\tDiversionAirportTimezoneName         string  `json:\"apdivtznl\"`\n\n\tCodeshares string `json:\"codeshares\"`\n}\n", "n_tokens": 1539, "primary_symbol": "RealtimeFlightData", "primary_kind": "type", "primary_span": [13, 134], "def_symbols": [], "symbols": ["type", "RealtimeFlightData", "struct", "int64", "json", "Timestamp", "string", "Epoch", "epoch", "AircraftModeSCode", "AircraftRegistration", "acr", "AircraftTypeCode", "act", "AircraftTypeDescription", "acd", "AircraftPhotoUrl1", "acphoto1", "AircraftPhotoUrl2", "acphoto2", "AircraftSerialNumber", "acsn", "AircraftFirstFlightDate", "acff", "CallSign", "FlightNumber", "fnia", "AirlineIcaoCode", "alic", "AirlineIataCode", "alia", "AirlineName", "alna", "Lat", "float64", "Lon", "Altitude", "alt", "HeadingDirection", "GroundSpeed", "VerticalSpeed", "Squawk", "int", "Source", "EstimatedReportingStationLatitude", "stcenla", "EstimatedReportingStationLongitude", "stcenlo", "OriginAirportLatitude", "aporgla", "OriginAirportLongitude", "aporglo", "OriginAirportIcaoCode", "aporgic", "OriginAirportIataCode", "aporgia", "OriginAirportName", "aporgna", "OriginAirportCity", "aporgci", "OriginAirportProvince", "aporgst", "OriginAirportCountry", "aporgco", "OriginAirportTimezoneUtcOffset", "aporgtz", "OriginAirportTimezoneAbbreviation", "aporgtzns", "OriginAirportTimezoneName", "aporgtznl", "DestinationAirportLatitude", "apdstla", "DestinationAirportLongitude", "apdstlo", "DestinationAirportIcaoCode", "apdstic", "DestinationAirportIataCode", "apdstia", "DestinationAirportName", "apdstna", "DestinationAirportCity", "apdstci", "DestinationAirportProvince", "apdstst", "DestinationAirportCountry", "apdstco", "DestinationAirportTimezoneUtcOffset", "apdsttz", "DestinationAirportTimezoneAbbreviation", "apdsttzns", "DestinationAirportTimezoneName", "apdsttznl", "TakeoffUtcTime", "tkot", "TakeoffRunway", "tkorw", "TakeoffAirportLatitude", "aptkola", "TakeoffAirportLongitude", "aptkolo", "TakeoffAirportIcaoCode", "aptkoic", "TakeoffAirportIataCode", "aptkoia", "TakeoffAirportName", "aptkona", "TakeoffAirportCity", "aptkoci", "TakeoffAirportProvince", "aptkost", "TakeoffAirportCountry", "aptkoco", "TakeoffAirportTimezoneUtcOffset", "aptkotz", "TakeoffAirportTimezoneAbbreviation", "aptkotzns", "TakeoffAirportTimezoneName", "aptkotznl", "TakeoffLocalTime", "tkotcomm", "LandingUtcTime", "lngt", "LandingRunway", "lngrw", "LandingAirportLatitude", "aplngla", "LandingAirportLongitude", "aplnglo", "LandingAirportIcaoCode", "aplngic", "LandingAirportIataCode", "aplngia", "LandingAirportName", "aplngna", "LandingAirportCity", "aplngci", "LandingAirportProvince", "aplngst", "LandingAirportCountry", "aplngco", "LandingAirportTimezoneUtcOffset", "aplngtz", "LandingAirportTimezoneAbbreviation", "aplngtzns", "LandingAirportTimezoneName", "aplngtznl", "LandingLocalTime", "lngtcomm", "PlannedFlightWaypoints", "PlannedFlightRoute", "route", "DepartureScheduledLocalTime", "deps", "DepartureEstimatedLocalTime", "depe", "DepartureActualLocalTime", "depa", "DepartureTerminal", "depterm", "DepartureGate", "depgate", "DepartureCheckInDesk", "depchec", "DepartureDelayStatusCode", "depdels", "DepartureDelayDetailCode", "depdeld", "DepartureDelayReasonCode", "depdelr", "ArrivalScheduledLocalTime", "arrs", "ArrivalEstimatedLocalTime", "arre", "ArrivalActualLocalTime", "arra", "ArrivalTerminal", "arrterm", "ArrivalGate", "arrgate", "ArrivalBaggageClaim", "arrbagg", "ArrivalDelayStatusCode", "arrdels", "ArrivalDelayDetailCode", "arrdeld", "ArrivalDelayReasonCode", "arrdelr", "DiversionAirportLatitude", "apdivla", "DiversionAirportLongitude", "apdivlo", "DiversionAirportIcaoCode", "apdivic", "DiversionAirportIataCode", "apdivia", "DiversionAirportName", "apdivna", "DiversionAirportCity", "apdivci", "DiversionAirportProvince", "apdivst", "DiversionAirportCountry", "apdivco", "DiversionAirportTimezoneUtcOffset", "apdivtz", "DiversionAirportTimezoneAbbreviation", "apdivtzns", "DiversionAirportTimezoneName", "apdivtznl", "Codeshares", "codeshares"], "doc_head": "type RealtimeFlightData struct {\n\tID        int64  `json:\"id\"`\n\tTimestamp string `json:\"t\"`\n\tEpoch     int64  `json:\"epoch\"`\n\tAircraftModeSCode       string `json:\"ms\"`\n\tAircraftRegistration    string `json:\"acr\"`\n\tAircraftTypeCode        string `json:\"act\"`\n\tAircraftTypeDescription string `json:\"acd\"`\n\tAircraftPhotoUrl1       string `json:\"acphoto1\"`\n\tAircraftPhotoUrl2       string `json:\"acphoto2\"`\n\tAircraftSerialNumber    string `json:\"acsn\"`\n\tAircraftFirstFlightDate string `json:\"acff\"`\n\tCallSign                string `json:\"cs\"`\n\tFlightNumber                       string  `json:\"fnia\"`\n\tAirlineIcaoCode                    string  `json:\"alic\"`\n\tAirlineIataCode                    string  `json:\"alia\"`\n\tAirlineName                        string  `json:\"alna\"`\n\tLat                                float64 `json:\"la\"`\n\tLon                                float64 `json:\"lo\"`\n\tAltitude                           float64 `json:\"alt\"`\n\tHeadingDirection                   float64 `json:\"hd\"`\n\tGroundSpeed                        float64 `json:\"gs\"`\n\tVerticalSpeed                      float64 `json:\"vs\"`\n\tSquawk                             int     `json:\"sq\"`", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:RealtimeFlightData (struct)", "package": "radarboxtcp", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "RealtimeFlightData", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["RealtimeFlightData"], "all_kinds": ["type"], "all_ast_paths": ["go:type:RealtimeFlightData (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["RealtimeFlightData"], "all_type_kinds": ["struct"], "all_start_bytes": [171], "all_end_bytes": [6355], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["AircraftFirstFlightDate", "AircraftModeSCode", "AircraftPhotoUrl1", "AircraftPhotoUrl2", "AircraftRegistration", "AircraftSerialNumber", "AircraftTypeCode", "AircraftTypeDescription", "AirlineIataCode", "AirlineIcaoCode", "AirlineName", "Altitude", "ArrivalActualLocalTime", "ArrivalBaggageClaim", "ArrivalDelayDetailCode", "ArrivalDelayReasonCode", "ArrivalDelayStatusCode", "ArrivalEstimatedLocalTime", "ArrivalGate", "ArrivalScheduledLocalTime", "ArrivalTerminal", "CallSign", "Codeshares", "DepartureActualLocalTime", "DepartureCheckInDesk", "DepartureDelayDetailCode", "DepartureDelayReasonCode", "DepartureDelayStatusCode", "DepartureEstimatedLocalTime", "DepartureGate", "DepartureScheduledLocalTime", "DepartureTerminal", "DestinationAirportCity", "DestinationAirportCountry", "DestinationAirportIataCode", "DestinationAirportIcaoCode", "DestinationAirportLatitude", "DestinationAirportLongitude", "DestinationAirportName", "DestinationAirportProvince", "DestinationAirportTimezoneAbbreviation", "DestinationAirportTimezoneName", "DestinationAirportTimezoneUtcOffset", "DiversionAirportCity", "DiversionAirportCountry", "DiversionAirportIataCode", "DiversionAirportIcaoCode", "DiversionAirportLatitude", "DiversionAirportLongitude", "DiversionAirportName", "DiversionAirportProvince", "DiversionAirportTimezoneAbbreviation", "DiversionAirportTimezoneName", "DiversionAirportTimezoneUtcOffset", "Epoch", "EstimatedReportingStationLatitude", "EstimatedReportingStationLongitude", "FlightNumber", "GroundSpeed", "HeadingDirection", "LandingAirportCity", "LandingAirportCountry", "LandingAirportIataCode", "LandingAirportIcaoCode", "LandingAirportLatitude", "LandingAirportLongitude", "LandingAirportName", "LandingAirportProvince", "LandingAirportTimezoneAbbreviation", "LandingAirportTimezoneName", "LandingAirportTimezoneUtcOffset", "LandingLocalTime", "LandingRunway", "LandingUtcTime", "Lat", "Lon", "OriginAirportCity", "OriginAirportCountry", "OriginAirportIataCode", "OriginAirportIcaoCode", "OriginAirportLatitude", "OriginAirportLongitude", "OriginAirportName", "OriginAirportProvince", "OriginAirportTimezoneAbbreviation", "OriginAirportTimezoneName", "OriginAirportTimezoneUtcOffset", "PlannedFlightRoute", "PlannedFlightWaypoints", "RealtimeFlightData", "Source", "Squawk", "TakeoffAirportCity", "TakeoffAirportCountry", "TakeoffAirportIataCode", "TakeoffAirportIcaoCode", "TakeoffAirportLatitude", "TakeoffAirportLongitude", "TakeoffAirportName", "TakeoffAirportProvince", "TakeoffAirportTimezoneAbbreviation", "TakeoffAirportTimezoneName", "TakeoffAirportTimezoneUtcOffset", "TakeoffLocalTime", "TakeoffRunway", "TakeoffUtcTime", "Timestamp", "VerticalSpeed"], "header_context_minimal": "package radarboxtcp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go", "rel_path": "internal/adapters/radarbox_tcp/models.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 135, "end_line": 138, "text": "func (r *RealtimeFlightData) HasLiveFlightID() bool {\n\treturn r.AirlineIataCode != \"\" && r.FlightNumber != \"\" && r.OriginAirportIataCode != \"\" && r.DestinationAirportIataCode != \"\" && r.DepartureScheduledLocalTime != \"\"\n}\n", "n_tokens": 64, "primary_symbol": "HasLiveFlightID", "primary_kind": "method", "primary_span": [135, 138], "def_symbols": [], "symbols": ["HasLiveFlightID", "func", "RealtimeFlightData", "bool", "return", "AirlineIataCode", "FlightNumber", "OriginAirportIataCode", "DestinationAirportIataCode", "DepartureScheduledLocalTime"], "doc_head": "func (r *RealtimeFlightData) HasLiveFlightID() bool {\n\treturn r.AirlineIataCode != \"\" && r.FlightNumber != \"\" && r.OriginAirportIataCode != \"\" && r.DestinationAirportIataCode != \"\" && r.DepartureScheduledLocalTime != \"\"\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*RealtimeFlightData).HasLiveFlightID/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "r *RealtimeFlightData", "function_name": "", "method_name": "HasLiveFlightID", "type_name": "RealtimeFlightData", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["HasLiveFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*RealtimeFlightData).HasLiveFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["r *RealtimeFlightData"], "all_type_names": ["RealtimeFlightData"], "all_type_kinds": [null], "all_start_bytes": [6357], "all_end_bytes": [6578], "primary_index": 0, "all_receivers_normalized": ["(*RealtimeFlightData)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineIataCode", "DepartureScheduledLocalTime", "DestinationAirportIataCode", "FlightNumber", "HasLiveFlightID", "OriginAirportIataCode", "RealtimeFlightData", "r.AirlineIataCode", "r.DepartureScheduledLocalTime", "r.DestinationAirportIataCode", "r.FlightNumber", "r.OriginAirportIataCode"], "header_context_minimal": "package radarboxtcp\n// receiver: r *RealtimeFlightData", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go", "rel_path": "internal/adapters/radarbox_tcp/models.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 139, "end_line": 157, "text": "func (r *RealtimeFlightData) getLiveFlightID() string {\n\tdepartureTime, err := time.Parse(localTimeLayout, r.DepartureScheduledLocalTime)\n\tif err != nil {\n\t\tlog.Error(context.TODO(), \"Failed to parse departure time\", zap.Error(err))\n\t}\n\n\tairlineDesignator := r.FlightNumber[:2]\n\tflightNumber := r.FlightNumber[2:]\n\n\treturn fmt.Sprintf(\n\t\t\"%s_%s_%s_%s_%s\",\n\t\tdepartureTime.Format(\"20060102\"),\n\t\tairlineDesignator,\n\t\tflightNumber,\n\t\tr.OriginAirportIataCode,\n\t\tr.DestinationAirportIataCode,\n\t)\n}\n", "n_tokens": 144, "primary_symbol": "getLiveFlightID", "primary_kind": "method", "primary_span": [139, 157], "def_symbols": [], "symbols": ["getLiveFlightID", "func", "RealtimeFlightData", "string", "departureTime", "err", "time", "Parse", "localTimeLayout", "DepartureScheduledLocalTime", "nil", "log", "Error", "context", "TODO", "Failed", "parse", "departure", "zap", "airlineDesignator", "FlightNumber", "flightNumber", "return", "fmt", "Sprintf", "Format", "OriginAirportIataCode", "DestinationAirportIataCode"], "doc_head": "func (r *RealtimeFlightData) getLiveFlightID() string {\n\tdepartureTime, err := time.Parse(localTimeLayout, r.DepartureScheduledLocalTime)\n\tif err != nil {\n\t\tlog.Error(context.TODO(), \"Failed to parse departure time\", zap.Error(err))\n\t}\n\tairlineDesignator := r.FlightNumber[:2]\n\tflightNumber := r.FlightNumber[2:]\n\treturn fmt.Sprintf(\n\t\t\"%s_%s_%s_%s_%s\",\n\t\tdepartureTime.Format(\"20060102\"),\n\t\tairlineDesignator,\n\t\tflightNumber,\n\t\tr.OriginAirportIataCode,\n\t\tr.DestinationAirportIataCode,\n\t)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*RealtimeFlightData).getLiveFlightID/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "r *RealtimeFlightData", "function_name": "", "method_name": "getLiveFlightID", "type_name": "RealtimeFlightData", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["getLiveFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*RealtimeFlightData).getLiveFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["r *RealtimeFlightData"], "all_type_names": ["RealtimeFlightData"], "all_type_kinds": [null], "all_start_bytes": [6580], "all_end_bytes": [7072], "primary_index": 0, "all_receivers_normalized": ["(*RealtimeFlightData)"], "imports_used_minimal": ["context", "fmt", "go.impalastudios.com/log", "go.uber.org/zap", "time"], "symbols_referenced_strict": ["DepartureScheduledLocalTime", "DestinationAirportIataCode", "Error", "FlightNumber", "Format", "OriginAirportIataCode", "Parse", "RealtimeFlightData", "Sprintf", "context.TODO", "departureTime.Format", "fmt.Sprintf", "log.Error", "r.DepartureScheduledLocalTime", "r.DestinationAirportIataCode", "r.FlightNumber", "r.OriginAirportIataCode", "time.Parse", "zap.Error"], "header_context_minimal": "package radarboxtcp\nimport (\n    \"context\"\n    \"fmt\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n    \"time\"\n)\n// receiver: r *RealtimeFlightData", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go", "rel_path": "internal/adapters/radarbox_tcp/models.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 158, "end_line": 161, "text": "func (r *RealtimeFlightData) getAirlineDesignator() string {\n\treturn r.FlightNumber[:2]\n}\n", "n_tokens": 26, "primary_symbol": "getAirlineDesignator", "primary_kind": "method", "primary_span": [158, 161], "def_symbols": [], "symbols": ["getAirlineDesignator", "func", "RealtimeFlightData", "string", "return", "FlightNumber"], "doc_head": "func (r *RealtimeFlightData) getAirlineDesignator() string {\n\treturn r.FlightNumber[:2]\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*RealtimeFlightData).getAirlineDesignator/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "r *RealtimeFlightData", "function_name": "", "method_name": "getAirlineDesignator", "type_name": "RealtimeFlightData", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["getAirlineDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*RealtimeFlightData).getAirlineDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["r *RealtimeFlightData"], "all_type_names": ["RealtimeFlightData"], "all_type_kinds": [null], "all_start_bytes": [7074], "all_end_bytes": [7163], "primary_index": 0, "all_receivers_normalized": ["(*RealtimeFlightData)"], "imports_used_minimal": [], "symbols_referenced_strict": ["FlightNumber", "RealtimeFlightData", "r.FlightNumber"], "header_context_minimal": "package radarboxtcp\n// receiver: r *RealtimeFlightData", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go", "rel_path": "internal/adapters/radarbox_tcp/models.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 162, "end_line": 167, "text": "func (r *RealtimeFlightData) getFlightNumber() string {\n\treturn r.FlightNumber[2:]\n}\n\nconst localTimeLayout = \"2006-01-02 15:04:05\"\n", "n_tokens": 43, "primary_symbol": "getFlightNumber", "primary_kind": "method", "primary_span": [162, 167], "def_symbols": [], "symbols": ["getFlightNumber", "func", "RealtimeFlightData", "string", "return", "FlightNumber", "const", "localTimeLayout"], "doc_head": "func (r *RealtimeFlightData) getFlightNumber() string {\n\treturn r.FlightNumber[2:]\n}\nconst localTimeLayout = \"2006-01-02 15:04:05\"", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*RealtimeFlightData).getFlightNumber/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "r *RealtimeFlightData", "function_name": "", "method_name": "getFlightNumber", "type_name": "RealtimeFlightData", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["getFlightNumber"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*RealtimeFlightData).getFlightNumber/complete"], "all_roles": ["complete"], "all_receivers": ["r *RealtimeFlightData"], "all_type_names": ["RealtimeFlightData"], "all_type_kinds": [null], "all_start_bytes": [7165], "all_end_bytes": [7249], "primary_index": 0, "all_receivers_normalized": ["(*RealtimeFlightData)"], "imports_used_minimal": [], "symbols_referenced_strict": ["FlightNumber", "RealtimeFlightData", "r.FlightNumber"], "header_context_minimal": "package radarboxtcp\n// receiver: r *RealtimeFlightData", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go", "rel_path": "internal/adapters/radarbox_tcp/models.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 168, "end_line": 200, "text": "func (r *RealtimeFlightData) toDomain() core.LiveFlightUpdate {\n\tat, err := time.Parse(localTimeLayout, r.Timestamp)\n\tif err != nil {\n\t\tlog.Error(context.TODO(), \"Failed to parse timestamp\", zap.Error(err))\n\t}\n\n\tdepartureTime, err := time.Parse(localTimeLayout, r.DepartureScheduledLocalTime)\n\tif err != nil {\n\t\tlog.Error(context.TODO(), \"Failed to parse departue timestamp\", zap.Error(err))\n\t}\n\n\treturn core.LiveFlightUpdate{\n\t\tID:                   r.getLiveFlightID(),\n\t\tFlightNumber:         r.getFlightNumber(),\n\t\tAirlineDesignator:    r.getAirlineDesignator(),\n\t\tDepartureTime:        departureTime,\n\t\tDepartureAirportICAO: r.OriginAirportIcaoCode,\n\t\tDepartureAirportIATA: r.OriginAirportIataCode,\n\t\tArrivalAirportICAO:   r.DestinationAirportIcaoCode,\n\t\tArrivalAirportIATA:   r.DestinationAirportIataCode,\n\t\tPosition: core.Coordinate{\n\t\t\tLat: r.Lat,\n\t\t\tLon: r.Lon,\n\t\t},\n\t\tAltitude:         r.Altitude,\n\t\tHeadingDirection: r.HeadingDirection,\n\t\tGroundSpeed:      r.GroundSpeed,\n\t\tVerticalSpeed:    r.VerticalSpeed,\n\t\tSquawk:           r.Squawk,\n\t\tCreatedAt:        at,\n\t}\n}\n", "n_tokens": 306, "primary_symbol": "toDomain", "primary_kind": "method", "primary_span": [168, 200], "def_symbols": [], "symbols": ["toDomain", "func", "RealtimeFlightData", "core", "LiveFlightUpdate", "err", "time", "Parse", "localTimeLayout", "Timestamp", "nil", "log", "Error", "context", "TODO", "Failed", "parse", "timestamp", "zap", "departureTime", "DepartureScheduledLocalTime", "departue", "return", "getLiveFlightID", "FlightNumber", "getFlightNumber", "AirlineDesignator", "getAirlineDesignator", "DepartureTime", "DepartureAirportICAO", "OriginAirportIcaoCode", "DepartureAirportIATA", "OriginAirportIataCode", "ArrivalAirportICAO", "DestinationAirportIcaoCode", "ArrivalAirportIATA", "DestinationAirportIataCode", "Position", "Coordinate", "Lat", "Lon", "Altitude", "HeadingDirection", "GroundSpeed", "VerticalSpeed", "Squawk", "CreatedAt"], "doc_head": "func (r *RealtimeFlightData) toDomain() core.LiveFlightUpdate {\n\tat, err := time.Parse(localTimeLayout, r.Timestamp)\n\tif err != nil {\n\t\tlog.Error(context.TODO(), \"Failed to parse timestamp\", zap.Error(err))\n\t}\n\tdepartureTime, err := time.Parse(localTimeLayout, r.DepartureScheduledLocalTime)\n\tif err != nil {\n\t\tlog.Error(context.TODO(), \"Failed to parse departue timestamp\", zap.Error(err))\n\t}\n\treturn core.LiveFlightUpdate{\n\t\tID:                   r.getLiveFlightID(),\n\t\tFlightNumber:         r.getFlightNumber(),\n\t\tAirlineDesignator:    r.getAirlineDesignator(),\n\t\tDepartureTime:        departureTime,\n\t\tDepartureAirportICAO: r.OriginAirportIcaoCode,\n\t\tDepartureAirportIATA: r.OriginAirportIataCode,\n\t\tArrivalAirportICAO:   r.DestinationAirportIcaoCode,\n\t\tArrivalAirportIATA:   r.DestinationAirportIataCode,\n\t\tPosition: core.Coordinate{\n\t\t\tLat: r.Lat,\n\t\t\tLon: r.Lon,\n\t\t},\n\t\tAltitude:         r.Altitude,\n\t\tHeadingDirection: r.HeadingDirection,\n\t\tGroundSpeed:      r.GroundSpeed,\n\t\tVerticalSpeed:    r.VerticalSpeed,\n\t\tSquawk:           r.Squawk,\n\t\tCreatedAt:        at,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*RealtimeFlightData).toDomain/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "r *RealtimeFlightData", "function_name": "", "method_name": "toDomain", "type_name": "RealtimeFlightData", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["toDomain"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*RealtimeFlightData).toDomain/complete"], "all_roles": ["complete"], "all_receivers": ["r *RealtimeFlightData"], "all_type_names": ["RealtimeFlightData"], "all_type_kinds": [null], "all_start_bytes": [7298], "all_end_bytes": [8376], "primary_index": 0, "all_receivers_normalized": ["(*RealtimeFlightData)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/log", "go.uber.org/zap", "time"], "symbols_referenced_strict": ["AirlineDesignator", "Altitude", "ArrivalAirportIATA", "ArrivalAirportICAO", "Coordinate", "CreatedAt", "DepartureAirportIATA", "DepartureAirportICAO", "DepartureScheduledLocalTime", "DepartureTime", "DestinationAirportIataCode", "DestinationAirportIcaoCode", "Error", "FlightNumber", "GroundSpeed", "HeadingDirection", "Lat", "LiveFlightUpdate", "Lon", "OriginAirportIataCode", "OriginAirportIcaoCode", "Parse", "Position", "RealtimeFlightData", "Squawk", "Timestamp", "VerticalSpeed", "context.TODO", "core.Coordinate", "core.LiveFlightUpdate", "log.Error", "r.Altitude", "r.DepartureScheduledLocalTime", "r.DestinationAirportIataCode", "r.DestinationAirportIcaoCode", "r.GroundSpeed", "r.HeadingDirection", "r.Lat", "r.Lon", "r.OriginAirportIataCode", "r.OriginAirportIcaoCode", "r.Squawk", "r.Timestamp", "r.VerticalSpeed", "r.getAirlineDesignator", "r.getFlightNumber", "r.getLiveFlightID", "time.Parse", "zap.Error"], "header_context_minimal": "package radarboxtcp\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n    \"time\"\n)\n// receiver: r *RealtimeFlightData", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/models.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package radarboxtcp\n", "n_tokens": 5, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "radarboxtcp"], "doc_head": "package radarboxtcp", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "radarboxtcp", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package radarboxtcp", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 19, "text": "import (\n\t\"bufio\"\n\t\"compress/zlib\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"net\"\n\t\"regexp\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"golang.org/x/crypto/ssh\"\n)\n", "n_tokens": 84, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 19], "def_symbols": [], "symbols": ["import", "bufio", "compress", "zlib", "context", "encoding", "json", "net", "regexp", "strings", "time", "github", "com", "cockroachdb", "errors", "impalastudios", "aviation", "liveflights", "internal", "core", "log", "uber", "org", "zap", "golang", "crypto", "ssh"], "doc_head": "import (\n\t\"bufio\"\n\t\"compress/zlib\"\n\t\"context\"\n\t\"encoding/json\"\n\t\"net\"\n\t\"regexp\"\n\t\"strings\"\n\t\"time\"\n\t\"github.com/cockroachdb/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"golang.org/x/crypto/ssh\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "radarboxtcp", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package radarboxtcp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 20, "end_line": 24, "text": "type Config struct {\n\tHost string `mapstructure:\"host\"`\n\tSSH  SSH    `mapstructure:\"ssh\"`\n}\n", "n_tokens": 25, "primary_symbol": "Config", "primary_kind": "type", "primary_span": [20, 24], "def_symbols": [], "symbols": ["type", "Config", "struct", "Host", "string", "mapstructure", "host", "SSH", "ssh"], "doc_head": "type Config struct {\n\tHost string `mapstructure:\"host\"`\n\tSSH  SSH    `mapstructure:\"ssh\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Config (struct)", "package": "radarboxtcp", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Config", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Config"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Config (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Config"], "all_type_kinds": ["struct"], "all_start_bytes": [295], "all_end_bytes": [381], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Config", "Host"], "header_context_minimal": "package radarboxtcp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 25, "end_line": 30, "text": "type SSH struct {\n\tHost       string `mapstructure:\"host\"`\n\tPrivateKey string `mapstructure:\"private-key\"`\n\tUser       string `mapstructure:\"user\"`\n}\n", "n_tokens": 34, "primary_symbol": "SSH", "primary_kind": "type", "primary_span": [25, 30], "def_symbols": [], "symbols": ["type", "SSH", "struct", "Host", "string", "mapstructure", "host", "PrivateKey", "private", "key", "User", "user"], "doc_head": "type SSH struct {\n\tHost       string `mapstructure:\"host\"`\n\tPrivateKey string `mapstructure:\"private-key\"`\n\tUser       string `mapstructure:\"user\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:SSH (struct)", "package": "radarboxtcp", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SSH", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SSH"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SSH (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SSH"], "all_type_kinds": ["struct"], "all_start_bytes": [388], "all_end_bytes": [532], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Host", "PrivateKey", "User"], "header_context_minimal": "package radarboxtcp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 31, "end_line": 46, "text": "type Client struct {\n\tcfg           Config\n\tsshc          *ssh.Client\n\tconn          net.Conn\n\tmetrics       *metrics\n\tnumberOfReads int\n}\n\nconst (\n\tbufSize         = 64 * 1024\n\tinitialBackoff  = 1 * time.Second\n\tmaxBackoffDelay = 5 * time.Minute\n\tmetricsInterval = 5 * time.Minute\n\trotateAfterMsgs = 50000\n)\n", "n_tokens": 90, "primary_symbol": "Client", "primary_kind": "type", "primary_span": [31, 46], "def_symbols": [], "symbols": ["type", "Client", "struct", "cfg", "Config", "sshc", "ssh", "conn", "net", "Conn", "metrics", "numberOfReads", "int", "const", "bufSize", "initialBackoff", "time", "Second", "maxBackoffDelay", "Minute", "metricsInterval", "rotateAfterMsgs"], "doc_head": "type Client struct {\n\tcfg           Config\n\tsshc          *ssh.Client\n\tconn          net.Conn\n\tmetrics       *metrics\n\tnumberOfReads int\n}\nconst (\n\tbufSize         = 64 * 1024\n\tinitialBackoff  = 1 * time.Second\n\tmaxBackoffDelay = 5 * time.Minute\n\tmetricsInterval = 5 * time.Minute\n\trotateAfterMsgs = 50000\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Client (struct)", "package": "radarboxtcp", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Client", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Client"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Client (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Client"], "all_type_kinds": ["struct"], "all_start_bytes": [539], "all_end_bytes": [672], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["golang.org/x/crypto/ssh", "net", "time"], "symbols_referenced_strict": ["Client", "Config", "Conn", "Minute", "Second", "net.Conn", "ssh.Client", "time.Minute", "time.Second"], "header_context_minimal": "package radarboxtcp\nimport (\n    \"golang.org/x/crypto/ssh\"\n    \"net\"\n    \"time\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 47, "end_line": 53, "text": "func New(cfg Config) *Client {\n\treturn &Client{\n\t\tcfg:     cfg,\n\t\tmetrics: newMetrics(metricsInterval),\n\t}\n}\n", "n_tokens": 30, "primary_symbol": "New", "primary_kind": "function", "primary_span": [47, 53], "def_symbols": [], "symbols": ["New", "func", "cfg", "Config", "Client", "return", "metrics", "newMetrics", "metricsInterval"], "doc_head": "func New(cfg Config) *Client {\n\treturn &Client{\n\t\tcfg:     cfg,\n\t\tmetrics: newMetrics(metricsInterval),\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:New/complete", "package": "radarboxtcp", "node_kind": "function", "receiver": "", "function_name": "New", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["New"], "all_kinds": ["function"], "all_ast_paths": ["go:function:New/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [844], "all_end_bytes": [952], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Client", "Config", "New"], "header_context_minimal": "package radarboxtcp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 54, "end_line": 85, "text": "// Connect ensures SSH exists and (re)opens the inner TCP channel.\nfunc (c *Client) Connect(ctx context.Context) error {\n\tif c.sshc == nil {\n\t\tsigner, err := ssh.ParsePrivateKey([]byte(c.cfg.SSH.PrivateKey))\n\t\tif err != nil {\n\t\t\treturn errors.Wrap(err, \"failed to parse private key\")\n\t\t}\n\t\tsshclient, err := ssh.Dial(\"tcp\", c.cfg.SSH.Host, &ssh.ClientConfig{\n\t\t\tUser:              c.cfg.SSH.User,\n\t\t\tAuth:              []ssh.AuthMethod{ssh.PublicKeys(signer)},\n\t\t\tHostKeyCallback:   ssh.InsecureIgnoreHostKey(),\n\t\t\tHostKeyAlgorithms: []string{signer.PublicKey().Type()},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn errors.Wrap(err, \"failed to dial through ssh\")\n\t\t}\n\t\tc.sshc = sshclient\n\t}\n\n\tconn, err := c.sshc.Dial(\"tcp\", c.cfg.Host)\n\tif err != nil {\n\t\tc.metrics.incrementSSHReset()\n\t\t_ = c.sshc.Close()\n\t\tc.sshc = nil\n\t\treturn errors.Wrap(err, \"failed to dial tcp over ssh\")\n\t}\n\n\tc.conn = conn\n\tc.numberOfReads = 0\n\treturn nil\n}\n", "n_tokens": 271, "primary_symbol": "Connect", "primary_kind": "method", "primary_span": [55, 85], "def_symbols": [], "symbols": ["Connect", "ensures", "SSH", "exists", "and", "opens", "the", "inner", "TCP", "channel", "func", "Client", "ctx", "context", "Context", "error", "sshc", "nil", "signer", "err", "ssh", "ParsePrivateKey", "byte", "cfg", "PrivateKey", "return", "errors", "Wrap", "failed", "parse", "private", "key", "sshclient", "Dial", "tcp", "Host", "ClientConfig", "User", "Auth", "AuthMethod", "PublicKeys", "HostKeyCallback", "InsecureIgnoreHostKey", "HostKeyAlgorithms", "string", "PublicKey", "Type", "dial", "through", "conn", "metrics", "incrementSSHReset", "Close", "over", "numberOfReads"], "doc_head": "// Connect ensures SSH exists and (re)opens the inner TCP channel.\nfunc (c *Client) Connect(ctx context.Context) error {\n\tif c.sshc == nil {\n\t\tsigner, err := ssh.ParsePrivateKey([]byte(c.cfg.SSH.PrivateKey))\n\t\tif err != nil {\n\t\t\treturn errors.Wrap(err, \"failed to parse private key\")\n\t\t}\n\t\tsshclient, err := ssh.Dial(\"tcp\", c.cfg.SSH.Host, &ssh.ClientConfig{\n\t\t\tUser:              c.cfg.SSH.User,\n\t\t\tAuth:              []ssh.AuthMethod{ssh.PublicKeys(signer)},\n\t\t\tHostKeyCallback:   ssh.InsecureIgnoreHostKey(),\n\t\t\tHostKeyAlgorithms: []string{signer.PublicKey().Type()},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn errors.Wrap(err, \"failed to dial through ssh\")\n\t\t}\n\t\tc.sshc = sshclient\n\t}\n\tconn, err := c.sshc.Dial(\"tcp\", c.cfg.Host)\n\tif err != nil {\n\t\tc.metrics.incrementSSHReset()\n\t\t_ = c.sshc.Close()\n\t\tc.sshc = nil\n\t\treturn errors.Wrap(err, \"failed to dial tcp over ssh\")\n\t}\n\tc.conn = conn\n\tc.numberOfReads = 0\n\treturn nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Client).Connect/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "c *Client", "function_name": "", "method_name": "Connect", "type_name": "Client", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Connect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Client).Connect/complete"], "all_roles": ["complete"], "all_receivers": ["c *Client"], "all_type_names": ["Client"], "all_type_kinds": [null], "all_start_bytes": [1021], "all_end_bytes": [1874], "primary_index": 0, "all_receivers_normalized": ["(*Client)"], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "golang.org/x/crypto/ssh"], "symbols_referenced_strict": ["Auth", "AuthMethod", "Client", "ClientConfig", "Close", "Connect", "Context", "Dial", "Host", "HostKeyAlgorithms", "HostKeyCallback", "InsecureIgnoreHostKey", "ParsePrivateKey", "PrivateKey", "PublicKey", "PublicKeys", "SSH.Host", "SSH.PrivateKey", "SSH.User", "Type", "User", "Wrap", "c.cfg", "c.conn", "c.metrics", "c.numberOfReads", "c.sshc", "context.Context", "errors.Wrap", "signer.PublicKey", "ssh.AuthMethod", "ssh.ClientConfig", "ssh.Dial", "ssh.InsecureIgnoreHostKey", "ssh.ParsePrivateKey", "ssh.PublicKeys"], "header_context_minimal": "package radarboxtcp\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"golang.org/x/crypto/ssh\"\n)\n// receiver: c *Client", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 86, "end_line": 165, "text": "// Read keeps the stream alive, with capped exponential backoff and SSH-reset metrics.\n// Rules:\n//   - Create ONE zlib reader per TCP connection; reuse it for many lines.\n//   - After each successful line read, increment numberOfReads; if >= rotateAfterMsgs, rotate the connection.\n//   - Any read/zlib error (including EOF) closes and reconnects.\nfunc (c *Client) Read(ctx context.Context, subscriber chan<- core.LiveFlightUpdate) error {\n\tdefer func() {\n\t\tif c.conn != nil {\n\t\t\t_ = c.conn.Close()\n\t\t}\n\t\tif c.sshc != nil {\n\t\t\t_ = c.sshc.Close()\n\t\t}\n\t}()\n\n\tbackoff := initialBackoff\n\tattempt := 1\n\n\tfor {\n\t\tselect {\n\t\tcase <-ctx.Done():\n\t\t\tlog.Info(ctx, \"Context done, terminating radarbox tcp reader\")\n\t\t\treturn nil\n\t\tdefault:\n\t\t}\n\n\t\tc.metrics.logIfNeeded(ctx)\n\n\t\t// Connect (or reconnect) if needed\n\t\tif c.conn == nil {\n\t\t\tif err := c.Connect(ctx); err != nil {\n\t\t\t\tlog.Error(ctx, \"Failed to reconnect to radarbox tcp server\",\n\t\t\t\t\tzap.Int(\"attempt\", attempt), zap.Error(err),\n\t\t\t\t)\n\t\t\t\tattempt++\n\t\t\t\ttime.Sleep(backoff)\n\t\t\t\tbackoff *= 2\n\t\t\t\tif backoff > maxBackoffDelay {\n\t\t\t\t\tbackoff = maxBackoffDelay\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tc.metrics.recordSuccessfulConnect()\n\t\t\tbackoff = initialBackoff\n\t\t\tattempt = 1\n\t\t}\n\n\t\t// Create ONE zlib reader for this TCP connection\n\t\tzr, err := zlib.NewReader(c.conn)\n\t\tif err != nil {\n\t\t\t_ = c.conn.Close()\n\t\t\tc.conn = nil\n\t\t\tcontinue\n\t\t}\n\n\t\treader := bufio.NewReaderSize(zr, bufSize)\n\n\t\tfor {\n\t\t\terr = c.readLiveFlightUpdate(ctx, reader, subscriber)\n\t\t\tif err != nil {\n\t\t\t\t_ = zr.Close()\n\t\t\t\t_ = c.conn.Close()\n\t\t\t\tc.conn = nil\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tc.numberOfReads++\n\t\t\tif c.numberOfReads >= rotateAfterMsgs {\n\t\t\t\tc.numberOfReads = 0\n\t\t\t\t_ = zr.Close()\n\t\t\t\t_ = c.conn.Close()\n\t\t\t\tc.conn = nil\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}\n", "n_tokens": 506, "primary_symbol": "Read", "primary_kind": "method", "primary_span": [91, 165], "def_symbols": [], "symbols": ["Read", "keeps", "the", "stream", "alive", "with", "capped", "exponential", "backoff", "and", "SSH", "reset", "metrics", "Rules", "Create", "ONE", "zlib", "reader", "per", "TCP", "connection", "reuse", "for", "many", "lines", "After", "each", "successful", "line", "read", "increment", "numberOfReads", "rotateAfterMsgs", "rotate", "Any", "error", "including", "EOF", "closes", "reconnects", "func", "Client", "ctx", "context", "Context", "subscriber", "chan", "core", "LiveFlightUpdate", "defer", "conn", "nil", "Close", "sshc", "initialBackoff", "attempt", "select", "case", "Done", "log", "Info", "done", "terminating", "radarbox", "tcp", "return", "default", "logIfNeeded", "Connect", "reconnect", "needed", "err", "Error", "Failed", "server", "zap", "Int", "time", "Sleep", "maxBackoffDelay", "continue", "recordSuccessfulConnect", "this", "NewReader", "bufio", "NewReaderSize", "bufSize", "readLiveFlightUpdate", "break"], "doc_head": "// Read keeps the stream alive, with capped exponential backoff and SSH-reset metrics.\n// Rules:\n//   - Create ONE zlib reader per TCP connection; reuse it for many lines.\n//   - After each successful line read, increment numberOfReads; if >= rotateAfterMsgs, rotate the connection.\n//   - Any read/zlib error (including EOF) closes and reconnects.\nfunc (c *Client) Read(ctx context.Context, subscriber chan<- core.LiveFlightUpdate) error {\n\tdefer func() {\n\t\tif c.conn != nil {\n\t\t\t_ = c.conn.Close()\n\t\t}\n\t\tif c.sshc != nil {\n\t\t\t_ = c.sshc.Close()\n\t\t}\n\t}()\n\tbackoff := initialBackoff\n\tattempt := 1\n\tfor {\n\t\tselect {\n\t\tcase <-ctx.Done():\n\t\t\tlog.Info(ctx, \"Context done, terminating radarbox tcp reader\")\n\t\t\treturn nil\n\t\tdefault:\n\t\t}\n\t\tc.metrics.logIfNeeded(ctx)\n\t\t// Connect (or reconnect) if needed\n\t\tif c.conn == nil {\n\t\t\tif err := c.Connect(ctx); err != nil {\n\t\t\t\tlog.Error(ctx, \"Failed to reconnect to radarbox tcp server\",\n\t\t\t\t\tzap.Int(\"attempt\", attempt), zap.Error(err),\n\t\t\t\t)\n\t\t\t\tattempt++\n\t\t\t\ttime.Sleep(backoff)\n\t\t\t\tbackoff *= 2\n\t\t\t\tif backoff > maxBackoffDelay {\n\t\t\t\t\tbackoff = maxBackoffDelay\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tc.metrics.recordSuccessfulConnect()\n\t\t\tbackoff = initialBackoff", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Client).Read/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "c *Client", "function_name": "", "method_name": "Read", "type_name": "Client", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Read"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Client).Read/complete"], "all_roles": ["complete"], "all_receivers": ["c *Client"], "all_type_names": ["Client"], "all_type_kinds": [null], "all_start_bytes": [2225], "all_end_bytes": [3632], "primary_index": 0, "all_receivers_normalized": ["(*Client)"], "imports_used_minimal": ["bufio", "compress/zlib", "context", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/log", "go.uber.org/zap", "time"], "symbols_referenced_strict": ["Client", "Close", "Connect", "Context", "Done", "Error", "Info", "Int", "LiveFlightUpdate", "NewReader", "NewReaderSize", "Read", "Sleep", "bufio.NewReaderSize", "c.Connect", "c.conn", "c.metrics", "c.numberOfReads", "c.readLiveFlightUpdate", "c.sshc", "context.Context", "core.LiveFlightUpdate", "ctx.Done", "log.Error", "log.Info", "time.Sleep", "zap.Error", "zap.Int", "zlib.NewReader", "zr.Close"], "header_context_minimal": "package radarboxtcp\nimport (\n    \"bufio\"\n    \"compress/zlib\"\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/log\"\n)\n// receiver: c *Client", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 166, "end_line": 202, "text": "// readLiveFlightUpdate reads ONE line, dispatches if applicable, then returns.\n// Returns nil on success; a wrapped error (incl. io.EOF) ends the current connection.\nfunc (c *Client) readLiveFlightUpdate(ctx context.Context, reader *bufio.Reader, sub chan<- core.LiveFlightUpdate) error {\n\tselect {\n\tcase <-ctx.Done():\n\t\tlog.Info(ctx, \"Context done, terminating read loop\")\n\t\treturn ctx.Err()\n\tdefault:\n\t}\n\n\tline, err := reader.ReadString('\\n')\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to read string from reader\")\n\t}\n\n\ts := strings.Trim(line, \"\\n\\t\")\n\ts = strings.ReplaceAll(s, \"\\t\", \"\")\n\n\tvar msg RealtimeFlightData\n\tif err := json.Unmarshal([]byte(s), &msg); err != nil {\n\t\tlog.Debug(ctx, \"Initial unmarshal failed, sanitizing\", zap.Error(err), zap.String(\"message\", s))\n\t\tsafe := fixInvalidEscapes(s)\n\t\tif err2 := json.Unmarshal([]byte(safe), &msg); err2 != nil {\n\t\t\tlog.Warn(ctx, \"Failed to unmarshal even after sanitizing\", zap.Error(err2), zap.String(\"message\", safe))\n\t\t\treturn nil // skip bad line; keep connection\n\t\t}\n\t}\n\n\tif msg.HasLiveFlightID() {\n\t\tsub <- msg.toDomain()\n\t}\n\n\treturn nil\n}\n\nvar invalidEscape = regexp.MustCompile(`\\\\[^\"\\\\/bfnrtu]`)\n", "n_tokens": 305, "primary_symbol": "readLiveFlightUpdate", "primary_kind": "method", "primary_span": [168, 202], "def_symbols": [], "symbols": ["readLiveFlightUpdate", "reads", "ONE", "line", "dispatches", "applicable", "then", "returns", "Returns", "nil", "success", "wrapped", "error", "incl", "EOF", "ends", "the", "current", "connection", "func", "Client", "ctx", "context", "Context", "reader", "bufio", "Reader", "sub", "chan", "core", "LiveFlightUpdate", "select", "case", "Done", "log", "Info", "done", "terminating", "read", "loop", "return", "Err", "default", "err", "ReadString", "errors", "Wrap", "failed", "string", "from", "strings", "Trim", "ReplaceAll", "var", "msg", "RealtimeFlightData", "json", "Unmarshal", "byte", "Debug", "Initial", "unmarshal", "sanitizing", "zap", "Error", "String", "message", "safe", "fixInvalidEscapes", "err2", "Warn", "Failed", "even", "after", "skip", "bad", "keep", "HasLiveFlightID", "toDomain", "invalidEscape", "regexp", "MustCompile", "bfnrtu"], "doc_head": "// readLiveFlightUpdate reads ONE line, dispatches if applicable, then returns.\n// Returns nil on success; a wrapped error (incl. io.EOF) ends the current connection.\nfunc (c *Client) readLiveFlightUpdate(ctx context.Context, reader *bufio.Reader, sub chan<- core.LiveFlightUpdate) error {\n\tselect {\n\tcase <-ctx.Done():\n\t\tlog.Info(ctx, \"Context done, terminating read loop\")\n\t\treturn ctx.Err()\n\tdefault:\n\t}\n\tline, err := reader.ReadString('\\n')\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to read string from reader\")\n\t}\n\ts := strings.Trim(line, \"\\n\\t\")\n\ts = strings.ReplaceAll(s, \"\\t\", \"\")\n\tvar msg RealtimeFlightData\n\tif err := json.Unmarshal([]byte(s), &msg); err != nil {\n\t\tlog.Debug(ctx, \"Initial unmarshal failed, sanitizing\", zap.Error(err), zap.String(\"message\", s))\n\t\tsafe := fixInvalidEscapes(s)\n\t\tif err2 := json.Unmarshal([]byte(safe), &msg); err2 != nil {\n\t\t\tlog.Warn(ctx, \"Failed to unmarshal even after sanitizing\", zap.Error(err2), zap.String(\"message\", safe))\n\t\t\treturn nil // skip bad line; keep connection\n\t\t}\n\t}\n\tif msg.HasLiveFlightID() {\n\t\tsub <- msg.toDomain()\n\t}\n\treturn nil\n}\nvar invalidEscape = regexp.MustCompile(`\\\\[^\"\\\\/bfnrtu]`)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Client).readLiveFlightUpdate/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "c *Client", "function_name": "", "method_name": "readLiveFlightUpdate", "type_name": "Client", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["readLiveFlightUpdate"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Client).readLiveFlightUpdate/complete"], "all_roles": ["complete"], "all_receivers": ["c *Client"], "all_type_names": ["Client"], "all_type_kinds": [null], "all_start_bytes": [3801], "all_end_bytes": [4746], "primary_index": 0, "all_receivers_normalized": ["(*Client)"], "imports_used_minimal": ["bufio", "context", "encoding/json", "github.com/cockroachdb/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/log", "go.uber.org/zap", "regexp", "strings"], "symbols_referenced_strict": ["Client", "Context", "Debug", "Done", "Err", "Error", "HasLiveFlightID", "Info", "LiveFlightUpdate", "MustCompile", "ReadString", "Reader", "RealtimeFlightData", "ReplaceAll", "String", "Trim", "Unmarshal", "Warn", "Wrap", "bufio.Reader", "context.Context", "core.LiveFlightUpdate", "ctx.Done", "ctx.Err", "errors.Wrap", "json.Unmarshal", "log.Debug", "log.Info", "log.Warn", "msg.HasLiveFlightID", "msg.toDomain", "reader.ReadString", "regexp.MustCompile", "strings.ReplaceAll", "strings.Trim", "zap.Error", "zap.String"], "header_context_minimal": "package radarboxtcp\nimport (\n    \"bufio\"\n    \"context\"\n    \"encoding/json\"\n    \"github.com/cockroachdb/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: c *Client", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 203, "end_line": 206, "text": "func fixInvalidEscapes(s string) string {\n\treturn invalidEscape.ReplaceAllStringFunc(s, func(m string) string { return m[1:] })\n}\n", "n_tokens": 32, "primary_symbol": "fixInvalidEscapes", "primary_kind": "function", "primary_span": [203, 206], "def_symbols": [], "symbols": ["fixInvalidEscapes", "func", "string", "return", "invalidEscape", "ReplaceAllStringFunc"], "doc_head": "func fixInvalidEscapes(s string) string {\n\treturn invalidEscape.ReplaceAllStringFunc(s, func(m string) string { return m[1:] })\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:fixInvalidEscapes/complete", "package": "radarboxtcp", "node_kind": "function", "receiver": "", "function_name": "fixInvalidEscapes", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["fixInvalidEscapes"], "all_kinds": ["function"], "all_ast_paths": ["go:function:fixInvalidEscapes/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [4807], "all_end_bytes": [4936], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["ReplaceAllStringFunc", "invalidEscape.ReplaceAllStringFunc"], "header_context_minimal": "package radarboxtcp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 207, "end_line": 218, "text": "func (c *Client) Close() error {\n\tif c.conn != nil {\n\t\t_ = c.conn.Close()\n\t\tc.conn = nil\n\t}\n\tif c.sshc != nil {\n\t\t_ = c.sshc.Close()\n\t\tc.sshc = nil\n\t}\n\treturn nil\n}\n", "n_tokens": 64, "primary_symbol": "Close", "primary_kind": "method", "primary_span": [207, 218], "def_symbols": [], "symbols": ["Close", "func", "Client", "error", "conn", "nil", "sshc", "return"], "doc_head": "func (c *Client) Close() error {\n\tif c.conn != nil {\n\t\t_ = c.conn.Close()\n\t\tc.conn = nil\n\t}\n\tif c.sshc != nil {\n\t\t_ = c.sshc.Close()\n\t\tc.sshc = nil\n\t}\n\treturn nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Client).Close/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "c *Client", "function_name": "", "method_name": "Close", "type_name": "Client", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Close"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Client).Close/complete"], "all_roles": ["complete"], "all_receivers": ["c *Client"], "all_type_names": ["Client"], "all_type_kinds": [null], "all_start_bytes": [4938], "all_end_bytes": [5102], "primary_index": 0, "all_receivers_normalized": ["(*Client)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Client", "Close", "c.conn", "c.sshc"], "header_context_minimal": "package radarboxtcp\n// receiver: c *Client", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 219, "end_line": 226, "text": "type metrics struct {\n\tsshResets      int\n\tlastSSHReset   time.Time\n\tlastSuccessful time.Time\n\tlastLog        time.Time\n\tinterval       time.Duration\n}\n", "n_tokens": 36, "primary_symbol": "metrics", "primary_kind": "type", "primary_span": [219, 226], "def_symbols": [], "symbols": ["type", "metrics", "struct", "sshResets", "int", "lastSSHReset", "time", "Time", "lastSuccessful", "lastLog", "interval", "Duration"], "doc_head": "type metrics struct {\n\tsshResets      int\n\tlastSSHReset   time.Time\n\tlastSuccessful time.Time\n\tlastLog        time.Time\n\tinterval       time.Duration\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:metrics (struct)", "package": "radarboxtcp", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "metrics", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["metrics"], "all_kinds": ["type"], "all_ast_paths": ["go:type:metrics (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["metrics"], "all_type_kinds": ["struct"], "all_start_bytes": [5109], "all_end_bytes": [5255], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Duration", "Time", "time.Duration", "time.Time"], "header_context_minimal": "package radarboxtcp\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 227, "end_line": 230, "text": "func newMetrics(interval time.Duration) *metrics {\n\treturn &metrics{lastLog: time.Now(), interval: interval}\n}\n", "n_tokens": 25, "primary_symbol": "newMetrics", "primary_kind": "function", "primary_span": [227, 230], "def_symbols": [], "symbols": ["newMetrics", "func", "interval", "time", "Duration", "metrics", "return", "lastLog", "Now"], "doc_head": "func newMetrics(interval time.Duration) *metrics {\n\treturn &metrics{lastLog: time.Now(), interval: interval}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:newMetrics/complete", "package": "radarboxtcp", "node_kind": "function", "receiver": "", "function_name": "newMetrics", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["newMetrics"], "all_kinds": ["function"], "all_ast_paths": ["go:function:newMetrics/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [5257], "all_end_bytes": [5367], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Duration", "Now", "time.Duration", "time.Now"], "header_context_minimal": "package radarboxtcp\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 231, "end_line": 231, "text": "func (m *metrics) incrementSSHReset()       { m.sshResets++; m.lastSSHReset = time.Now() }", "n_tokens": 27, "primary_symbol": "incrementSSHReset", "primary_kind": "method", "primary_span": [231, 231], "def_symbols": [], "symbols": ["incrementSSHReset", "func", "metrics", "sshResets", "lastSSHReset", "time", "Now"], "doc_head": "func (m *metrics) incrementSSHReset()       { m.sshResets++; m.lastSSHReset = time.Now() }", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*metrics).incrementSSHReset/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "m *metrics", "function_name": "", "method_name": "incrementSSHReset", "type_name": "metrics", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["incrementSSHReset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*metrics).incrementSSHReset/complete"], "all_roles": ["complete"], "all_receivers": ["m *metrics"], "all_type_names": ["metrics"], "all_type_kinds": [null], "all_start_bytes": [5369], "all_end_bytes": [5459], "primary_index": 0, "all_receivers_normalized": ["(*metrics)"], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Now", "m.lastSSHReset", "m.sshResets", "time.Now"], "header_context_minimal": "package radarboxtcp\nimport \"time\"\n// receiver: m *metrics", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 232, "end_line": 232, "text": "func (m *metrics) recordSuccessfulConnect() { m.lastSuccessful = time.Now() }", "n_tokens": 19, "primary_symbol": "recordSuccessfulConnect", "primary_kind": "method", "primary_span": [232, 232], "def_symbols": [], "symbols": ["recordSuccessfulConnect", "func", "metrics", "lastSuccessful", "time", "Now"], "doc_head": "func (m *metrics) recordSuccessfulConnect() { m.lastSuccessful = time.Now() }", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*metrics).recordSuccessfulConnect/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "m *metrics", "function_name": "", "method_name": "recordSuccessfulConnect", "type_name": "metrics", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["recordSuccessfulConnect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*metrics).recordSuccessfulConnect/complete"], "all_roles": ["complete"], "all_receivers": ["m *metrics"], "all_type_names": ["metrics"], "all_type_kinds": [null], "all_start_bytes": [5460], "all_end_bytes": [5537], "primary_index": 0, "all_receivers_normalized": ["(*metrics)"], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Now", "m.lastSuccessful", "time.Now"], "header_context_minimal": "package radarboxtcp\nimport \"time\"\n// receiver: m *metrics", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#14", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#16", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 16, "start_line": 233, "end_line": 234, "text": "func (m *metrics) reset()                   { m.sshResets = 0; m.lastLog = time.Now() }\n", "n_tokens": 27, "primary_symbol": "reset", "primary_kind": "method", "primary_span": [233, 234], "def_symbols": [], "symbols": ["reset", "func", "metrics", "sshResets", "lastLog", "time", "Now"], "doc_head": "func (m *metrics) reset()                   { m.sshResets = 0; m.lastLog = time.Now() }", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*metrics).reset/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "m *metrics", "function_name": "", "method_name": "reset", "type_name": "metrics", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*metrics).reset/complete"], "all_roles": ["complete"], "all_receivers": ["m *metrics"], "all_type_names": ["metrics"], "all_type_kinds": [null], "all_start_bytes": [5538], "all_end_bytes": [5625], "primary_index": 0, "all_receivers_normalized": ["(*metrics)"], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Now", "m.lastLog", "m.sshResets", "time.Now"], "header_context_minimal": "package radarboxtcp\nimport \"time\"\n// receiver: m *metrics", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#15", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#17"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#17", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/radarbox_tcp/tcp.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go", "rel_path": "internal/adapters/radarbox_tcp/tcp.go", "ext": "go", "language": "go", "chunk_number": 17, "start_line": 235, "end_line": 253, "text": "func (m *metrics) logIfNeeded(ctx context.Context) {\n\tnow := time.Now()\n\tif now.Sub(m.lastLog) < m.interval || m.sshResets == 0 {\n\t\treturn\n\t}\n\tdur := now.Sub(m.lastLog)\n\tavg := float64(m.sshResets) / dur.Minutes()\n\n\tlog.Debug(ctx, \"RadarBox SSH reset stats\",\n\t\tzap.String(\"last_log\", m.lastLog.UTC().Format(time.RFC3339)),\n\t\tzap.String(\"last_successful_connect\", m.lastSuccessful.UTC().Format(time.RFC3339)),\n\t\tzap.String(\"last_ssh_reset\", m.lastSSHReset.UTC().Format(time.RFC3339)),\n\t\tzap.Int(\"ssh_resets\", m.sshResets),\n\t\tzap.Float64(\"avg_ssh_resets_per_min\", avg),\n\t)\n\n\tm.reset()\n}\n", "n_tokens": 179, "primary_symbol": "logIfNeeded", "primary_kind": "method", "primary_span": [235, 253], "def_symbols": [], "symbols": ["logIfNeeded", "func", "metrics", "ctx", "context", "Context", "now", "time", "Now", "Sub", "lastLog", "interval", "sshResets", "return", "dur", "avg", "float64", "Minutes", "log", "Debug", "RadarBox", "SSH", "reset", "stats", "zap", "String", "last_log", "UTC", "Format", "RFC3339", "last_successful_connect", "lastSuccessful", "last_ssh_reset", "lastSSHReset", "Int", "ssh_resets", "Float64", "avg_ssh_resets_per_min"], "doc_head": "func (m *metrics) logIfNeeded(ctx context.Context) {\n\tnow := time.Now()\n\tif now.Sub(m.lastLog) < m.interval || m.sshResets == 0 {\n\t\treturn\n\t}\n\tdur := now.Sub(m.lastLog)\n\tavg := float64(m.sshResets) / dur.Minutes()\n\tlog.Debug(ctx, \"RadarBox SSH reset stats\",\n\t\tzap.String(\"last_log\", m.lastLog.UTC().Format(time.RFC3339)),\n\t\tzap.String(\"last_successful_connect\", m.lastSuccessful.UTC().Format(time.RFC3339)),\n\t\tzap.String(\"last_ssh_reset\", m.lastSSHReset.UTC().Format(time.RFC3339)),\n\t\tzap.Int(\"ssh_resets\", m.sshResets),\n\t\tzap.Float64(\"avg_ssh_resets_per_min\", avg),\n\t)\n\tm.reset()\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*metrics).logIfNeeded/complete", "package": "radarboxtcp", "node_kind": "method", "receiver": "m *metrics", "function_name": "", "method_name": "logIfNeeded", "type_name": "metrics", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["logIfNeeded"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*metrics).logIfNeeded/complete"], "all_roles": ["complete"], "all_receivers": ["m *metrics"], "all_type_names": ["metrics"], "all_type_kinds": [null], "all_start_bytes": [5627], "all_end_bytes": [6211], "primary_index": 0, "all_receivers_normalized": ["(*metrics)"], "imports_used_minimal": ["context", "go.impalastudios.com/log", "go.uber.org/zap", "time"], "symbols_referenced_strict": ["Context", "Debug", "Float64", "Format", "Int", "Minutes", "Now", "String", "Sub", "context.Context", "dur.Minutes", "log.Debug", "m.interval", "m.lastLog", "m.lastSSHReset", "m.lastSuccessful", "m.reset", "m.sshResets", "now.Sub", "time.Now", "time.RFC3339", "zap.Float64", "zap.Int", "zap.String"], "header_context_minimal": "package radarboxtcp\nimport (\n    \"context\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n    \"time\"\n)\n// receiver: m *metrics", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/radarbox_tcp/tcp.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/health.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go", "rel_path": "internal/adapters/handlers/http/health.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package http\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "http"], "doc_head": "package http", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "http", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package http", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/health.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go", "rel_path": "internal/adapters/handlers/http/health.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 9, "text": "import (\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"net/http\"\n\t\"time\"\n)\n", "n_tokens": 35, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 9], "def_symbols": [], "symbols": ["import", "github", "com", "gin", "gonic", "impalastudios", "aviation", "liveflights", "pkg", "xhttp", "net", "http", "time"], "doc_head": "import (\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"net/http\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "http", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package http", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/health.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go", "rel_path": "internal/adapters/handlers/http/health.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 10, "end_line": 12, "text": "type HealthHandler struct {\n}\n", "n_tokens": 6, "primary_symbol": "HealthHandler", "primary_kind": "type", "primary_span": [10, 12], "def_symbols": [], "symbols": ["type", "HealthHandler", "struct"], "doc_head": "type HealthHandler struct {\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:HealthHandler (struct)", "package": "http", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "HealthHandler", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["HealthHandler"], "all_kinds": ["type"], "all_ast_paths": ["go:type:HealthHandler (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["HealthHandler"], "all_type_kinds": ["struct"], "all_start_bytes": [134], "all_end_bytes": [158], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["HealthHandler"], "header_context_minimal": "package http", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/health.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go", "rel_path": "internal/adapters/handlers/http/health.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 13, "end_line": 16, "text": "func NewHealthHandler() *HealthHandler {\n\treturn &HealthHandler{}\n}\n", "n_tokens": 15, "primary_symbol": "NewHealthHandler", "primary_kind": "function", "primary_span": [13, 16], "def_symbols": [], "symbols": ["NewHealthHandler", "func", "HealthHandler", "return"], "doc_head": "func NewHealthHandler() *HealthHandler {\n\treturn &HealthHandler{}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewHealthHandler/complete", "package": "http", "node_kind": "function", "receiver": "", "function_name": "NewHealthHandler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewHealthHandler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewHealthHandler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [160], "all_end_bytes": [227], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["HealthHandler", "NewHealthHandler"], "header_context_minimal": "package http", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/health.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go", "rel_path": "internal/adapters/handlers/http/health.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 17, "end_line": 20, "text": "func (h *HealthHandler) Register(g *gin.RouterGroup) {\n\tg.GET(\"/health\", h.health)\n}\n", "n_tokens": 24, "primary_symbol": "Register", "primary_kind": "method", "primary_span": [17, 20], "def_symbols": [], "symbols": ["Register", "func", "HealthHandler", "gin", "RouterGroup", "GET", "health"], "doc_head": "func (h *HealthHandler) Register(g *gin.RouterGroup) {\n\tg.GET(\"/health\", h.health)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*HealthHandler).Register/complete", "package": "http", "node_kind": "method", "receiver": "h *HealthHandler", "function_name": "", "method_name": "Register", "type_name": "HealthHandler", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Register"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*HealthHandler).Register/complete"], "all_roles": ["complete"], "all_receivers": ["h *HealthHandler"], "all_type_names": ["HealthHandler"], "all_type_kinds": [null], "all_start_bytes": [229], "all_end_bytes": [313], "primary_index": 0, "all_receivers_normalized": ["(*HealthHandler)"], "imports_used_minimal": ["github.com/gin-gonic/gin"], "symbols_referenced_strict": ["HealthHandler", "Register", "RouterGroup", "g.GET", "gin.RouterGroup", "h.health"], "header_context_minimal": "package http\nimport \"github.com/gin-gonic/gin\"\n// receiver: h *HealthHandler", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/health.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go", "rel_path": "internal/adapters/handlers/http/health.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 21, "end_line": 28, "text": "func (h *HealthHandler) health(c *gin.Context) {\n\tnow := time.Now().UTC().Format(time.RFC3339)\n\tc.PureJSON(\n\t\thttp.StatusOK,\n\t\txhttp.NewResponse[string](now, \"ok\", \"I'm healthy.\"),\n\t)\n}\n", "n_tokens": 57, "primary_symbol": "health", "primary_kind": "method", "primary_span": [21, 28], "def_symbols": [], "symbols": ["health", "func", "HealthHandler", "gin", "Context", "now", "time", "Now", "UTC", "Format", "RFC3339", "PureJSON", "http", "StatusOK", "xhttp", "NewResponse", "string", "healthy"], "doc_head": "func (h *HealthHandler) health(c *gin.Context) {\n\tnow := time.Now().UTC().Format(time.RFC3339)\n\tc.PureJSON(\n\t\thttp.StatusOK,\n\t\txhttp.NewResponse[string](now, \"ok\", \"I'm healthy.\"),\n\t)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*HealthHandler).health/complete", "package": "http", "node_kind": "method", "receiver": "h *HealthHandler", "function_name": "", "method_name": "health", "type_name": "HealthHandler", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["health"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*HealthHandler).health/complete"], "all_roles": ["complete"], "all_receivers": ["h *HealthHandler"], "all_type_names": ["HealthHandler"], "all_type_kinds": [null], "all_start_bytes": [315], "all_end_bytes": [500], "primary_index": 0, "all_receivers_normalized": ["(*HealthHandler)"], "imports_used_minimal": ["github.com/gin-gonic/gin", "go.impalastudios.com/aviation/liveflights/pkg/xhttp", "net/http", "time"], "symbols_referenced_strict": ["Context", "Format", "HealthHandler", "NewResponse", "Now", "PureJSON", "StatusOK", "c.PureJSON", "gin.Context", "http.StatusOK", "time.Now", "time.RFC3339", "xhttp.NewResponse"], "header_context_minimal": "package http\nimport (\n    \"github.com/gin-gonic/gin\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n    \"net/http\"\n    \"time\"\n)\n// receiver: h *HealthHandler", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/health.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go", "rel_path": "internal/adapters/handlers/http/v0/models.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go", "rel_path": "internal/adapters/handlers/http/v0/models.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 6, "text": "import (\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n", "n_tokens": 19, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 6], "def_symbols": [], "symbols": ["import", "impalastudios", "com", "aviation", "liveflights", "internal", "core"], "doc_head": "import (\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go", "rel_path": "internal/adapters/handlers/http/v0/models.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 7, "end_line": 7, "text": "type (", "n_tokens": 2, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [7, 7], "def_symbols": [], "symbols": ["type"], "doc_head": "type (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:block", "package": "v0", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go", "rel_path": "internal/adapters/handlers/http/v0/models.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 8, "end_line": 15, "text": "\tliveFlightWithin struct {\n\t\tID               string     `json:\"live_flight_id\"`\n\t\tFlightID         *string    `json:\"flight_id,omitempty\"`\n\t\tPosition         coordinate `json:\"position\"`\n\t\tAltitude         float64    `json:\"altitude\"`\n\t\tHeadingDirection float64    `json:\"heading_direction\"`\n\t}\n", "n_tokens": 71, "primary_symbol": "liveFlightWithin", "primary_kind": "type", "primary_span": [8, 15], "def_symbols": [], "symbols": ["liveFlightWithin", "struct", "string", "json", "live_flight_id", "FlightID", "flight_id", "omitempty", "Position", "coordinate", "position", "Altitude", "float64", "altitude", "HeadingDirection", "heading_direction"], "doc_head": "\tliveFlightWithin struct {\n\t\tID               string     `json:\"live_flight_id\"`\n\t\tFlightID         *string    `json:\"flight_id,omitempty\"`\n\t\tPosition         coordinate `json:\"position\"`\n\t\tAltitude         float64    `json:\"altitude\"`\n\t\tHeadingDirection float64    `json:\"heading_direction\"`\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:liveFlightWithin (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "liveFlightWithin", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["liveFlightWithin"], "all_kinds": ["type"], "all_ast_paths": ["go:type:liveFlightWithin (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["liveFlightWithin"], "all_type_kinds": ["struct"], "all_start_bytes": [91], "all_end_bytes": [385], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Altitude", "FlightID", "HeadingDirection", "Position"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go", "rel_path": "internal/adapters/handlers/http/v0/models.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 16, "end_line": 20, "text": "\tcoordinate struct {\n\t\tLat float64 `json:\"lat\"`\n\t\tLon float64 `json:\"lon\"`\n\t}\n", "n_tokens": 26, "primary_symbol": "coordinate", "primary_kind": "type", "primary_span": [16, 20], "def_symbols": [], "symbols": ["coordinate", "struct", "Lat", "float64", "json", "lat", "Lon", "lon"], "doc_head": "\tcoordinate struct {\n\t\tLat float64 `json:\"lat\"`\n\t\tLon float64 `json:\"lon\"`\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:coordinate (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "coordinate", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["coordinate"], "all_kinds": ["type"], "all_ast_paths": ["go:type:coordinate (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["coordinate"], "all_type_kinds": ["struct"], "all_start_bytes": [388], "all_end_bytes": [464], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Lat", "Lon"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go", "rel_path": "internal/adapters/handlers/http/v0/models.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 21, "end_line": 31, "text": "\ttrackPoint struct {\n\t\tPosition         coordinate `json:\"position\"`\n\t\tAltitude         float64    `json:\"altitude\"`\n\t\tHeadingDirection float64    `json:\"heading_direction\"`\n\t\tHorizontalSpeed  float64    `json:\"horizontal_speed\"`\n\t\tVerticalSpeed    float64    `json:\"vertical_speed\"`\n\t\tSquawk           int        `json:\"squawk\"`\n\t\tCreatedAt        string     `json:\"created_at\"`\n\t}\n)\n", "n_tokens": 97, "primary_symbol": "trackPoint", "primary_kind": "type", "primary_span": [21, 31], "def_symbols": [], "symbols": ["trackPoint", "struct", "Position", "coordinate", "json", "position", "Altitude", "float64", "altitude", "HeadingDirection", "heading_direction", "HorizontalSpeed", "horizontal_speed", "VerticalSpeed", "vertical_speed", "Squawk", "int", "squawk", "CreatedAt", "string", "created_at"], "doc_head": "\ttrackPoint struct {\n\t\tPosition         coordinate `json:\"position\"`\n\t\tAltitude         float64    `json:\"altitude\"`\n\t\tHeadingDirection float64    `json:\"heading_direction\"`\n\t\tHorizontalSpeed  float64    `json:\"horizontal_speed\"`\n\t\tVerticalSpeed    float64    `json:\"vertical_speed\"`\n\t\tSquawk           int        `json:\"squawk\"`\n\t\tCreatedAt        string     `json:\"created_at\"`\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:trackPoint (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "trackPoint", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["trackPoint"], "all_kinds": ["type"], "all_ast_paths": ["go:type:trackPoint (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["trackPoint"], "all_type_kinds": ["struct"], "all_start_bytes": [467], "all_end_bytes": [848], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Altitude", "CreatedAt", "HeadingDirection", "HorizontalSpeed", "Position", "Squawk", "VerticalSpeed"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go", "rel_path": "internal/adapters/handlers/http/v0/models.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 32, "end_line": 44, "text": "func liveFlightWithinFromDomain(update *core.LiveFlight) *liveFlightWithin {\n\treturn &liveFlightWithin{\n\t\tID:       update.ID,\n\t\tFlightID: update.FlightID,\n\t\tPosition: coordinate{\n\t\t\tLat: update.Position.Lat,\n\t\t\tLon: update.Position.Lon,\n\t\t},\n\t\tAltitude:         update.Altitude,\n\t\tHeadingDirection: update.HeadingDirection,\n\t}\n}\n", "n_tokens": 91, "primary_symbol": "liveFlightWithinFromDomain", "primary_kind": "function", "primary_span": [32, 44], "def_symbols": [], "symbols": ["liveFlightWithinFromDomain", "func", "update", "core", "LiveFlight", "liveFlightWithin", "return", "FlightID", "Position", "coordinate", "Lat", "Lon", "Altitude", "HeadingDirection"], "doc_head": "func liveFlightWithinFromDomain(update *core.LiveFlight) *liveFlightWithin {\n\treturn &liveFlightWithin{\n\t\tID:       update.ID,\n\t\tFlightID: update.FlightID,\n\t\tPosition: coordinate{\n\t\t\tLat: update.Position.Lat,\n\t\t\tLon: update.Position.Lon,\n\t\t},\n\t\tAltitude:         update.Altitude,\n\t\tHeadingDirection: update.HeadingDirection,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:liveFlightWithinFromDomain/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "liveFlightWithinFromDomain", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["liveFlightWithinFromDomain"], "all_kinds": ["function"], "all_ast_paths": ["go:function:liveFlightWithinFromDomain/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [852], "all_end_bytes": [1181], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Altitude", "FlightID", "HeadingDirection", "Lat", "LiveFlight", "Lon", "Position", "core.LiveFlight", "update.Altitude", "update.FlightID", "update.HeadingDirection", "update.ID", "update.Position"], "header_context_minimal": "package v0\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/models.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go", "rel_path": "internal/adapters/handlers/http/v0/models.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 45, "end_line": 59, "text": "func trackPointFromDomain(update *core.TrackPoint) *trackPoint {\n\treturn &trackPoint{\n\t\tPosition: coordinate{\n\t\t\tLat: update.Position.Lat,\n\t\t\tLon: update.Position.Lon,\n\t\t},\n\t\tAltitude:         update.Altitude,\n\t\tHeadingDirection: update.HeadingDirection,\n\t\tHorizontalSpeed:  update.GroundSpeed,\n\t\tVerticalSpeed:    update.VerticalSpeed,\n\t\tSquawk:           update.Squawk,\n\t\tCreatedAt:        update.CreatedAt.UTC().Format(\"2006-01-02T15:04:05Z\"),\n\t}\n}\n", "n_tokens": 129, "primary_symbol": "trackPointFromDomain", "primary_kind": "function", "primary_span": [45, 59], "def_symbols": [], "symbols": ["trackPointFromDomain", "func", "update", "core", "TrackPoint", "trackPoint", "return", "Position", "coordinate", "Lat", "Lon", "Altitude", "HeadingDirection", "HorizontalSpeed", "GroundSpeed", "VerticalSpeed", "Squawk", "CreatedAt", "UTC", "Format"], "doc_head": "func trackPointFromDomain(update *core.TrackPoint) *trackPoint {\n\treturn &trackPoint{\n\t\tPosition: coordinate{\n\t\t\tLat: update.Position.Lat,\n\t\t\tLon: update.Position.Lon,\n\t\t},\n\t\tAltitude:         update.Altitude,\n\t\tHeadingDirection: update.HeadingDirection,\n\t\tHorizontalSpeed:  update.GroundSpeed,\n\t\tVerticalSpeed:    update.VerticalSpeed,\n\t\tSquawk:           update.Squawk,\n\t\tCreatedAt:        update.CreatedAt.UTC().Format(\"2006-01-02T15:04:05Z\"),\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:trackPointFromDomain/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "trackPointFromDomain", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["trackPointFromDomain"], "all_kinds": ["function"], "all_ast_paths": ["go:function:trackPointFromDomain/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1183], "all_end_bytes": [1634], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Altitude", "CreatedAt", "Format", "GroundSpeed", "HeadingDirection", "HorizontalSpeed", "Lat", "Lon", "Position", "Squawk", "TrackPoint", "VerticalSpeed", "core.TrackPoint", "update.Altitude", "update.CreatedAt", "update.GroundSpeed", "update.HeadingDirection", "update.Position", "update.Squawk", "update.VerticalSpeed"], "header_context_minimal": "package v0\nimport \"go.impalastudios.com/aviation/liveflights/internal/core\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/models.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go", "rel_path": "internal/adapters/handlers/http/v0/tracks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go", "rel_path": "internal/adapters/handlers/http/v0/tracks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 13, "text": "import (\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"net/http\"\n\t\"sort\"\n)\n", "n_tokens": 78, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 13], "def_symbols": [], "symbols": ["import", "github", "com", "cockroachdb", "errors", "gin", "gonic", "impalastudios", "aviation", "liveflights", "internal", "core", "pkg", "xhttp", "log", "uber", "org", "zap", "net", "http", "sort"], "doc_head": "import (\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"net/http\"\n\t\"sort\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go", "rel_path": "internal/adapters/handlers/http/v0/tracks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 14, "end_line": 14, "text": "type (", "n_tokens": 2, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [14, 14], "def_symbols": [], "symbols": ["type"], "doc_head": "type (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:block", "package": "v0", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go", "rel_path": "internal/adapters/handlers/http/v0/tracks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 15, "end_line": 19, "text": "\tgetFlightTracksURI struct {\n\t\tFlightID string `uri:\"id\" binding:\"required\"`\n\t}\n)\n", "n_tokens": 23, "primary_symbol": "getFlightTracksURI", "primary_kind": "type", "primary_span": [15, 19], "def_symbols": [], "symbols": ["getFlightTracksURI", "struct", "FlightID", "string", "uri", "binding", "required"], "doc_head": "\tgetFlightTracksURI struct {\n\t\tFlightID string `uri:\"id\" binding:\"required\"`\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:getFlightTracksURI (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "getFlightTracksURI", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["getFlightTracksURI"], "all_kinds": ["type"], "all_ast_paths": ["go:type:getFlightTracksURI (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["getFlightTracksURI"], "all_type_kinds": ["struct"], "all_start_bytes": [274], "all_end_bytes": [352], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["FlightID"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go", "rel_path": "internal/adapters/handlers/http/v0/tracks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 20, "end_line": 59, "text": "func (h *Handler) tracks(c *gin.Context) {\n\tvar uri getFlightTracksURI\n\tif err := c.ShouldBindUri(&uri); err != nil {\n\t\tlog.Error(c, \"failed to bind request query\", zap.Error(err))\n\t\t_ = c.Error(errRequestBindingFailed)\n\t\treturn\n\t}\n\n\tdetails, err := h.svc.GetLiveFlightDetailsByFlightID(c, uri.FlightID)\n\tif err != nil {\n\t\tif errors.Is(err, core.ErrFlightNotFound) {\n\t\t\tc.JSON(http.StatusNotFound, xhttp.NewErrorResponse(\"not_found\", \"Flight not found.\"))\n\t\t\treturn\n\t\t}\n\n\t\tlog.Warn(c, \"Failed to retrieve Live Flight\",\n\t\t\tzap.String(\"id\", uri.FlightID),\n\t\t\tzap.Error(err),\n\t\t)\n\n\t\tc.JSON(http.StatusInternalServerError, xhttp.NewErrorResponse(\"internal_error\", \"We cannot serve you at the moment. Please try again later.\"))\n\t\treturn\n\t}\n\n\tsort.Slice(details.Tracks, func(i, j int) bool {\n\t\treturn details.Tracks[i].CreatedAt.Before(details.Tracks[j].CreatedAt)\n\t})\n\n\tpoints := make([]*trackPoint, len(details.Tracks))\n\tfor i := range details.Tracks {\n\t\tpoints[i] = trackPointFromDomain(&details.Tracks[i])\n\t}\n\n\tc.PureJSON(http.StatusOK, xhttp.NewResponse(\n\t\tpoints,\n\t\t\"ok\",\n\t\t\"Here are the flight tracks.\",\n\t))\n}\n", "n_tokens": 297, "primary_symbol": "tracks", "primary_kind": "method", "primary_span": [20, 59], "def_symbols": [], "symbols": ["tracks", "func", "Handler", "gin", "Context", "var", "uri", "getFlightTracksURI", "err", "ShouldBindUri", "nil", "log", "Error", "failed", "bind", "request", "query", "zap", "errRequestBindingFailed", "return", "details", "svc", "GetLiveFlightDetailsByFlightID", "FlightID", "errors", "core", "ErrFlightNotFound", "JSON", "http", "StatusNotFound", "xhttp", "NewErrorResponse", "not_found", "Flight", "not", "found", "Warn", "Failed", "retrieve", "Live", "String", "StatusInternalServerError", "internal_error", "cannot", "serve", "you", "the", "moment", "Please", "try", "again", "later", "sort", "Slice", "Tracks", "int", "bool", "CreatedAt", "Before", "points", "make", "trackPoint", "len", "for", "range", "trackPointFromDomain", "PureJSON", "StatusOK", "NewResponse", "Here", "are", "flight"], "doc_head": "func (h *Handler) tracks(c *gin.Context) {\n\tvar uri getFlightTracksURI\n\tif err := c.ShouldBindUri(&uri); err != nil {\n\t\tlog.Error(c, \"failed to bind request query\", zap.Error(err))\n\t\t_ = c.Error(errRequestBindingFailed)\n\t\treturn\n\t}\n\tdetails, err := h.svc.GetLiveFlightDetailsByFlightID(c, uri.FlightID)\n\tif err != nil {\n\t\tif errors.Is(err, core.ErrFlightNotFound) {\n\t\t\tc.JSON(http.StatusNotFound, xhttp.NewErrorResponse(\"not_found\", \"Flight not found.\"))\n\t\t\treturn\n\t\t}\n\t\tlog.Warn(c, \"Failed to retrieve Live Flight\",\n\t\t\tzap.String(\"id\", uri.FlightID),\n\t\t\tzap.Error(err),\n\t\t)\n\t\tc.JSON(http.StatusInternalServerError, xhttp.NewErrorResponse(\"internal_error\", \"We cannot serve you at the moment. Please try again later.\"))\n\t\treturn\n\t}\n\tsort.Slice(details.Tracks, func(i, j int) bool {\n\t\treturn details.Tracks[i].CreatedAt.Before(details.Tracks[j].CreatedAt)\n\t})\n\tpoints := make([]*trackPoint, len(details.Tracks))\n\tfor i := range details.Tracks {\n\t\tpoints[i] = trackPointFromDomain(&details.Tracks[i])\n\t}\n\tc.PureJSON(http.StatusOK, xhttp.NewResponse(\n\t\tpoints,\n\t\t\"ok\",\n\t\t\"Here are the flight tracks.\",\n\t))\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Handler).tracks/complete", "package": "v0", "node_kind": "method", "receiver": "h *Handler", "function_name": "", "method_name": "tracks", "type_name": "Handler", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["tracks"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Handler).tracks/complete"], "all_roles": ["complete"], "all_receivers": ["h *Handler"], "all_type_names": ["Handler"], "all_type_kinds": [null], "all_start_bytes": [356], "all_end_bytes": [1466], "primary_index": 0, "all_receivers_normalized": ["(*Handler)"], "imports_used_minimal": ["github.com/cockroachdb/errors", "github.com/gin-gonic/gin", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/aviation/liveflights/pkg/xhttp", "go.impalastudios.com/log", "go.uber.org/zap", "net/http", "sort"], "symbols_referenced_strict": ["Context", "CreatedAt", "CreatedAt.Before", "ErrFlightNotFound", "Error", "FlightID", "GetLiveFlightDetailsByFlightID", "Handler", "NewErrorResponse", "NewResponse", "PureJSON", "ShouldBindUri", "Slice", "StatusInternalServerError", "StatusNotFound", "StatusOK", "String", "Tracks", "Warn", "c.Error", "c.JSON", "c.PureJSON", "c.ShouldBindUri", "core.ErrFlightNotFound", "details.Tracks", "errors.Is", "gin.Context", "h.svc", "http.StatusInternalServerError", "http.StatusNotFound", "http.StatusOK", "log.Error", "log.Warn", "sort.Slice", "uri.FlightID", "xhttp.NewErrorResponse", "xhttp.NewResponse", "zap.Error", "zap.String"], "header_context_minimal": "package v0\nimport (\n    \"github.com/cockroachdb/errors\"\n    \"github.com/gin-gonic/gin\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n    \"go.impalastudios.com/log\"\n)\n// receiver: h *Handler", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/tracks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go", "rel_path": "internal/adapters/handlers/http/v0/handler.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go", "rel_path": "internal/adapters/handlers/http/v0/handler.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 9, "text": "import (\n\t\"context\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n", "n_tokens": 30, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 9], "def_symbols": [], "symbols": ["import", "context", "github", "com", "gin", "gonic", "impalastudios", "aviation", "liveflights", "internal", "core"], "doc_head": "import (\n\t\"context\"\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go", "rel_path": "internal/adapters/handlers/http/v0/handler.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 10, "end_line": 11, "text": "//go:generate mockgen -source=handler.go -destination=mocks/handler.go -package=mocks\ntype (", "n_tokens": 27, "primary_symbol": "", "primary_kind": "header", "primary_span": [10, 11], "def_symbols": [], "symbols": ["generate", "mockgen", "source", "handler", "destination", "mocks", "package", "type"], "doc_head": "//go:generate mockgen -source=handler.go -destination=mocks/handler.go -package=mocks\ntype (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go", "rel_path": "internal/adapters/handlers/http/v0/handler.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 12, "end_line": 18, "text": "\tsvc interface {\n\t\tFilterLiveFlights(context.Context, *core.FlightsWithin) ([]*core.LiveFlight, error)\n\t\tGetLiveFlightDetailsByLiveFlightID(context.Context, string) (*core.LiveFlight, error)\n\t\tGetLiveFlightDetailsByFlightID(context.Context, string) (*core.LiveFlight, error)\n\t}\n)\n", "n_tokens": 71, "primary_symbol": "svc", "primary_kind": "type", "primary_span": [12, 18], "def_symbols": [], "symbols": ["svc", "interface", "FilterLiveFlights", "context", "Context", "core", "FlightsWithin", "LiveFlight", "error", "GetLiveFlightDetailsByLiveFlightID", "string", "GetLiveFlightDetailsByFlightID"], "doc_head": "\tsvc interface {\n\t\tFilterLiveFlights(context.Context, *core.FlightsWithin) ([]*core.LiveFlight, error)\n\t\tGetLiveFlightDetailsByLiveFlightID(context.Context, string) (*core.LiveFlight, error)\n\t\tGetLiveFlightDetailsByFlightID(context.Context, string) (*core.LiveFlight, error)\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:svc (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "svc", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["svc"], "all_kinds": ["type"], "all_ast_paths": ["go:type:svc (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["svc"], "all_type_kinds": ["interface"], "all_start_bytes": [217], "all_end_bytes": [493], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Context", "FilterLiveFlights", "FlightsWithin", "GetLiveFlightDetailsByFlightID", "GetLiveFlightDetailsByLiveFlightID", "LiveFlight", "context.Context", "core.FlightsWithin", "core.LiveFlight"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go", "rel_path": "internal/adapters/handlers/http/v0/handler.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 19, "end_line": 22, "text": "type Handler struct {\n\tsvc svc\n}\n", "n_tokens": 9, "primary_symbol": "Handler", "primary_kind": "type", "primary_span": [19, 22], "def_symbols": [], "symbols": ["type", "Handler", "struct", "svc"], "doc_head": "type Handler struct {\n\tsvc svc\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Handler (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Handler", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Handler"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Handler (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Handler"], "all_type_kinds": ["struct"], "all_start_bytes": [502], "all_end_bytes": [529], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Handler"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go", "rel_path": "internal/adapters/handlers/http/v0/handler.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 23, "end_line": 29, "text": "// New creates a new httpresponses handler\nfunc New(svc svc) *Handler {\n\treturn &Handler{\n\t\tsvc: svc,\n\t}\n}\n", "n_tokens": 31, "primary_symbol": "New", "primary_kind": "function", "primary_span": [24, 29], "def_symbols": [], "symbols": ["New", "creates", "new", "httpresponses", "handler", "func", "svc", "Handler", "return"], "doc_head": "// New creates a new httpresponses handler\nfunc New(svc svc) *Handler {\n\treturn &Handler{\n\t\tsvc: svc,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:New/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "New", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["New"], "all_kinds": ["function"], "all_ast_paths": ["go:function:New/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [574], "all_end_bytes": [637], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Handler", "New"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go", "rel_path": "internal/adapters/handlers/http/v0/handler.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 30, "end_line": 36, "text": "// Register gin routes\nfunc (h *Handler) Register(g *gin.RouterGroup) {\n\tg.GET(\"/v0/live-flights/within\", h.within, h.handleErrors)\n\tg.GET(\"/v0/live-flights/flights/:id/tracks\", h.liveTracks, h.handleErrors)\n\tg.GET(\"/v0/flights/:id/tracks\", h.tracks, h.handleErrors)\n}\n", "n_tokens": 81, "primary_symbol": "Register", "primary_kind": "method", "primary_span": [31, 36], "def_symbols": [], "symbols": ["Register", "gin", "routes", "func", "Handler", "RouterGroup", "GET", "live", "flights", "within", "handleErrors", "tracks", "liveTracks"], "doc_head": "// Register gin routes\nfunc (h *Handler) Register(g *gin.RouterGroup) {\n\tg.GET(\"/v0/live-flights/within\", h.within, h.handleErrors)\n\tg.GET(\"/v0/live-flights/flights/:id/tracks\", h.liveTracks, h.handleErrors)\n\tg.GET(\"/v0/flights/:id/tracks\", h.tracks, h.handleErrors)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Handler).Register/complete", "package": "v0", "node_kind": "method", "receiver": "h *Handler", "function_name": "", "method_name": "Register", "type_name": "Handler", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Register"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Handler).Register/complete"], "all_roles": ["complete"], "all_receivers": ["h *Handler"], "all_type_names": ["Handler"], "all_type_kinds": [null], "all_start_bytes": [662], "all_end_bytes": [907], "primary_index": 0, "all_receivers_normalized": ["(*Handler)"], "imports_used_minimal": ["github.com/gin-gonic/gin"], "symbols_referenced_strict": ["Handler", "Register", "RouterGroup", "g.GET", "gin.RouterGroup", "h.handleErrors", "h.liveTracks", "h.tracks", "h.within"], "header_context_minimal": "package v0\nimport \"github.com/gin-gonic/gin\"\n// receiver: h *Handler", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/handler.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/live_tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go", "rel_path": "internal/adapters/handlers/http/v0/live_tracks.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/live_tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go", "rel_path": "internal/adapters/handlers/http/v0/live_tracks.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 13, "text": "import (\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"net/http\"\n\t\"sort\"\n)\n", "n_tokens": 78, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 13], "def_symbols": [], "symbols": ["import", "github", "com", "cockroachdb", "errors", "gin", "gonic", "impalastudios", "aviation", "liveflights", "internal", "core", "pkg", "xhttp", "log", "uber", "org", "zap", "net", "http", "sort"], "doc_head": "import (\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"net/http\"\n\t\"sort\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/live_tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go", "rel_path": "internal/adapters/handlers/http/v0/live_tracks.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 14, "end_line": 14, "text": "type (", "n_tokens": 2, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [14, 14], "def_symbols": [], "symbols": ["type"], "doc_head": "type (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:block", "package": "v0", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/live_tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go", "rel_path": "internal/adapters/handlers/http/v0/live_tracks.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 15, "end_line": 19, "text": "\tgetLiveFlightTracksURI struct {\n\t\tLiveFlightID string `uri:\"id\" binding:\"required\"`\n\t}\n)\n", "n_tokens": 25, "primary_symbol": "getLiveFlightTracksURI", "primary_kind": "type", "primary_span": [15, 19], "def_symbols": [], "symbols": ["getLiveFlightTracksURI", "struct", "LiveFlightID", "string", "uri", "binding", "required"], "doc_head": "\tgetLiveFlightTracksURI struct {\n\t\tLiveFlightID string `uri:\"id\" binding:\"required\"`\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:getLiveFlightTracksURI (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "getLiveFlightTracksURI", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["getLiveFlightTracksURI"], "all_kinds": ["type"], "all_ast_paths": ["go:type:getLiveFlightTracksURI (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["getLiveFlightTracksURI"], "all_type_kinds": ["struct"], "all_start_bytes": [274], "all_end_bytes": [360], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["LiveFlightID"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/live_tracks.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go", "rel_path": "internal/adapters/handlers/http/v0/live_tracks.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 20, "end_line": 59, "text": "func (h *Handler) liveTracks(c *gin.Context) {\n\tvar uri getLiveFlightTracksURI\n\tif err := c.ShouldBindUri(&uri); err != nil {\n\t\tlog.Error(c, \"failed to bind request query\", zap.Error(err))\n\t\t_ = c.Error(errRequestBindingFailed)\n\t\treturn\n\t}\n\n\tdetails, err := h.svc.GetLiveFlightDetailsByLiveFlightID(c, uri.LiveFlightID)\n\tif err != nil {\n\t\tif errors.Is(err, core.ErrFlightNotFound) {\n\t\t\tc.JSON(http.StatusNotFound, xhttp.NewErrorResponse(\"not_found\", \"Live Flight not found.\"))\n\t\t\treturn\n\t\t}\n\n\t\tlog.Warn(c, \"Failed to retrieve Live Flight\",\n\t\t\tzap.String(\"id\", uri.LiveFlightID),\n\t\t\tzap.Error(err),\n\t\t)\n\n\t\tc.JSON(http.StatusInternalServerError, xhttp.NewErrorResponse(\"internal_error\", \"We cannot serve you at the moment. Please try again later.\"))\n\t\treturn\n\t}\n\n\tsort.Slice(details.Tracks, func(i, j int) bool {\n\t\treturn details.Tracks[i].CreatedAt.Before(details.Tracks[j].CreatedAt)\n\t})\n\n\tpoints := make([]*trackPoint, len(details.Tracks))\n\tfor i := range details.Tracks {\n\t\tpoints[i] = trackPointFromDomain(&details.Tracks[i])\n\t}\n\n\tc.PureJSON(http.StatusOK, xhttp.NewResponse(\n\t\tpoints,\n\t\t\"ok\",\n\t\t\"Here are the flight tracks.\",\n\t))\n}\n", "n_tokens": 301, "primary_symbol": "liveTracks", "primary_kind": "method", "primary_span": [20, 59], "def_symbols": [], "symbols": ["liveTracks", "func", "Handler", "gin", "Context", "var", "uri", "getLiveFlightTracksURI", "err", "ShouldBindUri", "nil", "log", "Error", "failed", "bind", "request", "query", "zap", "errRequestBindingFailed", "return", "details", "svc", "GetLiveFlightDetailsByLiveFlightID", "LiveFlightID", "errors", "core", "ErrFlightNotFound", "JSON", "http", "StatusNotFound", "xhttp", "NewErrorResponse", "not_found", "Live", "Flight", "not", "found", "Warn", "Failed", "retrieve", "String", "StatusInternalServerError", "internal_error", "cannot", "serve", "you", "the", "moment", "Please", "try", "again", "later", "sort", "Slice", "Tracks", "int", "bool", "CreatedAt", "Before", "points", "make", "trackPoint", "len", "for", "range", "trackPointFromDomain", "PureJSON", "StatusOK", "NewResponse", "Here", "are", "flight", "tracks"], "doc_head": "func (h *Handler) liveTracks(c *gin.Context) {\n\tvar uri getLiveFlightTracksURI\n\tif err := c.ShouldBindUri(&uri); err != nil {\n\t\tlog.Error(c, \"failed to bind request query\", zap.Error(err))\n\t\t_ = c.Error(errRequestBindingFailed)\n\t\treturn\n\t}\n\tdetails, err := h.svc.GetLiveFlightDetailsByLiveFlightID(c, uri.LiveFlightID)\n\tif err != nil {\n\t\tif errors.Is(err, core.ErrFlightNotFound) {\n\t\t\tc.JSON(http.StatusNotFound, xhttp.NewErrorResponse(\"not_found\", \"Live Flight not found.\"))\n\t\t\treturn\n\t\t}\n\t\tlog.Warn(c, \"Failed to retrieve Live Flight\",\n\t\t\tzap.String(\"id\", uri.LiveFlightID),\n\t\t\tzap.Error(err),\n\t\t)\n\t\tc.JSON(http.StatusInternalServerError, xhttp.NewErrorResponse(\"internal_error\", \"We cannot serve you at the moment. Please try again later.\"))\n\t\treturn\n\t}\n\tsort.Slice(details.Tracks, func(i, j int) bool {\n\t\treturn details.Tracks[i].CreatedAt.Before(details.Tracks[j].CreatedAt)\n\t})\n\tpoints := make([]*trackPoint, len(details.Tracks))\n\tfor i := range details.Tracks {\n\t\tpoints[i] = trackPointFromDomain(&details.Tracks[i])\n\t}\n\tc.PureJSON(http.StatusOK, xhttp.NewResponse(\n\t\tpoints,\n\t\t\"ok\",\n\t\t\"Here are the flight tracks.\",\n\t))\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Handler).liveTracks/complete", "package": "v0", "node_kind": "method", "receiver": "h *Handler", "function_name": "", "method_name": "liveTracks", "type_name": "Handler", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["liveTracks"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Handler).liveTracks/complete"], "all_roles": ["complete"], "all_receivers": ["h *Handler"], "all_type_names": ["Handler"], "all_type_kinds": [null], "all_start_bytes": [364], "all_end_bytes": [1499], "primary_index": 0, "all_receivers_normalized": ["(*Handler)"], "imports_used_minimal": ["github.com/cockroachdb/errors", "github.com/gin-gonic/gin", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/aviation/liveflights/pkg/xhttp", "go.impalastudios.com/log", "go.uber.org/zap", "net/http", "sort"], "symbols_referenced_strict": ["Context", "CreatedAt", "CreatedAt.Before", "ErrFlightNotFound", "Error", "GetLiveFlightDetailsByLiveFlightID", "Handler", "LiveFlightID", "NewErrorResponse", "NewResponse", "PureJSON", "ShouldBindUri", "Slice", "StatusInternalServerError", "StatusNotFound", "StatusOK", "String", "Tracks", "Warn", "c.Error", "c.JSON", "c.PureJSON", "c.ShouldBindUri", "core.ErrFlightNotFound", "details.Tracks", "errors.Is", "gin.Context", "h.svc", "http.StatusInternalServerError", "http.StatusNotFound", "http.StatusOK", "log.Error", "log.Warn", "sort.Slice", "uri.LiveFlightID", "xhttp.NewErrorResponse", "xhttp.NewResponse", "zap.Error", "zap.String"], "header_context_minimal": "package v0\nimport (\n    \"github.com/cockroachdb/errors\"\n    \"github.com/gin-gonic/gin\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n    \"go.impalastudios.com/log\"\n)\n// receiver: h *Handler", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/live_tracks.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/within.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go", "rel_path": "internal/adapters/handlers/http/v0/within.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/within.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go", "rel_path": "internal/adapters/handlers/http/v0/within.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 16, "text": "import (\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/pkg/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"net/http\"\n\t\"regexp\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n)\n", "n_tokens": 84, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 16], "def_symbols": [], "symbols": ["import", "github", "com", "gin", "gonic", "pkg", "errors", "impalastudios", "aviation", "liveflights", "internal", "core", "xhttp", "log", "uber", "org", "zap", "net", "http", "regexp", "strconv", "strings", "time"], "doc_head": "import (\n\t\"github.com/gin-gonic/gin\"\n\t\"github.com/pkg/errors\"\n\t\"go.impalastudios.com/aviation/liveflights/internal/core\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"net/http\"\n\t\"regexp\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/within.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go", "rel_path": "internal/adapters/handlers/http/v0/within.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 17, "end_line": 18, "text": "type coordinateText string\n", "n_tokens": 5, "primary_symbol": "coordinateText", "primary_kind": "type", "primary_span": [17, 18], "def_symbols": [], "symbols": ["type", "coordinateText", "string"], "doc_head": "type coordinateText string", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:coordinateText (alias)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "coordinateText", "type_kind": "alias", "is_multi_declaration": false, "all_symbols": ["coordinateText"], "all_kinds": ["type"], "all_ast_paths": ["go:type:coordinateText (alias)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["coordinateText"], "all_type_kinds": ["alias"], "all_start_bytes": [295], "all_end_bytes": [316], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/within.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go", "rel_path": "internal/adapters/handlers/http/v0/within.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 19, "end_line": 40, "text": "func (c coordinateText) Parse() (*core.Coordinate, error) {\n\tpieces := strings.Split(string(c), \",\")\n\tif len(pieces) != 2 {\n\t\treturn nil, errors.New(\"invalid value\")\n\t}\n\n\tlat, err := strconv.ParseFloat(pieces[0], 64)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err, \"invalid latitude value\")\n\t}\n\n\tlon, err := strconv.ParseFloat(pieces[1], 64)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err, \"invalid longitude value\")\n\t}\n\n\treturn &core.Coordinate{\n\t\tLat: lat,\n\t\tLon: lon,\n\t}, nil\n}\n", "n_tokens": 142, "primary_symbol": "Parse", "primary_kind": "method", "primary_span": [19, 40], "def_symbols": [], "symbols": ["Parse", "func", "coordinateText", "core", "Coordinate", "error", "pieces", "strings", "Split", "string", "len", "return", "nil", "errors", "New", "invalid", "value", "lat", "err", "strconv", "ParseFloat", "Wrap", "latitude", "lon", "longitude", "Lat", "Lon"], "doc_head": "func (c coordinateText) Parse() (*core.Coordinate, error) {\n\tpieces := strings.Split(string(c), \",\")\n\tif len(pieces) != 2 {\n\t\treturn nil, errors.New(\"invalid value\")\n\t}\n\tlat, err := strconv.ParseFloat(pieces[0], 64)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err, \"invalid latitude value\")\n\t}\n\tlon, err := strconv.ParseFloat(pieces[1], 64)\n\tif err != nil {\n\t\treturn nil, errors.Wrap(err, \"invalid longitude value\")\n\t}\n\treturn &core.Coordinate{\n\t\tLat: lat,\n\t\tLon: lon,\n\t}, nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(coordinateText).Parse/complete", "package": "v0", "node_kind": "method", "receiver": "c coordinateText", "function_name": "", "method_name": "Parse", "type_name": "coordinateText", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Parse"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(coordinateText).Parse/complete"], "all_roles": ["complete"], "all_receivers": ["c coordinateText"], "all_type_names": ["coordinateText"], "all_type_kinds": [null], "all_start_bytes": [318], "all_end_bytes": [798], "primary_index": 0, "all_receivers_normalized": ["(coordinateText)"], "imports_used_minimal": ["github.com/pkg/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "strconv", "strings"], "symbols_referenced_strict": ["Coordinate", "Lat", "Lon", "New", "Parse", "ParseFloat", "Split", "Wrap", "core.Coordinate", "errors.New", "errors.Wrap", "strconv.ParseFloat", "strings.Split"], "header_context_minimal": "package v0\nimport (\n    \"github.com/pkg/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"strconv\"\n    \"strings\"\n)\n// receiver: c coordinateText", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/within.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go", "rel_path": "internal/adapters/handlers/http/v0/within.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 41, "end_line": 50, "text": "type withinRequest struct {\n\tTopLeft     coordinateText `form:\"filter[bb][top_left]\" binding:\"required,omitempty,coord\"`\n\tBottomRight coordinateText `form:\"filter[bb][bottom_right]\" binding:\"required,omitempty,coord\"`\n\n\t// Classification integer value of airline classification, 1-5\n\t// If + is provided, it will return all airline with classification greater than or equal to, e.g. 2+\n\t// if - is provided, it will return all airline with classification less than or equal to. e.g. 3-\n\tAirlineClassification string `form:\"filter[airline_classification]\" binding:\"omitempty,classification\"`\n}\n", "n_tokens": 137, "primary_symbol": "withinRequest", "primary_kind": "type", "primary_span": [41, 50], "def_symbols": [], "symbols": ["type", "withinRequest", "struct", "TopLeft", "coordinateText", "form", "filter", "top_left", "binding", "required", "omitempty", "coord", "BottomRight", "bottom_right", "Classification", "integer", "value", "airline", "classification", "provided", "will", "return", "all", "with", "greater", "than", "equal", "less", "AirlineClassification", "string", "airline_classification"], "doc_head": "type withinRequest struct {\n\tTopLeft     coordinateText `form:\"filter[bb][top_left]\" binding:\"required,omitempty,coord\"`\n\tBottomRight coordinateText `form:\"filter[bb][bottom_right]\" binding:\"required,omitempty,coord\"`\n\t// Classification integer value of airline classification, 1-5\n\t// If + is provided, it will return all airline with classification greater than or equal to, e.g. 2+\n\t// if - is provided, it will return all airline with classification less than or equal to. e.g. 3-\n\tAirlineClassification string `form:\"filter[airline_classification]\" binding:\"omitempty,classification\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:withinRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "withinRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["withinRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:withinRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["withinRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [805], "all_end_bytes": [1392], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineClassification", "BottomRight", "TopLeft"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/within.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go", "rel_path": "internal/adapters/handlers/http/v0/within.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 51, "end_line": 99, "text": "func (h *Handler) within(c *gin.Context) {\n\tvar req withinRequest\n\tif err := c.ShouldBindQuery(&req); err != nil {\n\t\tlog.Error(c, \"failed to bind request query\", zap.Error(err))\n\t\t_ = c.Error(errRequestBindingFailed)\n\t\treturn\n\t}\n\n\tbb, err := req.GetWithinBoundingBox()\n\tif err != nil {\n\t\tlog.Error(c, \"failed to extract bounding box\", zap.Error(err))\n\t\t_ = c.Error(errInvalidWithinBoundingBox)\n\t\treturn\n\t}\n\n\tcl, err := parseClassifiction(req.AirlineClassification)\n\tif err != nil {\n\t\tlog.Error(c, \"failed to parse classification\",\n\t\t\tzap.String(\"classification\", req.AirlineClassification),\n\t\t\tzap.Error(err),\n\t\t)\n\n\t\t_ = c.Error(errInvalidClassification)\n\t\treturn\n\t}\n\n\tflights, err := h.svc.FilterLiveFlights(c, &core.FlightsWithin{\n\t\tBoundingBox:           bb,\n\t\tMaxAge:                15 * time.Minute,\n\t\tAirlineClassification: cl,\n\t})\n\tif err != nil {\n\t\tlog.Error(c, \"failed to find flights within bounding box\", zap.Error(err))\n\t\t_ = c.Error(err)\n\t\treturn\n\t}\n\n\tres := make([]*liveFlightWithin, 0, len(flights))\n\tfor _, ap := range flights {\n\t\tres = append(res, liveFlightWithinFromDomain(ap))\n\t}\n\n\tc.PureJSON(http.StatusOK, xhttp.NewResponse(\n\t\tres,\n\t\t\"ok\",\n\t\t\"Here are the flights within the bounding box.\",\n\t))\n}\n", "n_tokens": 334, "primary_symbol": "within", "primary_kind": "method", "primary_span": [51, 99], "def_symbols": [], "symbols": ["within", "func", "Handler", "gin", "Context", "var", "req", "withinRequest", "err", "ShouldBindQuery", "nil", "log", "Error", "failed", "bind", "request", "query", "zap", "errRequestBindingFailed", "return", "GetWithinBoundingBox", "extract", "bounding", "box", "errInvalidWithinBoundingBox", "parseClassifiction", "AirlineClassification", "parse", "classification", "String", "errInvalidClassification", "flights", "svc", "FilterLiveFlights", "core", "FlightsWithin", "BoundingBox", "MaxAge", "time", "Minute", "find", "res", "make", "liveFlightWithin", "len", "for", "range", "append", "liveFlightWithinFromDomain", "PureJSON", "http", "StatusOK", "xhttp", "NewResponse", "Here", "are", "the"], "doc_head": "func (h *Handler) within(c *gin.Context) {\n\tvar req withinRequest\n\tif err := c.ShouldBindQuery(&req); err != nil {\n\t\tlog.Error(c, \"failed to bind request query\", zap.Error(err))\n\t\t_ = c.Error(errRequestBindingFailed)\n\t\treturn\n\t}\n\tbb, err := req.GetWithinBoundingBox()\n\tif err != nil {\n\t\tlog.Error(c, \"failed to extract bounding box\", zap.Error(err))\n\t\t_ = c.Error(errInvalidWithinBoundingBox)\n\t\treturn\n\t}\n\tcl, err := parseClassifiction(req.AirlineClassification)\n\tif err != nil {\n\t\tlog.Error(c, \"failed to parse classification\",\n\t\t\tzap.String(\"classification\", req.AirlineClassification),\n\t\t\tzap.Error(err),\n\t\t)\n\t\t_ = c.Error(errInvalidClassification)\n\t\treturn\n\t}\n\tflights, err := h.svc.FilterLiveFlights(c, &core.FlightsWithin{\n\t\tBoundingBox:           bb,\n\t\tMaxAge:                15 * time.Minute,\n\t\tAirlineClassification: cl,\n\t})\n\tif err != nil {\n\t\tlog.Error(c, \"failed to find flights within bounding box\", zap.Error(err))\n\t\t_ = c.Error(err)\n\t\treturn\n\t}\n\tres := make([]*liveFlightWithin, 0, len(flights))\n\tfor _, ap := range flights {\n\t\tres = append(res, liveFlightWithinFromDomain(ap))\n\t}\n\tc.PureJSON(http.StatusOK, xhttp.NewResponse(\n\t\tres,\n\t\t\"ok\",", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Handler).within/complete", "package": "v0", "node_kind": "method", "receiver": "h *Handler", "function_name": "", "method_name": "within", "type_name": "Handler", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["within"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Handler).within/complete"], "all_roles": ["complete"], "all_receivers": ["h *Handler"], "all_type_names": ["Handler"], "all_type_kinds": [null], "all_start_bytes": [1394], "all_end_bytes": [2612], "primary_index": 0, "all_receivers_normalized": ["(*Handler)"], "imports_used_minimal": ["github.com/gin-gonic/gin", "go.impalastudios.com/aviation/liveflights/internal/core", "go.impalastudios.com/aviation/liveflights/pkg/xhttp", "go.impalastudios.com/log", "go.uber.org/zap", "net/http", "time"], "symbols_referenced_strict": ["AirlineClassification", "BoundingBox", "Context", "Error", "FilterLiveFlights", "FlightsWithin", "GetWithinBoundingBox", "Handler", "MaxAge", "Minute", "NewResponse", "PureJSON", "ShouldBindQuery", "StatusOK", "String", "c.Error", "c.PureJSON", "c.ShouldBindQuery", "core.FlightsWithin", "gin.Context", "h.svc", "http.StatusOK", "log.Error", "req.AirlineClassification", "req.GetWithinBoundingBox", "time.Minute", "xhttp.NewResponse", "zap.Error", "zap.String"], "header_context_minimal": "package v0\nimport (\n    \"github.com/gin-gonic/gin\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n)\n// receiver: h *Handler", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/within.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go", "rel_path": "internal/adapters/handlers/http/v0/within.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 100, "end_line": 122, "text": "func (r withinRequest) GetWithinBoundingBox() (*core.BoundingBox, error) {\n\tif string(r.BottomRight) == \"\" || string(r.TopLeft) == \"\" {\n\t\treturn nil, nil\n\t}\n\n\ttl, err := r.TopLeft.Parse()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tbr, err := r.BottomRight.Parse()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn &core.BoundingBox{\n\t\tTopLeft:     tl,\n\t\tBottomRight: br,\n\t}, nil\n}\n\nvar classificationRe = regexp.MustCompile(`^([1-5])([+-])?$`)\n", "n_tokens": 132, "primary_symbol": "GetWithinBoundingBox", "primary_kind": "method", "primary_span": [100, 122], "def_symbols": [], "symbols": ["GetWithinBoundingBox", "func", "withinRequest", "core", "BoundingBox", "error", "string", "BottomRight", "TopLeft", "return", "nil", "err", "Parse", "var", "classificationRe", "regexp", "MustCompile"], "doc_head": "func (r withinRequest) GetWithinBoundingBox() (*core.BoundingBox, error) {\n\tif string(r.BottomRight) == \"\" || string(r.TopLeft) == \"\" {\n\t\treturn nil, nil\n\t}\n\ttl, err := r.TopLeft.Parse()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tbr, err := r.BottomRight.Parse()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn &core.BoundingBox{\n\t\tTopLeft:     tl,\n\t\tBottomRight: br,\n\t}, nil\n}\nvar classificationRe = regexp.MustCompile(`^([1-5])([+-])?$`)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(withinRequest).GetWithinBoundingBox/complete", "package": "v0", "node_kind": "method", "receiver": "r withinRequest", "function_name": "", "method_name": "GetWithinBoundingBox", "type_name": "withinRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWithinBoundingBox"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(withinRequest).GetWithinBoundingBox/complete"], "all_roles": ["complete"], "all_receivers": ["r withinRequest"], "all_type_names": ["withinRequest"], "all_type_kinds": [null], "all_start_bytes": [2614], "all_end_bytes": [2988], "primary_index": 0, "all_receivers_normalized": ["(withinRequest)"], "imports_used_minimal": ["go.impalastudios.com/aviation/liveflights/internal/core", "regexp"], "symbols_referenced_strict": ["BottomRight", "BoundingBox", "GetWithinBoundingBox", "MustCompile", "Parse", "TopLeft", "core.BoundingBox", "r.BottomRight", "r.TopLeft", "regexp.MustCompile"], "header_context_minimal": "package v0\nimport (\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"regexp\"\n)\n// receiver: r withinRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/within.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go", "rel_path": "internal/adapters/handlers/http/v0/within.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 123, "end_line": 153, "text": "func parseClassifiction(c string) (*core.Classification, error) {\n\tc = strings.TrimSpace(c)\n\n\tif string(c) == \"\" {\n\t\treturn nil, nil\n\t}\n\n\tmatches := classificationRe.FindStringSubmatch(c)\n\n\tif len(matches) != 3 {\n\t\treturn nil, errors.New(\"wrong classification format\")\n\t}\n\n\tvar comparator core.ClassificationComparator\n\tswitch matches[2] {\n\tcase \"+\":\n\t\tcomparator = core.ClassificationGreaterComparator\n\tcase \"-\":\n\t\tcomparator = core.ClassificationLesserComparator\n\tdefault:\n\t\tcomparator = core.ClassificationEqualComparator\n\t}\n\n\tvalue, _ := strconv.Atoi(matches[1])\n\n\treturn &core.Classification{\n\t\tC:          int8(value),\n\t\tComparator: comparator,\n\t}, nil\n}\n", "n_tokens": 158, "primary_symbol": "parseClassifiction", "primary_kind": "function", "primary_span": [123, 153], "def_symbols": [], "symbols": ["parseClassifiction", "func", "string", "core", "Classification", "error", "strings", "TrimSpace", "return", "nil", "matches", "classificationRe", "FindStringSubmatch", "len", "errors", "New", "wrong", "classification", "format", "var", "comparator", "ClassificationComparator", "switch", "case", "ClassificationGreaterComparator", "ClassificationLesserComparator", "default", "ClassificationEqualComparator", "value", "strconv", "Atoi", "int8", "Comparator"], "doc_head": "func parseClassifiction(c string) (*core.Classification, error) {\n\tc = strings.TrimSpace(c)\n\tif string(c) == \"\" {\n\t\treturn nil, nil\n\t}\n\tmatches := classificationRe.FindStringSubmatch(c)\n\tif len(matches) != 3 {\n\t\treturn nil, errors.New(\"wrong classification format\")\n\t}\n\tvar comparator core.ClassificationComparator\n\tswitch matches[2] {\n\tcase \"+\":\n\t\tcomparator = core.ClassificationGreaterComparator\n\tcase \"-\":\n\t\tcomparator = core.ClassificationLesserComparator\n\tdefault:\n\t\tcomparator = core.ClassificationEqualComparator\n\t}\n\tvalue, _ := strconv.Atoi(matches[1])\n\treturn &core.Classification{\n\t\tC:          int8(value),\n\t\tComparator: comparator,\n\t}, nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:parseClassifiction/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "parseClassifiction", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["parseClassifiction"], "all_kinds": ["function"], "all_ast_paths": ["go:function:parseClassifiction/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [3053], "all_end_bytes": [3713], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["github.com/pkg/errors", "go.impalastudios.com/aviation/liveflights/internal/core", "strconv", "strings"], "symbols_referenced_strict": ["Atoi", "Classification", "ClassificationComparator", "ClassificationEqualComparator", "ClassificationGreaterComparator", "ClassificationLesserComparator", "Comparator", "FindStringSubmatch", "New", "TrimSpace", "classificationRe.FindStringSubmatch", "core.Classification", "core.ClassificationComparator", "core.ClassificationEqualComparator", "core.ClassificationGreaterComparator", "core.ClassificationLesserComparator", "errors.New", "strconv.Atoi", "strings.TrimSpace"], "header_context_minimal": "package v0\nimport (\n    \"github.com/pkg/errors\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n    \"strconv\"\n    \"strings\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/within.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/errors.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go", "rel_path": "internal/adapters/handlers/http/v0/errors.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/errors.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go", "rel_path": "internal/adapters/handlers/http/v0/errors.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 20, "text": "import (\n\t\"errors\"\n\t\"net/http\"\n\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n)\n\nvar (\n\terrRequestBindingFailed     = errors.New(\"request binding failed\")\n\terrInvalidCoordinate        = errors.New(\"invalid coordinate\")\n\terrInvalidWithinBoundingBox = errors.New(\"invalid within bounding box\")\n\terrInvalidClassification    = errors.New(\"invalid classification\")\n\terrFlightNotFound           = errors.New(\"flight not found\")\n)\n", "n_tokens": 115, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 20], "def_symbols": [], "symbols": ["import", "errors", "net", "http", "github", "com", "gin", "gonic", "impalastudios", "aviation", "liveflights", "pkg", "xhttp", "log", "uber", "org", "zap", "var", "errRequestBindingFailed", "New", "request", "binding", "failed", "errInvalidCoordinate", "invalid", "coordinate", "errInvalidWithinBoundingBox", "within", "bounding", "box", "errInvalidClassification", "classification", "errFlightNotFound", "flight", "not", "found"], "doc_head": "import (\n\t\"errors\"\n\t\"net/http\"\n\t\"github.com/gin-gonic/gin\"\n\t\"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n)\nvar (\n\terrRequestBindingFailed     = errors.New(\"request binding failed\")\n\terrInvalidCoordinate        = errors.New(\"invalid coordinate\")\n\terrInvalidWithinBoundingBox = errors.New(\"invalid within bounding box\")\n\terrInvalidClassification    = errors.New(\"invalid classification\")\n\terrFlightNotFound           = errors.New(\"flight not found\")\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["errors"], "symbols_referenced_strict": ["New", "errors.New"], "header_context_minimal": "package v0\nimport \"errors\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/errors.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go", "rel_path": "internal/adapters/handlers/http/v0/errors.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 21, "end_line": 64, "text": "func (h *Handler) handleErrors(c *gin.Context) {\n\tc.Next()\n\n\tif len(c.Errors) == 0 {\n\t\treturn\n\t}\n\n\terr := c.Errors[0]\n\n\tif errors.Is(err, errInvalidCoordinate) {\n\t\tc.PureJSON(http.StatusBadRequest, xhttp.NewErrorResponse(\n\t\t\t\"invalid_parameters\",\n\t\t\t`Coordinate must be provided as <latitude>,<longitude>.`),\n\t\t)\n\t} else if errors.Is(err, errInvalidWithinBoundingBox) {\n\t\tc.PureJSON(http.StatusBadRequest, xhttp.NewErrorResponse(\n\t\t\t\"invalid_parameters\",\n\t\t\t\"The bounding box is invalid. A valid bounding box is made by top-left and bottom-right corners.\"),\n\t\t)\n\t} else if errors.Is(err, errInvalidClassification) {\n\t\tc.PureJSON(http.StatusBadRequest, xhttp.NewErrorResponse(\n\t\t\t\"invalid_parameters\",\n\t\t\t`Classification value should match regex \"[1-5][+-]?\".`),\n\t\t)\n\t} else if errors.Is(err, errFlightNotFound) {\n\t\tc.JSON(http.StatusNotFound, xhttp.NewErrorResponse(\n\t\t\t\"not_found\",\n\t\t\t\"The requested flight was not found.\"),\n\t\t)\n\t} else if errors.Is(err, errRequestBindingFailed) {\n\t\tc.PureJSON(http.StatusBadRequest, xhttp.NewErrorResponse(\n\t\t\t\"invalid_parameters\",\n\t\t\t\"The provided parameters are invalid.\"),\n\t\t)\n\t} else {\n\t\tc.PureJSON(http.StatusInternalServerError, xhttp.NewErrorResponse(\n\t\t\t\"internal_error\",\n\t\t\t\"Something went wrong, please try again later.\"),\n\t\t)\n\t}\n\n\tlog.Error(c, \"http request failed with an error\", zap.Error(err), zap.String(\"path\", c.FullPath()))\n}\n", "n_tokens": 342, "primary_symbol": "handleErrors", "primary_kind": "method", "primary_span": [21, 64], "def_symbols": [], "symbols": ["handleErrors", "func", "Handler", "gin", "Context", "Next", "len", "Errors", "return", "err", "errors", "errInvalidCoordinate", "PureJSON", "http", "StatusBadRequest", "xhttp", "NewErrorResponse", "invalid_parameters", "Coordinate", "must", "provided", "latitude", "longitude", "else", "errInvalidWithinBoundingBox", "The", "bounding", "box", "invalid", "valid", "made", "top", "left", "and", "bottom", "right", "corners", "errInvalidClassification", "Classification", "value", "should", "match", "regex", "errFlightNotFound", "JSON", "StatusNotFound", "not_found", "requested", "flight", "was", "not", "found", "errRequestBindingFailed", "parameters", "are", "StatusInternalServerError", "internal_error", "Something", "went", "wrong", "please", "try", "again", "later", "log", "Error", "request", "failed", "with", "error", "zap", "String", "path", "FullPath"], "doc_head": "func (h *Handler) handleErrors(c *gin.Context) {\n\tc.Next()\n\tif len(c.Errors) == 0 {\n\t\treturn\n\t}\n\terr := c.Errors[0]\n\tif errors.Is(err, errInvalidCoordinate) {\n\t\tc.PureJSON(http.StatusBadRequest, xhttp.NewErrorResponse(\n\t\t\t\"invalid_parameters\",\n\t\t\t`Coordinate must be provided as <latitude>,<longitude>.`),\n\t\t)\n\t} else if errors.Is(err, errInvalidWithinBoundingBox) {\n\t\tc.PureJSON(http.StatusBadRequest, xhttp.NewErrorResponse(\n\t\t\t\"invalid_parameters\",\n\t\t\t\"The bounding box is invalid. A valid bounding box is made by top-left and bottom-right corners.\"),\n\t\t)\n\t} else if errors.Is(err, errInvalidClassification) {\n\t\tc.PureJSON(http.StatusBadRequest, xhttp.NewErrorResponse(\n\t\t\t\"invalid_parameters\",\n\t\t\t`Classification value should match regex \"[1-5][+-]?\".`),\n\t\t)\n\t} else if errors.Is(err, errFlightNotFound) {\n\t\tc.JSON(http.StatusNotFound, xhttp.NewErrorResponse(\n\t\t\t\"not_found\",\n\t\t\t\"The requested flight was not found.\"),\n\t\t)\n\t} else if errors.Is(err, errRequestBindingFailed) {\n\t\tc.PureJSON(http.StatusBadRequest, xhttp.NewErrorResponse(\n\t\t\t\"invalid_parameters\",\n\t\t\t\"The provided parameters are invalid.\"),\n\t\t)\n\t} else {\n\t\tc.PureJSON(http.StatusInternalServerError, xhttp.NewErrorResponse(", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Handler).handleErrors/complete", "package": "v0", "node_kind": "method", "receiver": "h *Handler", "function_name": "", "method_name": "handleErrors", "type_name": "Handler", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["handleErrors"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Handler).handleErrors/complete"], "all_roles": ["complete"], "all_receivers": ["h *Handler"], "all_type_names": ["Handler"], "all_type_kinds": [null], "all_start_bytes": [521], "all_end_bytes": [1900], "primary_index": 0, "all_receivers_normalized": ["(*Handler)"], "imports_used_minimal": ["errors", "github.com/gin-gonic/gin", "go.impalastudios.com/aviation/liveflights/pkg/xhttp", "go.impalastudios.com/log", "go.uber.org/zap", "net/http"], "symbols_referenced_strict": ["Context", "Error", "Errors", "FullPath", "Handler", "NewErrorResponse", "Next", "PureJSON", "StatusBadRequest", "StatusInternalServerError", "StatusNotFound", "String", "c.Errors", "c.FullPath", "c.JSON", "c.Next", "c.PureJSON", "errors.Is", "gin.Context", "http.StatusBadRequest", "http.StatusInternalServerError", "http.StatusNotFound", "log.Error", "xhttp.NewErrorResponse", "zap.Error", "zap.String"], "header_context_minimal": "package v0\nimport (\n    \"errors\"\n    \"github.com/gin-gonic/gin\"\n    \"go.impalastudios.com/aviation/liveflights/pkg/xhttp\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n)\n// receiver: h *Handler", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/errors.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 8, "text": "// Code generated by MockGen. DO NOT EDIT.\n// Source: handler.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=handler.go -destination=mocks/handler.go -package=mocks\n//\n", "n_tokens": 48, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 8], "def_symbols": [], "symbols": ["Code", "generated", "MockGen", "NOT", "EDIT", "Source", "handler", "Generated", "this", "command", "mockgen", "source", "destination", "mocks", "package"], "doc_head": "// Code generated by MockGen. DO NOT EDIT.\n// Source: handler.go\n//\n// Generated by this command:\n//\n//\tmockgen -source=handler.go -destination=mocks/handler.go -package=mocks\n//", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 9, "end_line": 11, "text": "// Package mocks is a generated GoMock package.\npackage mocks\n", "n_tokens": 13, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 11], "def_symbols": [], "symbols": ["Package", "mocks", "generated", "GoMock", "package"], "doc_head": "// Package mocks is a generated GoMock package.\npackage mocks", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 19, "text": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)\n", "n_tokens": 42, "primary_symbol": "", "primary_kind": "header", "primary_span": [12, 19], "def_symbols": [], "symbols": ["import", "context", "reflect", "core", "impalastudios", "com", "aviation", "liveflights", "internal", "gomock", "uber", "org", "mock"], "doc_head": "import (\n\tcontext \"context\"\n\treflect \"reflect\"\n\tcore \"go.impalastudios.com/aviation/liveflights/internal/core\"\n\tgomock \"go.uber.org/mock/gomock\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "mocks", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 20, "end_line": 26, "text": "// Mocksvc is a mock of svc interface.\ntype Mocksvc struct {\n\tctrl     *gomock.Controller\n\trecorder *MocksvcMockRecorder\n\tisgomock struct{}\n}\n", "n_tokens": 36, "primary_symbol": "Mocksvc", "primary_kind": "type", "primary_span": [20, 26], "def_symbols": [], "symbols": ["Mocksvc", "mock", "svc", "interface", "type", "struct", "ctrl", "gomock", "Controller", "recorder", "MocksvcMockRecorder", "isgomock"], "doc_head": "// Mocksvc is a mock of svc interface.\ntype Mocksvc struct {\n\tctrl     *gomock.Controller\n\trecorder *MocksvcMockRecorder\n\tisgomock struct{}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Mocksvc (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Mocksvc", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Mocksvc"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Mocksvc (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Mocksvc"], "all_type_kinds": ["struct"], "all_start_bytes": [436], "all_end_bytes": [533], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "Mocksvc", "MocksvcMockRecorder", "gomock.Controller"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 27, "end_line": 31, "text": "// MocksvcMockRecorder is the mock recorder for Mocksvc.\ntype MocksvcMockRecorder struct {\n\tmock *Mocksvc\n}\n", "n_tokens": 26, "primary_symbol": "MocksvcMockRecorder", "primary_kind": "type", "primary_span": [27, 31], "def_symbols": [], "symbols": ["MocksvcMockRecorder", "the", "mock", "recorder", "for", "Mocksvc", "type", "struct"], "doc_head": "// MocksvcMockRecorder is the mock recorder for Mocksvc.\ntype MocksvcMockRecorder struct {\n\tmock *Mocksvc\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:MocksvcMockRecorder (struct)", "package": "mocks", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "MocksvcMockRecorder", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["MocksvcMockRecorder"], "all_kinds": ["type"], "all_ast_paths": ["go:type:MocksvcMockRecorder (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["MocksvcMockRecorder"], "all_type_kinds": ["struct"], "all_start_bytes": [597], "all_end_bytes": [642], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Mocksvc", "MocksvcMockRecorder"], "header_context_minimal": "package mocks", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 32, "end_line": 38, "text": "// NewMocksvc creates a new mock instance.\nfunc NewMocksvc(ctrl *gomock.Controller) *Mocksvc {\n\tmock := &Mocksvc{ctrl: ctrl}\n\tmock.recorder = &MocksvcMockRecorder{mock}\n\treturn mock\n}\n", "n_tokens": 50, "primary_symbol": "NewMocksvc", "primary_kind": "function", "primary_span": [33, 38], "def_symbols": [], "symbols": ["NewMocksvc", "creates", "new", "mock", "instance", "func", "ctrl", "gomock", "Controller", "Mocksvc", "recorder", "MocksvcMockRecorder", "return"], "doc_head": "// NewMocksvc creates a new mock instance.\nfunc NewMocksvc(ctrl *gomock.Controller) *Mocksvc {\n\tmock := &Mocksvc{ctrl: ctrl}\n\tmock.recorder = &MocksvcMockRecorder{mock}\n\treturn mock\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewMocksvc/complete", "package": "mocks", "node_kind": "function", "receiver": "", "function_name": "NewMocksvc", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewMocksvc"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewMocksvc/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [687], "all_end_bytes": [827], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.uber.org/mock/gomock"], "symbols_referenced_strict": ["Controller", "Mocksvc", "MocksvcMockRecorder", "NewMocksvc", "gomock.Controller", "mock.recorder"], "header_context_minimal": "package mocks\nimport \"go.uber.org/mock/gomock\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 39, "end_line": 43, "text": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *Mocksvc) EXPECT() *MocksvcMockRecorder {\n\treturn m.recorder\n}\n", "n_tokens": 35, "primary_symbol": "EXPECT", "primary_kind": "method", "primary_span": [40, 43], "def_symbols": [], "symbols": ["EXPECT", "returns", "object", "that", "allows", "the", "caller", "indicate", "expected", "use", "func", "Mocksvc", "MocksvcMockRecorder", "return", "recorder"], "doc_head": "// EXPECT returns an object that allows the caller to indicate expected use.\nfunc (m *Mocksvc) EXPECT() *MocksvcMockRecorder {\n\treturn m.recorder\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Mocksvc).EXPECT/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mocksvc", "function_name": "", "method_name": "EXPECT", "type_name": "Mocksvc", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EXPECT"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mocksvc).EXPECT/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mocksvc"], "all_type_names": ["Mocksvc"], "all_type_kinds": [null], "all_start_bytes": [906], "all_end_bytes": [976], "primary_index": 0, "all_receivers_normalized": ["(*Mocksvc)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Mocksvc", "MocksvcMockRecorder", "m.recorder"], "header_context_minimal": "package mocks\n// receiver: m *Mocksvc", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 44, "end_line": 52, "text": "// FilterLiveFlights mocks base method.\nfunc (m *Mocksvc) FilterLiveFlights(arg0 context.Context, arg1 *core.FlightsWithin) ([]*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"FilterLiveFlights\", arg0, arg1)\n\tret0, _ := ret[0].([]*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 100, "primary_symbol": "FilterLiveFlights", "primary_kind": "method", "primary_span": [45, 52], "def_symbols": [], "symbols": ["FilterLiveFlights", "mocks", "base", "method", "func", "Mocksvc", "arg0", "context", "Context", "arg1", "core", "FlightsWithin", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// FilterLiveFlights mocks base method.\nfunc (m *Mocksvc) FilterLiveFlights(arg0 context.Context, arg1 *core.FlightsWithin) ([]*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"FilterLiveFlights\", arg0, arg1)\n\tret0, _ := ret[0].([]*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Mocksvc).FilterLiveFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mocksvc", "function_name": "", "method_name": "FilterLiveFlights", "type_name": "Mocksvc", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["FilterLiveFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mocksvc).FilterLiveFlights/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mocksvc"], "all_type_names": ["Mocksvc"], "all_type_kinds": [null], "all_start_bytes": [1018], "all_end_bytes": [1294], "primary_index": 0, "all_receivers_normalized": ["(*Mocksvc)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "FilterLiveFlights", "FlightsWithin", "Helper", "LiveFlight", "Mocksvc", "T.Helper", "context.Context", "core.FlightsWithin", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *Mocksvc", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 53, "end_line": 58, "text": "// FilterLiveFlights indicates an expected call of FilterLiveFlights.\nfunc (mr *MocksvcMockRecorder) FilterLiveFlights(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"FilterLiveFlights\", reflect.TypeOf((*Mocksvc)(nil).FilterLiveFlights), arg0, arg1)\n}\n", "n_tokens": 86, "primary_symbol": "FilterLiveFlights", "primary_kind": "method", "primary_span": [54, 58], "def_symbols": [], "symbols": ["FilterLiveFlights", "indicates", "expected", "call", "func", "MocksvcMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mocksvc", "nil"], "doc_head": "// FilterLiveFlights indicates an expected call of FilterLiveFlights.\nfunc (mr *MocksvcMockRecorder) FilterLiveFlights(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"FilterLiveFlights\", reflect.TypeOf((*Mocksvc)(nil).FilterLiveFlights), arg0, arg1)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*MocksvcMockRecorder).FilterLiveFlights/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MocksvcMockRecorder", "function_name": "", "method_name": "FilterLiveFlights", "type_name": "MocksvcMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["FilterLiveFlights"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MocksvcMockRecorder).FilterLiveFlights/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MocksvcMockRecorder"], "all_type_names": ["MocksvcMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [1366], "all_end_bytes": [1611], "primary_index": 0, "all_receivers_normalized": ["(*MocksvcMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "FilterLiveFlights", "Helper", "Mocksvc", "MocksvcMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MocksvcMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 59, "end_line": 67, "text": "// GetLiveFlightDetailsByFlightID mocks base method.\nfunc (m *Mocksvc) GetLiveFlightDetailsByFlightID(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetLiveFlightDetailsByFlightID\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 104, "primary_symbol": "GetLiveFlightDetailsByFlightID", "primary_kind": "method", "primary_span": [60, 67], "def_symbols": [], "symbols": ["GetLiveFlightDetailsByFlightID", "mocks", "base", "method", "func", "Mocksvc", "arg0", "context", "Context", "arg1", "string", "core", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetLiveFlightDetailsByFlightID mocks base method.\nfunc (m *Mocksvc) GetLiveFlightDetailsByFlightID(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetLiveFlightDetailsByFlightID\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Mocksvc).GetLiveFlightDetailsByFlightID/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mocksvc", "function_name": "", "method_name": "GetLiveFlightDetailsByFlightID", "type_name": "Mocksvc", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLiveFlightDetailsByFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mocksvc).GetLiveFlightDetailsByFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mocksvc"], "all_type_names": ["Mocksvc"], "all_type_kinds": [null], "all_start_bytes": [1666], "all_end_bytes": [1951], "primary_index": 0, "all_receivers_normalized": ["(*Mocksvc)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "GetLiveFlightDetailsByFlightID", "Helper", "LiveFlight", "Mocksvc", "T.Helper", "context.Context", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *Mocksvc", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 68, "end_line": 73, "text": "// GetLiveFlightDetailsByFlightID indicates an expected call of GetLiveFlightDetailsByFlightID.\nfunc (mr *MocksvcMockRecorder) GetLiveFlightDetailsByFlightID(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetLiveFlightDetailsByFlightID\", reflect.TypeOf((*Mocksvc)(nil).GetLiveFlightDetailsByFlightID), arg0, arg1)\n}\n", "n_tokens": 101, "primary_symbol": "GetLiveFlightDetailsByFlightID", "primary_kind": "method", "primary_span": [69, 73], "def_symbols": [], "symbols": ["GetLiveFlightDetailsByFlightID", "indicates", "expected", "call", "func", "MocksvcMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mocksvc", "nil"], "doc_head": "// GetLiveFlightDetailsByFlightID indicates an expected call of GetLiveFlightDetailsByFlightID.\nfunc (mr *MocksvcMockRecorder) GetLiveFlightDetailsByFlightID(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetLiveFlightDetailsByFlightID\", reflect.TypeOf((*Mocksvc)(nil).GetLiveFlightDetailsByFlightID), arg0, arg1)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*MocksvcMockRecorder).GetLiveFlightDetailsByFlightID/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MocksvcMockRecorder", "function_name": "", "method_name": "GetLiveFlightDetailsByFlightID", "type_name": "MocksvcMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLiveFlightDetailsByFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MocksvcMockRecorder).GetLiveFlightDetailsByFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MocksvcMockRecorder"], "all_type_names": ["MocksvcMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [2049], "all_end_bytes": [2333], "primary_index": 0, "all_receivers_normalized": ["(*MocksvcMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetLiveFlightDetailsByFlightID", "Helper", "Mocksvc", "MocksvcMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MocksvcMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 74, "end_line": 82, "text": "// GetLiveFlightDetailsByLiveFlightID mocks base method.\nfunc (m *Mocksvc) GetLiveFlightDetailsByLiveFlightID(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetLiveFlightDetailsByLiveFlightID\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}\n", "n_tokens": 107, "primary_symbol": "GetLiveFlightDetailsByLiveFlightID", "primary_kind": "method", "primary_span": [75, 82], "def_symbols": [], "symbols": ["GetLiveFlightDetailsByLiveFlightID", "mocks", "base", "method", "func", "Mocksvc", "arg0", "context", "Context", "arg1", "string", "core", "LiveFlight", "error", "ctrl", "Helper", "ret", "Call", "ret0", "ret1", "return"], "doc_head": "// GetLiveFlightDetailsByLiveFlightID mocks base method.\nfunc (m *Mocksvc) GetLiveFlightDetailsByLiveFlightID(arg0 context.Context, arg1 string) (*core.LiveFlight, error) {\n\tm.ctrl.T.Helper()\n\tret := m.ctrl.Call(m, \"GetLiveFlightDetailsByLiveFlightID\", arg0, arg1)\n\tret0, _ := ret[0].(*core.LiveFlight)\n\tret1, _ := ret[1].(error)\n\treturn ret0, ret1\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Mocksvc).GetLiveFlightDetailsByLiveFlightID/complete", "package": "mocks", "node_kind": "method", "receiver": "m *Mocksvc", "function_name": "", "method_name": "GetLiveFlightDetailsByLiveFlightID", "type_name": "Mocksvc", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLiveFlightDetailsByLiveFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Mocksvc).GetLiveFlightDetailsByLiveFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["m *Mocksvc"], "all_type_names": ["Mocksvc"], "all_type_kinds": [null], "all_start_bytes": [2392], "all_end_bytes": [2685], "primary_index": 0, "all_receivers_normalized": ["(*Mocksvc)"], "imports_used_minimal": ["context", "go.impalastudios.com/aviation/liveflights/internal/core"], "symbols_referenced_strict": ["Call", "Context", "GetLiveFlightDetailsByLiveFlightID", "Helper", "LiveFlight", "Mocksvc", "T.Helper", "context.Context", "core.LiveFlight", "m.ctrl"], "header_context_minimal": "package mocks\nimport (\n    \"context\"\n    \"go.impalastudios.com/aviation/liveflights/internal/core\"\n)\n// receiver: m *Mocksvc", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "internal/adapters/handlers/http/v0/mocks/handler.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go", "rel_path": "internal/adapters/handlers/http/v0/mocks/handler.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 83, "end_line": 88, "text": "// GetLiveFlightDetailsByLiveFlightID indicates an expected call of GetLiveFlightDetailsByLiveFlightID.\nfunc (mr *MocksvcMockRecorder) GetLiveFlightDetailsByLiveFlightID(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetLiveFlightDetailsByLiveFlightID\", reflect.TypeOf((*Mocksvc)(nil).GetLiveFlightDetailsByLiveFlightID), arg0, arg1)\n}\n", "n_tokens": 106, "primary_symbol": "GetLiveFlightDetailsByLiveFlightID", "primary_kind": "method", "primary_span": [84, 88], "def_symbols": [], "symbols": ["GetLiveFlightDetailsByLiveFlightID", "indicates", "expected", "call", "func", "MocksvcMockRecorder", "arg0", "arg1", "any", "gomock", "Call", "mock", "ctrl", "Helper", "return", "RecordCallWithMethodType", "reflect", "TypeOf", "Mocksvc", "nil"], "doc_head": "// GetLiveFlightDetailsByLiveFlightID indicates an expected call of GetLiveFlightDetailsByLiveFlightID.\nfunc (mr *MocksvcMockRecorder) GetLiveFlightDetailsByLiveFlightID(arg0, arg1 any) *gomock.Call {\n\tmr.mock.ctrl.T.Helper()\n\treturn mr.mock.ctrl.RecordCallWithMethodType(mr.mock, \"GetLiveFlightDetailsByLiveFlightID\", reflect.TypeOf((*Mocksvc)(nil).GetLiveFlightDetailsByLiveFlightID), arg0, arg1)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*MocksvcMockRecorder).GetLiveFlightDetailsByLiveFlightID/complete", "package": "mocks", "node_kind": "method", "receiver": "mr *MocksvcMockRecorder", "function_name": "", "method_name": "GetLiveFlightDetailsByLiveFlightID", "type_name": "MocksvcMockRecorder", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLiveFlightDetailsByLiveFlightID"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*MocksvcMockRecorder).GetLiveFlightDetailsByLiveFlightID/complete"], "all_roles": ["complete"], "all_receivers": ["mr *MocksvcMockRecorder"], "all_type_names": ["MocksvcMockRecorder"], "all_type_kinds": [null], "all_start_bytes": [2791], "all_end_bytes": [3087], "primary_index": 0, "all_receivers_normalized": ["(*MocksvcMockRecorder)"], "imports_used_minimal": ["go.uber.org/mock/gomock", "reflect"], "symbols_referenced_strict": ["Call", "GetLiveFlightDetailsByLiveFlightID", "Helper", "Mocksvc", "MocksvcMockRecorder", "RecordCallWithMethodType", "TypeOf", "ctrl.RecordCallWithMethodType", "ctrl.T", "gomock.Call", "mr.mock", "reflect.TypeOf"], "header_context_minimal": "package mocks\nimport (\n    \"go.uber.org/mock/gomock\"\n    \"reflect\"\n)\n// receiver: mr *MocksvcMockRecorder", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/internal/adapters/handlers/http/v0/mocks/handler.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xmongodb/db.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go", "rel_path": "pkg/xmongodb/db.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package xmongodb\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "xmongodb"], "doc_head": "package xmongodb", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xmongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xmongodb", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xmongodb/db.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go", "rel_path": "pkg/xmongodb/db.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 11, "text": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"strings\"\n\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n)\n", "n_tokens": 33, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 11], "def_symbols": [], "symbols": ["import", "context", "fmt", "strings", "mongodb", "org", "mongo", "driver", "options"], "doc_head": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"strings\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n\t\"go.mongodb.org/mongo-driver/mongo/options\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xmongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xmongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xmongodb/db.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go", "rel_path": "pkg/xmongodb/db.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 12, "end_line": 17, "text": "type DB struct {\n\tcfg Config\n\n\t*mongo.Client\n}\n", "n_tokens": 13, "primary_symbol": "DB", "primary_kind": "type", "primary_span": [12, 17], "def_symbols": [], "symbols": ["type", "struct", "cfg", "Config", "mongo", "Client"], "doc_head": "type DB struct {\n\tcfg Config\n\t*mongo.Client\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:DB (struct)", "package": "xmongodb", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "DB", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["DB"], "all_kinds": ["type"], "all_ast_paths": ["go:type:DB (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["DB"], "all_type_kinds": ["struct"], "all_start_bytes": [147], "all_end_bytes": [188], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["go.mongodb.org/mongo-driver/mongo"], "symbols_referenced_strict": ["Client", "Config", "mongo.Client"], "header_context_minimal": "package xmongodb\nimport \"go.mongodb.org/mongo-driver/mongo\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xmongodb/db.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go", "rel_path": "pkg/xmongodb/db.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 18, "end_line": 30, "text": "// Connect connects to the MongoDB database. It returns a new DB instance.\nfunc Connect(ctx context.Context, cfg Config) (*DB, error) {\n\tclient, err := mongo.Connect(ctx, options.Client().ApplyURI(cfg.dns()))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn &DB{\n\t\tcfg:    cfg,\n\t\tClient: client,\n\t}, nil\n}\n", "n_tokens": 80, "primary_symbol": "Connect", "primary_kind": "function", "primary_span": [19, 30], "def_symbols": [], "symbols": ["Connect", "connects", "the", "MongoDB", "database", "returns", "new", "instance", "func", "ctx", "context", "Context", "cfg", "Config", "error", "client", "err", "mongo", "options", "Client", "ApplyURI", "dns", "nil", "return"], "doc_head": "// Connect connects to the MongoDB database. It returns a new DB instance.\nfunc Connect(ctx context.Context, cfg Config) (*DB, error) {\n\tclient, err := mongo.Connect(ctx, options.Client().ApplyURI(cfg.dns()))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn &DB{\n\t\tcfg:    cfg,\n\t\tClient: client,\n\t}, nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:Connect/complete", "package": "xmongodb", "node_kind": "function", "receiver": "", "function_name": "Connect", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Connect"], "all_kinds": ["function"], "all_ast_paths": ["go:function:Connect/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [265], "all_end_bytes": [493], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "go.mongodb.org/mongo-driver/mongo", "go.mongodb.org/mongo-driver/mongo/options"], "symbols_referenced_strict": ["ApplyURI", "Client", "Config", "Connect", "Context", "cfg.dns", "context.Context", "mongo.Connect", "options.Client"], "header_context_minimal": "package xmongodb\nimport (\n    \"context\"\n    \"go.mongodb.org/mongo-driver/mongo\"\n    \"go.mongodb.org/mongo-driver/mongo/options\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xmongodb/db.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go", "rel_path": "pkg/xmongodb/db.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 31, "end_line": 40, "text": "type Config struct {\n\tUser       string `mapstructure:\"user\"`\n\tPassword   string `mapstructure:\"password\"`\n\tHost       string `mapstructure:\"host\"`\n\tPort       int    `mapstructure:\"port\"`\n\tDB         string `mapstructure:\"name\"`\n\tReplicaSet string `mapstructure:\"replica-set\"`\n\tURI        string `mapstructure:\"uri\"`\n}\n", "n_tokens": 76, "primary_symbol": "Config", "primary_kind": "type", "primary_span": [31, 40], "def_symbols": [], "symbols": ["type", "Config", "struct", "User", "string", "mapstructure", "user", "Password", "password", "Host", "host", "Port", "int", "port", "name", "ReplicaSet", "replica", "set", "URI", "uri"], "doc_head": "type Config struct {\n\tUser       string `mapstructure:\"user\"`\n\tPassword   string `mapstructure:\"password\"`\n\tHost       string `mapstructure:\"host\"`\n\tPort       int    `mapstructure:\"port\"`\n\tDB         string `mapstructure:\"name\"`\n\tReplicaSet string `mapstructure:\"replica-set\"`\n\tURI        string `mapstructure:\"uri\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Config (struct)", "package": "xmongodb", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Config", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Config"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Config (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Config"], "all_type_kinds": ["struct"], "all_start_bytes": [500], "all_end_bytes": [814], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Config", "Host", "Password", "Port", "ReplicaSet", "User"], "header_context_minimal": "package xmongodb", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xmongodb/db.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go", "rel_path": "pkg/xmongodb/db.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 41, "end_line": 72, "text": "func (c *Config) dns() string {\n\tif c.URI != \"\" {\n\t\treturn c.URI\n\t}\n\n\tvar credentials string\n\n\tif c.User != \"\" && c.Password != \"\" {\n\t\tcredentials = fmt.Sprintf(\"%s:%s@\", c.User, c.Password)\n\t}\n\n\tquery := []string{\n\t\t\"authSource=admin\",\n\t}\n\tif c.ReplicaSet != \"\" {\n\t\tquery = append(query,\n\t\t\t\"replicaSet=\"+c.ReplicaSet,\n\t\t\t\"readPreference=secondaryPreferred\",\n\t\t\t\"retryWrites=false\",\n\t\t)\n\t}\n\n\treturn fmt.Sprintf(\n\t\t\"mongodb://%s%s:%d/%s?%s\",\n\t\tcredentials,\n\t\tc.Host,\n\t\tc.Port,\n\t\tc.DB,\n\t\tstrings.Join(query, \"&\"),\n\t)\n}\n", "n_tokens": 166, "primary_symbol": "dns", "primary_kind": "method", "primary_span": [41, 72], "def_symbols": [], "symbols": ["dns", "func", "Config", "string", "URI", "return", "var", "credentials", "User", "Password", "fmt", "Sprintf", "query", "authSource", "admin", "ReplicaSet", "append", "replicaSet", "readPreference", "secondaryPreferred", "retryWrites", "false", "mongodb", "Host", "Port", "strings", "Join"], "doc_head": "func (c *Config) dns() string {\n\tif c.URI != \"\" {\n\t\treturn c.URI\n\t}\n\tvar credentials string\n\tif c.User != \"\" && c.Password != \"\" {\n\t\tcredentials = fmt.Sprintf(\"%s:%s@\", c.User, c.Password)\n\t}\n\tquery := []string{\n\t\t\"authSource=admin\",\n\t}\n\tif c.ReplicaSet != \"\" {\n\t\tquery = append(query,\n\t\t\t\"replicaSet=\"+c.ReplicaSet,\n\t\t\t\"readPreference=secondaryPreferred\",\n\t\t\t\"retryWrites=false\",\n\t\t)\n\t}\n\treturn fmt.Sprintf(\n\t\t\"mongodb://%s%s:%d/%s?%s\",\n\t\tcredentials,\n\t\tc.Host,\n\t\tc.Port,\n\t\tc.DB,\n\t\tstrings.Join(query, \"&\"),\n\t)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*Config).dns/complete", "package": "xmongodb", "node_kind": "method", "receiver": "c *Config", "function_name": "", "method_name": "dns", "type_name": "Config", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["dns"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Config).dns/complete"], "all_roles": ["complete"], "all_receivers": ["c *Config"], "all_type_names": ["Config"], "all_type_kinds": [null], "all_start_bytes": [816], "all_end_bytes": [1333], "primary_index": 0, "all_receivers_normalized": ["(*Config)"], "imports_used_minimal": ["fmt"], "symbols_referenced_strict": ["Config", "Password", "ReplicaSet", "Sprintf", "User", "c.Password", "c.ReplicaSet", "c.URI", "c.User", "fmt.Sprintf"], "header_context_minimal": "package xmongodb\nimport \"fmt\"\n// receiver: c *Config", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/db.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xmongodb/migration.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go", "rel_path": "pkg/xmongodb/migration.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package xmongodb\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "xmongodb"], "doc_head": "package xmongodb", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xmongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xmongodb", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xmongodb/migration.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go", "rel_path": "pkg/xmongodb/migration.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 16, "text": "import (\n\t\"context\"\n\t\"embed\"\n\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/golang-migrate/migrate/v4\"\n\t\"github.com/golang-migrate/migrate/v4/database/mongodb\"\n\t\"github.com/golang-migrate/migrate/v4/source/iofs\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n)\n\n//go:embed migrations/*.json\nvar migrationsfs embed.FS\n", "n_tokens": 86, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 16], "def_symbols": [], "symbols": ["import", "context", "embed", "github", "com", "cockroachdb", "errors", "golang", "migrate", "database", "mongodb", "source", "iofs", "org", "mongo", "driver", "migrations", "json", "var", "migrationsfs"], "doc_head": "import (\n\t\"context\"\n\t\"embed\"\n\t\"github.com/cockroachdb/errors\"\n\t\"github.com/golang-migrate/migrate/v4\"\n\t\"github.com/golang-migrate/migrate/v4/database/mongodb\"\n\t\"github.com/golang-migrate/migrate/v4/source/iofs\"\n\t\"go.mongodb.org/mongo-driver/mongo\"\n)\n//go:embed migrations/*.json\nvar migrationsfs embed.FS", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xmongodb", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["embed"], "symbols_referenced_strict": ["embed.FS"], "header_context_minimal": "package xmongodb\nimport \"embed\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xmongodb/migration.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go", "rel_path": "pkg/xmongodb/migration.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 17, "end_line": 42, "text": "// Migrate runs the database migrations.\nfunc Migrate(ctx context.Context, dbName string, client *mongo.Client) error {\n\tsourceDriver, err := iofs.New(migrationsfs, \"migrations\")\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create migrations source driver\")\n\t}\n\n\tdbDriver, err := mongodb.WithInstance(client, &mongodb.Config{\n\t\tDatabaseName: dbName,\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create database driver\")\n\t}\n\n\tmigrator, err := migrate.NewWithInstance(\"iofs\", sourceDriver, dbName, dbDriver)\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create migrator\")\n\t}\n\n\tif err = migrator.Up(); err != nil && !errors.Is(err, migrate.ErrNoChange) {\n\t\treturn errors.Wrap(err, \"failed to migrate up\")\n\t}\n\n\treturn nil\n}\n", "n_tokens": 187, "primary_symbol": "Migrate", "primary_kind": "function", "primary_span": [18, 42], "def_symbols": [], "symbols": ["Migrate", "runs", "the", "database", "migrations", "func", "ctx", "context", "Context", "dbName", "string", "client", "mongo", "Client", "error", "sourceDriver", "err", "iofs", "New", "migrationsfs", "nil", "return", "errors", "Wrap", "failed", "create", "source", "driver", "dbDriver", "mongodb", "WithInstance", "Config", "DatabaseName", "migrator", "migrate", "NewWithInstance", "ErrNoChange"], "doc_head": "// Migrate runs the database migrations.\nfunc Migrate(ctx context.Context, dbName string, client *mongo.Client) error {\n\tsourceDriver, err := iofs.New(migrationsfs, \"migrations\")\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create migrations source driver\")\n\t}\n\tdbDriver, err := mongodb.WithInstance(client, &mongodb.Config{\n\t\tDatabaseName: dbName,\n\t})\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create database driver\")\n\t}\n\tmigrator, err := migrate.NewWithInstance(\"iofs\", sourceDriver, dbName, dbDriver)\n\tif err != nil {\n\t\treturn errors.Wrap(err, \"failed to create migrator\")\n\t}\n\tif err = migrator.Up(); err != nil && !errors.Is(err, migrate.ErrNoChange) {\n\t\treturn errors.Wrap(err, \"failed to migrate up\")\n\t}\n\treturn nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:Migrate/complete", "package": "xmongodb", "node_kind": "function", "receiver": "", "function_name": "Migrate", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Migrate"], "all_kinds": ["function"], "all_ast_paths": ["go:function:Migrate/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [367], "all_end_bytes": [1075], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "github.com/cockroachdb/errors", "github.com/golang-migrate/migrate/v4/database/mongodb", "github.com/golang-migrate/migrate/v4/source/iofs", "go.mongodb.org/mongo-driver/mongo"], "symbols_referenced_strict": ["Client", "Config", "Context", "DatabaseName", "ErrNoChange", "Migrate", "New", "NewWithInstance", "WithInstance", "Wrap", "context.Context", "errors.Is", "errors.Wrap", "iofs.New", "migrate.ErrNoChange", "migrate.NewWithInstance", "migrator.Up", "mongo.Client", "mongodb.Config", "mongodb.WithInstance"], "header_context_minimal": "package xmongodb\nimport (\n    \"context\"\n    \"github.com/cockroachdb/errors\"\n    \"github.com/golang-migrate/migrate/v4/database/mongodb\"\n    \"github.com/golang-migrate/migrate/v4/source/iofs\"\n    \"go.mongodb.org/mongo-driver/mongo\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xmongodb/migration.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/cache/redis.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go", "rel_path": "pkg/cache/redis.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package cache\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "cache"], "doc_head": "package cache", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/cache/redis.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go", "rel_path": "pkg/cache/redis.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 12, "text": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/go-redis/cache/v9\"\n\t\"github.com/redis/go-redis/v9\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"time\"\n)\n", "n_tokens": 50, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 12], "def_symbols": [], "symbols": ["import", "context", "fmt", "github", "com", "redis", "cache", "impalastudios", "log", "uber", "org", "zap", "time"], "doc_head": "import (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/go-redis/cache/v9\"\n\t\"github.com/redis/go-redis/v9\"\n\t\"go.impalastudios.com/log\"\n\t\"go.uber.org/zap\"\n\t\"time\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "cache", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package cache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/cache/redis.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go", "rel_path": "pkg/cache/redis.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 13, "end_line": 17, "text": "type Client struct {\n\t*cache.Cache\n\t*redis.Client\n}\n", "n_tokens": 15, "primary_symbol": "Client", "primary_kind": "type", "primary_span": [13, 17], "def_symbols": [], "symbols": ["type", "Client", "struct", "cache", "Cache", "redis"], "doc_head": "type Client struct {\n\t*cache.Cache\n\t*redis.Client\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Client (struct)", "package": "cache", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Client", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Client"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Client (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Client"], "all_type_kinds": ["struct"], "all_start_bytes": [169], "all_end_bytes": [215], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Cache", "Client", "cache.Cache", "redis.Client"], "header_context_minimal": "package cache", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/cache/redis.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go", "rel_path": "pkg/cache/redis.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 18, "end_line": 28, "text": "type Config struct {\n\tHost     string `mapstructure:\"host\"`\n\tPort     int    `mapstructure:\"port\"`\n\tUser     string `mapstructure:\"user\"`\n\tPassword string `mapstructure:\"password\"`\n\tDatabase int    `mapstructure:\"database\"`\n\tTTL      struct {\n\t\tDefault time.Duration `mapstructure:\"default\"`\n\t} `mapstructure:\"ttl\"`\n}\n", "n_tokens": 76, "primary_symbol": "Config", "primary_kind": "type", "primary_span": [18, 28], "def_symbols": [], "symbols": ["type", "Config", "struct", "Host", "string", "mapstructure", "host", "Port", "int", "port", "User", "user", "Password", "password", "Database", "database", "TTL", "Default", "time", "Duration", "default", "ttl"], "doc_head": "type Config struct {\n\tHost     string `mapstructure:\"host\"`\n\tPort     int    `mapstructure:\"port\"`\n\tUser     string `mapstructure:\"user\"`\n\tPassword string `mapstructure:\"password\"`\n\tDatabase int    `mapstructure:\"database\"`\n\tTTL      struct {\n\t\tDefault time.Duration `mapstructure:\"default\"`\n\t} `mapstructure:\"ttl\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Config (struct)", "package": "cache", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Config", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Config"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Config (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Config"], "all_type_kinds": ["struct"], "all_start_bytes": [222], "all_end_bytes": [534], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["time"], "symbols_referenced_strict": ["Config", "Database", "Default", "Duration", "Host", "Password", "Port", "User", "time.Duration"], "header_context_minimal": "package cache\nimport \"time\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/cache/redis.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go", "rel_path": "pkg/cache/redis.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 29, "end_line": 44, "text": "func Connect(ctx context.Context, cfg Config) *Client {\n\tclient := redis.NewClient(&redis.Options{\n\t\tAddr:     fmt.Sprintf(\"%s:%d\", cfg.Host, cfg.Port),\n\t\tUsername: cfg.User,\n\t\tPassword: cfg.Password,\n\t\tDB:       cfg.Database,\n\t})\n\n\tlog.Info(ctx, \"Connecting to redis\", zap.Error(client.Ping(ctx).Err()))\n\n\treturn &Client{\n\t\tcache.New(&cache.Options{Redis: client}),\n\t\tclient,\n\t}\n}\n", "n_tokens": 101, "primary_symbol": "Connect", "primary_kind": "function", "primary_span": [29, 44], "def_symbols": [], "symbols": ["Connect", "func", "ctx", "context", "Context", "cfg", "Config", "Client", "client", "redis", "NewClient", "Options", "Addr", "fmt", "Sprintf", "Host", "Port", "Username", "User", "Password", "Database", "log", "Info", "Connecting", "zap", "Error", "Ping", "Err", "return", "cache", "New", "Redis"], "doc_head": "func Connect(ctx context.Context, cfg Config) *Client {\n\tclient := redis.NewClient(&redis.Options{\n\t\tAddr:     fmt.Sprintf(\"%s:%d\", cfg.Host, cfg.Port),\n\t\tUsername: cfg.User,\n\t\tPassword: cfg.Password,\n\t\tDB:       cfg.Database,\n\t})\n\tlog.Info(ctx, \"Connecting to redis\", zap.Error(client.Ping(ctx).Err()))\n\treturn &Client{\n\t\tcache.New(&cache.Options{Redis: client}),\n\t\tclient,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:Connect/complete", "package": "cache", "node_kind": "function", "receiver": "", "function_name": "Connect", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Connect"], "all_kinds": ["function"], "all_ast_paths": ["go:function:Connect/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [536], "all_end_bytes": [917], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "fmt", "go.impalastudios.com/log", "go.uber.org/zap"], "symbols_referenced_strict": ["Addr", "Client", "Config", "Connect", "Context", "Database", "Err", "Error", "Host", "Info", "New", "NewClient", "Options", "Password", "Ping", "Port", "Redis", "Sprintf", "User", "Username", "cache.New", "cache.Options", "cfg.Database", "cfg.Host", "cfg.Password", "cfg.Port", "cfg.User", "client.Ping", "context.Context", "fmt.Sprintf", "log.Info", "redis.NewClient", "redis.Options", "zap.Error"], "header_context_minimal": "package cache\nimport (\n    \"context\"\n    \"fmt\"\n    \"go.impalastudios.com/log\"\n    \"go.uber.org/zap\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/cache/redis.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/pb.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/pb.go", "rel_path": "pkg/grpc/airlines/v0/pb.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 6, "text": "package v0\n\n// Generate gRPC client and server auto-generated code\n//go:generate protoc --proto_path=. --go_out=. --go_opt=Mairlines.proto=.;v0 airlines.proto\n//go:generate protoc --proto_path=. --go-grpc_out=. --go-grpc_opt=Mairlines.proto=.;v0 airlines.proto\n", "n_tokens": 75, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 6], "def_symbols": [], "symbols": ["package", "Generate", "gRPC", "client", "and", "server", "auto", "generated", "code", "generate", "protoc", "proto_path", "go_out", "go_opt", "Mairlines", "proto", "airlines", "grpc_out", "grpc_opt"], "doc_head": "package v0\n// Generate gRPC client and server auto-generated code\n//go:generate protoc --proto_path=. --go_out=. --go_opt=Mairlines.proto=.;v0 airlines.proto\n//go:generate protoc --proto_path=. --go-grpc_out=. --go-grpc_opt=Mairlines.proto=.;v0 airlines.proto", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 6, "text": "// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.36.6\n// \tprotoc        v3.21.12\n// source: airlines.proto\n", "n_tokens": 49, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 6], "def_symbols": [], "symbols": ["Code", "generated", "protoc", "gen", "NOT", "EDIT", "versions", "source", "airlines", "proto"], "doc_head": "// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.36.6\n// \tprotoc        v3.21.12\n// source: airlines.proto", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 7, "end_line": 8, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [7, 8], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 9, "end_line": 24, "text": "import (\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\ttimestamppb \"google.golang.org/protobuf/types/known/timestamppb\"\n\treflect \"reflect\"\n\tsync \"sync\"\n\tunsafe \"unsafe\"\n)\n\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)\n", "n_tokens": 130, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 24], "def_symbols": [], "symbols": ["import", "protoreflect", "google", "golang", "org", "protobuf", "reflect", "protoimpl", "runtime", "timestamppb", "types", "known", "sync", "unsafe", "const", "Verify", "that", "this", "generated", "code", "sufficiently", "date", "EnforceVersion", "MinVersion", "MaxVersion"], "doc_head": "import (\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\ttimestamppb \"google.golang.org/protobuf/types/known/timestamppb\"\n\treflect \"reflect\"\n\tsync \"sync\"\n\tunsafe \"unsafe\"\n)\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["EnforceVersion", "MaxVersion", "MinVersion", "protoimpl.EnforceVersion", "protoimpl.MaxVersion", "protoimpl.MinVersion"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 25, "end_line": 33, "text": "type SearchAirlinesRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 111, "primary_symbol": "SearchAirlinesRequest", "primary_kind": "type", "primary_span": [25, 33], "def_symbols": [], "symbols": ["type", "SearchAirlinesRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Limit", "uint32", "varint", "limit", "Cursor", "cursor", "oneof", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchAirlinesRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchAirlinesRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchAirlinesRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchAirlinesRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchAirlinesRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchAirlinesRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [659], "all_end_bytes": [1137], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Cursor", "Limit", "MessageState", "SearchAirlinesRequest", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 34, "end_line": 40, "text": "func (x *SearchAirlinesRequest) Reset() {\n\t*x = SearchAirlinesRequest{}\n\tmi := &file_airlines_proto_msgTypes[0]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [34, 40], "def_symbols": [], "symbols": ["Reset", "func", "SearchAirlinesRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchAirlinesRequest) Reset() {\n\t*x = SearchAirlinesRequest{}\n\tmi := &file_airlines_proto_msgTypes[0]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesRequest", "function_name": "", "method_name": "Reset", "type_name": "SearchAirlinesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesRequest"], "all_type_names": ["SearchAirlinesRequest"], "all_type_kinds": [null], "all_start_bytes": [1139], "all_end_bytes": [1333], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchAirlinesRequest", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchAirlinesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 41, "end_line": 44, "text": "func (x *SearchAirlinesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [41, 44], "def_symbols": [], "symbols": ["String", "func", "SearchAirlinesRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchAirlinesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesRequest", "function_name": "", "method_name": "String", "type_name": "SearchAirlinesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesRequest"], "all_type_names": ["SearchAirlinesRequest"], "all_type_kinds": [null], "all_start_bytes": [1335], "all_end_bytes": [1425], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchAirlinesRequest", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchAirlinesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 45, "end_line": 46, "text": "func (*SearchAirlinesRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [45, 46], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchAirlinesRequest"], "doc_head": "func (*SearchAirlinesRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchAirlinesRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchAirlinesRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1427], "all_end_bytes": [1474], "primary_index": 0, "all_receivers_normalized": ["*SearchAirlinesRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchAirlinesRequest"], "header_context_minimal": "package v0\n// receiver: *SearchAirlinesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 47, "end_line": 58, "text": "func (x *SearchAirlinesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[0]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [47, 58], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchAirlinesRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchAirlinesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[0]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchAirlinesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesRequest"], "all_type_names": ["SearchAirlinesRequest"], "all_type_kinds": [null], "all_start_bytes": [1476], "all_end_bytes": [1764], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchAirlinesRequest", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchAirlinesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 59, "end_line": 63, "text": "// Deprecated: Use SearchAirlinesRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchAirlinesRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{0}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [60, 63], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchAirlinesRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchAirlinesRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchAirlinesRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{0}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchAirlinesRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchAirlinesRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1840], "all_end_bytes": [1954], "primary_index": 0, "all_receivers_normalized": ["*SearchAirlinesRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchAirlinesRequest"], "header_context_minimal": "package v0\n// receiver: *SearchAirlinesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 64, "end_line": 70, "text": "func (x *SearchAirlinesRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}\n", "n_tokens": 29, "primary_symbol": "GetQ", "primary_kind": "method", "primary_span": [64, 70], "def_symbols": [], "symbols": ["GetQ", "func", "SearchAirlinesRequest", "string", "nil", "return"], "doc_head": "func (x *SearchAirlinesRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesRequest).GetQ/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesRequest", "function_name": "", "method_name": "GetQ", "type_name": "SearchAirlinesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetQ"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesRequest).GetQ/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesRequest"], "all_type_names": ["SearchAirlinesRequest"], "all_type_kinds": [null], "all_start_bytes": [1956], "all_end_bytes": [2047], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetQ", "SearchAirlinesRequest", "x.Q"], "header_context_minimal": "package v0\n// receiver: x *SearchAirlinesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 71, "end_line": 77, "text": "func (x *SearchAirlinesRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetLimit", "primary_kind": "method", "primary_span": [71, 77], "def_symbols": [], "symbols": ["GetLimit", "func", "SearchAirlinesRequest", "uint32", "nil", "return", "Limit"], "doc_head": "func (x *SearchAirlinesRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesRequest).GetLimit/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesRequest", "function_name": "", "method_name": "GetLimit", "type_name": "SearchAirlinesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLimit"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesRequest).GetLimit/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesRequest"], "all_type_names": ["SearchAirlinesRequest"], "all_type_kinds": [null], "all_start_bytes": [2049], "all_end_bytes": [2147], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetLimit", "Limit", "SearchAirlinesRequest", "x.Limit"], "header_context_minimal": "package v0\n// receiver: x *SearchAirlinesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 78, "end_line": 84, "text": "func (x *SearchAirlinesRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetCursor", "primary_kind": "method", "primary_span": [78, 84], "def_symbols": [], "symbols": ["GetCursor", "func", "SearchAirlinesRequest", "string", "nil", "Cursor", "return"], "doc_head": "func (x *SearchAirlinesRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesRequest).GetCursor/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesRequest", "function_name": "", "method_name": "GetCursor", "type_name": "SearchAirlinesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCursor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesRequest).GetCursor/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesRequest"], "all_type_names": ["SearchAirlinesRequest"], "all_type_kinds": [null], "all_start_bytes": [2149], "all_end_bytes": [2270], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Cursor", "GetCursor", "SearchAirlinesRequest", "x.Cursor"], "header_context_minimal": "package v0\n// receiver: x *SearchAirlinesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 85, "end_line": 94, "text": "type SearchAirlinesResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*SlimAirline         `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,2,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,3,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tTotalCount    uint32                 `protobuf:\"varint,4,opt,name=totalCount,proto3\" json:\"totalCount,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 143, "primary_symbol": "SearchAirlinesResponse", "primary_kind": "type", "primary_span": [85, 94], "def_symbols": [], "symbols": ["type", "SearchAirlinesResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Result", "SlimAirline", "protobuf", "bytes", "rep", "name", "result", "proto3", "json", "omitempty", "Next", "string", "opt", "next", "oneof", "Previous", "previous", "TotalCount", "uint32", "varint", "totalCount", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchAirlinesResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*SlimAirline         `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,2,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,3,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tTotalCount    uint32                 `protobuf:\"varint,4,opt,name=totalCount,proto3\" json:\"totalCount,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchAirlinesResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchAirlinesResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchAirlinesResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchAirlinesResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchAirlinesResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [2277], "all_end_bytes": [2888], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageState", "Next", "Previous", "Result", "SearchAirlinesResponse", "SizeCache", "SlimAirline", "TotalCount", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 95, "end_line": 101, "text": "func (x *SearchAirlinesResponse) Reset() {\n\t*x = SearchAirlinesResponse{}\n\tmi := &file_airlines_proto_msgTypes[1]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [95, 101], "def_symbols": [], "symbols": ["Reset", "func", "SearchAirlinesResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchAirlinesResponse) Reset() {\n\t*x = SearchAirlinesResponse{}\n\tmi := &file_airlines_proto_msgTypes[1]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesResponse", "function_name": "", "method_name": "Reset", "type_name": "SearchAirlinesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesResponse"], "all_type_names": ["SearchAirlinesResponse"], "all_type_kinds": [null], "all_start_bytes": [2890], "all_end_bytes": [3086], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchAirlinesResponse", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchAirlinesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 102, "end_line": 105, "text": "func (x *SearchAirlinesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [102, 105], "def_symbols": [], "symbols": ["String", "func", "SearchAirlinesResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchAirlinesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesResponse", "function_name": "", "method_name": "String", "type_name": "SearchAirlinesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesResponse"], "all_type_names": ["SearchAirlinesResponse"], "all_type_kinds": [null], "all_start_bytes": [3088], "all_end_bytes": [3179], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchAirlinesResponse", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchAirlinesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#14", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#16", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 16, "start_line": 106, "end_line": 107, "text": "func (*SearchAirlinesResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [106, 107], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchAirlinesResponse"], "doc_head": "func (*SearchAirlinesResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchAirlinesResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchAirlinesResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [3181], "all_end_bytes": [3229], "primary_index": 0, "all_receivers_normalized": ["*SearchAirlinesResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchAirlinesResponse"], "header_context_minimal": "package v0\n// receiver: *SearchAirlinesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#15", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#17"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#17", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 17, "start_line": 108, "end_line": 119, "text": "func (x *SearchAirlinesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[1]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [108, 119], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchAirlinesResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchAirlinesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[1]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchAirlinesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesResponse"], "all_type_names": ["SearchAirlinesResponse"], "all_type_kinds": [null], "all_start_bytes": [3231], "all_end_bytes": [3520], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchAirlinesResponse", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchAirlinesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#16", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#18"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#18", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 18, "start_line": 120, "end_line": 124, "text": "// Deprecated: Use SearchAirlinesResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchAirlinesResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{1}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [121, 124], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchAirlinesResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchAirlinesResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchAirlinesResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{1}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchAirlinesResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchAirlinesResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [3597], "all_end_bytes": [3712], "primary_index": 0, "all_receivers_normalized": ["*SearchAirlinesResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchAirlinesResponse"], "header_context_minimal": "package v0\n// receiver: *SearchAirlinesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#17", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#19"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#19", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 19, "start_line": 125, "end_line": 131, "text": "func (x *SearchAirlinesResponse) GetResult() []*SlimAirline {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}\n", "n_tokens": 33, "primary_symbol": "GetResult", "primary_kind": "method", "primary_span": [125, 131], "def_symbols": [], "symbols": ["GetResult", "func", "SearchAirlinesResponse", "SlimAirline", "nil", "return", "Result"], "doc_head": "func (x *SearchAirlinesResponse) GetResult() []*SlimAirline {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesResponse).GetResult/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesResponse", "function_name": "", "method_name": "GetResult", "type_name": "SearchAirlinesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetResult"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesResponse).GetResult/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesResponse"], "all_type_names": ["SearchAirlinesResponse"], "all_type_kinds": [null], "all_start_bytes": [3714], "all_end_bytes": [3825], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetResult", "Result", "SearchAirlinesResponse", "SlimAirline", "x.Result"], "header_context_minimal": "package v0\n// receiver: x *SearchAirlinesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#18", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#20"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#20", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 20, "start_line": 132, "end_line": 138, "text": "func (x *SearchAirlinesResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetNext", "primary_kind": "method", "primary_span": [132, 138], "def_symbols": [], "symbols": ["GetNext", "func", "SearchAirlinesResponse", "string", "nil", "Next", "return"], "doc_head": "func (x *SearchAirlinesResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesResponse).GetNext/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesResponse", "function_name": "", "method_name": "GetNext", "type_name": "SearchAirlinesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetNext"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesResponse).GetNext/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesResponse"], "all_type_names": ["SearchAirlinesResponse"], "all_type_kinds": [null], "all_start_bytes": [3827], "all_end_bytes": [3943], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetNext", "Next", "SearchAirlinesResponse", "x.Next"], "header_context_minimal": "package v0\n// receiver: x *SearchAirlinesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#19", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#21"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#21", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 21, "start_line": 139, "end_line": 145, "text": "func (x *SearchAirlinesResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetPrevious", "primary_kind": "method", "primary_span": [139, 145], "def_symbols": [], "symbols": ["GetPrevious", "func", "SearchAirlinesResponse", "string", "nil", "Previous", "return"], "doc_head": "func (x *SearchAirlinesResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesResponse).GetPrevious/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesResponse", "function_name": "", "method_name": "GetPrevious", "type_name": "SearchAirlinesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetPrevious"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesResponse).GetPrevious/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesResponse"], "all_type_names": ["SearchAirlinesResponse"], "all_type_kinds": [null], "all_start_bytes": [3945], "all_end_bytes": [4073], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetPrevious", "Previous", "SearchAirlinesResponse", "x.Previous"], "header_context_minimal": "package v0\n// receiver: x *SearchAirlinesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#20", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#22"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#22", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 22, "start_line": 146, "end_line": 152, "text": "func (x *SearchAirlinesResponse) GetTotalCount() uint32 {\n\tif x != nil {\n\t\treturn x.TotalCount\n\t}\n\treturn 0\n}\n", "n_tokens": 34, "primary_symbol": "GetTotalCount", "primary_kind": "method", "primary_span": [146, 152], "def_symbols": [], "symbols": ["GetTotalCount", "func", "SearchAirlinesResponse", "uint32", "nil", "return", "TotalCount"], "doc_head": "func (x *SearchAirlinesResponse) GetTotalCount() uint32 {\n\tif x != nil {\n\t\treturn x.TotalCount\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirlinesResponse).GetTotalCount/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirlinesResponse", "function_name": "", "method_name": "GetTotalCount", "type_name": "SearchAirlinesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTotalCount"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirlinesResponse).GetTotalCount/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirlinesResponse"], "all_type_names": ["SearchAirlinesResponse"], "all_type_kinds": [null], "all_start_bytes": [4075], "all_end_bytes": [4184], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirlinesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetTotalCount", "SearchAirlinesResponse", "TotalCount", "x.TotalCount"], "header_context_minimal": "package v0\n// receiver: x *SearchAirlinesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#21", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#23"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#23", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 23, "start_line": 153, "end_line": 159, "text": "type DeleteAirlineRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 59, "primary_symbol": "DeleteAirlineRequest", "primary_kind": "type", "primary_span": [153, 159], "def_symbols": [], "symbols": ["type", "DeleteAirlineRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type DeleteAirlineRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:DeleteAirlineRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "DeleteAirlineRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["DeleteAirlineRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:DeleteAirlineRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["DeleteAirlineRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [4191], "all_end_bytes": [4453], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["DeleteAirlineRequest", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#22", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#24"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#24", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 24, "start_line": 160, "end_line": 166, "text": "func (x *DeleteAirlineRequest) Reset() {\n\t*x = DeleteAirlineRequest{}\n\tmi := &file_airlines_proto_msgTypes[2]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [160, 166], "def_symbols": [], "symbols": ["Reset", "func", "DeleteAirlineRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *DeleteAirlineRequest) Reset() {\n\t*x = DeleteAirlineRequest{}\n\tmi := &file_airlines_proto_msgTypes[2]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*DeleteAirlineRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *DeleteAirlineRequest", "function_name": "", "method_name": "Reset", "type_name": "DeleteAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*DeleteAirlineRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *DeleteAirlineRequest"], "all_type_names": ["DeleteAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [4455], "all_end_bytes": [4647], "primary_index": 0, "all_receivers_normalized": ["(*DeleteAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["DeleteAirlineRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *DeleteAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#23", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#25"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#25", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 25, "start_line": 167, "end_line": 170, "text": "func (x *DeleteAirlineRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [167, 170], "def_symbols": [], "symbols": ["String", "func", "DeleteAirlineRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *DeleteAirlineRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*DeleteAirlineRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *DeleteAirlineRequest", "function_name": "", "method_name": "String", "type_name": "DeleteAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*DeleteAirlineRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *DeleteAirlineRequest"], "all_type_names": ["DeleteAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [4649], "all_end_bytes": [4738], "primary_index": 0, "all_receivers_normalized": ["(*DeleteAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["DeleteAirlineRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *DeleteAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#24", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#26"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#26", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 26, "start_line": 171, "end_line": 172, "text": "func (*DeleteAirlineRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [171, 172], "def_symbols": [], "symbols": ["ProtoMessage", "func", "DeleteAirlineRequest"], "doc_head": "func (*DeleteAirlineRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*DeleteAirlineRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*DeleteAirlineRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [4740], "all_end_bytes": [4786], "primary_index": 0, "all_receivers_normalized": ["*DeleteAirlineRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["DeleteAirlineRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *DeleteAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#25", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#27"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#27", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 27, "start_line": 173, "end_line": 184, "text": "func (x *DeleteAirlineRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[2]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [173, 184], "def_symbols": [], "symbols": ["ProtoReflect", "func", "DeleteAirlineRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *DeleteAirlineRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[2]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*DeleteAirlineRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *DeleteAirlineRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "DeleteAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*DeleteAirlineRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *DeleteAirlineRequest"], "all_type_names": ["DeleteAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [4788], "all_end_bytes": [5075], "primary_index": 0, "all_receivers_normalized": ["(*DeleteAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["DeleteAirlineRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *DeleteAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#26", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#28"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#28", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 28, "start_line": 185, "end_line": 189, "text": "// Deprecated: Use DeleteAirlineRequest.ProtoReflect.Descriptor instead.\nfunc (*DeleteAirlineRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{2}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [186, 189], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "DeleteAirlineRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use DeleteAirlineRequest.ProtoReflect.Descriptor instead.\nfunc (*DeleteAirlineRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{2}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*DeleteAirlineRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*DeleteAirlineRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [5150], "all_end_bytes": [5263], "primary_index": 0, "all_receivers_normalized": ["*DeleteAirlineRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["DeleteAirlineRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *DeleteAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#27", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#29"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#29", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 29, "start_line": 190, "end_line": 196, "text": "func (x *DeleteAirlineRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 29, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [190, 196], "def_symbols": [], "symbols": ["GetId", "func", "DeleteAirlineRequest", "string", "nil", "return"], "doc_head": "func (x *DeleteAirlineRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*DeleteAirlineRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *DeleteAirlineRequest", "function_name": "", "method_name": "GetId", "type_name": "DeleteAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*DeleteAirlineRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *DeleteAirlineRequest"], "all_type_names": ["DeleteAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [5265], "all_end_bytes": [5357], "primary_index": 0, "all_receivers_normalized": ["(*DeleteAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["DeleteAirlineRequest", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *DeleteAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#28", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#30"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#30", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 30, "start_line": 197, "end_line": 203, "text": "type DeleteAirlineResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "DeleteAirlineResponse", "primary_kind": "type", "primary_span": [197, 203], "def_symbols": [], "symbols": ["type", "DeleteAirlineResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airline", "protobuf", "bytes", "opt", "name", "airline", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type DeleteAirlineResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:DeleteAirlineResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "DeleteAirlineResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["DeleteAirlineResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:DeleteAirlineResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["DeleteAirlineResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [5364], "all_end_bytes": [5637], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "DeleteAirlineResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#29", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#31"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#31", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 31, "start_line": 204, "end_line": 210, "text": "func (x *DeleteAirlineResponse) Reset() {\n\t*x = DeleteAirlineResponse{}\n\tmi := &file_airlines_proto_msgTypes[3]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [204, 210], "def_symbols": [], "symbols": ["Reset", "func", "DeleteAirlineResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *DeleteAirlineResponse) Reset() {\n\t*x = DeleteAirlineResponse{}\n\tmi := &file_airlines_proto_msgTypes[3]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*DeleteAirlineResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *DeleteAirlineResponse", "function_name": "", "method_name": "Reset", "type_name": "DeleteAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*DeleteAirlineResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *DeleteAirlineResponse"], "all_type_names": ["DeleteAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [5639], "all_end_bytes": [5833], "primary_index": 0, "all_receivers_normalized": ["(*DeleteAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["DeleteAirlineResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *DeleteAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#30", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#32"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#32", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 32, "start_line": 211, "end_line": 214, "text": "func (x *DeleteAirlineResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [211, 214], "def_symbols": [], "symbols": ["String", "func", "DeleteAirlineResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *DeleteAirlineResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*DeleteAirlineResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *DeleteAirlineResponse", "function_name": "", "method_name": "String", "type_name": "DeleteAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*DeleteAirlineResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *DeleteAirlineResponse"], "all_type_names": ["DeleteAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [5835], "all_end_bytes": [5925], "primary_index": 0, "all_receivers_normalized": ["(*DeleteAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["DeleteAirlineResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *DeleteAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#31", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#33"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#33", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 33, "start_line": 215, "end_line": 216, "text": "func (*DeleteAirlineResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [215, 216], "def_symbols": [], "symbols": ["ProtoMessage", "func", "DeleteAirlineResponse"], "doc_head": "func (*DeleteAirlineResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*DeleteAirlineResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*DeleteAirlineResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [5927], "all_end_bytes": [5974], "primary_index": 0, "all_receivers_normalized": ["*DeleteAirlineResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["DeleteAirlineResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *DeleteAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#32", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#34"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#34", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 34, "start_line": 217, "end_line": 228, "text": "func (x *DeleteAirlineResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[3]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [217, 228], "def_symbols": [], "symbols": ["ProtoReflect", "func", "DeleteAirlineResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *DeleteAirlineResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[3]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*DeleteAirlineResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *DeleteAirlineResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "DeleteAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*DeleteAirlineResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *DeleteAirlineResponse"], "all_type_names": ["DeleteAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [5976], "all_end_bytes": [6264], "primary_index": 0, "all_receivers_normalized": ["(*DeleteAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["DeleteAirlineResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *DeleteAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#33", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#35"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#35", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 35, "start_line": 229, "end_line": 233, "text": "// Deprecated: Use DeleteAirlineResponse.ProtoReflect.Descriptor instead.\nfunc (*DeleteAirlineResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{3}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [230, 233], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "DeleteAirlineResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use DeleteAirlineResponse.ProtoReflect.Descriptor instead.\nfunc (*DeleteAirlineResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{3}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*DeleteAirlineResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*DeleteAirlineResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [6340], "all_end_bytes": [6454], "primary_index": 0, "all_receivers_normalized": ["*DeleteAirlineResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["DeleteAirlineResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *DeleteAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#34", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#36"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#36", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 36, "start_line": 234, "end_line": 240, "text": "func (x *DeleteAirlineResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetAirline", "primary_kind": "method", "primary_span": [234, 240], "def_symbols": [], "symbols": ["GetAirline", "func", "DeleteAirlineResponse", "Airline", "nil", "return"], "doc_head": "func (x *DeleteAirlineResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*DeleteAirlineResponse).GetAirline/complete", "package": "v0", "node_kind": "method", "receiver": "x *DeleteAirlineResponse", "function_name": "", "method_name": "GetAirline", "type_name": "DeleteAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirline"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*DeleteAirlineResponse).GetAirline/complete"], "all_roles": ["complete"], "all_receivers": ["x *DeleteAirlineResponse"], "all_type_names": ["DeleteAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [6456], "all_end_bytes": [6562], "primary_index": 0, "all_receivers_normalized": ["(*DeleteAirlineResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "DeleteAirlineResponse", "GetAirline", "x.Airline"], "header_context_minimal": "package v0\n// receiver: x *DeleteAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#35", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#37"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#37", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 37, "start_line": 241, "end_line": 258, "text": "type UpdateAirlineRequest struct {\n\tstate                      protoimpl.MessageState `protogen:\"open.v1\"`\n\tId                         string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata                       *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao                       *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification             int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName                       string                 `protobuf:\"bytes,5,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tDescription                map[string]string      `protobuf:\"bytes,6,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tWebsiteUrl                 *string                `protobuf:\"bytes,7,opt,name=websiteUrl,proto3,oneof\" json:\"websiteUrl,omitempty\"`\n\tWikipediaUrl               map[string]string      `protobuf:\"bytes,8,rep,name=wikipediaUrl,proto3\" json:\"wikipediaUrl,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tFacebookUrl                *string                `protobuf:\"bytes,9,opt,name=facebookUrl,proto3,oneof\" json:\"facebookUrl,omitempty\"`\n\tTwitterUrl                 *string                `protobuf:\"bytes,10,opt,name=twitterUrl,proto3,oneof\" json:\"twitterUrl,omitempty\"`\n\tReservationTelephoneNumber *string                `protobuf:\"bytes,11,opt,name=reservationTelephoneNumber,proto3,oneof\" json:\"reservationTelephoneNumber,omitempty\"`\n\tHubAirport                 *string                `protobuf:\"bytes,12,opt,name=hubAirport,proto3,oneof\" json:\"hubAirport,omitempty\"`\n\tunknownFields              protoimpl.UnknownFields\n\tsizeCache                  protoimpl.SizeCache\n}\n", "n_tokens": 408, "primary_symbol": "UpdateAirlineRequest", "primary_kind": "type", "primary_span": [241, 258], "def_symbols": [], "symbols": ["type", "UpdateAirlineRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Iata", "iata", "oneof", "Icao", "icao", "Classification", "int64", "varint", "classification", "Name", "Description", "map", "rep", "description", "protobuf_key", "key", "protobuf_val", "value", "WebsiteUrl", "websiteUrl", "WikipediaUrl", "wikipediaUrl", "FacebookUrl", "facebookUrl", "TwitterUrl", "twitterUrl", "ReservationTelephoneNumber", "reservationTelephoneNumber", "HubAirport", "hubAirport", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateAirlineRequest struct {\n\tstate                      protoimpl.MessageState `protogen:\"open.v1\"`\n\tId                         string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata                       *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao                       *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification             int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName                       string                 `protobuf:\"bytes,5,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tDescription                map[string]string      `protobuf:\"bytes,6,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tWebsiteUrl                 *string                `protobuf:\"bytes,7,opt,name=websiteUrl,proto3,oneof\" json:\"websiteUrl,omitempty\"`", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateAirlineRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateAirlineRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateAirlineRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateAirlineRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [6569], "all_end_bytes": [8486], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Classification", "Description", "FacebookUrl", "HubAirport", "Iata", "Icao", "MessageState", "Name", "ReservationTelephoneNumber", "SizeCache", "TwitterUrl", "UnknownFields", "UpdateAirlineRequest", "WebsiteUrl", "WikipediaUrl", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#36", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#38"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#38", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 38, "start_line": 259, "end_line": 265, "text": "func (x *UpdateAirlineRequest) Reset() {\n\t*x = UpdateAirlineRequest{}\n\tmi := &file_airlines_proto_msgTypes[4]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [259, 265], "def_symbols": [], "symbols": ["Reset", "func", "UpdateAirlineRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateAirlineRequest) Reset() {\n\t*x = UpdateAirlineRequest{}\n\tmi := &file_airlines_proto_msgTypes[4]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "Reset", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [8488], "all_end_bytes": [8680], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateAirlineRequest", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#37", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#39"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#39", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 39, "start_line": 266, "end_line": 269, "text": "func (x *UpdateAirlineRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [266, 269], "def_symbols": [], "symbols": ["String", "func", "UpdateAirlineRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateAirlineRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "String", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [8682], "all_end_bytes": [8771], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateAirlineRequest", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#38", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#40"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#40", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 40, "start_line": 270, "end_line": 271, "text": "func (*UpdateAirlineRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [270, 271], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateAirlineRequest"], "doc_head": "func (*UpdateAirlineRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateAirlineRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateAirlineRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8773], "all_end_bytes": [8819], "primary_index": 0, "all_receivers_normalized": ["*UpdateAirlineRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateAirlineRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#39", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#41"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#41", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 41, "start_line": 272, "end_line": 283, "text": "func (x *UpdateAirlineRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[4]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [272, 283], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateAirlineRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateAirlineRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[4]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [8821], "all_end_bytes": [9108], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateAirlineRequest", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#40", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#42"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#42", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 42, "start_line": 284, "end_line": 288, "text": "// Deprecated: Use UpdateAirlineRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateAirlineRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{4}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [285, 288], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateAirlineRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateAirlineRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateAirlineRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{4}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateAirlineRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateAirlineRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9183], "all_end_bytes": [9296], "primary_index": 0, "all_receivers_normalized": ["*UpdateAirlineRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateAirlineRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#41", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#43"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#43", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 43, "start_line": 289, "end_line": 295, "text": "func (x *UpdateAirlineRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 29, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [289, 295], "def_symbols": [], "symbols": ["GetId", "func", "UpdateAirlineRequest", "string", "nil", "return"], "doc_head": "func (x *UpdateAirlineRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetId", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [9298], "all_end_bytes": [9390], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetId", "UpdateAirlineRequest", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#42", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#44"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#44", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 44, "start_line": 296, "end_line": 302, "text": "func (x *UpdateAirlineRequest) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}\n", "n_tokens": 38, "primary_symbol": "GetIata", "primary_kind": "method", "primary_span": [296, 302], "def_symbols": [], "symbols": ["GetIata", "func", "UpdateAirlineRequest", "string", "nil", "Iata", "return"], "doc_head": "func (x *UpdateAirlineRequest) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetIata/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetIata", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIata"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetIata/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [9392], "all_end_bytes": [9506], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetIata", "Iata", "UpdateAirlineRequest", "x.Iata"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#43", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#45"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#45", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 45, "start_line": 303, "end_line": 309, "text": "func (x *UpdateAirlineRequest) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}\n", "n_tokens": 38, "primary_symbol": "GetIcao", "primary_kind": "method", "primary_span": [303, 309], "def_symbols": [], "symbols": ["GetIcao", "func", "UpdateAirlineRequest", "string", "nil", "Icao", "return"], "doc_head": "func (x *UpdateAirlineRequest) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetIcao/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetIcao", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIcao"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetIcao/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [9508], "all_end_bytes": [9622], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetIcao", "Icao", "UpdateAirlineRequest", "x.Icao"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#44", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#46"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#46", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 46, "start_line": 310, "end_line": 316, "text": "func (x *UpdateAirlineRequest) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetClassification", "primary_kind": "method", "primary_span": [310, 316], "def_symbols": [], "symbols": ["GetClassification", "func", "UpdateAirlineRequest", "int64", "nil", "return", "Classification"], "doc_head": "func (x *UpdateAirlineRequest) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetClassification/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetClassification", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetClassification"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetClassification/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [9624], "all_end_bytes": [9738], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Classification", "GetClassification", "UpdateAirlineRequest", "x.Classification"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#45", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#47"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#47", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 47, "start_line": 317, "end_line": 323, "text": "func (x *UpdateAirlineRequest) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [317, 323], "def_symbols": [], "symbols": ["GetName", "func", "UpdateAirlineRequest", "string", "nil", "return", "Name"], "doc_head": "func (x *UpdateAirlineRequest) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetName", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [9740], "all_end_bytes": [9836], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetName", "Name", "UpdateAirlineRequest", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#46", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#48"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#48", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 48, "start_line": 324, "end_line": 330, "text": "func (x *UpdateAirlineRequest) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetDescription", "primary_kind": "method", "primary_span": [324, 330], "def_symbols": [], "symbols": ["GetDescription", "func", "UpdateAirlineRequest", "map", "string", "nil", "return", "Description"], "doc_head": "func (x *UpdateAirlineRequest) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetDescription/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetDescription", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDescription"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetDescription/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [9838], "all_end_bytes": [9960], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Description", "GetDescription", "UpdateAirlineRequest", "x.Description"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#47", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#49"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#49", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 49, "start_line": 331, "end_line": 337, "text": "func (x *UpdateAirlineRequest) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 40, "primary_symbol": "GetWebsiteUrl", "primary_kind": "method", "primary_span": [331, 337], "def_symbols": [], "symbols": ["GetWebsiteUrl", "func", "UpdateAirlineRequest", "string", "nil", "WebsiteUrl", "return"], "doc_head": "func (x *UpdateAirlineRequest) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetWebsiteUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetWebsiteUrl", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWebsiteUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetWebsiteUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [9962], "all_end_bytes": [10094], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetWebsiteUrl", "UpdateAirlineRequest", "WebsiteUrl", "x.WebsiteUrl"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#48", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#50"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#50", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 50, "start_line": 338, "end_line": 344, "text": "func (x *UpdateAirlineRequest) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}\n", "n_tokens": 36, "primary_symbol": "GetWikipediaUrl", "primary_kind": "method", "primary_span": [338, 344], "def_symbols": [], "symbols": ["GetWikipediaUrl", "func", "UpdateAirlineRequest", "map", "string", "nil", "return", "WikipediaUrl"], "doc_head": "func (x *UpdateAirlineRequest) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetWikipediaUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetWikipediaUrl", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWikipediaUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetWikipediaUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [10096], "all_end_bytes": [10220], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetWikipediaUrl", "UpdateAirlineRequest", "WikipediaUrl", "x.WikipediaUrl"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#49", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#51"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#51", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 51, "start_line": 345, "end_line": 351, "text": "func (x *UpdateAirlineRequest) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 40, "primary_symbol": "GetFacebookUrl", "primary_kind": "method", "primary_span": [345, 351], "def_symbols": [], "symbols": ["GetFacebookUrl", "func", "UpdateAirlineRequest", "string", "nil", "FacebookUrl", "return"], "doc_head": "func (x *UpdateAirlineRequest) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetFacebookUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetFacebookUrl", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFacebookUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetFacebookUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [10222], "all_end_bytes": [10357], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["FacebookUrl", "GetFacebookUrl", "UpdateAirlineRequest", "x.FacebookUrl"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#50", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#52"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#52", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 52, "start_line": 352, "end_line": 358, "text": "func (x *UpdateAirlineRequest) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 40, "primary_symbol": "GetTwitterUrl", "primary_kind": "method", "primary_span": [352, 358], "def_symbols": [], "symbols": ["GetTwitterUrl", "func", "UpdateAirlineRequest", "string", "nil", "TwitterUrl", "return"], "doc_head": "func (x *UpdateAirlineRequest) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetTwitterUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetTwitterUrl", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTwitterUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetTwitterUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [10359], "all_end_bytes": [10491], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetTwitterUrl", "TwitterUrl", "UpdateAirlineRequest", "x.TwitterUrl"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#51", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#53"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#53", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 53, "start_line": 359, "end_line": 365, "text": "func (x *UpdateAirlineRequest) GetReservationTelephoneNumber() string {\n\tif x != nil && x.ReservationTelephoneNumber != nil {\n\t\treturn *x.ReservationTelephoneNumber\n\t}\n\treturn \"\"\n}\n", "n_tokens": 43, "primary_symbol": "GetReservationTelephoneNumber", "primary_kind": "method", "primary_span": [359, 365], "def_symbols": [], "symbols": ["GetReservationTelephoneNumber", "func", "UpdateAirlineRequest", "string", "nil", "ReservationTelephoneNumber", "return"], "doc_head": "func (x *UpdateAirlineRequest) GetReservationTelephoneNumber() string {\n\tif x != nil && x.ReservationTelephoneNumber != nil {\n\t\treturn *x.ReservationTelephoneNumber\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetReservationTelephoneNumber/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetReservationTelephoneNumber", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetReservationTelephoneNumber"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetReservationTelephoneNumber/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [10493], "all_end_bytes": [10673], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetReservationTelephoneNumber", "ReservationTelephoneNumber", "UpdateAirlineRequest", "x.ReservationTelephoneNumber"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#52", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#54"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#54", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 54, "start_line": 366, "end_line": 372, "text": "func (x *UpdateAirlineRequest) GetHubAirport() string {\n\tif x != nil && x.HubAirport != nil {\n\t\treturn *x.HubAirport\n\t}\n\treturn \"\"\n}\n", "n_tokens": 40, "primary_symbol": "GetHubAirport", "primary_kind": "method", "primary_span": [366, 372], "def_symbols": [], "symbols": ["GetHubAirport", "func", "UpdateAirlineRequest", "string", "nil", "HubAirport", "return"], "doc_head": "func (x *UpdateAirlineRequest) GetHubAirport() string {\n\tif x != nil && x.HubAirport != nil {\n\t\treturn *x.HubAirport\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineRequest).GetHubAirport/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineRequest", "function_name": "", "method_name": "GetHubAirport", "type_name": "UpdateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetHubAirport"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineRequest).GetHubAirport/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineRequest"], "all_type_names": ["UpdateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [10675], "all_end_bytes": [10807], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetHubAirport", "HubAirport", "UpdateAirlineRequest", "x.HubAirport"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#53", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#55"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#55", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 55, "start_line": 373, "end_line": 379, "text": "type UpdateAirlineResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "UpdateAirlineResponse", "primary_kind": "type", "primary_span": [373, 379], "def_symbols": [], "symbols": ["type", "UpdateAirlineResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airline", "protobuf", "bytes", "opt", "name", "airline", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateAirlineResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateAirlineResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateAirlineResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateAirlineResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateAirlineResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateAirlineResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [10814], "all_end_bytes": [11087], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "MessageState", "SizeCache", "UnknownFields", "UpdateAirlineResponse", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#54", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#56"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#56", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 56, "start_line": 380, "end_line": 386, "text": "func (x *UpdateAirlineResponse) Reset() {\n\t*x = UpdateAirlineResponse{}\n\tmi := &file_airlines_proto_msgTypes[5]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [380, 386], "def_symbols": [], "symbols": ["Reset", "func", "UpdateAirlineResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateAirlineResponse) Reset() {\n\t*x = UpdateAirlineResponse{}\n\tmi := &file_airlines_proto_msgTypes[5]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineResponse", "function_name": "", "method_name": "Reset", "type_name": "UpdateAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineResponse"], "all_type_names": ["UpdateAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [11089], "all_end_bytes": [11283], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateAirlineResponse", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#55", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#57"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#57", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 57, "start_line": 387, "end_line": 390, "text": "func (x *UpdateAirlineResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [387, 390], "def_symbols": [], "symbols": ["String", "func", "UpdateAirlineResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateAirlineResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineResponse", "function_name": "", "method_name": "String", "type_name": "UpdateAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineResponse"], "all_type_names": ["UpdateAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [11285], "all_end_bytes": [11375], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateAirlineResponse", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#56", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#58"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#58", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 58, "start_line": 391, "end_line": 392, "text": "func (*UpdateAirlineResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [391, 392], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateAirlineResponse"], "doc_head": "func (*UpdateAirlineResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateAirlineResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateAirlineResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [11377], "all_end_bytes": [11424], "primary_index": 0, "all_receivers_normalized": ["*UpdateAirlineResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateAirlineResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#57", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#59"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#59", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 59, "start_line": 393, "end_line": 404, "text": "func (x *UpdateAirlineResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[5]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [393, 404], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateAirlineResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateAirlineResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[5]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineResponse"], "all_type_names": ["UpdateAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [11426], "all_end_bytes": [11714], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateAirlineResponse", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#58", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#60"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#60", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 60, "start_line": 405, "end_line": 409, "text": "// Deprecated: Use UpdateAirlineResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateAirlineResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{5}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [406, 409], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateAirlineResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateAirlineResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateAirlineResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{5}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateAirlineResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateAirlineResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [11790], "all_end_bytes": [11904], "primary_index": 0, "all_receivers_normalized": ["*UpdateAirlineResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateAirlineResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#59", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#61"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#61", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 61, "start_line": 410, "end_line": 416, "text": "func (x *UpdateAirlineResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetAirline", "primary_kind": "method", "primary_span": [410, 416], "def_symbols": [], "symbols": ["GetAirline", "func", "UpdateAirlineResponse", "Airline", "nil", "return"], "doc_head": "func (x *UpdateAirlineResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirlineResponse).GetAirline/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirlineResponse", "function_name": "", "method_name": "GetAirline", "type_name": "UpdateAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirline"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirlineResponse).GetAirline/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirlineResponse"], "all_type_names": ["UpdateAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [11906], "all_end_bytes": [12012], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirlineResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetAirline", "UpdateAirlineResponse", "x.Airline"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#60", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#62"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#62", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 62, "start_line": 417, "end_line": 433, "text": "type CreateAirlineRequest struct {\n\tstate                      protoimpl.MessageState `protogen:\"open.v1\"`\n\tIata                       *string                `protobuf:\"bytes,1,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao                       *string                `protobuf:\"bytes,2,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification             int64                  `protobuf:\"varint,3,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName                       string                 `protobuf:\"bytes,4,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tDescription                map[string]string      `protobuf:\"bytes,5,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tWebsiteUrl                 *string                `protobuf:\"bytes,6,opt,name=websiteUrl,proto3,oneof\" json:\"websiteUrl,omitempty\"`\n\tWikipediaUrl               map[string]string      `protobuf:\"bytes,7,rep,name=wikipediaUrl,proto3\" json:\"wikipediaUrl,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tFacebookUrl                *string                `protobuf:\"bytes,8,opt,name=facebookUrl,proto3,oneof\" json:\"facebookUrl,omitempty\"`\n\tTwitterUrl                 *string                `protobuf:\"bytes,9,opt,name=twitterUrl,proto3,oneof\" json:\"twitterUrl,omitempty\"`\n\tReservationTelephoneNumber *string                `protobuf:\"bytes,10,opt,name=reservationTelephoneNumber,proto3,oneof\" json:\"reservationTelephoneNumber,omitempty\"`\n\tHubAirport                 string                 `protobuf:\"bytes,11,opt,name=hubAirport,proto3\" json:\"hubAirport,omitempty\"`\n\tunknownFields              protoimpl.UnknownFields\n\tsizeCache                  protoimpl.SizeCache\n}\n", "n_tokens": 383, "primary_symbol": "CreateAirlineRequest", "primary_kind": "type", "primary_span": [417, 433], "def_symbols": [], "symbols": ["type", "CreateAirlineRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Iata", "string", "protobuf", "bytes", "opt", "name", "iata", "proto3", "oneof", "json", "omitempty", "Icao", "icao", "Classification", "int64", "varint", "classification", "Name", "Description", "map", "rep", "description", "protobuf_key", "key", "protobuf_val", "value", "WebsiteUrl", "websiteUrl", "WikipediaUrl", "wikipediaUrl", "FacebookUrl", "facebookUrl", "TwitterUrl", "twitterUrl", "ReservationTelephoneNumber", "reservationTelephoneNumber", "HubAirport", "hubAirport", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateAirlineRequest struct {\n\tstate                      protoimpl.MessageState `protogen:\"open.v1\"`\n\tIata                       *string                `protobuf:\"bytes,1,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao                       *string                `protobuf:\"bytes,2,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification             int64                  `protobuf:\"varint,3,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName                       string                 `protobuf:\"bytes,4,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tDescription                map[string]string      `protobuf:\"bytes,5,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tWebsiteUrl                 *string                `protobuf:\"bytes,6,opt,name=websiteUrl,proto3,oneof\" json:\"websiteUrl,omitempty\"`\n\tWikipediaUrl               map[string]string      `protobuf:\"bytes,7,rep,name=wikipediaUrl,proto3\" json:\"wikipediaUrl,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateAirlineRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateAirlineRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateAirlineRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateAirlineRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [12019], "all_end_bytes": [13818], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Classification", "CreateAirlineRequest", "Description", "FacebookUrl", "HubAirport", "Iata", "Icao", "MessageState", "Name", "ReservationTelephoneNumber", "SizeCache", "TwitterUrl", "UnknownFields", "WebsiteUrl", "WikipediaUrl", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#61", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#63"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#63", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 63, "start_line": 434, "end_line": 440, "text": "func (x *CreateAirlineRequest) Reset() {\n\t*x = CreateAirlineRequest{}\n\tmi := &file_airlines_proto_msgTypes[6]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [434, 440], "def_symbols": [], "symbols": ["Reset", "func", "CreateAirlineRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateAirlineRequest) Reset() {\n\t*x = CreateAirlineRequest{}\n\tmi := &file_airlines_proto_msgTypes[6]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "Reset", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [13820], "all_end_bytes": [14012], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirlineRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#62", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#64"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#64", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 64, "start_line": 441, "end_line": 444, "text": "func (x *CreateAirlineRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [441, 444], "def_symbols": [], "symbols": ["String", "func", "CreateAirlineRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateAirlineRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "String", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [14014], "all_end_bytes": [14103], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirlineRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#63", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#65"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#65", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 65, "start_line": 445, "end_line": 446, "text": "func (*CreateAirlineRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [445, 446], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateAirlineRequest"], "doc_head": "func (*CreateAirlineRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateAirlineRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateAirlineRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [14105], "all_end_bytes": [14151], "primary_index": 0, "all_receivers_normalized": ["*CreateAirlineRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#64", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#66"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#66", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 66, "start_line": 447, "end_line": 458, "text": "func (x *CreateAirlineRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[6]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [447, 458], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateAirlineRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateAirlineRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[6]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [14153], "all_end_bytes": [14440], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirlineRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#65", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#67"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#67", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 67, "start_line": 459, "end_line": 463, "text": "// Deprecated: Use CreateAirlineRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateAirlineRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{6}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [460, 463], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateAirlineRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateAirlineRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateAirlineRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{6}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateAirlineRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateAirlineRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [14515], "all_end_bytes": [14628], "primary_index": 0, "all_receivers_normalized": ["*CreateAirlineRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#66", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#68"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#68", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 68, "start_line": 464, "end_line": 470, "text": "func (x *CreateAirlineRequest) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}\n", "n_tokens": 38, "primary_symbol": "GetIata", "primary_kind": "method", "primary_span": [464, 470], "def_symbols": [], "symbols": ["GetIata", "func", "CreateAirlineRequest", "string", "nil", "Iata", "return"], "doc_head": "func (x *CreateAirlineRequest) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetIata/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetIata", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIata"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetIata/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [14630], "all_end_bytes": [14744], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "GetIata", "Iata", "x.Iata"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#67", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#69"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#69", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 69, "start_line": 471, "end_line": 477, "text": "func (x *CreateAirlineRequest) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}\n", "n_tokens": 38, "primary_symbol": "GetIcao", "primary_kind": "method", "primary_span": [471, 477], "def_symbols": [], "symbols": ["GetIcao", "func", "CreateAirlineRequest", "string", "nil", "Icao", "return"], "doc_head": "func (x *CreateAirlineRequest) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetIcao/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetIcao", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIcao"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetIcao/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [14746], "all_end_bytes": [14860], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "GetIcao", "Icao", "x.Icao"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#68", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#70"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#70", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 70, "start_line": 478, "end_line": 484, "text": "func (x *CreateAirlineRequest) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetClassification", "primary_kind": "method", "primary_span": [478, 484], "def_symbols": [], "symbols": ["GetClassification", "func", "CreateAirlineRequest", "int64", "nil", "return", "Classification"], "doc_head": "func (x *CreateAirlineRequest) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetClassification/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetClassification", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetClassification"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetClassification/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [14862], "all_end_bytes": [14976], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Classification", "CreateAirlineRequest", "GetClassification", "x.Classification"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#69", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#71"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#71", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 71, "start_line": 485, "end_line": 491, "text": "func (x *CreateAirlineRequest) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [485, 491], "def_symbols": [], "symbols": ["GetName", "func", "CreateAirlineRequest", "string", "nil", "return", "Name"], "doc_head": "func (x *CreateAirlineRequest) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetName", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [14978], "all_end_bytes": [15074], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#70", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#72"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#72", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 72, "start_line": 492, "end_line": 498, "text": "func (x *CreateAirlineRequest) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetDescription", "primary_kind": "method", "primary_span": [492, 498], "def_symbols": [], "symbols": ["GetDescription", "func", "CreateAirlineRequest", "map", "string", "nil", "return", "Description"], "doc_head": "func (x *CreateAirlineRequest) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetDescription/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetDescription", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDescription"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetDescription/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [15076], "all_end_bytes": [15198], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "Description", "GetDescription", "x.Description"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#71", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#73"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#73", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 73, "start_line": 499, "end_line": 505, "text": "func (x *CreateAirlineRequest) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 40, "primary_symbol": "GetWebsiteUrl", "primary_kind": "method", "primary_span": [499, 505], "def_symbols": [], "symbols": ["GetWebsiteUrl", "func", "CreateAirlineRequest", "string", "nil", "WebsiteUrl", "return"], "doc_head": "func (x *CreateAirlineRequest) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetWebsiteUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetWebsiteUrl", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWebsiteUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetWebsiteUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [15200], "all_end_bytes": [15332], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "GetWebsiteUrl", "WebsiteUrl", "x.WebsiteUrl"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#72", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#74"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#74", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 74, "start_line": 506, "end_line": 512, "text": "func (x *CreateAirlineRequest) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}\n", "n_tokens": 36, "primary_symbol": "GetWikipediaUrl", "primary_kind": "method", "primary_span": [506, 512], "def_symbols": [], "symbols": ["GetWikipediaUrl", "func", "CreateAirlineRequest", "map", "string", "nil", "return", "WikipediaUrl"], "doc_head": "func (x *CreateAirlineRequest) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetWikipediaUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetWikipediaUrl", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWikipediaUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetWikipediaUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [15334], "all_end_bytes": [15458], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "GetWikipediaUrl", "WikipediaUrl", "x.WikipediaUrl"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#73", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#75"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#75", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 75, "start_line": 513, "end_line": 519, "text": "func (x *CreateAirlineRequest) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 40, "primary_symbol": "GetFacebookUrl", "primary_kind": "method", "primary_span": [513, 519], "def_symbols": [], "symbols": ["GetFacebookUrl", "func", "CreateAirlineRequest", "string", "nil", "FacebookUrl", "return"], "doc_head": "func (x *CreateAirlineRequest) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetFacebookUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetFacebookUrl", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFacebookUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetFacebookUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [15460], "all_end_bytes": [15595], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "FacebookUrl", "GetFacebookUrl", "x.FacebookUrl"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#74", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#76"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#76", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 76, "start_line": 520, "end_line": 526, "text": "func (x *CreateAirlineRequest) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 40, "primary_symbol": "GetTwitterUrl", "primary_kind": "method", "primary_span": [520, 526], "def_symbols": [], "symbols": ["GetTwitterUrl", "func", "CreateAirlineRequest", "string", "nil", "TwitterUrl", "return"], "doc_head": "func (x *CreateAirlineRequest) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetTwitterUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetTwitterUrl", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTwitterUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetTwitterUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [15597], "all_end_bytes": [15729], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "GetTwitterUrl", "TwitterUrl", "x.TwitterUrl"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#75", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#77"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#77", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 77, "start_line": 527, "end_line": 533, "text": "func (x *CreateAirlineRequest) GetReservationTelephoneNumber() string {\n\tif x != nil && x.ReservationTelephoneNumber != nil {\n\t\treturn *x.ReservationTelephoneNumber\n\t}\n\treturn \"\"\n}\n", "n_tokens": 43, "primary_symbol": "GetReservationTelephoneNumber", "primary_kind": "method", "primary_span": [527, 533], "def_symbols": [], "symbols": ["GetReservationTelephoneNumber", "func", "CreateAirlineRequest", "string", "nil", "ReservationTelephoneNumber", "return"], "doc_head": "func (x *CreateAirlineRequest) GetReservationTelephoneNumber() string {\n\tif x != nil && x.ReservationTelephoneNumber != nil {\n\t\treturn *x.ReservationTelephoneNumber\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetReservationTelephoneNumber/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetReservationTelephoneNumber", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetReservationTelephoneNumber"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetReservationTelephoneNumber/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [15731], "all_end_bytes": [15911], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "GetReservationTelephoneNumber", "ReservationTelephoneNumber", "x.ReservationTelephoneNumber"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#76", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#78"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#78", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 78, "start_line": 534, "end_line": 540, "text": "func (x *CreateAirlineRequest) GetHubAirport() string {\n\tif x != nil {\n\t\treturn x.HubAirport\n\t}\n\treturn \"\"\n}\n", "n_tokens": 32, "primary_symbol": "GetHubAirport", "primary_kind": "method", "primary_span": [534, 540], "def_symbols": [], "symbols": ["GetHubAirport", "func", "CreateAirlineRequest", "string", "nil", "return", "HubAirport"], "doc_head": "func (x *CreateAirlineRequest) GetHubAirport() string {\n\tif x != nil {\n\t\treturn x.HubAirport\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineRequest).GetHubAirport/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineRequest", "function_name": "", "method_name": "GetHubAirport", "type_name": "CreateAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetHubAirport"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineRequest).GetHubAirport/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineRequest"], "all_type_names": ["CreateAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [15913], "all_end_bytes": [16021], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineRequest", "GetHubAirport", "HubAirport", "x.HubAirport"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#77", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#79"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#79", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 79, "start_line": 541, "end_line": 547, "text": "type CreateAirlineResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "CreateAirlineResponse", "primary_kind": "type", "primary_span": [541, 547], "def_symbols": [], "symbols": ["type", "CreateAirlineResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airline", "protobuf", "bytes", "opt", "name", "airline", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateAirlineResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateAirlineResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateAirlineResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateAirlineResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateAirlineResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateAirlineResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [16028], "all_end_bytes": [16301], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "CreateAirlineResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#78", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#80"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#80", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 80, "start_line": 548, "end_line": 554, "text": "func (x *CreateAirlineResponse) Reset() {\n\t*x = CreateAirlineResponse{}\n\tmi := &file_airlines_proto_msgTypes[7]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [548, 554], "def_symbols": [], "symbols": ["Reset", "func", "CreateAirlineResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateAirlineResponse) Reset() {\n\t*x = CreateAirlineResponse{}\n\tmi := &file_airlines_proto_msgTypes[7]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineResponse", "function_name": "", "method_name": "Reset", "type_name": "CreateAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineResponse"], "all_type_names": ["CreateAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [16303], "all_end_bytes": [16497], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirlineResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#79", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#81"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#81", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 81, "start_line": 555, "end_line": 558, "text": "func (x *CreateAirlineResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [555, 558], "def_symbols": [], "symbols": ["String", "func", "CreateAirlineResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateAirlineResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineResponse", "function_name": "", "method_name": "String", "type_name": "CreateAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineResponse"], "all_type_names": ["CreateAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [16499], "all_end_bytes": [16589], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirlineResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#80", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#82"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#82", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 82, "start_line": 559, "end_line": 560, "text": "func (*CreateAirlineResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [559, 560], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateAirlineResponse"], "doc_head": "func (*CreateAirlineResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateAirlineResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateAirlineResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [16591], "all_end_bytes": [16638], "primary_index": 0, "all_receivers_normalized": ["*CreateAirlineResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#81", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#83"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#83", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 83, "start_line": 561, "end_line": 572, "text": "func (x *CreateAirlineResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[7]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [561, 572], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateAirlineResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateAirlineResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[7]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineResponse"], "all_type_names": ["CreateAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [16640], "all_end_bytes": [16928], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirlineResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#82", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#84"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#84", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 84, "start_line": 573, "end_line": 577, "text": "// Deprecated: Use CreateAirlineResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateAirlineResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{7}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [574, 577], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateAirlineResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateAirlineResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateAirlineResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{7}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateAirlineResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateAirlineResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [17004], "all_end_bytes": [17118], "primary_index": 0, "all_receivers_normalized": ["*CreateAirlineResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirlineResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#83", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#85"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#85", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 85, "start_line": 578, "end_line": 584, "text": "func (x *CreateAirlineResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetAirline", "primary_kind": "method", "primary_span": [578, 584], "def_symbols": [], "symbols": ["GetAirline", "func", "CreateAirlineResponse", "Airline", "nil", "return"], "doc_head": "func (x *CreateAirlineResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirlineResponse).GetAirline/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirlineResponse", "function_name": "", "method_name": "GetAirline", "type_name": "CreateAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirline"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirlineResponse).GetAirline/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirlineResponse"], "all_type_names": ["CreateAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [17120], "all_end_bytes": [17226], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirlineResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "CreateAirlineResponse", "GetAirline", "x.Airline"], "header_context_minimal": "package v0\n// receiver: x *CreateAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#84", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#86"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#86", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 86, "start_line": 585, "end_line": 591, "text": "type AirlineDetailsRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 59, "primary_symbol": "AirlineDetailsRequest", "primary_kind": "type", "primary_span": [585, 591], "def_symbols": [], "symbols": ["type", "AirlineDetailsRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type AirlineDetailsRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:AirlineDetailsRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirlineDetailsRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["AirlineDetailsRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirlineDetailsRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirlineDetailsRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [17233], "all_end_bytes": [17496], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirlineDetailsRequest", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#85", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#87"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#87", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 87, "start_line": 592, "end_line": 598, "text": "func (x *AirlineDetailsRequest) Reset() {\n\t*x = AirlineDetailsRequest{}\n\tmi := &file_airlines_proto_msgTypes[8]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [592, 598], "def_symbols": [], "symbols": ["Reset", "func", "AirlineDetailsRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *AirlineDetailsRequest) Reset() {\n\t*x = AirlineDetailsRequest{}\n\tmi := &file_airlines_proto_msgTypes[8]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirlineDetailsRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirlineDetailsRequest", "function_name": "", "method_name": "Reset", "type_name": "AirlineDetailsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlineDetailsRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirlineDetailsRequest"], "all_type_names": ["AirlineDetailsRequest"], "all_type_kinds": [null], "all_start_bytes": [17498], "all_end_bytes": [17692], "primary_index": 0, "all_receivers_normalized": ["(*AirlineDetailsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirlineDetailsRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirlineDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#86", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#88"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#88", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 88, "start_line": 599, "end_line": 602, "text": "func (x *AirlineDetailsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [599, 602], "def_symbols": [], "symbols": ["String", "func", "AirlineDetailsRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *AirlineDetailsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirlineDetailsRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirlineDetailsRequest", "function_name": "", "method_name": "String", "type_name": "AirlineDetailsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlineDetailsRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirlineDetailsRequest"], "all_type_names": ["AirlineDetailsRequest"], "all_type_kinds": [null], "all_start_bytes": [17694], "all_end_bytes": [17784], "primary_index": 0, "all_receivers_normalized": ["(*AirlineDetailsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirlineDetailsRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirlineDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#87", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#89"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#89", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 89, "start_line": 603, "end_line": 604, "text": "func (*AirlineDetailsRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [603, 604], "def_symbols": [], "symbols": ["ProtoMessage", "func", "AirlineDetailsRequest"], "doc_head": "func (*AirlineDetailsRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*AirlineDetailsRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*AirlineDetailsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [17786], "all_end_bytes": [17833], "primary_index": 0, "all_receivers_normalized": ["*AirlineDetailsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineDetailsRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *AirlineDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#88", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#90"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#90", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 90, "start_line": 605, "end_line": 616, "text": "func (x *AirlineDetailsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[8]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [605, 616], "def_symbols": [], "symbols": ["ProtoReflect", "func", "AirlineDetailsRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *AirlineDetailsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[8]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirlineDetailsRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirlineDetailsRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "AirlineDetailsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlineDetailsRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirlineDetailsRequest"], "all_type_names": ["AirlineDetailsRequest"], "all_type_kinds": [null], "all_start_bytes": [17835], "all_end_bytes": [18123], "primary_index": 0, "all_receivers_normalized": ["(*AirlineDetailsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirlineDetailsRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *AirlineDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#89", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#91"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#91", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 91, "start_line": 617, "end_line": 621, "text": "// Deprecated: Use AirlineDetailsRequest.ProtoReflect.Descriptor instead.\nfunc (*AirlineDetailsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{8}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [618, 621], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "AirlineDetailsRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use AirlineDetailsRequest.ProtoReflect.Descriptor instead.\nfunc (*AirlineDetailsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{8}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*AirlineDetailsRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*AirlineDetailsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [18199], "all_end_bytes": [18313], "primary_index": 0, "all_receivers_normalized": ["*AirlineDetailsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineDetailsRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *AirlineDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#90", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#92"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#92", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 92, "start_line": 622, "end_line": 628, "text": "func (x *AirlineDetailsRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 29, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [622, 628], "def_symbols": [], "symbols": ["GetId", "func", "AirlineDetailsRequest", "string", "nil", "return"], "doc_head": "func (x *AirlineDetailsRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirlineDetailsRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirlineDetailsRequest", "function_name": "", "method_name": "GetId", "type_name": "AirlineDetailsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlineDetailsRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirlineDetailsRequest"], "all_type_names": ["AirlineDetailsRequest"], "all_type_kinds": [null], "all_start_bytes": [18315], "all_end_bytes": [18408], "primary_index": 0, "all_receivers_normalized": ["(*AirlineDetailsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineDetailsRequest", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *AirlineDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#91", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#93"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#93", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 93, "start_line": 629, "end_line": 635, "text": "type AirlineDetailsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "AirlineDetailsResponse", "primary_kind": "type", "primary_span": [629, 635], "def_symbols": [], "symbols": ["type", "AirlineDetailsResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airline", "protobuf", "bytes", "opt", "name", "airline", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type AirlineDetailsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:AirlineDetailsResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirlineDetailsResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["AirlineDetailsResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirlineDetailsResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirlineDetailsResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [18415], "all_end_bytes": [18689], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "AirlineDetailsResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#92", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#94"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#94", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 94, "start_line": 636, "end_line": 642, "text": "func (x *AirlineDetailsResponse) Reset() {\n\t*x = AirlineDetailsResponse{}\n\tmi := &file_airlines_proto_msgTypes[9]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [636, 642], "def_symbols": [], "symbols": ["Reset", "func", "AirlineDetailsResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *AirlineDetailsResponse) Reset() {\n\t*x = AirlineDetailsResponse{}\n\tmi := &file_airlines_proto_msgTypes[9]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirlineDetailsResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirlineDetailsResponse", "function_name": "", "method_name": "Reset", "type_name": "AirlineDetailsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlineDetailsResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirlineDetailsResponse"], "all_type_names": ["AirlineDetailsResponse"], "all_type_kinds": [null], "all_start_bytes": [18691], "all_end_bytes": [18887], "primary_index": 0, "all_receivers_normalized": ["(*AirlineDetailsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirlineDetailsResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirlineDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#93", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#95"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#95", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 95, "start_line": 643, "end_line": 646, "text": "func (x *AirlineDetailsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [643, 646], "def_symbols": [], "symbols": ["String", "func", "AirlineDetailsResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *AirlineDetailsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirlineDetailsResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirlineDetailsResponse", "function_name": "", "method_name": "String", "type_name": "AirlineDetailsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlineDetailsResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirlineDetailsResponse"], "all_type_names": ["AirlineDetailsResponse"], "all_type_kinds": [null], "all_start_bytes": [18889], "all_end_bytes": [18980], "primary_index": 0, "all_receivers_normalized": ["(*AirlineDetailsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirlineDetailsResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirlineDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#94", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#96"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#96", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 96, "start_line": 647, "end_line": 648, "text": "func (*AirlineDetailsResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [647, 648], "def_symbols": [], "symbols": ["ProtoMessage", "func", "AirlineDetailsResponse"], "doc_head": "func (*AirlineDetailsResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*AirlineDetailsResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*AirlineDetailsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [18982], "all_end_bytes": [19030], "primary_index": 0, "all_receivers_normalized": ["*AirlineDetailsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineDetailsResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *AirlineDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#95", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#97"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#97", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 97, "start_line": 649, "end_line": 660, "text": "func (x *AirlineDetailsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[9]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [649, 660], "def_symbols": [], "symbols": ["ProtoReflect", "func", "AirlineDetailsResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *AirlineDetailsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[9]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirlineDetailsResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirlineDetailsResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "AirlineDetailsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlineDetailsResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirlineDetailsResponse"], "all_type_names": ["AirlineDetailsResponse"], "all_type_kinds": [null], "all_start_bytes": [19032], "all_end_bytes": [19321], "primary_index": 0, "all_receivers_normalized": ["(*AirlineDetailsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirlineDetailsResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *AirlineDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#96", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#98"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#98", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 98, "start_line": 661, "end_line": 665, "text": "// Deprecated: Use AirlineDetailsResponse.ProtoReflect.Descriptor instead.\nfunc (*AirlineDetailsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{9}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [662, 665], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "AirlineDetailsResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use AirlineDetailsResponse.ProtoReflect.Descriptor instead.\nfunc (*AirlineDetailsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{9}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*AirlineDetailsResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*AirlineDetailsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [19398], "all_end_bytes": [19513], "primary_index": 0, "all_receivers_normalized": ["*AirlineDetailsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineDetailsResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *AirlineDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#97", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#99"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#99", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 99, "start_line": 666, "end_line": 672, "text": "func (x *AirlineDetailsResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetAirline", "primary_kind": "method", "primary_span": [666, 672], "def_symbols": [], "symbols": ["GetAirline", "func", "AirlineDetailsResponse", "Airline", "nil", "return"], "doc_head": "func (x *AirlineDetailsResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirlineDetailsResponse).GetAirline/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirlineDetailsResponse", "function_name": "", "method_name": "GetAirline", "type_name": "AirlineDetailsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirline"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirlineDetailsResponse).GetAirline/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirlineDetailsResponse"], "all_type_names": ["AirlineDetailsResponse"], "all_type_kinds": [null], "all_start_bytes": [19515], "all_end_bytes": [19622], "primary_index": 0, "all_receivers_normalized": ["(*AirlineDetailsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "AirlineDetailsResponse", "GetAirline", "x.Airline"], "header_context_minimal": "package v0\n// receiver: x *AirlineDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#98", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#100"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#100", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 100, "start_line": 673, "end_line": 679, "text": "type BatchGetRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tIds           []string               `protobuf:\"bytes,1,rep,name=ids,proto3\" json:\"ids,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 62, "primary_symbol": "BatchGetRequest", "primary_kind": "type", "primary_span": [673, 679], "def_symbols": [], "symbols": ["type", "BatchGetRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Ids", "string", "protobuf", "bytes", "rep", "name", "ids", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type BatchGetRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tIds           []string               `protobuf:\"bytes,1,rep,name=ids,proto3\" json:\"ids,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:BatchGetRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "BatchGetRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["BatchGetRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:BatchGetRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["BatchGetRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [19629], "all_end_bytes": [19888], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetRequest", "Ids", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#99", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#101"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#101", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 101, "start_line": 680, "end_line": 686, "text": "func (x *BatchGetRequest) Reset() {\n\t*x = BatchGetRequest{}\n\tmi := &file_airlines_proto_msgTypes[10]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [680, 686], "def_symbols": [], "symbols": ["Reset", "func", "BatchGetRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *BatchGetRequest) Reset() {\n\t*x = BatchGetRequest{}\n\tmi := &file_airlines_proto_msgTypes[10]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetRequest", "function_name": "", "method_name": "Reset", "type_name": "BatchGetRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetRequest"], "all_type_names": ["BatchGetRequest"], "all_type_kinds": [null], "all_start_bytes": [19890], "all_end_bytes": [20073], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#100", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#102"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#102", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 102, "start_line": 687, "end_line": 690, "text": "func (x *BatchGetRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [687, 690], "def_symbols": [], "symbols": ["String", "func", "BatchGetRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *BatchGetRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetRequest", "function_name": "", "method_name": "String", "type_name": "BatchGetRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetRequest"], "all_type_names": ["BatchGetRequest"], "all_type_kinds": [null], "all_start_bytes": [20075], "all_end_bytes": [20159], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#101", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#103"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#103", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 103, "start_line": 691, "end_line": 692, "text": "func (*BatchGetRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [691, 692], "def_symbols": [], "symbols": ["ProtoMessage", "func", "BatchGetRequest"], "doc_head": "func (*BatchGetRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [20161], "all_end_bytes": [20202], "primary_index": 0, "all_receivers_normalized": ["*BatchGetRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#102", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#104"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#104", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 104, "start_line": 693, "end_line": 704, "text": "func (x *BatchGetRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[10]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [693, 704], "def_symbols": [], "symbols": ["ProtoReflect", "func", "BatchGetRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *BatchGetRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[10]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "BatchGetRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetRequest"], "all_type_names": ["BatchGetRequest"], "all_type_kinds": [null], "all_start_bytes": [20204], "all_end_bytes": [20487], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#103", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#105"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#105", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 105, "start_line": 705, "end_line": 709, "text": "// Deprecated: Use BatchGetRequest.ProtoReflect.Descriptor instead.\nfunc (*BatchGetRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{10}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [706, 709], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "BatchGetRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use BatchGetRequest.ProtoReflect.Descriptor instead.\nfunc (*BatchGetRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{10}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [20557], "all_end_bytes": [20666], "primary_index": 0, "all_receivers_normalized": ["*BatchGetRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#104", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#106"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#106", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 106, "start_line": 710, "end_line": 716, "text": "func (x *BatchGetRequest) GetIds() []string {\n\tif x != nil {\n\t\treturn x.Ids\n\t}\n\treturn nil\n}\n", "n_tokens": 31, "primary_symbol": "GetIds", "primary_kind": "method", "primary_span": [710, 716], "def_symbols": [], "symbols": ["GetIds", "func", "BatchGetRequest", "string", "nil", "return", "Ids"], "doc_head": "func (x *BatchGetRequest) GetIds() []string {\n\tif x != nil {\n\t\treturn x.Ids\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetRequest).GetIds/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetRequest", "function_name": "", "method_name": "GetIds", "type_name": "BatchGetRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIds"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetRequest).GetIds/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetRequest"], "all_type_names": ["BatchGetRequest"], "all_type_kinds": [null], "all_start_bytes": [20668], "all_end_bytes": [20760], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetRequest", "GetIds", "Ids", "x.Ids"], "header_context_minimal": "package v0\n// receiver: x *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#105", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#107"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#107", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 107, "start_line": 717, "end_line": 723, "text": "type BatchGetResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirlines      []*Airline             `protobuf:\"bytes,1,rep,name=airlines,proto3\" json:\"airlines,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 65, "primary_symbol": "BatchGetResponse", "primary_kind": "type", "primary_span": [717, 723], "def_symbols": [], "symbols": ["type", "BatchGetResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airlines", "Airline", "protobuf", "bytes", "rep", "name", "airlines", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type BatchGetResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirlines      []*Airline             `protobuf:\"bytes,1,rep,name=airlines,proto3\" json:\"airlines,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:BatchGetResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "BatchGetResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["BatchGetResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:BatchGetResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["BatchGetResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [20767], "all_end_bytes": [21037], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "Airlines", "BatchGetResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#106", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#108"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#108", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 108, "start_line": 724, "end_line": 730, "text": "func (x *BatchGetResponse) Reset() {\n\t*x = BatchGetResponse{}\n\tmi := &file_airlines_proto_msgTypes[11]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [724, 730], "def_symbols": [], "symbols": ["Reset", "func", "BatchGetResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *BatchGetResponse) Reset() {\n\t*x = BatchGetResponse{}\n\tmi := &file_airlines_proto_msgTypes[11]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetResponse", "function_name": "", "method_name": "Reset", "type_name": "BatchGetResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetResponse"], "all_type_names": ["BatchGetResponse"], "all_type_kinds": [null], "all_start_bytes": [21039], "all_end_bytes": [21224], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#107", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#109"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#109", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 109, "start_line": 731, "end_line": 734, "text": "func (x *BatchGetResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [731, 734], "def_symbols": [], "symbols": ["String", "func", "BatchGetResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *BatchGetResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetResponse", "function_name": "", "method_name": "String", "type_name": "BatchGetResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetResponse"], "all_type_names": ["BatchGetResponse"], "all_type_kinds": [null], "all_start_bytes": [21226], "all_end_bytes": [21311], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#108", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#110"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#110", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 110, "start_line": 735, "end_line": 736, "text": "func (*BatchGetResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [735, 736], "def_symbols": [], "symbols": ["ProtoMessage", "func", "BatchGetResponse"], "doc_head": "func (*BatchGetResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [21313], "all_end_bytes": [21355], "primary_index": 0, "all_receivers_normalized": ["*BatchGetResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#109", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#111"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#111", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 111, "start_line": 737, "end_line": 748, "text": "func (x *BatchGetResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[11]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [737, 748], "def_symbols": [], "symbols": ["ProtoReflect", "func", "BatchGetResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *BatchGetResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[11]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "BatchGetResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetResponse"], "all_type_names": ["BatchGetResponse"], "all_type_kinds": [null], "all_start_bytes": [21357], "all_end_bytes": [21641], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#110", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#112"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#112", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 112, "start_line": 749, "end_line": 753, "text": "// Deprecated: Use BatchGetResponse.ProtoReflect.Descriptor instead.\nfunc (*BatchGetResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{11}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [750, 753], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "BatchGetResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use BatchGetResponse.ProtoReflect.Descriptor instead.\nfunc (*BatchGetResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{11}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [21712], "all_end_bytes": [21822], "primary_index": 0, "all_receivers_normalized": ["*BatchGetResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#111", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#113"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#113", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 113, "start_line": 754, "end_line": 760, "text": "func (x *BatchGetResponse) GetAirlines() []*Airline {\n\tif x != nil {\n\t\treturn x.Airlines\n\t}\n\treturn nil\n}\n", "n_tokens": 33, "primary_symbol": "GetAirlines", "primary_kind": "method", "primary_span": [754, 760], "def_symbols": [], "symbols": ["GetAirlines", "func", "BatchGetResponse", "Airline", "nil", "return", "Airlines"], "doc_head": "func (x *BatchGetResponse) GetAirlines() []*Airline {\n\tif x != nil {\n\t\treturn x.Airlines\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetResponse).GetAirlines/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetResponse", "function_name": "", "method_name": "GetAirlines", "type_name": "BatchGetResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirlines"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetResponse).GetAirlines/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetResponse"], "all_type_names": ["BatchGetResponse"], "all_type_kinds": [null], "all_start_bytes": [21824], "all_end_bytes": [21929], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "Airlines", "BatchGetResponse", "GetAirlines", "x.Airlines"], "header_context_minimal": "package v0\n// receiver: x *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#112", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#114"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#114", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 114, "start_line": 761, "end_line": 768, "text": "type BatchGetByDesignatorRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignators   []string               `protobuf:\"bytes,1,rep,name=designators,proto3\" json:\"designators,omitempty\"`\n\tForDate       *string                `protobuf:\"bytes,2,opt,name=forDate,proto3,oneof\" json:\"forDate,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 98, "primary_symbol": "BatchGetByDesignatorRequest", "primary_kind": "type", "primary_span": [761, 768], "def_symbols": [], "symbols": ["type", "BatchGetByDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designators", "string", "protobuf", "bytes", "rep", "name", "designators", "proto3", "json", "omitempty", "ForDate", "opt", "forDate", "oneof", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type BatchGetByDesignatorRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignators   []string               `protobuf:\"bytes,1,rep,name=designators,proto3\" json:\"designators,omitempty\"`\n\tForDate       *string                `protobuf:\"bytes,2,opt,name=forDate,proto3,oneof\" json:\"forDate,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:BatchGetByDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "BatchGetByDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["BatchGetByDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:BatchGetByDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [21936], "all_end_bytes": [22337], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "Designators", "ForDate", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#113", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#115"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#115", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 115, "start_line": 769, "end_line": 775, "text": "func (x *BatchGetByDesignatorRequest) Reset() {\n\t*x = BatchGetByDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[12]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 57, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [769, 775], "def_symbols": [], "symbols": ["Reset", "func", "BatchGetByDesignatorRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *BatchGetByDesignatorRequest) Reset() {\n\t*x = BatchGetByDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[12]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [22339], "all_end_bytes": [22546], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#114", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#116"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#116", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 116, "start_line": 776, "end_line": 779, "text": "func (x *BatchGetByDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 25, "primary_symbol": "String", "primary_kind": "method", "primary_span": [776, 779], "def_symbols": [], "symbols": ["String", "func", "BatchGetByDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *BatchGetByDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [22548], "all_end_bytes": [22644], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#115", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#117"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#117", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 117, "start_line": 780, "end_line": 781, "text": "func (*BatchGetByDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 13, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [780, 781], "def_symbols": [], "symbols": ["ProtoMessage", "func", "BatchGetByDesignatorRequest"], "doc_head": "func (*BatchGetByDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetByDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetByDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [22646], "all_end_bytes": [22699], "primary_index": 0, "all_receivers_normalized": ["*BatchGetByDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#116", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#118"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#118", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 118, "start_line": 782, "end_line": 793, "text": "func (x *BatchGetByDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[12]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 84, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [782, 793], "def_symbols": [], "symbols": ["ProtoReflect", "func", "BatchGetByDesignatorRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *BatchGetByDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[12]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [22701], "all_end_bytes": [22996], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#117", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#119"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#119", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 119, "start_line": 794, "end_line": 798, "text": "// Deprecated: Use BatchGetByDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*BatchGetByDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{12}\n}\n", "n_tokens": 51, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [795, 798], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "BatchGetByDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use BatchGetByDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*BatchGetByDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{12}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetByDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetByDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [23078], "all_end_bytes": [23199], "primary_index": 0, "all_receivers_normalized": ["*BatchGetByDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#118", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#120"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#120", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 120, "start_line": 799, "end_line": 805, "text": "func (x *BatchGetByDesignatorRequest) GetDesignators() []string {\n\tif x != nil {\n\t\treturn x.Designators\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetDesignators", "primary_kind": "method", "primary_span": [799, 805], "def_symbols": [], "symbols": ["GetDesignators", "func", "BatchGetByDesignatorRequest", "string", "nil", "return", "Designators"], "doc_head": "func (x *BatchGetByDesignatorRequest) GetDesignators() []string {\n\tif x != nil {\n\t\treturn x.Designators\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).GetDesignators/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "GetDesignators", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignators"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).GetDesignators/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [23201], "all_end_bytes": [23321], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "Designators", "GetDesignators", "x.Designators"], "header_context_minimal": "package v0\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#119", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#121"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#121", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 121, "start_line": 806, "end_line": 812, "text": "func (x *BatchGetByDesignatorRequest) GetForDate() string {\n\tif x != nil && x.ForDate != nil {\n\t\treturn *x.ForDate\n\t}\n\treturn \"\"\n}\n", "n_tokens": 40, "primary_symbol": "GetForDate", "primary_kind": "method", "primary_span": [806, 812], "def_symbols": [], "symbols": ["GetForDate", "func", "BatchGetByDesignatorRequest", "string", "nil", "ForDate", "return"], "doc_head": "func (x *BatchGetByDesignatorRequest) GetForDate() string {\n\tif x != nil && x.ForDate != nil {\n\t\treturn *x.ForDate\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).GetForDate/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "GetForDate", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetForDate"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).GetForDate/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [23323], "all_end_bytes": [23453], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "ForDate", "GetForDate", "x.ForDate"], "header_context_minimal": "package v0\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#120", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#122"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#122", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 122, "start_line": 813, "end_line": 819, "text": "type BatchGetByDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirlines      []*Airline             `protobuf:\"bytes,1,rep,name=airlines,proto3\" json:\"airlines,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 68, "primary_symbol": "BatchGetByDesignatorResponse", "primary_kind": "type", "primary_span": [813, 819], "def_symbols": [], "symbols": ["type", "BatchGetByDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airlines", "Airline", "protobuf", "bytes", "rep", "name", "airlines", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type BatchGetByDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirlines      []*Airline             `protobuf:\"bytes,1,rep,name=airlines,proto3\" json:\"airlines,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:BatchGetByDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "BatchGetByDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["BatchGetByDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:BatchGetByDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [23460], "all_end_bytes": [23742], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "Airlines", "BatchGetByDesignatorResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#121", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#123"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#123", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 123, "start_line": 820, "end_line": 826, "text": "func (x *BatchGetByDesignatorResponse) Reset() {\n\t*x = BatchGetByDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[13]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 57, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [820, 826], "def_symbols": [], "symbols": ["Reset", "func", "BatchGetByDesignatorResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *BatchGetByDesignatorResponse) Reset() {\n\t*x = BatchGetByDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[13]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "BatchGetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorResponse"], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [23744], "all_end_bytes": [23953], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#122", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#124"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#124", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 124, "start_line": 827, "end_line": 830, "text": "func (x *BatchGetByDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 25, "primary_symbol": "String", "primary_kind": "method", "primary_span": [827, 830], "def_symbols": [], "symbols": ["String", "func", "BatchGetByDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *BatchGetByDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "BatchGetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorResponse"], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [23955], "all_end_bytes": [24052], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#123", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#125"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#125", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 125, "start_line": 831, "end_line": 832, "text": "func (*BatchGetByDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 13, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [831, 832], "def_symbols": [], "symbols": ["ProtoMessage", "func", "BatchGetByDesignatorResponse"], "doc_head": "func (*BatchGetByDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetByDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetByDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [24054], "all_end_bytes": [24108], "primary_index": 0, "all_receivers_normalized": ["*BatchGetByDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#124", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#126"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#126", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 126, "start_line": 833, "end_line": 844, "text": "func (x *BatchGetByDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[13]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 84, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [833, 844], "def_symbols": [], "symbols": ["ProtoReflect", "func", "BatchGetByDesignatorResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *BatchGetByDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[13]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "BatchGetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorResponse"], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [24110], "all_end_bytes": [24406], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#125", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#127"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#127", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 127, "start_line": 845, "end_line": 849, "text": "// Deprecated: Use BatchGetByDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*BatchGetByDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{13}\n}\n", "n_tokens": 51, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [846, 849], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "BatchGetByDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use BatchGetByDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*BatchGetByDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{13}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetByDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetByDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [24489], "all_end_bytes": [24611], "primary_index": 0, "all_receivers_normalized": ["*BatchGetByDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#126", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#128"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#128", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 128, "start_line": 850, "end_line": 856, "text": "func (x *BatchGetByDesignatorResponse) GetAirlines() []*Airline {\n\tif x != nil {\n\t\treturn x.Airlines\n\t}\n\treturn nil\n}\n", "n_tokens": 36, "primary_symbol": "GetAirlines", "primary_kind": "method", "primary_span": [850, 856], "def_symbols": [], "symbols": ["GetAirlines", "func", "BatchGetByDesignatorResponse", "Airline", "nil", "return", "Airlines"], "doc_head": "func (x *BatchGetByDesignatorResponse) GetAirlines() []*Airline {\n\tif x != nil {\n\t\treturn x.Airlines\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorResponse).GetAirlines/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorResponse", "function_name": "", "method_name": "GetAirlines", "type_name": "BatchGetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirlines"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorResponse).GetAirlines/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorResponse"], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [24613], "all_end_bytes": [24730], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "Airlines", "BatchGetByDesignatorResponse", "GetAirlines", "x.Airlines"], "header_context_minimal": "package v0\n// receiver: x *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#127", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#129"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#129", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 129, "start_line": 857, "end_line": 864, "text": "type GetByDesignatorRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    string                 `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tForDate       *string                `protobuf:\"bytes,2,opt,name=forDate,proto3,oneof\" json:\"forDate,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 95, "primary_symbol": "GetByDesignatorRequest", "primary_kind": "type", "primary_span": [857, 864], "def_symbols": [], "symbols": ["type", "GetByDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designator", "string", "protobuf", "bytes", "opt", "name", "designator", "proto3", "json", "omitempty", "ForDate", "forDate", "oneof", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetByDesignatorRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    string                 `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tForDate       *string                `protobuf:\"bytes,2,opt,name=forDate,proto3,oneof\" json:\"forDate,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetByDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetByDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetByDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetByDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [24737], "all_end_bytes": [25131], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "ForDate", "GetByDesignatorRequest", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#128", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#130"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#130", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 130, "start_line": 865, "end_line": 871, "text": "func (x *GetByDesignatorRequest) Reset() {\n\t*x = GetByDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[14]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 55, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [865, 871], "def_symbols": [], "symbols": ["Reset", "func", "GetByDesignatorRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetByDesignatorRequest) Reset() {\n\t*x = GetByDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[14]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [25133], "all_end_bytes": [25330], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#129", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#131"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#131", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 131, "start_line": 872, "end_line": 875, "text": "func (x *GetByDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 24, "primary_symbol": "String", "primary_kind": "method", "primary_span": [872, 875], "def_symbols": [], "symbols": ["String", "func", "GetByDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetByDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [25332], "all_end_bytes": [25423], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#130", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#132"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#132", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 132, "start_line": 876, "end_line": 877, "text": "func (*GetByDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 12, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [876, 877], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetByDesignatorRequest"], "doc_head": "func (*GetByDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetByDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetByDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [25425], "all_end_bytes": [25473], "primary_index": 0, "all_receivers_normalized": ["*GetByDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetByDesignatorRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#131", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#133"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#133", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 133, "start_line": 878, "end_line": 889, "text": "func (x *GetByDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[14]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 83, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [878, 889], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetByDesignatorRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetByDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[14]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [25475], "all_end_bytes": [25765], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#132", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#134"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#134", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 134, "start_line": 890, "end_line": 894, "text": "// Deprecated: Use GetByDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*GetByDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{14}\n}\n", "n_tokens": 49, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [891, 894], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetByDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetByDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*GetByDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{14}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetByDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetByDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [25842], "all_end_bytes": [25958], "primary_index": 0, "all_receivers_normalized": ["*GetByDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetByDesignatorRequest"], "header_context_minimal": "package v0\n// receiver: *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#133", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#135"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#135", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 135, "start_line": 895, "end_line": 901, "text": "func (x *GetByDesignatorRequest) GetDesignator() string {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn \"\"\n}\n", "n_tokens": 32, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [895, 901], "def_symbols": [], "symbols": ["GetDesignator", "func", "GetByDesignatorRequest", "string", "nil", "return", "Designator"], "doc_head": "func (x *GetByDesignatorRequest) GetDesignator() string {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "GetDesignator", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [25960], "all_end_bytes": [26070], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetByDesignatorRequest", "GetDesignator", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#134", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#136"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#136", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 136, "start_line": 902, "end_line": 908, "text": "func (x *GetByDesignatorRequest) GetForDate() string {\n\tif x != nil && x.ForDate != nil {\n\t\treturn *x.ForDate\n\t}\n\treturn \"\"\n}\n", "n_tokens": 39, "primary_symbol": "GetForDate", "primary_kind": "method", "primary_span": [902, 908], "def_symbols": [], "symbols": ["GetForDate", "func", "GetByDesignatorRequest", "string", "nil", "ForDate", "return"], "doc_head": "func (x *GetByDesignatorRequest) GetForDate() string {\n\tif x != nil && x.ForDate != nil {\n\t\treturn *x.ForDate\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).GetForDate/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "GetForDate", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetForDate"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).GetForDate/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [26072], "all_end_bytes": [26197], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["ForDate", "GetByDesignatorRequest", "GetForDate", "x.ForDate"], "header_context_minimal": "package v0\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#135", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#137"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#137", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 137, "start_line": 909, "end_line": 915, "text": "type GetByDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 67, "primary_symbol": "GetByDesignatorResponse", "primary_kind": "type", "primary_span": [909, 915], "def_symbols": [], "symbols": ["type", "GetByDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airline", "protobuf", "bytes", "opt", "name", "airline", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetByDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirline       *Airline               `protobuf:\"bytes,1,opt,name=airline,proto3\" json:\"airline,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetByDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetByDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetByDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetByDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [26204], "all_end_bytes": [26479], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "GetByDesignatorResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#136", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#138"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#138", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 138, "start_line": 916, "end_line": 922, "text": "func (x *GetByDesignatorResponse) Reset() {\n\t*x = GetByDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[15]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 55, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [916, 922], "def_symbols": [], "symbols": ["Reset", "func", "GetByDesignatorResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetByDesignatorResponse) Reset() {\n\t*x = GetByDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[15]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "GetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorResponse"], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [26481], "all_end_bytes": [26680], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#137", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#139"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#139", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 139, "start_line": 923, "end_line": 926, "text": "func (x *GetByDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 24, "primary_symbol": "String", "primary_kind": "method", "primary_span": [923, 926], "def_symbols": [], "symbols": ["String", "func", "GetByDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetByDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "GetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorResponse"], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [26682], "all_end_bytes": [26774], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#138", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#140"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#140", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 140, "start_line": 927, "end_line": 928, "text": "func (*GetByDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 12, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [927, 928], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetByDesignatorResponse"], "doc_head": "func (*GetByDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetByDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetByDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [26776], "all_end_bytes": [26825], "primary_index": 0, "all_receivers_normalized": ["*GetByDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetByDesignatorResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#139", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#141"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#141", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 141, "start_line": 929, "end_line": 940, "text": "func (x *GetByDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[15]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 83, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [929, 940], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetByDesignatorResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetByDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[15]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorResponse"], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [26827], "all_end_bytes": [27118], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#140", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#142"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#142", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 142, "start_line": 941, "end_line": 945, "text": "// Deprecated: Use GetByDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*GetByDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{15}\n}\n", "n_tokens": 49, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [942, 945], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetByDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetByDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*GetByDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{15}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetByDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetByDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [27196], "all_end_bytes": [27313], "primary_index": 0, "all_receivers_normalized": ["*GetByDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetByDesignatorResponse"], "header_context_minimal": "package v0\n// receiver: *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#141", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#143"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#143", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 143, "start_line": 946, "end_line": 952, "text": "func (x *GetByDesignatorResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}\n", "n_tokens": 36, "primary_symbol": "GetAirline", "primary_kind": "method", "primary_span": [946, 952], "def_symbols": [], "symbols": ["GetAirline", "func", "GetByDesignatorResponse", "Airline", "nil", "return"], "doc_head": "func (x *GetByDesignatorResponse) GetAirline() *Airline {\n\tif x != nil {\n\t\treturn x.Airline\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorResponse).GetAirline/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorResponse", "function_name": "", "method_name": "GetAirline", "type_name": "GetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirline"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorResponse).GetAirline/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorResponse"], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [27315], "all_end_bytes": [27423], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetAirline", "GetByDesignatorResponse", "x.Airline"], "header_context_minimal": "package v0\n// receiver: x *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#142", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#144"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#144", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 144, "start_line": 953, "end_line": 959, "text": "type GetDesignatorsForAirlineRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 62, "primary_symbol": "GetDesignatorsForAirlineRequest", "primary_kind": "type", "primary_span": [953, 959], "def_symbols": [], "symbols": ["type", "GetDesignatorsForAirlineRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetDesignatorsForAirlineRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetDesignatorsForAirlineRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetDesignatorsForAirlineRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetDesignatorsForAirlineRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetDesignatorsForAirlineRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetDesignatorsForAirlineRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [27430], "all_end_bytes": [27703], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorsForAirlineRequest", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#143", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#145"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#145", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 145, "start_line": 960, "end_line": 966, "text": "func (x *GetDesignatorsForAirlineRequest) Reset() {\n\t*x = GetDesignatorsForAirlineRequest{}\n\tmi := &file_airlines_proto_msgTypes[16]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 59, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [960, 966], "def_symbols": [], "symbols": ["Reset", "func", "GetDesignatorsForAirlineRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetDesignatorsForAirlineRequest) Reset() {\n\t*x = GetDesignatorsForAirlineRequest{}\n\tmi := &file_airlines_proto_msgTypes[16]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorsForAirlineRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorsForAirlineRequest", "function_name": "", "method_name": "Reset", "type_name": "GetDesignatorsForAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorsForAirlineRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorsForAirlineRequest"], "all_type_names": ["GetDesignatorsForAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [27705], "all_end_bytes": [27920], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorsForAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorsForAirlineRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorsForAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#144", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#146"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#146", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 146, "start_line": 967, "end_line": 970, "text": "func (x *GetDesignatorsForAirlineRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 26, "primary_symbol": "String", "primary_kind": "method", "primary_span": [967, 970], "def_symbols": [], "symbols": ["String", "func", "GetDesignatorsForAirlineRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetDesignatorsForAirlineRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorsForAirlineRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorsForAirlineRequest", "function_name": "", "method_name": "String", "type_name": "GetDesignatorsForAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorsForAirlineRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorsForAirlineRequest"], "all_type_names": ["GetDesignatorsForAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [27922], "all_end_bytes": [28022], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorsForAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorsForAirlineRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorsForAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#145", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#147"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#147", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 147, "start_line": 971, "end_line": 972, "text": "func (*GetDesignatorsForAirlineRequest) ProtoMessage() {}\n", "n_tokens": 14, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [971, 972], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetDesignatorsForAirlineRequest"], "doc_head": "func (*GetDesignatorsForAirlineRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorsForAirlineRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorsForAirlineRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [28024], "all_end_bytes": [28081], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorsForAirlineRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetDesignatorsForAirlineRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorsForAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#146", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#148"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#148", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 148, "start_line": 973, "end_line": 984, "text": "func (x *GetDesignatorsForAirlineRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[16]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 85, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [973, 984], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetDesignatorsForAirlineRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetDesignatorsForAirlineRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[16]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorsForAirlineRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorsForAirlineRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetDesignatorsForAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorsForAirlineRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorsForAirlineRequest"], "all_type_names": ["GetDesignatorsForAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [28083], "all_end_bytes": [28382], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorsForAirlineRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorsForAirlineRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetDesignatorsForAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#147", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#149"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#149", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 149, "start_line": 985, "end_line": 989, "text": "// Deprecated: Use GetDesignatorsForAirlineRequest.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorsForAirlineRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{16}\n}\n", "n_tokens": 53, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [986, 989], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetDesignatorsForAirlineRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetDesignatorsForAirlineRequest.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorsForAirlineRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{16}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorsForAirlineRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorsForAirlineRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [28468], "all_end_bytes": [28593], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorsForAirlineRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetDesignatorsForAirlineRequest"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorsForAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#148", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#150"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#150", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 150, "start_line": 990, "end_line": 996, "text": "func (x *GetDesignatorsForAirlineRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 32, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [990, 996], "def_symbols": [], "symbols": ["GetId", "func", "GetDesignatorsForAirlineRequest", "string", "nil", "return"], "doc_head": "func (x *GetDesignatorsForAirlineRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorsForAirlineRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorsForAirlineRequest", "function_name": "", "method_name": "GetId", "type_name": "GetDesignatorsForAirlineRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorsForAirlineRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorsForAirlineRequest"], "all_type_names": ["GetDesignatorsForAirlineRequest"], "all_type_kinds": [null], "all_start_bytes": [28595], "all_end_bytes": [28698], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorsForAirlineRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetDesignatorsForAirlineRequest", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *GetDesignatorsForAirlineRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#149", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#151"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#151", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 151, "start_line": 997, "end_line": 1003, "text": "type GetDesignatorsForAirlineResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignators   []*Designator          `protobuf:\"bytes,1,rep,name=designators,proto3\" json:\"designators,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 70, "primary_symbol": "GetDesignatorsForAirlineResponse", "primary_kind": "type", "primary_span": [997, 1003], "def_symbols": [], "symbols": ["type", "GetDesignatorsForAirlineResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designators", "Designator", "protobuf", "bytes", "rep", "name", "designators", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetDesignatorsForAirlineResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignators   []*Designator          `protobuf:\"bytes,1,rep,name=designators,proto3\" json:\"designators,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetDesignatorsForAirlineResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetDesignatorsForAirlineResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetDesignatorsForAirlineResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetDesignatorsForAirlineResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetDesignatorsForAirlineResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [28705], "all_end_bytes": [28997], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "Designators", "GetDesignatorsForAirlineResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#150", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#152"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#152", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 152, "start_line": 1004, "end_line": 1010, "text": "func (x *GetDesignatorsForAirlineResponse) Reset() {\n\t*x = GetDesignatorsForAirlineResponse{}\n\tmi := &file_airlines_proto_msgTypes[17]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 59, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1004, 1010], "def_symbols": [], "symbols": ["Reset", "func", "GetDesignatorsForAirlineResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetDesignatorsForAirlineResponse) Reset() {\n\t*x = GetDesignatorsForAirlineResponse{}\n\tmi := &file_airlines_proto_msgTypes[17]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorsForAirlineResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorsForAirlineResponse", "function_name": "", "method_name": "Reset", "type_name": "GetDesignatorsForAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorsForAirlineResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorsForAirlineResponse"], "all_type_names": ["GetDesignatorsForAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [28999], "all_end_bytes": [29216], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorsForAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorsForAirlineResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorsForAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#151", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#153"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#153", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 153, "start_line": 1011, "end_line": 1014, "text": "func (x *GetDesignatorsForAirlineResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 26, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1011, 1014], "def_symbols": [], "symbols": ["String", "func", "GetDesignatorsForAirlineResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetDesignatorsForAirlineResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorsForAirlineResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorsForAirlineResponse", "function_name": "", "method_name": "String", "type_name": "GetDesignatorsForAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorsForAirlineResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorsForAirlineResponse"], "all_type_names": ["GetDesignatorsForAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [29218], "all_end_bytes": [29319], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorsForAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorsForAirlineResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorsForAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#152", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#154"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#154", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 154, "start_line": 1015, "end_line": 1016, "text": "func (*GetDesignatorsForAirlineResponse) ProtoMessage() {}\n", "n_tokens": 14, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1015, 1016], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetDesignatorsForAirlineResponse"], "doc_head": "func (*GetDesignatorsForAirlineResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorsForAirlineResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorsForAirlineResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [29321], "all_end_bytes": [29379], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorsForAirlineResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetDesignatorsForAirlineResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorsForAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#153", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#155"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#155", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 155, "start_line": 1017, "end_line": 1028, "text": "func (x *GetDesignatorsForAirlineResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[17]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 85, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1017, 1028], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetDesignatorsForAirlineResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetDesignatorsForAirlineResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[17]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorsForAirlineResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorsForAirlineResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetDesignatorsForAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorsForAirlineResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorsForAirlineResponse"], "all_type_names": ["GetDesignatorsForAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [29381], "all_end_bytes": [29681], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorsForAirlineResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorsForAirlineResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetDesignatorsForAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#154", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#156"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#156", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 156, "start_line": 1029, "end_line": 1033, "text": "// Deprecated: Use GetDesignatorsForAirlineResponse.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorsForAirlineResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{17}\n}\n", "n_tokens": 53, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1030, 1033], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetDesignatorsForAirlineResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetDesignatorsForAirlineResponse.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorsForAirlineResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{17}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorsForAirlineResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorsForAirlineResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [29768], "all_end_bytes": [29894], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorsForAirlineResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetDesignatorsForAirlineResponse"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorsForAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#155", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#157"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#157", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 157, "start_line": 1034, "end_line": 1040, "text": "func (x *GetDesignatorsForAirlineResponse) GetDesignators() []*Designator {\n\tif x != nil {\n\t\treturn x.Designators\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetDesignators", "primary_kind": "method", "primary_span": [1034, 1040], "def_symbols": [], "symbols": ["GetDesignators", "func", "GetDesignatorsForAirlineResponse", "Designator", "nil", "return", "Designators"], "doc_head": "func (x *GetDesignatorsForAirlineResponse) GetDesignators() []*Designator {\n\tif x != nil {\n\t\treturn x.Designators\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorsForAirlineResponse).GetDesignators/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorsForAirlineResponse", "function_name": "", "method_name": "GetDesignators", "type_name": "GetDesignatorsForAirlineResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignators"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorsForAirlineResponse).GetDesignators/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorsForAirlineResponse"], "all_type_names": ["GetDesignatorsForAirlineResponse"], "all_type_kinds": [null], "all_start_bytes": [29896], "all_end_bytes": [30026], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorsForAirlineResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "Designators", "GetDesignators", "GetDesignatorsForAirlineResponse", "x.Designators"], "header_context_minimal": "package v0\n// receiver: x *GetDesignatorsForAirlineResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#156", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#158"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#158", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 158, "start_line": 1041, "end_line": 1053, "text": "type Designator struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    string                 `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tAirlineId     string                 `protobuf:\"bytes,2,opt,name=airlineId,proto3\" json:\"airlineId,omitempty\"`\n\tValidFrom     *timestamppb.Timestamp `protobuf:\"bytes,3,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo       *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tAirlineName   string                 `protobuf:\"bytes,5,opt,name=airlineName,proto3\" json:\"airlineName,omitempty\"`\n\tCreatedAt     *timestamppb.Timestamp `protobuf:\"bytes,14,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt     *timestamppb.Timestamp `protobuf:\"bytes,15,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 234, "primary_symbol": "Designator", "primary_kind": "type", "primary_span": [1041, 1053], "def_symbols": [], "symbols": ["type", "Designator", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "designator", "proto3", "json", "omitempty", "AirlineId", "airlineId", "ValidFrom", "timestamppb", "Timestamp", "validFrom", "ValidTo", "validTo", "AirlineName", "airlineName", "CreatedAt", "createdAt", "UpdatedAt", "updatedAt", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Designator struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    string                 `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tAirlineId     string                 `protobuf:\"bytes,2,opt,name=airlineId,proto3\" json:\"airlineId,omitempty\"`\n\tValidFrom     *timestamppb.Timestamp `protobuf:\"bytes,3,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo       *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tAirlineName   string                 `protobuf:\"bytes,5,opt,name=airlineName,proto3\" json:\"airlineName,omitempty\"`\n\tCreatedAt     *timestamppb.Timestamp `protobuf:\"bytes,14,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt     *timestamppb.Timestamp `protobuf:\"bytes,15,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Designator (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Designator", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Designator"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Designator (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Designator"], "all_type_kinds": ["struct"], "all_start_bytes": [30033], "all_end_bytes": [30975], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["AirlineId", "AirlineName", "CreatedAt", "Designator", "MessageState", "SizeCache", "Timestamp", "UnknownFields", "UpdatedAt", "ValidFrom", "ValidTo", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#157", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#159"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#159", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 159, "start_line": 1054, "end_line": 1060, "text": "func (x *Designator) Reset() {\n\t*x = Designator{}\n\tmi := &file_airlines_proto_msgTypes[18]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 49, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1054, 1060], "def_symbols": [], "symbols": ["Reset", "func", "Designator", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Designator) Reset() {\n\t*x = Designator{}\n\tmi := &file_airlines_proto_msgTypes[18]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "Reset", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [30977], "all_end_bytes": [31150], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#158", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#160"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#160", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 160, "start_line": 1061, "end_line": 1064, "text": "func (x *Designator) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 21, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1061, 1064], "def_symbols": [], "symbols": ["String", "func", "Designator", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Designator) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "String", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [31152], "all_end_bytes": [31231], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#159", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#161"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#161", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 161, "start_line": 1065, "end_line": 1066, "text": "func (*Designator) ProtoMessage() {}\n", "n_tokens": 9, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1065, 1066], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Designator"], "doc_head": "func (*Designator) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Designator", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Designator"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [31233], "all_end_bytes": [31269], "primary_index": 0, "all_receivers_normalized": ["*Designator"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#160", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#162"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#162", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 162, "start_line": 1067, "end_line": 1078, "text": "func (x *Designator) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[18]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 80, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1067, 1078], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Designator", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Designator) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[18]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "ProtoReflect", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [31271], "all_end_bytes": [31549], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#161", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#163"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#163", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 163, "start_line": 1079, "end_line": 1083, "text": "// Deprecated: Use Designator.ProtoReflect.Descriptor instead.\nfunc (*Designator) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{18}\n}\n", "n_tokens": 43, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1080, 1083], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Designator", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Designator.ProtoReflect.Descriptor instead.\nfunc (*Designator) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{18}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Designator", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Designator"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [31614], "all_end_bytes": [31718], "primary_index": 0, "all_receivers_normalized": ["*Designator"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "Designator"], "header_context_minimal": "package v0\n// receiver: *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#162", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#164"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#164", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 164, "start_line": 1084, "end_line": 1090, "text": "func (x *Designator) GetDesignator() string {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn \"\"\n}\n", "n_tokens": 29, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [1084, 1090], "def_symbols": [], "symbols": ["GetDesignator", "func", "Designator", "string", "nil", "return"], "doc_head": "func (x *Designator) GetDesignator() string {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetDesignator", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [31720], "all_end_bytes": [31818], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetDesignator", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#163", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#165"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#165", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 165, "start_line": 1091, "end_line": 1097, "text": "func (x *Designator) GetAirlineId() string {\n\tif x != nil {\n\t\treturn x.AirlineId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 32, "primary_symbol": "GetAirlineId", "primary_kind": "method", "primary_span": [1091, 1097], "def_symbols": [], "symbols": ["GetAirlineId", "func", "Designator", "string", "nil", "return", "AirlineId"], "doc_head": "func (x *Designator) GetAirlineId() string {\n\tif x != nil {\n\t\treturn x.AirlineId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetAirlineId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetAirlineId", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirlineId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetAirlineId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [31820], "all_end_bytes": [31916], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineId", "Designator", "GetAirlineId", "x.AirlineId"], "header_context_minimal": "package v0\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#164", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#166"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#166", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 166, "start_line": 1098, "end_line": 1104, "text": "func (x *Designator) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetValidFrom", "primary_kind": "method", "primary_span": [1098, 1104], "def_symbols": [], "symbols": ["GetValidFrom", "func", "Designator", "timestamppb", "Timestamp", "nil", "return", "ValidFrom"], "doc_head": "func (x *Designator) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetValidFrom/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetValidFrom", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidFrom"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetValidFrom/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [31918], "all_end_bytes": [32031], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Designator", "GetValidFrom", "Timestamp", "ValidFrom", "timestamppb.Timestamp", "x.ValidFrom"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#165", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#167"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#167", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 167, "start_line": 1105, "end_line": 1111, "text": "func (x *Designator) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetValidTo", "primary_kind": "method", "primary_span": [1105, 1111], "def_symbols": [], "symbols": ["GetValidTo", "func", "Designator", "timestamppb", "Timestamp", "nil", "return", "ValidTo"], "doc_head": "func (x *Designator) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetValidTo/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetValidTo", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidTo"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetValidTo/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [32033], "all_end_bytes": [32142], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Designator", "GetValidTo", "Timestamp", "ValidTo", "timestamppb.Timestamp", "x.ValidTo"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#166", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#168"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#168", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 168, "start_line": 1112, "end_line": 1118, "text": "func (x *Designator) GetAirlineName() string {\n\tif x != nil {\n\t\treturn x.AirlineName\n\t}\n\treturn \"\"\n}\n", "n_tokens": 32, "primary_symbol": "GetAirlineName", "primary_kind": "method", "primary_span": [1112, 1118], "def_symbols": [], "symbols": ["GetAirlineName", "func", "Designator", "string", "nil", "return", "AirlineName"], "doc_head": "func (x *Designator) GetAirlineName() string {\n\tif x != nil {\n\t\treturn x.AirlineName\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetAirlineName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetAirlineName", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirlineName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetAirlineName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [32144], "all_end_bytes": [32244], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineName", "Designator", "GetAirlineName", "x.AirlineName"], "header_context_minimal": "package v0\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#167", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#169"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#169", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 169, "start_line": 1119, "end_line": 1125, "text": "func (x *Designator) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetCreatedAt", "primary_kind": "method", "primary_span": [1119, 1125], "def_symbols": [], "symbols": ["GetCreatedAt", "func", "Designator", "timestamppb", "Timestamp", "nil", "return", "CreatedAt"], "doc_head": "func (x *Designator) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetCreatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetCreatedAt", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCreatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetCreatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [32246], "all_end_bytes": [32359], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["CreatedAt", "Designator", "GetCreatedAt", "Timestamp", "timestamppb.Timestamp", "x.CreatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#168", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#170"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#170", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 170, "start_line": 1126, "end_line": 1132, "text": "func (x *Designator) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetUpdatedAt", "primary_kind": "method", "primary_span": [1126, 1132], "def_symbols": [], "symbols": ["GetUpdatedAt", "func", "Designator", "timestamppb", "Timestamp", "nil", "return", "UpdatedAt"], "doc_head": "func (x *Designator) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetUpdatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetUpdatedAt", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUpdatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetUpdatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [32361], "all_end_bytes": [32474], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Designator", "GetUpdatedAt", "Timestamp", "UpdatedAt", "timestamppb.Timestamp", "x.UpdatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#169", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#171"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#171", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 171, "start_line": 1133, "end_line": 1148, "text": "type SlimAirline struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tId             string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata           *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao           *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName           string                 `protobuf:\"bytes,5,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tAssets         *Assets                `protobuf:\"bytes,6,opt,name=assets,proto3\" json:\"assets,omitempty\"`\n\tCreatedAt      *timestamppb.Timestamp `protobuf:\"bytes,7,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt      *timestamppb.Timestamp `protobuf:\"bytes,8,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tDesignator     *string                `protobuf:\"bytes,9,opt,name=designator,proto3,oneof\" json:\"designator,omitempty\"`\n\tPristine       bool                   `protobuf:\"varint,10,opt,name=pristine,proto3\" json:\"pristine,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}\n", "n_tokens": 294, "primary_symbol": "SlimAirline", "primary_kind": "type", "primary_span": [1133, 1148], "def_symbols": [], "symbols": ["type", "SlimAirline", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Iata", "iata", "oneof", "Icao", "icao", "Classification", "int64", "varint", "classification", "Name", "Assets", "assets", "CreatedAt", "timestamppb", "Timestamp", "createdAt", "UpdatedAt", "updatedAt", "Designator", "designator", "Pristine", "bool", "pristine", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SlimAirline struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tId             string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata           *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao           *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName           string                 `protobuf:\"bytes,5,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tAssets         *Assets                `protobuf:\"bytes,6,opt,name=assets,proto3\" json:\"assets,omitempty\"`\n\tCreatedAt      *timestamppb.Timestamp `protobuf:\"bytes,7,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt      *timestamppb.Timestamp `protobuf:\"bytes,8,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tDesignator     *string                `protobuf:\"bytes,9,opt,name=designator,proto3,oneof\" json:\"designator,omitempty\"`\n\tPristine       bool                   `protobuf:\"varint,10,opt,name=pristine,proto3\" json:\"pristine,omitempty\"`", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SlimAirline (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SlimAirline", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SlimAirline"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SlimAirline (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SlimAirline"], "all_type_kinds": ["struct"], "all_start_bytes": [32481], "all_end_bytes": [33750], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Assets", "Classification", "CreatedAt", "Designator", "Iata", "Icao", "MessageState", "Name", "Pristine", "SizeCache", "SlimAirline", "Timestamp", "UnknownFields", "UpdatedAt", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#170", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#172"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#172", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 172, "start_line": 1149, "end_line": 1155, "text": "func (x *SlimAirline) Reset() {\n\t*x = SlimAirline{}\n\tmi := &file_airlines_proto_msgTypes[19]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1149, 1155], "def_symbols": [], "symbols": ["Reset", "func", "SlimAirline", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SlimAirline) Reset() {\n\t*x = SlimAirline{}\n\tmi := &file_airlines_proto_msgTypes[19]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "Reset", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [33752], "all_end_bytes": [33927], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SlimAirline", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#171", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#173"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#173", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 173, "start_line": 1156, "end_line": 1159, "text": "func (x *SlimAirline) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1156, 1159], "def_symbols": [], "symbols": ["String", "func", "SlimAirline", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SlimAirline) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "String", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [33929], "all_end_bytes": [34009], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SlimAirline", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#172", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#174"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#174", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 174, "start_line": 1160, "end_line": 1161, "text": "func (*SlimAirline) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1160, 1161], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SlimAirline"], "doc_head": "func (*SlimAirline) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SlimAirline", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SlimAirline"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [34011], "all_end_bytes": [34048], "primary_index": 0, "all_receivers_normalized": ["*SlimAirline"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SlimAirline"], "header_context_minimal": "package v0\n// receiver: *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#173", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#175"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#175", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 175, "start_line": 1162, "end_line": 1173, "text": "func (x *SlimAirline) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[19]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1162, 1173], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SlimAirline", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SlimAirline) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[19]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "ProtoReflect", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [34050], "all_end_bytes": [34329], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SlimAirline", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#174", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#176"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#176", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 176, "start_line": 1174, "end_line": 1178, "text": "// Deprecated: Use SlimAirline.ProtoReflect.Descriptor instead.\nfunc (*SlimAirline) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{19}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1175, 1178], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SlimAirline", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SlimAirline.ProtoReflect.Descriptor instead.\nfunc (*SlimAirline) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{19}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SlimAirline", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SlimAirline"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [34395], "all_end_bytes": [34500], "primary_index": 0, "all_receivers_normalized": ["*SlimAirline"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SlimAirline"], "header_context_minimal": "package v0\n// receiver: *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#175", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#177"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#177", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 177, "start_line": 1179, "end_line": 1185, "text": "func (x *SlimAirline) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [1179, 1185], "def_symbols": [], "symbols": ["GetId", "func", "SlimAirline", "string", "nil", "return"], "doc_head": "func (x *SlimAirline) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetId", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [34502], "all_end_bytes": [34585], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetId", "SlimAirline", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#176", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#178"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#178", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 178, "start_line": 1186, "end_line": 1192, "text": "func (x *SlimAirline) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetIata", "primary_kind": "method", "primary_span": [1186, 1192], "def_symbols": [], "symbols": ["GetIata", "func", "SlimAirline", "string", "nil", "Iata", "return"], "doc_head": "func (x *SlimAirline) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetIata/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetIata", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIata"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetIata/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [34587], "all_end_bytes": [34692], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetIata", "Iata", "SlimAirline", "x.Iata"], "header_context_minimal": "package v0\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#177", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#179"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#179", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 179, "start_line": 1193, "end_line": 1199, "text": "func (x *SlimAirline) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetIcao", "primary_kind": "method", "primary_span": [1193, 1199], "def_symbols": [], "symbols": ["GetIcao", "func", "SlimAirline", "string", "nil", "Icao", "return"], "doc_head": "func (x *SlimAirline) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetIcao/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetIcao", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIcao"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetIcao/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [34694], "all_end_bytes": [34799], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetIcao", "Icao", "SlimAirline", "x.Icao"], "header_context_minimal": "package v0\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#178", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#180"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#180", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 180, "start_line": 1200, "end_line": 1206, "text": "func (x *SlimAirline) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetClassification", "primary_kind": "method", "primary_span": [1200, 1206], "def_symbols": [], "symbols": ["GetClassification", "func", "SlimAirline", "int64", "nil", "return", "Classification"], "doc_head": "func (x *SlimAirline) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetClassification/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetClassification", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetClassification"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetClassification/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [34801], "all_end_bytes": [34906], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Classification", "GetClassification", "SlimAirline", "x.Classification"], "header_context_minimal": "package v0\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#179", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#181"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#181", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 181, "start_line": 1207, "end_line": 1213, "text": "func (x *SlimAirline) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n", "n_tokens": 27, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [1207, 1213], "def_symbols": [], "symbols": ["GetName", "func", "SlimAirline", "string", "nil", "return", "Name"], "doc_head": "func (x *SlimAirline) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetName", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [34908], "all_end_bytes": [34995], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetName", "Name", "SlimAirline", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#180", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#182"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#182", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 182, "start_line": 1214, "end_line": 1220, "text": "func (x *SlimAirline) GetAssets() *Assets {\n\tif x != nil {\n\t\treturn x.Assets\n\t}\n\treturn nil\n}\n", "n_tokens": 31, "primary_symbol": "GetAssets", "primary_kind": "method", "primary_span": [1214, 1220], "def_symbols": [], "symbols": ["GetAssets", "func", "SlimAirline", "Assets", "nil", "return"], "doc_head": "func (x *SlimAirline) GetAssets() *Assets {\n\tif x != nil {\n\t\treturn x.Assets\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetAssets/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetAssets", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAssets"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetAssets/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [34997], "all_end_bytes": [35090], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Assets", "GetAssets", "SlimAirline", "x.Assets"], "header_context_minimal": "package v0\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#181", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#183"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#183", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 183, "start_line": 1221, "end_line": 1227, "text": "func (x *SlimAirline) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetCreatedAt", "primary_kind": "method", "primary_span": [1221, 1227], "def_symbols": [], "symbols": ["GetCreatedAt", "func", "SlimAirline", "timestamppb", "Timestamp", "nil", "return", "CreatedAt"], "doc_head": "func (x *SlimAirline) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetCreatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetCreatedAt", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCreatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetCreatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [35092], "all_end_bytes": [35206], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["CreatedAt", "GetCreatedAt", "SlimAirline", "Timestamp", "timestamppb.Timestamp", "x.CreatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#182", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#184"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#184", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 184, "start_line": 1228, "end_line": 1234, "text": "func (x *SlimAirline) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetUpdatedAt", "primary_kind": "method", "primary_span": [1228, 1234], "def_symbols": [], "symbols": ["GetUpdatedAt", "func", "SlimAirline", "timestamppb", "Timestamp", "nil", "return", "UpdatedAt"], "doc_head": "func (x *SlimAirline) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetUpdatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetUpdatedAt", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUpdatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetUpdatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [35208], "all_end_bytes": [35322], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["GetUpdatedAt", "SlimAirline", "Timestamp", "UpdatedAt", "timestamppb.Timestamp", "x.UpdatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#183", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#185"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#185", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 185, "start_line": 1235, "end_line": 1241, "text": "func (x *SlimAirline) GetDesignator() string {\n\tif x != nil && x.Designator != nil {\n\t\treturn *x.Designator\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [1235, 1241], "def_symbols": [], "symbols": ["GetDesignator", "func", "SlimAirline", "string", "nil", "Designator", "return"], "doc_head": "func (x *SlimAirline) GetDesignator() string {\n\tif x != nil && x.Designator != nil {\n\t\treturn *x.Designator\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetDesignator", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [35324], "all_end_bytes": [35447], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetDesignator", "SlimAirline", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#184", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#186"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#186", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 186, "start_line": 1242, "end_line": 1248, "text": "func (x *SlimAirline) GetPristine() bool {\n\tif x != nil {\n\t\treturn x.Pristine\n\t}\n\treturn false\n}\n", "n_tokens": 33, "primary_symbol": "GetPristine", "primary_kind": "method", "primary_span": [1242, 1248], "def_symbols": [], "symbols": ["GetPristine", "func", "SlimAirline", "bool", "nil", "return", "Pristine", "false"], "doc_head": "func (x *SlimAirline) GetPristine() bool {\n\tif x != nil {\n\t\treturn x.Pristine\n\t}\n\treturn false\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SlimAirline).GetPristine/complete", "package": "v0", "node_kind": "method", "receiver": "x *SlimAirline", "function_name": "", "method_name": "GetPristine", "type_name": "SlimAirline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetPristine"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SlimAirline).GetPristine/complete"], "all_roles": ["complete"], "all_receivers": ["x *SlimAirline"], "all_type_names": ["SlimAirline"], "all_type_kinds": [null], "all_start_bytes": [35449], "all_end_bytes": [35545], "primary_index": 0, "all_receivers_normalized": ["(*SlimAirline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetPristine", "Pristine", "SlimAirline", "x.Pristine"], "header_context_minimal": "package v0\n// receiver: x *SlimAirline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#185", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#187"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#187", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 187, "start_line": 1249, "end_line": 1271, "text": "type Airline struct {\n\tstate                      protoimpl.MessageState `protogen:\"open.v1\"`\n\tId                         string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata                       *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao                       *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification             int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName                       string                 `protobuf:\"bytes,5,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tDescription                map[string]string      `protobuf:\"bytes,6,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tAssets                     *Assets                `protobuf:\"bytes,7,opt,name=assets,proto3\" json:\"assets,omitempty\"`\n\tWebsiteUrl                 *string                `protobuf:\"bytes,8,opt,name=websiteUrl,proto3,oneof\" json:\"websiteUrl,omitempty\"`\n\tWikipediaUrl               map[string]string      `protobuf:\"bytes,9,rep,name=wikipediaUrl,proto3\" json:\"wikipediaUrl,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tFacebookUrl                *string                `protobuf:\"bytes,10,opt,name=facebookUrl,proto3,oneof\" json:\"facebookUrl,omitempty\"`\n\tTwitterUrl                 *string                `protobuf:\"bytes,11,opt,name=twitterUrl,proto3,oneof\" json:\"twitterUrl,omitempty\"`\n\tReservationTelephoneNumber *string                `protobuf:\"bytes,12,opt,name=reservationTelephoneNumber,proto3,oneof\" json:\"reservationTelephoneNumber,omitempty\"`\n\tHubAirport                 *Airline_Airport       `protobuf:\"bytes,13,opt,name=hubAirport,proto3,oneof\" json:\"hubAirport,omitempty\"`\n\tCreatedAt                  *timestamppb.Timestamp `protobuf:\"bytes,14,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt                  *timestamppb.Timestamp `protobuf:\"bytes,15,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tDesignator                 *string                `protobuf:\"bytes,16,opt,name=designator,proto3,oneof\" json:\"designator,omitempty\"`\n\tPristine                   bool                   `protobuf:\"varint,17,opt,name=pristine,proto3\" json:\"pristine,omitempty\"`\n\tunknownFields              protoimpl.UnknownFields\n\tsizeCache                  protoimpl.SizeCache\n}\n", "n_tokens": 545, "primary_symbol": "Airline", "primary_kind": "type", "primary_span": [1249, 1271], "def_symbols": [], "symbols": ["type", "Airline", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Iata", "iata", "oneof", "Icao", "icao", "Classification", "int64", "varint", "classification", "Name", "Description", "map", "rep", "description", "protobuf_key", "key", "protobuf_val", "value", "Assets", "assets", "WebsiteUrl", "websiteUrl", "WikipediaUrl", "wikipediaUrl", "FacebookUrl", "facebookUrl", "TwitterUrl", "twitterUrl", "ReservationTelephoneNumber", "reservationTelephoneNumber", "HubAirport", "Airline_Airport", "hubAirport", "CreatedAt", "timestamppb", "Timestamp", "createdAt", "UpdatedAt", "updatedAt", "Designator", "designator", "Pristine", "bool", "pristine", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Airline struct {\n\tstate                      protoimpl.MessageState `protogen:\"open.v1\"`\n\tId                         string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata                       *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao                       *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification             int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName                       string                 `protobuf:\"bytes,5,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tDescription                map[string]string      `protobuf:\"bytes,6,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tAssets                     *Assets                `protobuf:\"bytes,7,opt,name=assets,proto3\" json:\"assets,omitempty\"`\n\tWebsiteUrl                 *string                `protobuf:\"bytes,8,opt,name=websiteUrl,proto3,oneof\" json:\"websiteUrl,omitempty\"`", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Airline (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airline", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airline"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airline (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airline"], "all_type_kinds": ["struct"], "all_start_bytes": [35552], "all_end_bytes": [38087], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Airline", "Airline_Airport", "Assets", "Classification", "CreatedAt", "Description", "Designator", "FacebookUrl", "HubAirport", "Iata", "Icao", "MessageState", "Name", "Pristine", "ReservationTelephoneNumber", "SizeCache", "Timestamp", "TwitterUrl", "UnknownFields", "UpdatedAt", "WebsiteUrl", "WikipediaUrl", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#186", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#188"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#188", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 188, "start_line": 1272, "end_line": 1278, "text": "func (x *Airline) Reset() {\n\t*x = Airline{}\n\tmi := &file_airlines_proto_msgTypes[20]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 49, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1272, 1278], "def_symbols": [], "symbols": ["Reset", "func", "Airline", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Airline) Reset() {\n\t*x = Airline{}\n\tmi := &file_airlines_proto_msgTypes[20]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "Reset", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [38089], "all_end_bytes": [38256], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#187", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#189"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#189", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 189, "start_line": 1279, "end_line": 1282, "text": "func (x *Airline) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 21, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1279, 1282], "def_symbols": [], "symbols": ["String", "func", "Airline", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Airline) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "String", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [38258], "all_end_bytes": [38334], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#188", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#190"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#190", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 190, "start_line": 1283, "end_line": 1284, "text": "func (*Airline) ProtoMessage() {}\n", "n_tokens": 9, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1283, 1284], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Airline"], "doc_head": "func (*Airline) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Airline", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Airline"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [38336], "all_end_bytes": [38369], "primary_index": 0, "all_receivers_normalized": ["*Airline"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#189", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#191"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#191", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 191, "start_line": 1285, "end_line": 1296, "text": "func (x *Airline) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[20]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 80, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1285, 1296], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Airline", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Airline) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[20]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "ProtoReflect", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [38371], "all_end_bytes": [38646], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#190", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#192"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#192", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 192, "start_line": 1297, "end_line": 1301, "text": "// Deprecated: Use Airline.ProtoReflect.Descriptor instead.\nfunc (*Airline) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{20}\n}\n", "n_tokens": 43, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1298, 1301], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Airline", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Airline.ProtoReflect.Descriptor instead.\nfunc (*Airline) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{20}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Airline", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Airline"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [38708], "all_end_bytes": [38809], "primary_index": 0, "all_receivers_normalized": ["*Airline"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#191", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#193"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#193", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 193, "start_line": 1302, "end_line": 1308, "text": "func (x *Airline) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 27, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [1302, 1308], "def_symbols": [], "symbols": ["GetId", "func", "Airline", "string", "nil", "return"], "doc_head": "func (x *Airline) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetId", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [38811], "all_end_bytes": [38890], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#192", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#194"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#194", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 194, "start_line": 1309, "end_line": 1315, "text": "func (x *Airline) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}\n", "n_tokens": 36, "primary_symbol": "GetIata", "primary_kind": "method", "primary_span": [1309, 1315], "def_symbols": [], "symbols": ["GetIata", "func", "Airline", "string", "nil", "Iata", "return"], "doc_head": "func (x *Airline) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetIata/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetIata", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIata"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetIata/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [38892], "all_end_bytes": [38993], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetIata", "Iata", "x.Iata"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#193", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#195"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#195", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 195, "start_line": 1316, "end_line": 1322, "text": "func (x *Airline) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}\n", "n_tokens": 36, "primary_symbol": "GetIcao", "primary_kind": "method", "primary_span": [1316, 1322], "def_symbols": [], "symbols": ["GetIcao", "func", "Airline", "string", "nil", "Icao", "return"], "doc_head": "func (x *Airline) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetIcao/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetIcao", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIcao"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetIcao/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [38995], "all_end_bytes": [39096], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetIcao", "Icao", "x.Icao"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#194", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#196"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#196", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 196, "start_line": 1323, "end_line": 1329, "text": "func (x *Airline) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}\n", "n_tokens": 31, "primary_symbol": "GetClassification", "primary_kind": "method", "primary_span": [1323, 1329], "def_symbols": [], "symbols": ["GetClassification", "func", "Airline", "int64", "nil", "return", "Classification"], "doc_head": "func (x *Airline) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetClassification/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetClassification", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetClassification"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetClassification/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [39098], "all_end_bytes": [39199], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "Classification", "GetClassification", "x.Classification"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#195", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#197"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#197", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 197, "start_line": 1330, "end_line": 1336, "text": "func (x *Airline) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n", "n_tokens": 26, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [1330, 1336], "def_symbols": [], "symbols": ["GetName", "func", "Airline", "string", "nil", "return", "Name"], "doc_head": "func (x *Airline) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetName", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [39201], "all_end_bytes": [39284], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#196", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#198"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#198", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 198, "start_line": 1337, "end_line": 1343, "text": "func (x *Airline) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetDescription", "primary_kind": "method", "primary_span": [1337, 1343], "def_symbols": [], "symbols": ["GetDescription", "func", "Airline", "map", "string", "nil", "return", "Description"], "doc_head": "func (x *Airline) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetDescription/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetDescription", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDescription"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetDescription/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [39286], "all_end_bytes": [39395], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "Description", "GetDescription", "x.Description"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#197", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#199"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#199", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 199, "start_line": 1344, "end_line": 1350, "text": "func (x *Airline) GetAssets() *Assets {\n\tif x != nil {\n\t\treturn x.Assets\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetAssets", "primary_kind": "method", "primary_span": [1344, 1350], "def_symbols": [], "symbols": ["GetAssets", "func", "Airline", "Assets", "nil", "return"], "doc_head": "func (x *Airline) GetAssets() *Assets {\n\tif x != nil {\n\t\treturn x.Assets\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetAssets/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetAssets", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAssets"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetAssets/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [39397], "all_end_bytes": [39486], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "Assets", "GetAssets", "x.Assets"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#198", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#200"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#200", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 200, "start_line": 1351, "end_line": 1357, "text": "func (x *Airline) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 38, "primary_symbol": "GetWebsiteUrl", "primary_kind": "method", "primary_span": [1351, 1357], "def_symbols": [], "symbols": ["GetWebsiteUrl", "func", "Airline", "string", "nil", "WebsiteUrl", "return"], "doc_head": "func (x *Airline) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetWebsiteUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetWebsiteUrl", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWebsiteUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetWebsiteUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [39488], "all_end_bytes": [39607], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetWebsiteUrl", "WebsiteUrl", "x.WebsiteUrl"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#199", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#201"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#201", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 201, "start_line": 1358, "end_line": 1364, "text": "func (x *Airline) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetWikipediaUrl", "primary_kind": "method", "primary_span": [1358, 1364], "def_symbols": [], "symbols": ["GetWikipediaUrl", "func", "Airline", "map", "string", "nil", "return", "WikipediaUrl"], "doc_head": "func (x *Airline) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetWikipediaUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetWikipediaUrl", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWikipediaUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetWikipediaUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [39609], "all_end_bytes": [39720], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetWikipediaUrl", "WikipediaUrl", "x.WikipediaUrl"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#200", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#202"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#202", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 202, "start_line": 1365, "end_line": 1371, "text": "func (x *Airline) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 38, "primary_symbol": "GetFacebookUrl", "primary_kind": "method", "primary_span": [1365, 1371], "def_symbols": [], "symbols": ["GetFacebookUrl", "func", "Airline", "string", "nil", "FacebookUrl", "return"], "doc_head": "func (x *Airline) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetFacebookUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetFacebookUrl", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFacebookUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetFacebookUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [39722], "all_end_bytes": [39844], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "FacebookUrl", "GetFacebookUrl", "x.FacebookUrl"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#201", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#203"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#203", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 203, "start_line": 1372, "end_line": 1378, "text": "func (x *Airline) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 38, "primary_symbol": "GetTwitterUrl", "primary_kind": "method", "primary_span": [1372, 1378], "def_symbols": [], "symbols": ["GetTwitterUrl", "func", "Airline", "string", "nil", "TwitterUrl", "return"], "doc_head": "func (x *Airline) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetTwitterUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetTwitterUrl", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTwitterUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetTwitterUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [39846], "all_end_bytes": [39965], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetTwitterUrl", "TwitterUrl", "x.TwitterUrl"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#202", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#204"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#204", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 204, "start_line": 1379, "end_line": 1385, "text": "func (x *Airline) GetReservationTelephoneNumber() string {\n\tif x != nil && x.ReservationTelephoneNumber != nil {\n\t\treturn *x.ReservationTelephoneNumber\n\t}\n\treturn \"\"\n}\n", "n_tokens": 41, "primary_symbol": "GetReservationTelephoneNumber", "primary_kind": "method", "primary_span": [1379, 1385], "def_symbols": [], "symbols": ["GetReservationTelephoneNumber", "func", "Airline", "string", "nil", "ReservationTelephoneNumber", "return"], "doc_head": "func (x *Airline) GetReservationTelephoneNumber() string {\n\tif x != nil && x.ReservationTelephoneNumber != nil {\n\t\treturn *x.ReservationTelephoneNumber\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetReservationTelephoneNumber/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetReservationTelephoneNumber", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetReservationTelephoneNumber"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetReservationTelephoneNumber/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [39967], "all_end_bytes": [40134], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetReservationTelephoneNumber", "ReservationTelephoneNumber", "x.ReservationTelephoneNumber"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#203", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#205"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#205", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 205, "start_line": 1386, "end_line": 1392, "text": "func (x *Airline) GetHubAirport() *Airline_Airport {\n\tif x != nil {\n\t\treturn x.HubAirport\n\t}\n\treturn nil\n}\n", "n_tokens": 36, "primary_symbol": "GetHubAirport", "primary_kind": "method", "primary_span": [1386, 1392], "def_symbols": [], "symbols": ["GetHubAirport", "func", "Airline", "Airline_Airport", "nil", "return", "HubAirport"], "doc_head": "func (x *Airline) GetHubAirport() *Airline_Airport {\n\tif x != nil {\n\t\treturn x.HubAirport\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetHubAirport/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetHubAirport", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetHubAirport"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetHubAirport/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [40136], "all_end_bytes": [40242], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "Airline_Airport", "GetHubAirport", "HubAirport", "x.HubAirport"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#204", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#206"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#206", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 206, "start_line": 1393, "end_line": 1399, "text": "func (x *Airline) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetCreatedAt", "primary_kind": "method", "primary_span": [1393, 1399], "def_symbols": [], "symbols": ["GetCreatedAt", "func", "Airline", "timestamppb", "Timestamp", "nil", "return", "CreatedAt"], "doc_head": "func (x *Airline) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetCreatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetCreatedAt", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCreatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetCreatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [40244], "all_end_bytes": [40354], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Airline", "CreatedAt", "GetCreatedAt", "Timestamp", "timestamppb.Timestamp", "x.CreatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#205", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#207"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#207", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 207, "start_line": 1400, "end_line": 1406, "text": "func (x *Airline) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetUpdatedAt", "primary_kind": "method", "primary_span": [1400, 1406], "def_symbols": [], "symbols": ["GetUpdatedAt", "func", "Airline", "timestamppb", "Timestamp", "nil", "return", "UpdatedAt"], "doc_head": "func (x *Airline) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetUpdatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetUpdatedAt", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUpdatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetUpdatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [40356], "all_end_bytes": [40466], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Airline", "GetUpdatedAt", "Timestamp", "UpdatedAt", "timestamppb.Timestamp", "x.UpdatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#206", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#208"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#208", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 208, "start_line": 1407, "end_line": 1413, "text": "func (x *Airline) GetDesignator() string {\n\tif x != nil && x.Designator != nil {\n\t\treturn *x.Designator\n\t}\n\treturn \"\"\n}\n", "n_tokens": 36, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [1407, 1413], "def_symbols": [], "symbols": ["GetDesignator", "func", "Airline", "string", "nil", "Designator", "return"], "doc_head": "func (x *Airline) GetDesignator() string {\n\tif x != nil && x.Designator != nil {\n\t\treturn *x.Designator\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetDesignator", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [40468], "all_end_bytes": [40587], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "Designator", "GetDesignator", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#207", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#209"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#209", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 209, "start_line": 1414, "end_line": 1420, "text": "func (x *Airline) GetPristine() bool {\n\tif x != nil {\n\t\treturn x.Pristine\n\t}\n\treturn false\n}\n", "n_tokens": 32, "primary_symbol": "GetPristine", "primary_kind": "method", "primary_span": [1414, 1420], "def_symbols": [], "symbols": ["GetPristine", "func", "Airline", "bool", "nil", "return", "Pristine", "false"], "doc_head": "func (x *Airline) GetPristine() bool {\n\tif x != nil {\n\t\treturn x.Pristine\n\t}\n\treturn false\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline).GetPristine/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline", "function_name": "", "method_name": "GetPristine", "type_name": "Airline", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetPristine"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline).GetPristine/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline"], "all_type_names": ["Airline"], "all_type_kinds": [null], "all_start_bytes": [40589], "all_end_bytes": [40681], "primary_index": 0, "all_receivers_normalized": ["(*Airline)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline", "GetPristine", "Pristine", "x.Pristine"], "header_context_minimal": "package v0\n// receiver: x *Airline", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#208", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#210"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#210", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 210, "start_line": 1421, "end_line": 1429, "text": "type Assets struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tRect          *string                `protobuf:\"bytes,1,opt,name=rect,proto3,oneof\" json:\"rect,omitempty\"`\n\tSquare        *string                `protobuf:\"bytes,2,opt,name=square,proto3,oneof\" json:\"square,omitempty\"`\n\tTail          *string                `protobuf:\"bytes,3,opt,name=tail,proto3,oneof\" json:\"tail,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 115, "primary_symbol": "Assets", "primary_kind": "type", "primary_span": [1421, 1429], "def_symbols": [], "symbols": ["type", "Assets", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Rect", "string", "protobuf", "bytes", "opt", "name", "rect", "proto3", "oneof", "json", "omitempty", "Square", "square", "Tail", "tail", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Assets struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tRect          *string                `protobuf:\"bytes,1,opt,name=rect,proto3,oneof\" json:\"rect,omitempty\"`\n\tSquare        *string                `protobuf:\"bytes,2,opt,name=square,proto3,oneof\" json:\"square,omitempty\"`\n\tTail          *string                `protobuf:\"bytes,3,opt,name=tail,proto3,oneof\" json:\"tail,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Assets (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Assets", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Assets"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Assets (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Assets"], "all_type_kinds": ["struct"], "all_start_bytes": [40688], "all_end_bytes": [41166], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Assets", "MessageState", "Rect", "SizeCache", "Square", "Tail", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#209", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#211"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#211", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 211, "start_line": 1430, "end_line": 1436, "text": "func (x *Assets) Reset() {\n\t*x = Assets{}\n\tmi := &file_airlines_proto_msgTypes[21]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 47, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1430, 1436], "def_symbols": [], "symbols": ["Reset", "func", "Assets", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Assets) Reset() {\n\t*x = Assets{}\n\tmi := &file_airlines_proto_msgTypes[21]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Assets).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Assets", "function_name": "", "method_name": "Reset", "type_name": "Assets", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Assets).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Assets"], "all_type_names": ["Assets"], "all_type_kinds": [null], "all_start_bytes": [41168], "all_end_bytes": [41333], "primary_index": 0, "all_receivers_normalized": ["(*Assets)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Assets", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Assets", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#210", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#212"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#212", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 212, "start_line": 1437, "end_line": 1440, "text": "func (x *Assets) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 20, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1437, 1440], "def_symbols": [], "symbols": ["String", "func", "Assets", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Assets) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Assets).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Assets", "function_name": "", "method_name": "String", "type_name": "Assets", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Assets).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Assets"], "all_type_names": ["Assets"], "all_type_kinds": [null], "all_start_bytes": [41335], "all_end_bytes": [41410], "primary_index": 0, "all_receivers_normalized": ["(*Assets)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Assets", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Assets", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#211", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#213"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#213", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 213, "start_line": 1441, "end_line": 1442, "text": "func (*Assets) ProtoMessage() {}\n", "n_tokens": 8, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1441, 1442], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Assets"], "doc_head": "func (*Assets) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Assets", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Assets"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [41412], "all_end_bytes": [41444], "primary_index": 0, "all_receivers_normalized": ["*Assets"], "imports_used_minimal": [], "symbols_referenced_strict": ["Assets", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Assets", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#212", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#214"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#214", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 214, "start_line": 1443, "end_line": 1454, "text": "func (x *Assets) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[21]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 79, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1443, 1454], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Assets", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Assets) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[21]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Assets).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Assets", "function_name": "", "method_name": "ProtoReflect", "type_name": "Assets", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Assets).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Assets"], "all_type_names": ["Assets"], "all_type_kinds": [null], "all_start_bytes": [41446], "all_end_bytes": [41720], "primary_index": 0, "all_receivers_normalized": ["(*Assets)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Assets", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Assets", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#213", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#215"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#215", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 215, "start_line": 1455, "end_line": 1459, "text": "// Deprecated: Use Assets.ProtoReflect.Descriptor instead.\nfunc (*Assets) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{21}\n}\n", "n_tokens": 41, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1456, 1459], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Assets", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Assets.ProtoReflect.Descriptor instead.\nfunc (*Assets) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{21}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Assets", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Assets"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [41781], "all_end_bytes": [41881], "primary_index": 0, "all_receivers_normalized": ["*Assets"], "imports_used_minimal": [], "symbols_referenced_strict": ["Assets", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Assets", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#214", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#216"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#216", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 216, "start_line": 1460, "end_line": 1466, "text": "func (x *Assets) GetRect() string {\n\tif x != nil && x.Rect != nil {\n\t\treturn *x.Rect\n\t}\n\treturn \"\"\n}\n", "n_tokens": 32, "primary_symbol": "GetRect", "primary_kind": "method", "primary_span": [1460, 1466], "def_symbols": [], "symbols": ["GetRect", "func", "Assets", "string", "nil", "Rect", "return"], "doc_head": "func (x *Assets) GetRect() string {\n\tif x != nil && x.Rect != nil {\n\t\treturn *x.Rect\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Assets).GetRect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Assets", "function_name": "", "method_name": "GetRect", "type_name": "Assets", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetRect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Assets).GetRect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Assets"], "all_type_names": ["Assets"], "all_type_kinds": [null], "all_start_bytes": [41883], "all_end_bytes": [41983], "primary_index": 0, "all_receivers_normalized": ["(*Assets)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Assets", "GetRect", "Rect", "x.Rect"], "header_context_minimal": "package v0\n// receiver: x *Assets", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#215", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#217"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#217", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 217, "start_line": 1467, "end_line": 1473, "text": "func (x *Assets) GetSquare() string {\n\tif x != nil && x.Square != nil {\n\t\treturn *x.Square\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetSquare", "primary_kind": "method", "primary_span": [1467, 1473], "def_symbols": [], "symbols": ["GetSquare", "func", "Assets", "string", "nil", "Square", "return"], "doc_head": "func (x *Assets) GetSquare() string {\n\tif x != nil && x.Square != nil {\n\t\treturn *x.Square\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Assets).GetSquare/complete", "package": "v0", "node_kind": "method", "receiver": "x *Assets", "function_name": "", "method_name": "GetSquare", "type_name": "Assets", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetSquare"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Assets).GetSquare/complete"], "all_roles": ["complete"], "all_receivers": ["x *Assets"], "all_type_names": ["Assets"], "all_type_kinds": [null], "all_start_bytes": [41985], "all_end_bytes": [42091], "primary_index": 0, "all_receivers_normalized": ["(*Assets)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Assets", "GetSquare", "Square", "x.Square"], "header_context_minimal": "package v0\n// receiver: x *Assets", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#216", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#218"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#218", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 218, "start_line": 1474, "end_line": 1480, "text": "func (x *Assets) GetTail() string {\n\tif x != nil && x.Tail != nil {\n\t\treturn *x.Tail\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetTail", "primary_kind": "method", "primary_span": [1474, 1480], "def_symbols": [], "symbols": ["GetTail", "func", "Assets", "string", "nil", "Tail", "return"], "doc_head": "func (x *Assets) GetTail() string {\n\tif x != nil && x.Tail != nil {\n\t\treturn *x.Tail\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Assets).GetTail/complete", "package": "v0", "node_kind": "method", "receiver": "x *Assets", "function_name": "", "method_name": "GetTail", "type_name": "Assets", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTail"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Assets).GetTail/complete"], "all_roles": ["complete"], "all_receivers": ["x *Assets"], "all_type_names": ["Assets"], "all_type_kinds": [null], "all_start_bytes": [42093], "all_end_bytes": [42193], "primary_index": 0, "all_receivers_normalized": ["(*Assets)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Assets", "GetTail", "Tail", "x.Tail"], "header_context_minimal": "package v0\n// receiver: x *Assets", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#217", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#219"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#219", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 219, "start_line": 1481, "end_line": 1488, "text": "type Error struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCode          string                 `protobuf:\"bytes,1,opt,name=code,proto3\" json:\"code,omitempty\"`\n\tMessage       string                 `protobuf:\"bytes,2,opt,name=message,proto3\" json:\"message,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 78, "primary_symbol": "Error", "primary_kind": "type", "primary_span": [1481, 1488], "def_symbols": [], "symbols": ["type", "Error", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Code", "string", "protobuf", "bytes", "opt", "name", "code", "proto3", "json", "omitempty", "Message", "message", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Error struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCode          string                 `protobuf:\"bytes,1,opt,name=code,proto3\" json:\"code,omitempty\"`\n\tMessage       string                 `protobuf:\"bytes,2,opt,name=message,proto3\" json:\"message,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Error (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Error", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Error"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Error (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Error"], "all_type_kinds": ["struct"], "all_start_bytes": [42200], "all_end_bytes": [42559], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Error", "Message", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#218", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#220"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#220", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 220, "start_line": 1489, "end_line": 1495, "text": "func (x *Error) Reset() {\n\t*x = Error{}\n\tmi := &file_airlines_proto_msgTypes[22]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 47, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1489, 1495], "def_symbols": [], "symbols": ["Reset", "func", "Error", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Error) Reset() {\n\t*x = Error{}\n\tmi := &file_airlines_proto_msgTypes[22]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "Reset", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [42561], "all_end_bytes": [42724], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Error", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#219", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#221"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#221", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 221, "start_line": 1496, "end_line": 1499, "text": "func (x *Error) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 20, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1496, 1499], "def_symbols": [], "symbols": ["String", "func", "Error", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Error) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "String", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [42726], "all_end_bytes": [42800], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Error", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#220", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#222"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#222", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 222, "start_line": 1500, "end_line": 1501, "text": "func (*Error) ProtoMessage() {}\n", "n_tokens": 8, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1500, 1501], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Error"], "doc_head": "func (*Error) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Error", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Error"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [42802], "all_end_bytes": [42833], "primary_index": 0, "all_receivers_normalized": ["*Error"], "imports_used_minimal": [], "symbols_referenced_strict": ["Error", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#221", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#223"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#223", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 223, "start_line": 1502, "end_line": 1513, "text": "func (x *Error) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[22]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 79, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1502, 1513], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Error", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Error) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[22]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "ProtoReflect", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [42835], "all_end_bytes": [43108], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Error", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#222", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#224"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#224", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 224, "start_line": 1514, "end_line": 1518, "text": "// Deprecated: Use Error.ProtoReflect.Descriptor instead.\nfunc (*Error) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{22}\n}\n", "n_tokens": 41, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1515, 1518], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Error", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Error.ProtoReflect.Descriptor instead.\nfunc (*Error) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{22}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Error", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Error"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [43168], "all_end_bytes": [43267], "primary_index": 0, "all_receivers_normalized": ["*Error"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "Error"], "header_context_minimal": "package v0\n// receiver: *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#223", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#225"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#225", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 225, "start_line": 1519, "end_line": 1525, "text": "func (x *Error) GetCode() string {\n\tif x != nil {\n\t\treturn x.Code\n\t}\n\treturn \"\"\n}\n", "n_tokens": 26, "primary_symbol": "GetCode", "primary_kind": "method", "primary_span": [1519, 1525], "def_symbols": [], "symbols": ["GetCode", "func", "Error", "string", "nil", "return", "Code"], "doc_head": "func (x *Error) GetCode() string {\n\tif x != nil {\n\t\treturn x.Code\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).GetCode/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "GetCode", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCode"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).GetCode/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [43269], "all_end_bytes": [43350], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Error", "GetCode", "x.Code"], "header_context_minimal": "package v0\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#224", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#226"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#226", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 226, "start_line": 1526, "end_line": 1532, "text": "func (x *Error) GetMessage() string {\n\tif x != nil {\n\t\treturn x.Message\n\t}\n\treturn \"\"\n}\n", "n_tokens": 25, "primary_symbol": "GetMessage", "primary_kind": "method", "primary_span": [1526, 1532], "def_symbols": [], "symbols": ["GetMessage", "func", "Error", "string", "nil", "return", "Message"], "doc_head": "func (x *Error) GetMessage() string {\n\tif x != nil {\n\t\treturn x.Message\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).GetMessage/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "GetMessage", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).GetMessage/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [43352], "all_end_bytes": [43439], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Error", "GetMessage", "Message", "x.Message"], "header_context_minimal": "package v0\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#225", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#227"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#227", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 227, "start_line": 1533, "end_line": 1542, "text": "type CreateDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,1,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirlineId      string                 `protobuf:\"bytes,2,opt,name=airlineId,proto3\" json:\"airlineId,omitempty\"`\n\tValidFrom      *timestamppb.Timestamp `protobuf:\"bytes,3,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo        *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}\n", "n_tokens": 156, "primary_symbol": "CreateDesignatorRequest", "primary_kind": "type", "primary_span": [1533, 1542], "def_symbols": [], "symbols": ["type", "CreateDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "DesignatorCode", "string", "protobuf", "bytes", "opt", "name", "designatorCode", "proto3", "json", "omitempty", "AirlineId", "airlineId", "ValidFrom", "timestamppb", "Timestamp", "validFrom", "ValidTo", "validTo", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,1,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirlineId      string                 `protobuf:\"bytes,2,opt,name=airlineId,proto3\" json:\"airlineId,omitempty\"`\n\tValidFrom      *timestamppb.Timestamp `protobuf:\"bytes,3,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo        *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [43446], "all_end_bytes": [44074], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["AirlineId", "CreateDesignatorRequest", "DesignatorCode", "MessageState", "SizeCache", "Timestamp", "UnknownFields", "ValidFrom", "ValidTo", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#226", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#228"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#228", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 228, "start_line": 1543, "end_line": 1549, "text": "func (x *CreateDesignatorRequest) Reset() {\n\t*x = CreateDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[23]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1543, 1549], "def_symbols": [], "symbols": ["Reset", "func", "CreateDesignatorRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateDesignatorRequest) Reset() {\n\t*x = CreateDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[23]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [44076], "all_end_bytes": [44275], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#227", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#229"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#229", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 229, "start_line": 1550, "end_line": 1553, "text": "func (x *CreateDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1550, 1553], "def_symbols": [], "symbols": ["String", "func", "CreateDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [44277], "all_end_bytes": [44369], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#228", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#230"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#230", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 230, "start_line": 1554, "end_line": 1555, "text": "func (*CreateDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1554, 1555], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateDesignatorRequest"], "doc_head": "func (*CreateDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [44371], "all_end_bytes": [44420], "primary_index": 0, "all_receivers_normalized": ["*CreateDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#229", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#231"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#231", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 231, "start_line": 1556, "end_line": 1567, "text": "func (x *CreateDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[23]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1556, 1567], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateDesignatorRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[23]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [44422], "all_end_bytes": [44713], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#230", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#232"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#232", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 232, "start_line": 1568, "end_line": 1572, "text": "// Deprecated: Use CreateDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{23}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1569, 1572], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{23}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [44791], "all_end_bytes": [44908], "primary_index": 0, "all_receivers_normalized": ["*CreateDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#231", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#233"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#233", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 233, "start_line": 1573, "end_line": 1579, "text": "func (x *CreateDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetDesignatorCode", "primary_kind": "method", "primary_span": [1573, 1579], "def_symbols": [], "symbols": ["GetDesignatorCode", "func", "CreateDesignatorRequest", "string", "nil", "return", "DesignatorCode"], "doc_head": "func (x *CreateDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).GetDesignatorCode/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "GetDesignatorCode", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignatorCode"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).GetDesignatorCode/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [44910], "all_end_bytes": [45029], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorRequest", "DesignatorCode", "GetDesignatorCode", "x.DesignatorCode"], "header_context_minimal": "package v0\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#232", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#234"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#234", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 234, "start_line": 1580, "end_line": 1586, "text": "func (x *CreateDesignatorRequest) GetAirlineId() string {\n\tif x != nil {\n\t\treturn x.AirlineId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetAirlineId", "primary_kind": "method", "primary_span": [1580, 1586], "def_symbols": [], "symbols": ["GetAirlineId", "func", "CreateDesignatorRequest", "string", "nil", "return", "AirlineId"], "doc_head": "func (x *CreateDesignatorRequest) GetAirlineId() string {\n\tif x != nil {\n\t\treturn x.AirlineId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).GetAirlineId/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "GetAirlineId", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirlineId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).GetAirlineId/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [45031], "all_end_bytes": [45140], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineId", "CreateDesignatorRequest", "GetAirlineId", "x.AirlineId"], "header_context_minimal": "package v0\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#233", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#235"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#235", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 235, "start_line": 1587, "end_line": 1593, "text": "func (x *CreateDesignatorRequest) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetValidFrom", "primary_kind": "method", "primary_span": [1587, 1593], "def_symbols": [], "symbols": ["GetValidFrom", "func", "CreateDesignatorRequest", "timestamppb", "Timestamp", "nil", "return", "ValidFrom"], "doc_head": "func (x *CreateDesignatorRequest) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).GetValidFrom/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "GetValidFrom", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidFrom"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).GetValidFrom/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [45142], "all_end_bytes": [45268], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["CreateDesignatorRequest", "GetValidFrom", "Timestamp", "ValidFrom", "timestamppb.Timestamp", "x.ValidFrom"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#234", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#236"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#236", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 236, "start_line": 1594, "end_line": 1600, "text": "func (x *CreateDesignatorRequest) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetValidTo", "primary_kind": "method", "primary_span": [1594, 1600], "def_symbols": [], "symbols": ["GetValidTo", "func", "CreateDesignatorRequest", "timestamppb", "Timestamp", "nil", "return", "ValidTo"], "doc_head": "func (x *CreateDesignatorRequest) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).GetValidTo/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "GetValidTo", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidTo"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).GetValidTo/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [45270], "all_end_bytes": [45392], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["CreateDesignatorRequest", "GetValidTo", "Timestamp", "ValidTo", "timestamppb.Timestamp", "x.ValidTo"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#235", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#237"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#237", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 237, "start_line": 1601, "end_line": 1607, "text": "type CreateDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "CreateDesignatorResponse", "primary_kind": "type", "primary_span": [1601, 1607], "def_symbols": [], "symbols": ["type", "CreateDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designator", "protobuf", "bytes", "opt", "name", "designator", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [45399], "all_end_bytes": [45681], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorResponse", "Designator", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#236", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#238"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#238", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 238, "start_line": 1608, "end_line": 1614, "text": "func (x *CreateDesignatorResponse) Reset() {\n\t*x = CreateDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[24]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1608, 1614], "def_symbols": [], "symbols": ["Reset", "func", "CreateDesignatorResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateDesignatorResponse) Reset() {\n\t*x = CreateDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[24]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "CreateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorResponse"], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [45683], "all_end_bytes": [45884], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#237", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#239"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#239", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 239, "start_line": 1615, "end_line": 1618, "text": "func (x *CreateDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1615, 1618], "def_symbols": [], "symbols": ["String", "func", "CreateDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "CreateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorResponse"], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [45886], "all_end_bytes": [45979], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#238", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#240"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#240", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 240, "start_line": 1619, "end_line": 1620, "text": "func (*CreateDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1619, 1620], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateDesignatorResponse"], "doc_head": "func (*CreateDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [45981], "all_end_bytes": [46031], "primary_index": 0, "all_receivers_normalized": ["*CreateDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#239", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#241"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#241", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 241, "start_line": 1621, "end_line": 1632, "text": "func (x *CreateDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[24]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1621, 1632], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateDesignatorResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[24]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorResponse"], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [46033], "all_end_bytes": [46325], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#240", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#242"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#242", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 242, "start_line": 1633, "end_line": 1637, "text": "// Deprecated: Use CreateDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{24}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1634, 1637], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{24}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [46404], "all_end_bytes": [46522], "primary_index": 0, "all_receivers_normalized": ["*CreateDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#241", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#243"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#243", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 243, "start_line": 1638, "end_line": 1644, "text": "func (x *CreateDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [1638, 1644], "def_symbols": [], "symbols": ["GetDesignator", "func", "CreateDesignatorResponse", "Designator", "nil", "return"], "doc_head": "func (x *CreateDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorResponse).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorResponse", "function_name": "", "method_name": "GetDesignator", "type_name": "CreateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorResponse).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorResponse"], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [46524], "all_end_bytes": [46642], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorResponse", "Designator", "GetDesignator", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#242", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#244"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#244", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 244, "start_line": 1645, "end_line": 1654, "text": "type UpdateDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,2,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirlineId      string                 `protobuf:\"bytes,3,opt,name=airlineId,proto3\" json:\"airlineId,omitempty\"`\n\tValidFrom      *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo        *timestamppb.Timestamp `protobuf:\"bytes,5,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}\n", "n_tokens": 156, "primary_symbol": "UpdateDesignatorRequest", "primary_kind": "type", "primary_span": [1645, 1654], "def_symbols": [], "symbols": ["type", "UpdateDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "DesignatorCode", "string", "protobuf", "bytes", "opt", "name", "designatorCode", "proto3", "json", "omitempty", "AirlineId", "airlineId", "ValidFrom", "timestamppb", "Timestamp", "validFrom", "ValidTo", "validTo", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,2,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirlineId      string                 `protobuf:\"bytes,3,opt,name=airlineId,proto3\" json:\"airlineId,omitempty\"`\n\tValidFrom      *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo        *timestamppb.Timestamp `protobuf:\"bytes,5,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [46649], "all_end_bytes": [47277], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["AirlineId", "DesignatorCode", "MessageState", "SizeCache", "Timestamp", "UnknownFields", "UpdateDesignatorRequest", "ValidFrom", "ValidTo", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#243", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#245"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#245", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 245, "start_line": 1655, "end_line": 1661, "text": "func (x *UpdateDesignatorRequest) Reset() {\n\t*x = UpdateDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[25]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1655, 1661], "def_symbols": [], "symbols": ["Reset", "func", "UpdateDesignatorRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateDesignatorRequest) Reset() {\n\t*x = UpdateDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[25]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [47279], "all_end_bytes": [47478], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateDesignatorRequest", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#244", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#246"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#246", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 246, "start_line": 1662, "end_line": 1665, "text": "func (x *UpdateDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1662, 1665], "def_symbols": [], "symbols": ["String", "func", "UpdateDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [47480], "all_end_bytes": [47572], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateDesignatorRequest", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#245", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#247"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#247", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 247, "start_line": 1666, "end_line": 1667, "text": "func (*UpdateDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1666, 1667], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateDesignatorRequest"], "doc_head": "func (*UpdateDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [47574], "all_end_bytes": [47623], "primary_index": 0, "all_receivers_normalized": ["*UpdateDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateDesignatorRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#246", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#248"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#248", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 248, "start_line": 1668, "end_line": 1679, "text": "func (x *UpdateDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[25]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1668, 1679], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateDesignatorRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[25]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [47625], "all_end_bytes": [47916], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateDesignatorRequest", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#247", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#249"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#249", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 249, "start_line": 1680, "end_line": 1684, "text": "// Deprecated: Use UpdateDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{25}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1681, 1684], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{25}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [47994], "all_end_bytes": [48111], "primary_index": 0, "all_receivers_normalized": ["*UpdateDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateDesignatorRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#248", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#250"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#250", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 250, "start_line": 1685, "end_line": 1691, "text": "func (x *UpdateDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetDesignatorCode", "primary_kind": "method", "primary_span": [1685, 1691], "def_symbols": [], "symbols": ["GetDesignatorCode", "func", "UpdateDesignatorRequest", "string", "nil", "return", "DesignatorCode"], "doc_head": "func (x *UpdateDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).GetDesignatorCode/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "GetDesignatorCode", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignatorCode"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).GetDesignatorCode/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [48113], "all_end_bytes": [48232], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["DesignatorCode", "GetDesignatorCode", "UpdateDesignatorRequest", "x.DesignatorCode"], "header_context_minimal": "package v0\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#249", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#251"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#251", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 251, "start_line": 1692, "end_line": 1698, "text": "func (x *UpdateDesignatorRequest) GetAirlineId() string {\n\tif x != nil {\n\t\treturn x.AirlineId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetAirlineId", "primary_kind": "method", "primary_span": [1692, 1698], "def_symbols": [], "symbols": ["GetAirlineId", "func", "UpdateDesignatorRequest", "string", "nil", "return", "AirlineId"], "doc_head": "func (x *UpdateDesignatorRequest) GetAirlineId() string {\n\tif x != nil {\n\t\treturn x.AirlineId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).GetAirlineId/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "GetAirlineId", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirlineId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).GetAirlineId/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [48234], "all_end_bytes": [48343], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineId", "GetAirlineId", "UpdateDesignatorRequest", "x.AirlineId"], "header_context_minimal": "package v0\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#250", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#252"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#252", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 252, "start_line": 1699, "end_line": 1705, "text": "func (x *UpdateDesignatorRequest) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetValidFrom", "primary_kind": "method", "primary_span": [1699, 1705], "def_symbols": [], "symbols": ["GetValidFrom", "func", "UpdateDesignatorRequest", "timestamppb", "Timestamp", "nil", "return", "ValidFrom"], "doc_head": "func (x *UpdateDesignatorRequest) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).GetValidFrom/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "GetValidFrom", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidFrom"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).GetValidFrom/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [48345], "all_end_bytes": [48471], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["GetValidFrom", "Timestamp", "UpdateDesignatorRequest", "ValidFrom", "timestamppb.Timestamp", "x.ValidFrom"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#251", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#253"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#253", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 253, "start_line": 1706, "end_line": 1712, "text": "func (x *UpdateDesignatorRequest) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetValidTo", "primary_kind": "method", "primary_span": [1706, 1712], "def_symbols": [], "symbols": ["GetValidTo", "func", "UpdateDesignatorRequest", "timestamppb", "Timestamp", "nil", "return", "ValidTo"], "doc_head": "func (x *UpdateDesignatorRequest) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).GetValidTo/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "GetValidTo", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidTo"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).GetValidTo/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [48473], "all_end_bytes": [48595], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["GetValidTo", "Timestamp", "UpdateDesignatorRequest", "ValidTo", "timestamppb.Timestamp", "x.ValidTo"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#252", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#254"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#254", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 254, "start_line": 1713, "end_line": 1719, "text": "type UpdateDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "UpdateDesignatorResponse", "primary_kind": "type", "primary_span": [1713, 1719], "def_symbols": [], "symbols": ["type", "UpdateDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designator", "protobuf", "bytes", "opt", "name", "designator", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [48602], "all_end_bytes": [48884], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "MessageState", "SizeCache", "UnknownFields", "UpdateDesignatorResponse", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#253", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#255"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#255", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 255, "start_line": 1720, "end_line": 1726, "text": "func (x *UpdateDesignatorResponse) Reset() {\n\t*x = UpdateDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[26]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1720, 1726], "def_symbols": [], "symbols": ["Reset", "func", "UpdateDesignatorResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateDesignatorResponse) Reset() {\n\t*x = UpdateDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[26]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "UpdateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorResponse"], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [48886], "all_end_bytes": [49087], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateDesignatorResponse", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#254", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#256"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#256", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 256, "start_line": 1727, "end_line": 1730, "text": "func (x *UpdateDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1727, 1730], "def_symbols": [], "symbols": ["String", "func", "UpdateDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "UpdateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorResponse"], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [49089], "all_end_bytes": [49182], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateDesignatorResponse", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#255", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#257"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#257", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 257, "start_line": 1731, "end_line": 1732, "text": "func (*UpdateDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1731, 1732], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateDesignatorResponse"], "doc_head": "func (*UpdateDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [49184], "all_end_bytes": [49234], "primary_index": 0, "all_receivers_normalized": ["*UpdateDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateDesignatorResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#256", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#258"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#258", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 258, "start_line": 1733, "end_line": 1744, "text": "func (x *UpdateDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[26]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1733, 1744], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateDesignatorResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[26]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorResponse"], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [49236], "all_end_bytes": [49528], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateDesignatorResponse", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#257", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#259"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#259", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 259, "start_line": 1745, "end_line": 1749, "text": "// Deprecated: Use UpdateDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{26}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1746, 1749], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{26}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [49607], "all_end_bytes": [49725], "primary_index": 0, "all_receivers_normalized": ["*UpdateDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateDesignatorResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#258", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#260"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#260", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 260, "start_line": 1750, "end_line": 1756, "text": "func (x *UpdateDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [1750, 1756], "def_symbols": [], "symbols": ["GetDesignator", "func", "UpdateDesignatorResponse", "Designator", "nil", "return"], "doc_head": "func (x *UpdateDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorResponse).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorResponse", "function_name": "", "method_name": "GetDesignator", "type_name": "UpdateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorResponse).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorResponse"], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [49727], "all_end_bytes": [49845], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetDesignator", "UpdateDesignatorResponse", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#259", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#261"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#261", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 261, "start_line": 1757, "end_line": 1764, "text": "type GetDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,1,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirlineId      string                 `protobuf:\"bytes,2,opt,name=airlineId,proto3\" json:\"airlineId,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}\n", "n_tokens": 96, "primary_symbol": "GetDesignatorRequest", "primary_kind": "type", "primary_span": [1757, 1764], "def_symbols": [], "symbols": ["type", "GetDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "DesignatorCode", "string", "protobuf", "bytes", "opt", "name", "designatorCode", "proto3", "json", "omitempty", "AirlineId", "airlineId", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,1,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirlineId      string                 `protobuf:\"bytes,2,opt,name=airlineId,proto3\" json:\"airlineId,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [49852], "all_end_bytes": [50255], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirlineId", "DesignatorCode", "GetDesignatorRequest", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#260", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#262"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#262", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 262, "start_line": 1765, "end_line": 1771, "text": "func (x *GetDesignatorRequest) Reset() {\n\t*x = GetDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[27]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1765, 1771], "def_symbols": [], "symbols": ["Reset", "func", "GetDesignatorRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetDesignatorRequest) Reset() {\n\t*x = GetDesignatorRequest{}\n\tmi := &file_airlines_proto_msgTypes[27]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [50257], "all_end_bytes": [50450], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#261", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#263"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#263", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 263, "start_line": 1772, "end_line": 1775, "text": "func (x *GetDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1772, 1775], "def_symbols": [], "symbols": ["String", "func", "GetDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [50452], "all_end_bytes": [50541], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#262", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#264"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#264", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 264, "start_line": 1776, "end_line": 1777, "text": "func (*GetDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1776, 1777], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetDesignatorRequest"], "doc_head": "func (*GetDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [50543], "all_end_bytes": [50589], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetDesignatorRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#263", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#265"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#265", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 265, "start_line": 1778, "end_line": 1789, "text": "func (x *GetDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[27]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1778, 1789], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetDesignatorRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[27]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [50591], "all_end_bytes": [50879], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#264", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#266"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#266", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 266, "start_line": 1790, "end_line": 1794, "text": "// Deprecated: Use GetDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{27}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1791, 1794], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{27}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [50954], "all_end_bytes": [51068], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetDesignatorRequest"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#265", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#267"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#267", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 267, "start_line": 1795, "end_line": 1801, "text": "func (x *GetDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetDesignatorCode", "primary_kind": "method", "primary_span": [1795, 1801], "def_symbols": [], "symbols": ["GetDesignatorCode", "func", "GetDesignatorRequest", "string", "nil", "return", "DesignatorCode"], "doc_head": "func (x *GetDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).GetDesignatorCode/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "GetDesignatorCode", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignatorCode"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).GetDesignatorCode/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [51070], "all_end_bytes": [51186], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["DesignatorCode", "GetDesignatorCode", "GetDesignatorRequest", "x.DesignatorCode"], "header_context_minimal": "package v0\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#266", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#268"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#268", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 268, "start_line": 1802, "end_line": 1808, "text": "func (x *GetDesignatorRequest) GetAirlineId() string {\n\tif x != nil {\n\t\treturn x.AirlineId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetAirlineId", "primary_kind": "method", "primary_span": [1802, 1808], "def_symbols": [], "symbols": ["GetAirlineId", "func", "GetDesignatorRequest", "string", "nil", "return", "AirlineId"], "doc_head": "func (x *GetDesignatorRequest) GetAirlineId() string {\n\tif x != nil {\n\t\treturn x.AirlineId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).GetAirlineId/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "GetAirlineId", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirlineId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).GetAirlineId/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [51188], "all_end_bytes": [51294], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirlineId", "GetAirlineId", "GetDesignatorRequest", "x.AirlineId"], "header_context_minimal": "package v0\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#267", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#269"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#269", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 269, "start_line": 1809, "end_line": 1815, "text": "type GetDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "GetDesignatorResponse", "primary_kind": "type", "primary_span": [1809, 1815], "def_symbols": [], "symbols": ["type", "GetDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designator", "protobuf", "bytes", "opt", "name", "designator", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [51301], "all_end_bytes": [51580], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "GetDesignatorResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#268", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#270"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#270", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 270, "start_line": 1816, "end_line": 1822, "text": "func (x *GetDesignatorResponse) Reset() {\n\t*x = GetDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[28]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1816, 1822], "def_symbols": [], "symbols": ["Reset", "func", "GetDesignatorResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetDesignatorResponse) Reset() {\n\t*x = GetDesignatorResponse{}\n\tmi := &file_airlines_proto_msgTypes[28]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "GetDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorResponse"], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [51582], "all_end_bytes": [51777], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#269", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#271"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#271", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 271, "start_line": 1823, "end_line": 1826, "text": "func (x *GetDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1823, 1826], "def_symbols": [], "symbols": ["String", "func", "GetDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "GetDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorResponse"], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [51779], "all_end_bytes": [51869], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#270", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#272"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#272", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 272, "start_line": 1827, "end_line": 1828, "text": "func (*GetDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1827, 1828], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetDesignatorResponse"], "doc_head": "func (*GetDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [51871], "all_end_bytes": [51918], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetDesignatorResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#271", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#273"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#273", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 273, "start_line": 1829, "end_line": 1840, "text": "func (x *GetDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[28]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1829, 1840], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetDesignatorResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[28]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorResponse"], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [51920], "all_end_bytes": [52209], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#272", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#274"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#274", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 274, "start_line": 1841, "end_line": 1845, "text": "// Deprecated: Use GetDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{28}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1842, 1845], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{28}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [52285], "all_end_bytes": [52400], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetDesignatorResponse"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#273", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#275"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#275", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 275, "start_line": 1846, "end_line": 1852, "text": "func (x *GetDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [1846, 1852], "def_symbols": [], "symbols": ["GetDesignator", "func", "GetDesignatorResponse", "Designator", "nil", "return"], "doc_head": "func (x *GetDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorResponse).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorResponse", "function_name": "", "method_name": "GetDesignator", "type_name": "GetDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorResponse).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorResponse"], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [52402], "all_end_bytes": [52517], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetDesignator", "GetDesignatorResponse", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#274", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#276"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#276", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 276, "start_line": 1853, "end_line": 1861, "text": "type SearchDesignatorsRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 111, "primary_symbol": "SearchDesignatorsRequest", "primary_kind": "type", "primary_span": [1853, 1861], "def_symbols": [], "symbols": ["type", "SearchDesignatorsRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Limit", "uint32", "varint", "limit", "Cursor", "cursor", "oneof", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchDesignatorsRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchDesignatorsRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchDesignatorsRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchDesignatorsRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchDesignatorsRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [52524], "all_end_bytes": [53005], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Cursor", "Limit", "MessageState", "SearchDesignatorsRequest", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#275", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#277"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#277", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 277, "start_line": 1862, "end_line": 1868, "text": "func (x *SearchDesignatorsRequest) Reset() {\n\t*x = SearchDesignatorsRequest{}\n\tmi := &file_airlines_proto_msgTypes[29]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1862, 1868], "def_symbols": [], "symbols": ["Reset", "func", "SearchDesignatorsRequest", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchDesignatorsRequest) Reset() {\n\t*x = SearchDesignatorsRequest{}\n\tmi := &file_airlines_proto_msgTypes[29]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "Reset", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [53007], "all_end_bytes": [53208], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchDesignatorsRequest", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#276", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#278"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#278", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 278, "start_line": 1869, "end_line": 1872, "text": "func (x *SearchDesignatorsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1869, 1872], "def_symbols": [], "symbols": ["String", "func", "SearchDesignatorsRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchDesignatorsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "String", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [53210], "all_end_bytes": [53303], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchDesignatorsRequest", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#277", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#279"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#279", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 279, "start_line": 1873, "end_line": 1874, "text": "func (*SearchDesignatorsRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1873, 1874], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchDesignatorsRequest"], "doc_head": "func (*SearchDesignatorsRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchDesignatorsRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchDesignatorsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [53305], "all_end_bytes": [53355], "primary_index": 0, "all_receivers_normalized": ["*SearchDesignatorsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchDesignatorsRequest"], "header_context_minimal": "package v0\n// receiver: *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#278", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#280"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#280", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 280, "start_line": 1875, "end_line": 1886, "text": "func (x *SearchDesignatorsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[29]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1875, 1886], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchDesignatorsRequest", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchDesignatorsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[29]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [53357], "all_end_bytes": [53649], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchDesignatorsRequest", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#279", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#281"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#281", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 281, "start_line": 1887, "end_line": 1891, "text": "// Deprecated: Use SearchDesignatorsRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchDesignatorsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{29}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1888, 1891], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchDesignatorsRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchDesignatorsRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchDesignatorsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{29}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchDesignatorsRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchDesignatorsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [53728], "all_end_bytes": [53846], "primary_index": 0, "all_receivers_normalized": ["*SearchDesignatorsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchDesignatorsRequest"], "header_context_minimal": "package v0\n// receiver: *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#280", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#282"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#282", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 282, "start_line": 1892, "end_line": 1898, "text": "func (x *SearchDesignatorsRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}\n", "n_tokens": 29, "primary_symbol": "GetQ", "primary_kind": "method", "primary_span": [1892, 1898], "def_symbols": [], "symbols": ["GetQ", "func", "SearchDesignatorsRequest", "string", "nil", "return"], "doc_head": "func (x *SearchDesignatorsRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).GetQ/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "GetQ", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetQ"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).GetQ/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [53848], "all_end_bytes": [53942], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetQ", "SearchDesignatorsRequest", "x.Q"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#281", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#283"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#283", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 283, "start_line": 1899, "end_line": 1905, "text": "func (x *SearchDesignatorsRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetLimit", "primary_kind": "method", "primary_span": [1899, 1905], "def_symbols": [], "symbols": ["GetLimit", "func", "SearchDesignatorsRequest", "uint32", "nil", "return", "Limit"], "doc_head": "func (x *SearchDesignatorsRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).GetLimit/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "GetLimit", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLimit"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).GetLimit/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [53944], "all_end_bytes": [54045], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetLimit", "Limit", "SearchDesignatorsRequest", "x.Limit"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#282", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#284"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#284", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 284, "start_line": 1906, "end_line": 1912, "text": "func (x *SearchDesignatorsRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetCursor", "primary_kind": "method", "primary_span": [1906, 1912], "def_symbols": [], "symbols": ["GetCursor", "func", "SearchDesignatorsRequest", "string", "nil", "Cursor", "return"], "doc_head": "func (x *SearchDesignatorsRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).GetCursor/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "GetCursor", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCursor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).GetCursor/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [54047], "all_end_bytes": [54171], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Cursor", "GetCursor", "SearchDesignatorsRequest", "x.Cursor"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#283", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#285"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#285", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 285, "start_line": 1913, "end_line": 1922, "text": "type SearchDesignatorsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*Designator          `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tTotalCount    uint32                 `protobuf:\"varint,2,opt,name=totalCount,proto3\" json:\"totalCount,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,3,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,4,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 142, "primary_symbol": "SearchDesignatorsResponse", "primary_kind": "type", "primary_span": [1913, 1922], "def_symbols": [], "symbols": ["type", "SearchDesignatorsResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Result", "Designator", "protobuf", "bytes", "rep", "name", "result", "proto3", "json", "omitempty", "TotalCount", "uint32", "varint", "opt", "totalCount", "Next", "string", "next", "oneof", "Previous", "previous", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchDesignatorsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*Designator          `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tTotalCount    uint32                 `protobuf:\"varint,2,opt,name=totalCount,proto3\" json:\"totalCount,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,3,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,4,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchDesignatorsResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchDesignatorsResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchDesignatorsResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchDesignatorsResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [54178], "all_end_bytes": [54792], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "MessageState", "Next", "Previous", "Result", "SearchDesignatorsResponse", "SizeCache", "TotalCount", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#284", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#286"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#286", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 286, "start_line": 1923, "end_line": 1929, "text": "func (x *SearchDesignatorsResponse) Reset() {\n\t*x = SearchDesignatorsResponse{}\n\tmi := &file_airlines_proto_msgTypes[30]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1923, 1929], "def_symbols": [], "symbols": ["Reset", "func", "SearchDesignatorsResponse", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchDesignatorsResponse) Reset() {\n\t*x = SearchDesignatorsResponse{}\n\tmi := &file_airlines_proto_msgTypes[30]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "Reset", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [54794], "all_end_bytes": [54997], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchDesignatorsResponse", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#285", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#287"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#287", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 287, "start_line": 1930, "end_line": 1933, "text": "func (x *SearchDesignatorsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1930, 1933], "def_symbols": [], "symbols": ["String", "func", "SearchDesignatorsResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchDesignatorsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "String", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [54999], "all_end_bytes": [55093], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchDesignatorsResponse", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#286", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#288"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#288", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 288, "start_line": 1934, "end_line": 1935, "text": "func (*SearchDesignatorsResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1934, 1935], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchDesignatorsResponse"], "doc_head": "func (*SearchDesignatorsResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchDesignatorsResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchDesignatorsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [55095], "all_end_bytes": [55146], "primary_index": 0, "all_receivers_normalized": ["*SearchDesignatorsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchDesignatorsResponse"], "header_context_minimal": "package v0\n// receiver: *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#287", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#289"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#289", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 289, "start_line": 1936, "end_line": 1947, "text": "func (x *SearchDesignatorsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[30]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1936, 1947], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchDesignatorsResponse", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchDesignatorsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[30]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [55148], "all_end_bytes": [55441], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchDesignatorsResponse", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#288", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#290"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#290", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 290, "start_line": 1948, "end_line": 1952, "text": "// Deprecated: Use SearchDesignatorsResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchDesignatorsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{30}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1949, 1952], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchDesignatorsResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchDesignatorsResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchDesignatorsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{30}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchDesignatorsResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchDesignatorsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [55521], "all_end_bytes": [55640], "primary_index": 0, "all_receivers_normalized": ["*SearchDesignatorsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchDesignatorsResponse"], "header_context_minimal": "package v0\n// receiver: *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#289", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#291"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#291", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 291, "start_line": 1953, "end_line": 1959, "text": "func (x *SearchDesignatorsResponse) GetResult() []*Designator {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetResult", "primary_kind": "method", "primary_span": [1953, 1959], "def_symbols": [], "symbols": ["GetResult", "func", "SearchDesignatorsResponse", "Designator", "nil", "return", "Result"], "doc_head": "func (x *SearchDesignatorsResponse) GetResult() []*Designator {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).GetResult/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "GetResult", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetResult"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).GetResult/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [55642], "all_end_bytes": [55755], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetResult", "Result", "SearchDesignatorsResponse", "x.Result"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#290", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#292"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#292", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 292, "start_line": 1960, "end_line": 1966, "text": "func (x *SearchDesignatorsResponse) GetTotalCount() uint32 {\n\tif x != nil {\n\t\treturn x.TotalCount\n\t}\n\treturn 0\n}\n", "n_tokens": 34, "primary_symbol": "GetTotalCount", "primary_kind": "method", "primary_span": [1960, 1966], "def_symbols": [], "symbols": ["GetTotalCount", "func", "SearchDesignatorsResponse", "uint32", "nil", "return", "TotalCount"], "doc_head": "func (x *SearchDesignatorsResponse) GetTotalCount() uint32 {\n\tif x != nil {\n\t\treturn x.TotalCount\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).GetTotalCount/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "GetTotalCount", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTotalCount"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).GetTotalCount/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [55757], "all_end_bytes": [55869], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetTotalCount", "SearchDesignatorsResponse", "TotalCount", "x.TotalCount"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#291", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#293"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#293", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 293, "start_line": 1967, "end_line": 1973, "text": "func (x *SearchDesignatorsResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetNext", "primary_kind": "method", "primary_span": [1967, 1973], "def_symbols": [], "symbols": ["GetNext", "func", "SearchDesignatorsResponse", "string", "nil", "Next", "return"], "doc_head": "func (x *SearchDesignatorsResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).GetNext/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "GetNext", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetNext"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).GetNext/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [55871], "all_end_bytes": [55990], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetNext", "Next", "SearchDesignatorsResponse", "x.Next"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#292", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#294"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#294", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 294, "start_line": 1974, "end_line": 1980, "text": "func (x *SearchDesignatorsResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetPrevious", "primary_kind": "method", "primary_span": [1974, 1980], "def_symbols": [], "symbols": ["GetPrevious", "func", "SearchDesignatorsResponse", "string", "nil", "Previous", "return"], "doc_head": "func (x *SearchDesignatorsResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).GetPrevious/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "GetPrevious", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetPrevious"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).GetPrevious/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [55992], "all_end_bytes": [56123], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetPrevious", "Previous", "SearchDesignatorsResponse", "x.Previous"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#293", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#295"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#295", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 295, "start_line": 1981, "end_line": 1990, "text": "type Airline_Airport struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tDesignator    *string                `protobuf:\"bytes,2,opt,name=designator,proto3,oneof\" json:\"designator,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,3,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tCity          *Airline_Airport_City  `protobuf:\"bytes,4,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 164, "primary_symbol": "Airline_Airport", "primary_kind": "type", "primary_span": [1981, 1990], "def_symbols": [], "symbols": ["type", "Airline_Airport", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Designator", "designator", "oneof", "Name", "map", "rep", "protobuf_key", "key", "protobuf_val", "value", "City", "Airline_Airport_City", "city", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Airline_Airport struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tDesignator    *string                `protobuf:\"bytes,2,opt,name=designator,proto3,oneof\" json:\"designator,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,3,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tCity          *Airline_Airport_City  `protobuf:\"bytes,4,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Airline_Airport (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airline_Airport", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airline_Airport"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airline_Airport (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airline_Airport"], "all_type_kinds": ["struct"], "all_start_bytes": [56130], "all_end_bytes": [56785], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport", "Airline_Airport_City", "City", "Designator", "MessageState", "Name", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#294", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#296"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#296", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 296, "start_line": 1991, "end_line": 1997, "text": "func (x *Airline_Airport) Reset() {\n\t*x = Airline_Airport{}\n\tmi := &file_airlines_proto_msgTypes[35]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 55, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1991, 1997], "def_symbols": [], "symbols": ["Reset", "func", "Airline_Airport", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Airline_Airport) Reset() {\n\t*x = Airline_Airport{}\n\tmi := &file_airlines_proto_msgTypes[35]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport", "function_name": "", "method_name": "Reset", "type_name": "Airline_Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport"], "all_type_names": ["Airline_Airport"], "all_type_kinds": [null], "all_start_bytes": [56787], "all_end_bytes": [56970], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airline_Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#295", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#297"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#297", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 297, "start_line": 1998, "end_line": 2001, "text": "func (x *Airline_Airport) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 24, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1998, 2001], "def_symbols": [], "symbols": ["String", "func", "Airline_Airport", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Airline_Airport) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport", "function_name": "", "method_name": "String", "type_name": "Airline_Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport"], "all_type_names": ["Airline_Airport"], "all_type_kinds": [null], "all_start_bytes": [56972], "all_end_bytes": [57056], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airline_Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#296", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#298"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#298", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 298, "start_line": 2002, "end_line": 2003, "text": "func (*Airline_Airport) ProtoMessage() {}\n", "n_tokens": 12, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2002, 2003], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Airline_Airport"], "doc_head": "func (*Airline_Airport) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Airline_Airport", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Airline_Airport"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [57058], "all_end_bytes": [57099], "primary_index": 0, "all_receivers_normalized": ["*Airline_Airport"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Airline_Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#297", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#299"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#299", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 299, "start_line": 2004, "end_line": 2015, "text": "func (x *Airline_Airport) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[35]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 83, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2004, 2015], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Airline_Airport", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Airline_Airport) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[35]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport", "function_name": "", "method_name": "ProtoReflect", "type_name": "Airline_Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport"], "all_type_names": ["Airline_Airport"], "all_type_kinds": [null], "all_start_bytes": [57101], "all_end_bytes": [57384], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Airline_Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#298", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#300"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#300", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 300, "start_line": 2016, "end_line": 2020, "text": "// Deprecated: Use Airline_Airport.ProtoReflect.Descriptor instead.\nfunc (*Airline_Airport) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{20, 0}\n}\n", "n_tokens": 52, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2017, 2020], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Airline_Airport", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Airline_Airport.ProtoReflect.Descriptor instead.\nfunc (*Airline_Airport) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{20, 0}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Airline_Airport", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Airline_Airport"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [57454], "all_end_bytes": [57566], "primary_index": 0, "all_receivers_normalized": ["*Airline_Airport"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Airline_Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#299", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#301"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#301", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 301, "start_line": 2021, "end_line": 2027, "text": "func (x *Airline_Airport) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 30, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [2021, 2027], "def_symbols": [], "symbols": ["GetId", "func", "Airline_Airport", "string", "nil", "return"], "doc_head": "func (x *Airline_Airport) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport", "function_name": "", "method_name": "GetId", "type_name": "Airline_Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport"], "all_type_names": ["Airline_Airport"], "all_type_kinds": [null], "all_start_bytes": [57568], "all_end_bytes": [57655], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#300", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#302"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#302", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 302, "start_line": 2028, "end_line": 2034, "text": "func (x *Airline_Airport) GetDesignator() string {\n\tif x != nil && x.Designator != nil {\n\t\treturn *x.Designator\n\t}\n\treturn \"\"\n}\n", "n_tokens": 39, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [2028, 2034], "def_symbols": [], "symbols": ["GetDesignator", "func", "Airline_Airport", "string", "nil", "Designator", "return"], "doc_head": "func (x *Airline_Airport) GetDesignator() string {\n\tif x != nil && x.Designator != nil {\n\t\treturn *x.Designator\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport", "function_name": "", "method_name": "GetDesignator", "type_name": "Airline_Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport"], "all_type_names": ["Airline_Airport"], "all_type_kinds": [null], "all_start_bytes": [57657], "all_end_bytes": [57784], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport", "Designator", "GetDesignator", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#301", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#303"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#303", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 303, "start_line": 2035, "end_line": 2041, "text": "func (x *Airline_Airport) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [2035, 2041], "def_symbols": [], "symbols": ["GetName", "func", "Airline_Airport", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *Airline_Airport) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport", "function_name": "", "method_name": "GetName", "type_name": "Airline_Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport"], "all_type_names": ["Airline_Airport"], "all_type_kinds": [null], "all_start_bytes": [57786], "all_end_bytes": [57889], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#302", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#304"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#304", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 304, "start_line": 2042, "end_line": 2048, "text": "func (x *Airline_Airport) GetCity() *Airline_Airport_City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}\n", "n_tokens": 38, "primary_symbol": "GetCity", "primary_kind": "method", "primary_span": [2042, 2048], "def_symbols": [], "symbols": ["GetCity", "func", "Airline_Airport", "Airline_Airport_City", "nil", "return", "City"], "doc_head": "func (x *Airline_Airport) GetCity() *Airline_Airport_City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport).GetCity/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport", "function_name": "", "method_name": "GetCity", "type_name": "Airline_Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCity"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport).GetCity/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport"], "all_type_names": ["Airline_Airport"], "all_type_kinds": [null], "all_start_bytes": [57891], "all_end_bytes": [57998], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport", "Airline_Airport_City", "City", "GetCity", "x.City"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#303", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#305"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#305", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 305, "start_line": 2049, "end_line": 2059, "text": "type Airline_Airport_City struct {\n\tstate         protoimpl.MessageState        `protogen:\"open.v1\"`\n\tId            int64                         `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string             `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tTimezone      string                        `protobuf:\"bytes,3,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tState         *string                       `protobuf:\"bytes,4,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tCountry       *Airline_Airport_City_Country `protobuf:\"bytes,5,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 189, "primary_symbol": "Airline_Airport_City", "primary_kind": "type", "primary_span": [2049, 2059], "def_symbols": [], "symbols": ["type", "Airline_Airport_City", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "int64", "protobuf", "varint", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "string", "bytes", "rep", "protobuf_key", "key", "protobuf_val", "value", "Timezone", "timezone", "State", "oneof", "Country", "Airline_Airport_City_Country", "country", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Airline_Airport_City struct {\n\tstate         protoimpl.MessageState        `protogen:\"open.v1\"`\n\tId            int64                         `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string             `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tTimezone      string                        `protobuf:\"bytes,3,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tState         *string                       `protobuf:\"bytes,4,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tCountry       *Airline_Airport_City_Country `protobuf:\"bytes,5,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Airline_Airport_City (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airline_Airport_City", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airline_Airport_City"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airline_Airport_City (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airline_Airport_City"], "all_type_kinds": ["struct"], "all_start_bytes": [58005], "all_end_bytes": [58814], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport_City", "Airline_Airport_City_Country", "Country", "MessageState", "Name", "SizeCache", "State", "Timezone", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#304", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#306"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#306", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 306, "start_line": 2060, "end_line": 2066, "text": "func (x *Airline_Airport_City) Reset() {\n\t*x = Airline_Airport_City{}\n\tmi := &file_airlines_proto_msgTypes[39]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 59, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2060, 2066], "def_symbols": [], "symbols": ["Reset", "func", "Airline_Airport_City", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Airline_Airport_City) Reset() {\n\t*x = Airline_Airport_City{}\n\tmi := &file_airlines_proto_msgTypes[39]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City", "function_name": "", "method_name": "Reset", "type_name": "Airline_Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City"], "all_type_names": ["Airline_Airport_City"], "all_type_kinds": [null], "all_start_bytes": [58816], "all_end_bytes": [59009], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport_City", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#305", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#307"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#307", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 307, "start_line": 2067, "end_line": 2070, "text": "func (x *Airline_Airport_City) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 26, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2067, 2070], "def_symbols": [], "symbols": ["String", "func", "Airline_Airport_City", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Airline_Airport_City) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City", "function_name": "", "method_name": "String", "type_name": "Airline_Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City"], "all_type_names": ["Airline_Airport_City"], "all_type_kinds": [null], "all_start_bytes": [59011], "all_end_bytes": [59100], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport_City", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#306", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#308"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#308", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 308, "start_line": 2071, "end_line": 2072, "text": "func (*Airline_Airport_City) ProtoMessage() {}\n", "n_tokens": 14, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2071, 2072], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Airline_Airport_City"], "doc_head": "func (*Airline_Airport_City) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Airline_Airport_City", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Airline_Airport_City"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [59102], "all_end_bytes": [59148], "primary_index": 0, "all_receivers_normalized": ["*Airline_Airport_City"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#307", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#309"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#309", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 309, "start_line": 2073, "end_line": 2084, "text": "func (x *Airline_Airport_City) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[39]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 85, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2073, 2084], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Airline_Airport_City", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Airline_Airport_City) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[39]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City", "function_name": "", "method_name": "ProtoReflect", "type_name": "Airline_Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City"], "all_type_names": ["Airline_Airport_City"], "all_type_kinds": [null], "all_start_bytes": [59150], "all_end_bytes": [59438], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport_City", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#308", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#310"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#310", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 310, "start_line": 2085, "end_line": 2089, "text": "// Deprecated: Use Airline_Airport_City.ProtoReflect.Descriptor instead.\nfunc (*Airline_Airport_City) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{20, 0, 1}\n}\n", "n_tokens": 59, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2086, 2089], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Airline_Airport_City", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Airline_Airport_City.ProtoReflect.Descriptor instead.\nfunc (*Airline_Airport_City) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{20, 0, 1}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Airline_Airport_City", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Airline_Airport_City"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [59513], "all_end_bytes": [59633], "primary_index": 0, "all_receivers_normalized": ["*Airline_Airport_City"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#309", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#311"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#311", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 311, "start_line": 2090, "end_line": 2096, "text": "func (x *Airline_Airport_City) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}\n", "n_tokens": 35, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [2090, 2096], "def_symbols": [], "symbols": ["GetId", "func", "Airline_Airport_City", "int64", "nil", "return"], "doc_head": "func (x *Airline_Airport_City) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City", "function_name": "", "method_name": "GetId", "type_name": "Airline_Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City"], "all_type_names": ["Airline_Airport_City"], "all_type_kinds": [null], "all_start_bytes": [59635], "all_end_bytes": [59725], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#310", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#312"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#312", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 312, "start_line": 2097, "end_line": 2103, "text": "func (x *Airline_Airport_City) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [2097, 2103], "def_symbols": [], "symbols": ["GetName", "func", "Airline_Airport_City", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *Airline_Airport_City) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City", "function_name": "", "method_name": "GetName", "type_name": "Airline_Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City"], "all_type_names": ["Airline_Airport_City"], "all_type_kinds": [null], "all_start_bytes": [59727], "all_end_bytes": [59835], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#311", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#313"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#313", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 313, "start_line": 2104, "end_line": 2110, "text": "func (x *Airline_Airport_City) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetTimezone", "primary_kind": "method", "primary_span": [2104, 2110], "def_symbols": [], "symbols": ["GetTimezone", "func", "Airline_Airport_City", "string", "nil", "return", "Timezone"], "doc_head": "func (x *Airline_Airport_City) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City).GetTimezone/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City", "function_name": "", "method_name": "GetTimezone", "type_name": "Airline_Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTimezone"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City).GetTimezone/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City"], "all_type_names": ["Airline_Airport_City"], "all_type_kinds": [null], "all_start_bytes": [59837], "all_end_bytes": [59941], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City", "GetTimezone", "Timezone", "x.Timezone"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#312", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#314"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#314", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 314, "start_line": 2111, "end_line": 2117, "text": "func (x *Airline_Airport_City) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}\n", "n_tokens": 38, "primary_symbol": "GetState", "primary_kind": "method", "primary_span": [2111, 2117], "def_symbols": [], "symbols": ["GetState", "func", "Airline_Airport_City", "string", "nil", "State", "return"], "doc_head": "func (x *Airline_Airport_City) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City).GetState/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City", "function_name": "", "method_name": "GetState", "type_name": "Airline_Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetState"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City).GetState/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City"], "all_type_names": ["Airline_Airport_City"], "all_type_kinds": [null], "all_start_bytes": [59943], "all_end_bytes": [60060], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City", "GetState", "State", "x.State"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#313", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#315"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#315", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 315, "start_line": 2118, "end_line": 2124, "text": "func (x *Airline_Airport_City) GetCountry() *Airline_Airport_City_Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}\n", "n_tokens": 42, "primary_symbol": "GetCountry", "primary_kind": "method", "primary_span": [2118, 2124], "def_symbols": [], "symbols": ["GetCountry", "func", "Airline_Airport_City", "Airline_Airport_City_Country", "nil", "return", "Country"], "doc_head": "func (x *Airline_Airport_City) GetCountry() *Airline_Airport_City_Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City).GetCountry/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City", "function_name": "", "method_name": "GetCountry", "type_name": "Airline_Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCountry"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City).GetCountry/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City"], "all_type_names": ["Airline_Airport_City"], "all_type_kinds": [null], "all_start_bytes": [60062], "all_end_bytes": [60188], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City", "Airline_Airport_City_Country", "Country", "GetCountry", "x.Country"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#314", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#316"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#316", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 316, "start_line": 2125, "end_line": 2132, "text": "type Airline_Airport_City_Country struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 108, "primary_symbol": "Airline_Airport_City_Country", "primary_kind": "type", "primary_span": [2125, 2132], "def_symbols": [], "symbols": ["type", "Airline_Airport_City_Country", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "rep", "protobuf_key", "key", "protobuf_val", "value", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Airline_Airport_City_Country struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Airline_Airport_City_Country (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airline_Airport_City_Country", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airline_Airport_City_Country"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airline_Airport_City_Country (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airline_Airport_City_Country"], "all_type_kinds": ["struct"], "all_start_bytes": [60195], "all_end_bytes": [60641], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport_City_Country", "MessageState", "Name", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#315", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#317"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#317", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 317, "start_line": 2133, "end_line": 2139, "text": "func (x *Airline_Airport_City_Country) Reset() {\n\t*x = Airline_Airport_City_Country{}\n\tmi := &file_airlines_proto_msgTypes[41]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 63, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2133, 2139], "def_symbols": [], "symbols": ["Reset", "func", "Airline_Airport_City_Country", "file_airlines_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Airline_Airport_City_Country) Reset() {\n\t*x = Airline_Airport_City_Country{}\n\tmi := &file_airlines_proto_msgTypes[41]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City_Country).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City_Country", "function_name": "", "method_name": "Reset", "type_name": "Airline_Airport_City_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City_Country).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City_Country"], "all_type_names": ["Airline_Airport_City_Country"], "all_type_kinds": [null], "all_start_bytes": [60643], "all_end_bytes": [60852], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City_Country)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport_City_Country", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airline_Airport_City_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#316", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#318"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#318", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 318, "start_line": 2140, "end_line": 2143, "text": "func (x *Airline_Airport_City_Country) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 28, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2140, 2143], "def_symbols": [], "symbols": ["String", "func", "Airline_Airport_City_Country", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Airline_Airport_City_Country) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City_Country).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City_Country", "function_name": "", "method_name": "String", "type_name": "Airline_Airport_City_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City_Country).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City_Country"], "all_type_names": ["Airline_Airport_City_Country"], "all_type_kinds": [null], "all_start_bytes": [60854], "all_end_bytes": [60951], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City_Country)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport_City_Country", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airline_Airport_City_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#317", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#319"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#319", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 319, "start_line": 2144, "end_line": 2145, "text": "func (*Airline_Airport_City_Country) ProtoMessage() {}\n", "n_tokens": 16, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2144, 2145], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Airline_Airport_City_Country"], "doc_head": "func (*Airline_Airport_City_Country) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Airline_Airport_City_Country", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Airline_Airport_City_Country"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [60953], "all_end_bytes": [61007], "primary_index": 0, "all_receivers_normalized": ["*Airline_Airport_City_Country"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City_Country", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Airline_Airport_City_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#318", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#320"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#320", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 320, "start_line": 2146, "end_line": 2157, "text": "func (x *Airline_Airport_City_Country) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[41]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 87, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2146, 2157], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Airline_Airport_City_Country", "protoreflect", "Message", "file_airlines_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Airline_Airport_City_Country) ProtoReflect() protoreflect.Message {\n\tmi := &file_airlines_proto_msgTypes[41]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City_Country).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City_Country", "function_name": "", "method_name": "ProtoReflect", "type_name": "Airline_Airport_City_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City_Country).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City_Country"], "all_type_names": ["Airline_Airport_City_Country"], "all_type_kinds": [null], "all_start_bytes": [61009], "all_end_bytes": [61305], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City_Country)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airline_Airport_City_Country", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Airline_Airport_City_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#319", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#321"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#321", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 321, "start_line": 2158, "end_line": 2162, "text": "// Deprecated: Use Airline_Airport_City_Country.ProtoReflect.Descriptor instead.\nfunc (*Airline_Airport_City_Country) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{20, 0, 1, 1}\n}\n", "n_tokens": 66, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2159, 2162], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Airline_Airport_City_Country", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airlines_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Airline_Airport_City_Country.ProtoReflect.Descriptor instead.\nfunc (*Airline_Airport_City_Country) Descriptor() ([]byte, []int) {\n\treturn file_airlines_proto_rawDescGZIP(), []int{20, 0, 1, 1}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Airline_Airport_City_Country", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Airline_Airport_City_Country"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [61388], "all_end_bytes": [61519], "primary_index": 0, "all_receivers_normalized": ["*Airline_Airport_City_Country"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City_Country", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Airline_Airport_City_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#320", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#322"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#322", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 322, "start_line": 2163, "end_line": 2169, "text": "func (x *Airline_Airport_City_Country) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [2163, 2169], "def_symbols": [], "symbols": ["GetId", "func", "Airline_Airport_City_Country", "string", "nil", "return"], "doc_head": "func (x *Airline_Airport_City_Country) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City_Country).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City_Country", "function_name": "", "method_name": "GetId", "type_name": "Airline_Airport_City_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City_Country).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City_Country"], "all_type_names": ["Airline_Airport_City_Country"], "all_type_kinds": [null], "all_start_bytes": [61521], "all_end_bytes": [61621], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City_Country)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airline_Airport_City_Country", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Airline_Airport_City_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#321", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#323"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#323", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 323, "start_line": 2170, "end_line": 2461, "text": "func (x *Airline_Airport_City_Country) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n\nvar File_airlines_proto protoreflect.FileDescriptor\n\nconst file_airlines_proto_rawDesc = \"\" +\n\t\"\\n\" +\n\t\"\\x0eairlines.proto\\x12\\x14aviation.airlines.v0\\x1a\\x1fgoogle/protobuf/timestamp.proto\\\"c\\n\" +\n\t\"\\x15SearchAirlinesRequest\\x12\\f\\n\" +\n\t\"\\x01q\\x18\\x01 \\x01(\\tR\\x01q\\x12\\x14\\n\" +\n\t\"\\x05limit\\x18\\x02 \\x01(\\rR\\x05limit\\x12\\x1b\\n\" +\n\t\"\\x06cursor\\x18\\x03 \\x01(\\tH\\x00R\\x06cursor\\x88\\x01\\x01B\\t\\n\" +\n\t\"\\a_cursor\\\"\\xc3\\x01\\n\" +\n\t\"\\x16SearchAirlinesResponse\\x129\\n\" +\n\t\"\\x06result\\x18\\x01 \\x03(\\v2!.aviation.airlines.v0.SlimAirlineR\\x06result\\x12\\x17\\n\" +\n\t\"\\x04next\\x18\\x02 \\x01(\\tH\\x00R\\x04next\\x88\\x01\\x01\\x12\\x1f\\n\" +\n\t\"\\bprevious\\x18\\x03 \\x01(\\tH\\x01R\\bprevious\\x88\\x01\\x01\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"totalCount\\x18\\x04 \\x01(\\rR\\n\" +\n\t\"totalCountB\\a\\n\" +\n\t\"\\x05_nextB\\v\\n\" +\n\t\"\\t_previous\\\"&\\n\" +\n\t\"\\x14DeleteAirlineRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\\"P\\n\" +\n\t\"\\x15DeleteAirlineResponse\\x127\\n\" +\n\t\"\\aairline\\x18\\x01 \\x01(\\v2\\x1d.aviation.airlines.v0.AirlineR\\aairline\\\"\\x9f\\x06\\n\" +\n\t\"\\x14UpdateAirlineRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12\\x17\\n\" +\n\t\"\\x04iata\\x18\\x02 \\x01(\\tH\\x00R\\x04iata\\x88\\x01\\x01\\x12\\x17\\n\" +\n\t\"\\x04icao\\x18\\x03 \\x01(\\tH\\x01R\\x04icao\\x88\\x01\\x01\\x12&\\n\" +\n\t\"\\x0eclassification\\x18\\x04 \\x01(\\x03R\\x0eclassification\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x05 \\x01(\\tR\\x04name\\x12]\\n\" +\n\t\"\\vdescription\\x18\\x06 \\x03(\\v2;.aviation.airlines.v0.UpdateAirlineRequest.DescriptionEntryR\\vdescription\\x12#\\n\" +\n\t\"\\n\" +\n\t\"websiteUrl\\x18\\a \\x01(\\tH\\x02R\\n\" +\n\t\"websiteUrl\\x88\\x01\\x01\\x12`\\n\" +\n\t\"\\fwikipediaUrl\\x18\\b \\x03(\\v2<.aviation.airlines.v0.UpdateAirlineRequest.WikipediaUrlEntryR\\fwikipediaUrl\\x12%\\n\" +\n\t\"\\vfacebookUrl\\x18\\t \\x01(\\tH\\x03R\\vfacebookUrl\\x88\\x01\\x01\\x12#\\n\" +\n\t\"\\n\" +\n\t\"twitterUrl\\x18\\n\" +\n\t\" \\x01(\\tH\\x04R\\n\" +\n\t\"twitterUrl\\x88\\x01\\x01\\x12C\\n\" +\n\t\"\\x1areservationTelephoneNumber\\x18\\v \\x01(\\tH\\x05R\\x1areservationTelephoneNumber\\x88\\x01\\x01\\x12#\\n\" +\n\t\"\\n\" +\n\t\"hubAirport\\x18\\f \\x01(\\tH\\x06R\\n\" +\n\t\"hubAirport\\x88\\x01\\x01\\x1a>\\n\" +\n\t\"\\x10DescriptionEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a?\\n\" +\n\t\"\\x11WikipediaUrlEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\a\\n\" +\n\t\"\\x05_iataB\\a\\n\" +\n\t\"\\x05_icaoB\\r\\n\" +\n\t\"\\v_websiteUrlB\\x0e\\n\" +\n\t\"\\f_facebookUrlB\\r\\n\" +\n\t\"\\v_twitterUrlB\\x1d\\n\" +\n\t\"\\x1b_reservationTelephoneNumberB\\r\\n\" +\n\t\"\\v_hubAirport\\\"P\\n\" +\n\t\"\\x15UpdateAirlineResponse\\x127\\n\" +\n\t\"\\aairline\\x18\\x01 \\x01(\\v2\\x1d.aviation.airlines.v0.AirlineR\\aairline\\\"\\xfb\\x05\\n\" +\n\t\"\\x14CreateAirlineRequest\\x12\\x17\\n\" +\n\t\"\\x04iata\\x18\\x01 \\x01(\\tH\\x00R\\x04iata\\x88\\x01\\x01\\x12\\x17\\n\" +\n\t\"\\x04icao\\x18\\x02 \\x01(\\tH\\x01R\\x04icao\\x88\\x01\\x01\\x12&\\n\" +\n\t\"\\x0eclassification\\x18\\x03 \\x01(\\x03R\\x0eclassification\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x04 \\x01(\\tR\\x04name\\x12]\\n\" +\n\t\"\\vdescription\\x18\\x05 \\x03(\\v2;.aviation.airlines.v0.CreateAirlineRequest.DescriptionEntryR\\vdescription\\x12#\\n\" +\n\t\"\\n\" +\n\t\"websiteUrl\\x18\\x06 \\x01(\\tH\\x02R\\n\" +\n\t\"websiteUrl\\x88\\x01\\x01\\x12`\\n\" +\n\t\"\\fwikipediaUrl\\x18\\a \\x03(\\v2<.aviation.airlines.v0.CreateAirlineRequest.WikipediaUrlEntryR\\fwikipediaUrl\\x12%\\n\" +\n\t\"\\vfacebookUrl\\x18\\b \\x01(\\tH\\x03R\\vfacebookUrl\\x88\\x01\\x01\\x12#\\n\" +\n\t\"\\n\" +\n\t\"twitterUrl\\x18\\t \\x01(\\tH\\x04R\\n\" +\n\t\"twitterUrl\\x88\\x01\\x01\\x12C\\n\" +\n\t\"\\x1areservationTelephoneNumber\\x18\\n\" +\n\t\" \\x01(\\tH\\x05R\\x1areservationTelephoneNumber\\x88\\x01\\x01\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"hubAirport\\x18\\v \\x01(\\tR\\n\" +\n\t\"hubAirport\\x1a>\\n\" +\n\t\"\\x10DescriptionEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a?\\n\" +\n\t\"\\x11WikipediaUrlEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\a\\n\" +\n\t\"\\x05_iataB\\a\\n\" +\n\t\"\\x05_icaoB\\r\\n\" +\n\t\"\\v_websiteUrlB\\x0e\\n\" +\n\t\"\\f_facebookUrlB\\r\\n\" +\n\t\"\\v_twitterUrlB\\x1d\\n\" +\n\t\"\\x1b_reservationTelephoneNumber\\\"P\\n\" +\n\t\"\\x15CreateAirlineResponse\\x127\\n\" +\n\t\"\\aairline\\x18\\x01 \\x01(\\v2\\x1d.aviation.airlines.v0.AirlineR\\aairline\\\"'\\n\" +\n\t\"\\x15AirlineDetailsRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\\"Q\\n\" +\n\t\"\\x16AirlineDetailsResponse\\x127\\n\" +\n\t\"\\aairline\\x18\\x01 \\x01(\\v2\\x1d.aviation.airlines.v0.AirlineR\\aairline\\\"#\\n\" +\n\t\"\\x0fBatchGetRequest\\x12\\x10\\n\" +\n\t\"\\x03ids\\x18\\x01 \\x03(\\tR\\x03ids\\\"M\\n\" +\n\t\"\\x10BatchGetResponse\\x129\\n\" +\n\t\"\\bairlines\\x18\\x01 \\x03(\\v2\\x1d.aviation.airlines.v0.AirlineR\\bairlines\\\"j\\n\" +\n\t\"\\x1bBatchGetByDesignatorRequest\\x12 \\n\" +\n\t\"\\vdesignators\\x18\\x01 \\x03(\\tR\\vdesignators\\x12\\x1d\\n\" +\n\t\"\\aforDate\\x18\\x02 \\x01(\\tH\\x00R\\aforDate\\x88\\x01\\x01B\\n\" +\n\t\"\\n\" +\n\t\"\\b_forDate\\\"Y\\n\" +\n\t\"\\x1cBatchGetByDesignatorResponse\\x129\\n\" +\n\t\"\\bairlines\\x18\\x01 \\x03(\\v2\\x1d.aviation.airlines.v0.AirlineR\\bairlines\\\"c\\n\" +\n\t\"\\x16GetByDesignatorRequest\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x01 \\x01(\\tR\\n\" +\n\t\"designator\\x12\\x1d\\n\" +\n\t\"\\aforDate\\x18\\x02 \\x01(\\tH\\x00R\\aforDate\\x88\\x01\\x01B\\n\" +\n\t\"\\n\" +\n\t\"\\b_forDate\\\"R\\n\" +\n\t\"\\x17GetByDesignatorResponse\\x127\\n\" +\n\t\"\\aairline\\x18\\x01 \\x01(\\v2\\x1d.aviation.airlines.v0.AirlineR\\aairline\\\"1\\n\" +\n\t\"\\x1fGetDesignatorsForAirlineRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\\"f\\n\" +\n\t\" GetDesignatorsForAirlineResponse\\x12B\\n\" +\n\t\"\\vdesignators\\x18\\x01 \\x03(\\v2 .aviation.airlines.v0.DesignatorR\\vdesignators\\\"\\xd0\\x02\\n\" +\n\t\"\\n\" +\n\t\"Designator\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x01 \\x01(\\tR\\n\" +\n\t\"designator\\x12\\x1c\\n\" +\n\t\"\\tairlineId\\x18\\x02 \\x01(\\tR\\tairlineId\\x128\\n\" +\n\t\"\\tvalidFrom\\x18\\x03 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tvalidFrom\\x124\\n\" +\n\t\"\\avalidTo\\x18\\x04 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\avalidTo\\x12 \\n\" +\n\t\"\\vairlineName\\x18\\x05 \\x01(\\tR\\vairlineName\\x128\\n\" +\n\t\"\\tcreatedAt\\x18\\x0e \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tcreatedAt\\x128\\n\" +\n\t\"\\tupdatedAt\\x18\\x0f \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tupdatedAt\\\"\\x97\\x03\\n\" +\n\t\"\\vSlimAirline\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12\\x17\\n\" +\n\t\"\\x04iata\\x18\\x02 \\x01(\\tH\\x00R\\x04iata\\x88\\x01\\x01\\x12\\x17\\n\" +\n\t\"\\x04icao\\x18\\x03 \\x01(\\tH\\x01R\\x04icao\\x88\\x01\\x01\\x12&\\n\" +\n\t\"\\x0eclassification\\x18\\x04 \\x01(\\x03R\\x0eclassification\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x05 \\x01(\\tR\\x04name\\x124\\n\" +\n\t\"\\x06assets\\x18\\x06 \\x01(\\v2\\x1c.aviation.airlines.v0.AssetsR\\x06assets\\x128\\n\" +\n\t\"\\tcreatedAt\\x18\\a \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tcreatedAt\\x128\\n\" +\n\t\"\\tupdatedAt\\x18\\b \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tupdatedAt\\x12#\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\t \\x01(\\tH\\x02R\\n\" +\n\t\"designator\\x88\\x01\\x01\\x12\\x1a\\n\" +\n\t\"\\bpristine\\x18\\n\" +\n\t\" \\x01(\\bR\\bpristineB\\a\\n\" +\n\t\"\\x05_iataB\\a\\n\" +\n\t\"\\x05_icaoB\\r\\n\" +\n\t\"\\v_designator\\\"\\xf9\\r\\n\" +\n\t\"\\aAirline\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12\\x17\\n\" +\n\t\"\\x04iata\\x18\\x02 \\x01(\\tH\\x00R\\x04iata\\x88\\x01\\x01\\x12\\x17\\n\" +\n\t\"\\x04icao\\x18\\x03 \\x01(\\tH\\x01R\\x04icao\\x88\\x01\\x01\\x12&\\n\" +\n\t\"\\x0eclassification\\x18\\x04 \\x01(\\x03R\\x0eclassification\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x05 \\x01(\\tR\\x04name\\x12P\\n\" +\n\t\"\\vdescription\\x18\\x06 \\x03(\\v2..aviation.airlines.v0.Airline.DescriptionEntryR\\vdescription\\x124\\n\" +\n\t\"\\x06assets\\x18\\a \\x01(\\v2\\x1c.aviation.airlines.v0.AssetsR\\x06assets\\x12#\\n\" +\n\t\"\\n\" +\n\t\"websiteUrl\\x18\\b \\x01(\\tH\\x02R\\n\" +\n\t\"websiteUrl\\x88\\x01\\x01\\x12S\\n\" +\n\t\"\\fwikipediaUrl\\x18\\t \\x03(\\v2/.aviation.airlines.v0.Airline.WikipediaUrlEntryR\\fwikipediaUrl\\x12%\\n\" +\n\t\"\\vfacebookUrl\\x18\\n\" +\n\t\" \\x01(\\tH\\x03R\\vfacebookUrl\\x88\\x01\\x01\\x12#\\n\" +\n\t\"\\n\" +\n\t\"twitterUrl\\x18\\v \\x01(\\tH\\x04R\\n\" +\n\t\"twitterUrl\\x88\\x01\\x01\\x12C\\n\" +\n\t\"\\x1areservationTelephoneNumber\\x18\\f \\x01(\\tH\\x05R\\x1areservationTelephoneNumber\\x88\\x01\\x01\\x12J\\n\" +\n\t\"\\n\" +\n\t\"hubAirport\\x18\\r \\x01(\\v2%.aviation.airlines.v0.Airline.AirportH\\x06R\\n\" +\n\t\"hubAirport\\x88\\x01\\x01\\x128\\n\" +\n\t\"\\tcreatedAt\\x18\\x0e \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tcreatedAt\\x128\\n\" +\n\t\"\\tupdatedAt\\x18\\x0f \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tupdatedAt\\x12#\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x10 \\x01(\\tH\\aR\\n\" +\n\t\"designator\\x88\\x01\\x01\\x12\\x1a\\n\" +\n\t\"\\bpristine\\x18\\x11 \\x01(\\bR\\bpristine\\x1a\\xdd\\x05\\n\" +\n\t\"\\aAirport\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12#\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x02 \\x01(\\tH\\x00R\\n\" +\n\t\"designator\\x88\\x01\\x01\\x12C\\n\" +\n\t\"\\x04name\\x18\\x03 \\x03(\\v2/.aviation.airlines.v0.Airline.Airport.NameEntryR\\x04name\\x12>\\n\" +\n\t\"\\x04city\\x18\\x04 \\x01(\\v2*.aviation.airlines.v0.Airline.Airport.CityR\\x04city\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a\\xcf\\x03\\n\" +\n\t\"\\x04City\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\x03R\\x02id\\x12H\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v24.aviation.airlines.v0.Airline.Airport.City.NameEntryR\\x04name\\x12\\x1a\\n\" +\n\t\"\\btimezone\\x18\\x03 \\x01(\\tR\\btimezone\\x12\\x19\\n\" +\n\t\"\\x05state\\x18\\x04 \\x01(\\tH\\x00R\\x05state\\x88\\x01\\x01\\x12L\\n\" +\n\t\"\\acountry\\x18\\x05 \\x01(\\v22.aviation.airlines.v0.Airline.Airport.City.CountryR\\acountry\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a\\xa4\\x01\\n\" +\n\t\"\\aCountry\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12P\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v2<.aviation.airlines.v0.Airline.Airport.City.Country.NameEntryR\\x04name\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\b\\n\" +\n\t\"\\x06_stateB\\r\\n\" +\n\t\"\\v_designator\\x1a>\\n\" +\n\t\"\\x10DescriptionEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a?\\n\" +\n\t\"\\x11WikipediaUrlEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\a\\n\" +\n\t\"\\x05_iataB\\a\\n\" +\n\t\"\\x05_icaoB\\r\\n\" +\n\t\"\\v_websiteUrlB\\x0e\\n\" +\n\t\"\\f_facebookUrlB\\r\\n\" +\n\t\"\\v_twitterUrlB\\x1d\\n\" +\n\t\"\\x1b_reservationTelephoneNumberB\\r\\n\" +\n\t\"\\v_hubAirportB\\r\\n\" +\n\t\"\\v_designator\\\"t\\n\" +\n\t\"\\x06Assets\\x12\\x17\\n\" +\n\t\"\\x04rect\\x18\\x01 \\x01(\\tH\\x00R\\x04rect\\x88\\x01\\x01\\x12\\x1b\\n\" +\n\t\"\\x06square\\x18\\x02 \\x01(\\tH\\x01R\\x06square\\x88\\x01\\x01\\x12\\x17\\n\" +\n\t\"\\x04tail\\x18\\x03 \\x01(\\tH\\x02R\\x04tail\\x88\\x01\\x01B\\a\\n\" +\n\t\"\\x05_rectB\\t\\n\" +\n\t\"\\a_squareB\\a\\n\" +\n\t\"\\x05_tail\\\"5\\n\" +\n\t\"\\x05Error\\x12\\x12\\n\" +\n\t\"\\x04code\\x18\\x01 \\x01(\\tR\\x04code\\x12\\x18\\n\" +\n\t\"\\amessage\\x18\\x02 \\x01(\\tR\\amessage\\\"\\xcf\\x01\\n\" +\n\t\"\\x17CreateDesignatorRequest\\x12&\\n\" +\n\t\"\\x0edesignatorCode\\x18\\x01 \\x01(\\tR\\x0edesignatorCode\\x12\\x1c\\n\" +\n\t\"\\tairlineId\\x18\\x02 \\x01(\\tR\\tairlineId\\x128\\n\" +\n\t\"\\tvalidFrom\\x18\\x03 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tvalidFrom\\x124\\n\" +\n\t\"\\avalidTo\\x18\\x04 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\avalidTo\\\"\\\\\\n\" +\n\t\"\\x18CreateDesignatorResponse\\x12@\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x01 \\x01(\\v2 .aviation.airlines.v0.DesignatorR\\n\" +\n\t\"designator\\\"\\xcf\\x01\\n\" +\n\t\"\\x17UpdateDesignatorRequest\\x12&\\n\" +\n\t\"\\x0edesignatorCode\\x18\\x02 \\x01(\\tR\\x0edesignatorCode\\x12\\x1c\\n\" +\n\t\"\\tairlineId\\x18\\x03 \\x01(\\tR\\tairlineId\\x128\\n\" +\n\t\"\\tvalidFrom\\x18\\x04 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tvalidFrom\\x124\\n\" +\n\t\"\\avalidTo\\x18\\x05 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\avalidTo\\\"\\\\\\n\" +\n\t\"\\x18UpdateDesignatorResponse\\x12@\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x01 \\x01(\\v2 .aviation.airlines.v0.DesignatorR\\n\" +\n\t\"designator\\\"\\\\\\n\" +\n\t\"\\x14GetDesignatorRequest\\x12&\\n\" +\n\t\"\\x0edesignatorCode\\x18\\x01 \\x01(\\tR\\x0edesignatorCode\\x12\\x1c\\n\" +\n\t\"\\tairlineId\\x18\\x02 \\x01(\\tR\\tairlineId\\\"Y\\n\" +\n\t\"\\x15GetDesignatorResponse\\x12@\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x01 \\x01(\\v2 .aviation.airlines.v0.DesignatorR\\n\" +\n\t\"designator\\\"f\\n\" +\n\t\"\\x18SearchDesignatorsRequest\\x12\\f\\n\" +\n\t\"\\x01q\\x18\\x01 \\x01(\\tR\\x01q\\x12\\x14\\n\" +\n\t\"\\x05limit\\x18\\x02 \\x01(\\rR\\x05limit\\x12\\x1b\\n\" +\n\t\"\\x06cursor\\x18\\x03 \\x01(\\tH\\x00R\\x06cursor\\x88\\x01\\x01B\\t\\n\" +\n\t\"\\a_cursor\\\"\\xc5\\x01\\n\" +\n\t\"\\x19SearchDesignatorsResponse\\x128\\n\" +\n\t\"\\x06result\\x18\\x01 \\x03(\\v2 .aviation.airlines.v0.DesignatorR\\x06result\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"totalCount\\x18\\x02 \\x01(\\rR\\n\" +\n\t\"totalCount\\x12\\x17\\n\" +\n\t\"\\x04next\\x18\\x03 \\x01(\\tH\\x00R\\x04next\\x88\\x01\\x01\\x12\\x1f\\n\" +\n\t\"\\bprevious\\x18\\x04 \\x01(\\tH\\x01R\\bprevious\\x88\\x01\\x01B\\a\\n\" +\n\t\"\\x05_nextB\\v\\n\" +\n\t\"\\t_previous2\\xe9\\a\\n\" +\n\t\"\\x0fAirlinesService\\x12b\\n\" +\n\t\"\\x03Get\\x12+.aviation.airlines.v0.AirlineDetailsRequest\\x1a,.aviation.airlines.v0.AirlineDetailsResponse\\\"\\x00\\x12[\\n\" +\n\t\"\\bBatchGet\\x12%.aviation.airlines.v0.BatchGetRequest\\x1a&.aviation.airlines.v0.BatchGetResponse\\\"\\x00\\x12e\\n\" +\n\t\"\\x06Search\\x12+.aviation.airlines.v0.SearchAirlinesRequest\\x1a,.aviation.airlines.v0.SearchAirlinesResponse\\\"\\x00\\x12c\\n\" +\n\t\"\\x06Create\\x12*.aviation.airlines.v0.CreateAirlineRequest\\x1a+.aviation.airlines.v0.CreateAirlineResponse\\\"\\x00\\x12c\\n\" +\n\t\"\\x06Update\\x12*.aviation.airlines.v0.UpdateAirlineRequest\\x1a+.aviation.airlines.v0.UpdateAirlineResponse\\\"\\x00\\x12c\\n\" +\n\t\"\\x06Delete\\x12*.aviation.airlines.v0.DeleteAirlineRequest\\x1a+.aviation.airlines.v0.DeleteAirlineResponse\\\"\\x00\\x12\\x7f\\n\" +\n\t\"\\x14BatchGetByDesignator\\x121.aviation.airlines.v0.BatchGetByDesignatorRequest\\x1a2.aviation.airlines.v0.BatchGetByDesignatorResponse\\\"\\x00\\x12p\\n\" +\n\t\"\\x0fGetByDesignator\\x12,.aviation.airlines.v0.GetByDesignatorRequest\\x1a-.aviation.airlines.v0.GetByDesignatorResponse\\\"\\x00\\x12\\x8b\\x01\\n\" +\n\t\"\\x18GetDesignatorsForAirline\\x125.aviation.airlines.v0.GetDesignatorsForAirlineRequest\\x1a6.aviation.airlines.v0.GetDesignatorsForAirlineResponse\\\"\\x002\\xb9\\x03\\n\" +\n\t\"\\x12DesignatorsService\\x12i\\n\" +\n\t\"\\x06Create\\x12-.aviation.airlines.v0.CreateDesignatorRequest\\x1a..aviation.airlines.v0.CreateDesignatorResponse\\\"\\x00\\x12`\\n\" +\n\t\"\\x03Get\\x12*.aviation.airlines.v0.GetDesignatorRequest\\x1a+.aviation.airlines.v0.GetDesignatorResponse\\\"\\x00\\x12i\\n\" +\n\t\"\\x06Update\\x12-.aviation.airlines.v0.UpdateDesignatorRequest\\x1a..aviation.airlines.v0.UpdateDesignatorResponse\\\"\\x00\\x12k\\n\" +\n\t\"\\x06Search\\x12..aviation.airlines.v0.SearchDesignatorsRequest\\x1a/.aviation.airlines.v0.SearchDesignatorsResponse\\\"\\x00b\\x06proto3\"\n\nvar (\n\tfile_airlines_proto_rawDescOnce sync.Once\n\tfile_airlines_proto_rawDescData []byte\n)\n", "n_tokens": 6028, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [2170, 2461], "def_symbols": [], "symbols": ["GetName", "func", "Airline_Airport_City_Country", "map", "string", "nil", "return", "Name", "var", "File_airlines_proto", "protoreflect", "FileDescriptor", "const", "file_airlines_proto_rawDesc", "x0eairlines", "proto", "x12", "x14aviation", "airlines", "x1a", "x1fgoogle", "protobuf", "timestamp", "x15SearchAirlinesRequest", "x01q", "x18", "x01", "x14", "x05limit", "x02", "x1b", "x06cursor", "x03", "x00R", "x88", "x01B", "a_cursor", "xc3", "x16SearchAirlinesResponse", "x129", "x06result", "aviation", "SlimAirlineR", "x17", "x04next", "x1f", "bprevious", "x01R", "x1e", "totalCount", "x04", "totalCountB", "x05_nextB", "t_previous", "x14DeleteAirlineRequest", "x0e", "x02id", "x15DeleteAirlineResponse", "x127", "aairline", "x1d", "AirlineR", "x9f", "x06", "x14UpdateAirlineRequest", "x04iata", "x04icao", "x0eclassification", "x03R", "x04name", "x05", "vdescription", "UpdateAirlineRequest", "DescriptionEntryR", "websiteUrl", "x02R", "fwikipediaUrl", "WikipediaUrlEntryR", "vfacebookUrl", "twitterUrl", "x04R", "x12C", "x1areservationTelephoneNumber", "x05R", "hubAirport", "x06R", "x10DescriptionEntry", "x10", "x03key", "x05value", "x028", "x11WikipediaUrlEntry", "x05_iataB", "x05_icaoB", "v_websiteUrlB", "f_facebookUrlB", "v_twitterUrlB", "x1b_reservationTelephoneNumberB", "v_hubAirport", "x15UpdateAirlineResponse", "xfb", "x14CreateAirlineRequest", "CreateAirlineRequest", "x1b_reservationTelephoneNumber", "x15CreateAirlineResponse", "x15AirlineDetailsRequest", "x16AirlineDetailsResponse", "x0fBatchGetRequest", "x03ids", "x10BatchGetResponse", "bairlines", "x1bBatchGetByDesignatorRequest", "vdesignators", "aforDate", "b_forDate", "x1cBatchGetByDesignatorResponse", "x16GetByDesignatorRequest", "designator", "x17GetByDesignatorResponse", "x1fGetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse", "x12B", "DesignatorR", "xd0", "Designator", "x1c", "tairlineId", "x128", "tvalidFrom", "google", "TimestampR", "x124", "avalidTo", "vairlineName", "tcreatedAt", "tupdatedAt", "x0f", "x97", "vSlimAirline", "x06assets", "AssetsR", "bpristine", "bpristineB", "v_designator", "xf9", "aAirline", "x12P", "Airline", "x12S", "x12J", "AirportH", "x11", "xdd", "aAirport", "Airport", "NameEntryR", "x04city", "CityR", "x1a7", "tNameEntry", "xcf", "x04City", "x12H", "v24", "City", "btimezone", "x19", "x05state", "x12L", "acountry", "v22", "CountryR", "xa4", "aCountry", "Country", "x06_stateB", "v_hubAirportB", "x06Assets", "x04rect", "x06square", "x04tail", "x05_rectB", "a_squareB", "x05_tail", "x05Error", "x04code", "amessage", "x17CreateDesignatorRequest", "x0edesignatorCode", "x18CreateDesignatorResponse", "x17UpdateDesignatorRequest", "x18UpdateDesignatorResponse", "x14GetDesignatorRequest", "x15GetDesignatorResponse", "x18SearchDesignatorsRequest", "xc5", "x19SearchDesignatorsResponse", "t_previous2", "xe9", "x0fAirlinesService", "x12b", "x03Get", "AirlineDetailsRequest", "AirlineDetailsResponse", "x00", "bBatchGet", "BatchGetRequest", "BatchGetResponse", "x12e", "x06Search", "SearchAirlinesRequest", "SearchAirlinesResponse", "x12c", "x06Create", "CreateAirlineResponse", "x06Update", "UpdateAirlineResponse", "x06Delete", "DeleteAirlineRequest", "DeleteAirlineResponse", "x7f", "x14BatchGetByDesignator", "x121", "BatchGetByDesignatorRequest", "x1a2", "BatchGetByDesignatorResponse", "x12p", "x0fGetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "x8b", "x18GetDesignatorsForAirline", "x125", "GetDesignatorsForAirlineRequest", "x1a6", "x002", "xb9", "x12DesignatorsService", "x12i", "CreateDesignatorRequest", "CreateDesignatorResponse", "GetDesignatorRequest", "GetDesignatorResponse", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "x12k", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "x00b", "x06proto3", "file_airlines_proto_rawDescOnce", "sync", "Once", "file_airlines_proto_rawDescData", "byte"], "doc_head": "func (x *Airline_Airport_City_Country) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\nvar File_airlines_proto protoreflect.FileDescriptor\nconst file_airlines_proto_rawDesc = \"\" +\n\t\"\\n\" +\n\t\"\\x0eairlines.proto\\x12\\x14aviation.airlines.v0\\x1a\\x1fgoogle/protobuf/timestamp.proto\\\"c\\n\" +\n\t\"\\x15SearchAirlinesRequest\\x12\\f\\n\" +\n\t\"\\x01q\\x18\\x01 \\x01(\\tR\\x01q\\x12\\x14\\n\" +\n\t\"\\x05limit\\x18\\x02 \\x01(\\rR\\x05limit\\x12\\x1b\\n\" +\n\t\"\\x06cursor\\x18\\x03 \\x01(\\tH\\x00R\\x06cursor\\x88\\x01\\x01B\\t\\n\" +\n\t\"\\a_cursor\\\"\\xc3\\x01\\n\" +\n\t\"\\x16SearchAirlinesResponse\\x129\\n\" +\n\t\"\\x06result\\x18\\x01 \\x03(\\v2!.aviation.airlines.v0.SlimAirlineR\\x06result\\x12\\x17\\n\" +\n\t\"\\x04next\\x18\\x02 \\x01(\\tH\\x00R\\x04next\\x88\\x01\\x01\\x12\\x1f\\n\" +\n\t\"\\bprevious\\x18\\x03 \\x01(\\tH\\x01R\\bprevious\\x88\\x01\\x01\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"totalCount\\x18\\x04 \\x01(\\rR\\n\" +\n\t\"totalCountB\\a\\n\" +\n\t\"\\x05_nextB\\v\\n\" +\n\t\"\\t_previous\\\"&\\n\" +\n\t\"\\x14DeleteAirlineRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\\"P\\n\" +\n\t\"\\x15DeleteAirlineResponse\\x127\\n\" +\n\t\"\\aairline\\x18\\x01 \\x01(\\v2\\x1d.aviation.airlines.v0.AirlineR\\aairline\\\"\\x9f\\x06\\n\" +\n\t\"\\x14UpdateAirlineRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12\\x17\\n\" +", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airline_Airport_City_Country).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airline_Airport_City_Country", "function_name": "", "method_name": "GetName", "type_name": "Airline_Airport_City_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airline_Airport_City_Country).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airline_Airport_City_Country"], "all_type_names": ["Airline_Airport_City_Country"], "all_type_kinds": [null], "all_start_bytes": [61623], "all_end_bytes": [61739], "primary_index": 0, "all_receivers_normalized": ["(*Airline_Airport_City_Country)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "sync"], "symbols_referenced_strict": ["Airline_Airport_City_Country", "FileDescriptor", "File_airlines_proto", "GetName", "Name", "Once", "protoreflect.FileDescriptor", "sync.Once", "x.Name"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"sync\"\n)\n// receiver: x *Airline_Airport_City_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#322", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#324"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#324", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 324, "start_line": 2462, "end_line": 2588, "text": "func file_airlines_proto_rawDescGZIP() []byte {\n\tfile_airlines_proto_rawDescOnce.Do(func() {\n\t\tfile_airlines_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_airlines_proto_rawDesc), len(file_airlines_proto_rawDesc)))\n\t})\n\treturn file_airlines_proto_rawDescData\n}\n\nvar file_airlines_proto_msgTypes = make([]protoimpl.MessageInfo, 43)\nvar file_airlines_proto_goTypes = []any{\n\t(*SearchAirlinesRequest)(nil),            // 0: aviation.airlines.v0.SearchAirlinesRequest\n\t(*SearchAirlinesResponse)(nil),           // 1: aviation.airlines.v0.SearchAirlinesResponse\n\t(*DeleteAirlineRequest)(nil),             // 2: aviation.airlines.v0.DeleteAirlineRequest\n\t(*DeleteAirlineResponse)(nil),            // 3: aviation.airlines.v0.DeleteAirlineResponse\n\t(*UpdateAirlineRequest)(nil),             // 4: aviation.airlines.v0.UpdateAirlineRequest\n\t(*UpdateAirlineResponse)(nil),            // 5: aviation.airlines.v0.UpdateAirlineResponse\n\t(*CreateAirlineRequest)(nil),             // 6: aviation.airlines.v0.CreateAirlineRequest\n\t(*CreateAirlineResponse)(nil),            // 7: aviation.airlines.v0.CreateAirlineResponse\n\t(*AirlineDetailsRequest)(nil),            // 8: aviation.airlines.v0.AirlineDetailsRequest\n\t(*AirlineDetailsResponse)(nil),           // 9: aviation.airlines.v0.AirlineDetailsResponse\n\t(*BatchGetRequest)(nil),                  // 10: aviation.airlines.v0.BatchGetRequest\n\t(*BatchGetResponse)(nil),                 // 11: aviation.airlines.v0.BatchGetResponse\n\t(*BatchGetByDesignatorRequest)(nil),      // 12: aviation.airlines.v0.BatchGetByDesignatorRequest\n\t(*BatchGetByDesignatorResponse)(nil),     // 13: aviation.airlines.v0.BatchGetByDesignatorResponse\n\t(*GetByDesignatorRequest)(nil),           // 14: aviation.airlines.v0.GetByDesignatorRequest\n\t(*GetByDesignatorResponse)(nil),          // 15: aviation.airlines.v0.GetByDesignatorResponse\n\t(*GetDesignatorsForAirlineRequest)(nil),  // 16: aviation.airlines.v0.GetDesignatorsForAirlineRequest\n\t(*GetDesignatorsForAirlineResponse)(nil), // 17: aviation.airlines.v0.GetDesignatorsForAirlineResponse\n\t(*Designator)(nil),                       // 18: aviation.airlines.v0.Designator\n\t(*SlimAirline)(nil),                      // 19: aviation.airlines.v0.SlimAirline\n\t(*Airline)(nil),                          // 20: aviation.airlines.v0.Airline\n\t(*Assets)(nil),                           // 21: aviation.airlines.v0.Assets\n\t(*Error)(nil),                            // 22: aviation.airlines.v0.Error\n\t(*CreateDesignatorRequest)(nil),          // 23: aviation.airlines.v0.CreateDesignatorRequest\n\t(*CreateDesignatorResponse)(nil),         // 24: aviation.airlines.v0.CreateDesignatorResponse\n\t(*UpdateDesignatorRequest)(nil),          // 25: aviation.airlines.v0.UpdateDesignatorRequest\n\t(*UpdateDesignatorResponse)(nil),         // 26: aviation.airlines.v0.UpdateDesignatorResponse\n\t(*GetDesignatorRequest)(nil),             // 27: aviation.airlines.v0.GetDesignatorRequest\n\t(*GetDesignatorResponse)(nil),            // 28: aviation.airlines.v0.GetDesignatorResponse\n\t(*SearchDesignatorsRequest)(nil),         // 29: aviation.airlines.v0.SearchDesignatorsRequest\n\t(*SearchDesignatorsResponse)(nil),        // 30: aviation.airlines.v0.SearchDesignatorsResponse\n\tnil,                                      // 31: aviation.airlines.v0.UpdateAirlineRequest.DescriptionEntry\n\tnil,                                      // 32: aviation.airlines.v0.UpdateAirlineRequest.WikipediaUrlEntry\n\tnil,                                      // 33: aviation.airlines.v0.CreateAirlineRequest.DescriptionEntry\n\tnil,                                      // 34: aviation.airlines.v0.CreateAirlineRequest.WikipediaUrlEntry\n\t(*Airline_Airport)(nil),                  // 35: aviation.airlines.v0.Airline.Airport\n\tnil,                                      // 36: aviation.airlines.v0.Airline.DescriptionEntry\n\tnil,                                      // 37: aviation.airlines.v0.Airline.WikipediaUrlEntry\n\tnil,                                      // 38: aviation.airlines.v0.Airline.Airport.NameEntry\n\t(*Airline_Airport_City)(nil),             // 39: aviation.airlines.v0.Airline.Airport.City\n\tnil,                                      // 40: aviation.airlines.v0.Airline.Airport.City.NameEntry\n\t(*Airline_Airport_City_Country)(nil),     // 41: aviation.airlines.v0.Airline.Airport.City.Country\n\tnil,                                      // 42: aviation.airlines.v0.Airline.Airport.City.Country.NameEntry\n\t(*timestamppb.Timestamp)(nil),            // 43: google.protobuf.Timestamp\n}\nvar file_airlines_proto_depIdxs = []int32{\n\t19, // 0: aviation.airlines.v0.SearchAirlinesResponse.result:type_name -> aviation.airlines.v0.SlimAirline\n\t20, // 1: aviation.airlines.v0.DeleteAirlineResponse.airline:type_name -> aviation.airlines.v0.Airline\n\t31, // 2: aviation.airlines.v0.UpdateAirlineRequest.description:type_name -> aviation.airlines.v0.UpdateAirlineRequest.DescriptionEntry\n\t32, // 3: aviation.airlines.v0.UpdateAirlineRequest.wikipediaUrl:type_name -> aviation.airlines.v0.UpdateAirlineRequest.WikipediaUrlEntry\n\t20, // 4: aviation.airlines.v0.UpdateAirlineResponse.airline:type_name -> aviation.airlines.v0.Airline\n\t33, // 5: aviation.airlines.v0.CreateAirlineRequest.description:type_name -> aviation.airlines.v0.CreateAirlineRequest.DescriptionEntry\n\t34, // 6: aviation.airlines.v0.CreateAirlineRequest.wikipediaUrl:type_name -> aviation.airlines.v0.CreateAirlineRequest.WikipediaUrlEntry\n\t20, // 7: aviation.airlines.v0.CreateAirlineResponse.airline:type_name -> aviation.airlines.v0.Airline\n\t20, // 8: aviation.airlines.v0.AirlineDetailsResponse.airline:type_name -> aviation.airlines.v0.Airline\n\t20, // 9: aviation.airlines.v0.BatchGetResponse.airlines:type_name -> aviation.airlines.v0.Airline\n\t20, // 10: aviation.airlines.v0.BatchGetByDesignatorResponse.airlines:type_name -> aviation.airlines.v0.Airline\n\t20, // 11: aviation.airlines.v0.GetByDesignatorResponse.airline:type_name -> aviation.airlines.v0.Airline\n\t18, // 12: aviation.airlines.v0.GetDesignatorsForAirlineResponse.designators:type_name -> aviation.airlines.v0.Designator\n\t43, // 13: aviation.airlines.v0.Designator.validFrom:type_name -> google.protobuf.Timestamp\n\t43, // 14: aviation.airlines.v0.Designator.validTo:type_name -> google.protobuf.Timestamp\n\t43, // 15: aviation.airlines.v0.Designator.createdAt:type_name -> google.protobuf.Timestamp\n\t43, // 16: aviation.airlines.v0.Designator.updatedAt:type_name -> google.protobuf.Timestamp\n\t21, // 17: aviation.airlines.v0.SlimAirline.assets:type_name -> aviation.airlines.v0.Assets\n\t43, // 18: aviation.airlines.v0.SlimAirline.createdAt:type_name -> google.protobuf.Timestamp\n\t43, // 19: aviation.airlines.v0.SlimAirline.updatedAt:type_name -> google.protobuf.Timestamp\n\t36, // 20: aviation.airlines.v0.Airline.description:type_name -> aviation.airlines.v0.Airline.DescriptionEntry\n\t21, // 21: aviation.airlines.v0.Airline.assets:type_name -> aviation.airlines.v0.Assets\n\t37, // 22: aviation.airlines.v0.Airline.wikipediaUrl:type_name -> aviation.airlines.v0.Airline.WikipediaUrlEntry\n\t35, // 23: aviation.airlines.v0.Airline.hubAirport:type_name -> aviation.airlines.v0.Airline.Airport\n\t43, // 24: aviation.airlines.v0.Airline.createdAt:type_name -> google.protobuf.Timestamp\n\t43, // 25: aviation.airlines.v0.Airline.updatedAt:type_name -> google.protobuf.Timestamp\n\t43, // 26: aviation.airlines.v0.CreateDesignatorRequest.validFrom:type_name -> google.protobuf.Timestamp\n\t43, // 27: aviation.airlines.v0.CreateDesignatorRequest.validTo:type_name -> google.protobuf.Timestamp\n\t18, // 28: aviation.airlines.v0.CreateDesignatorResponse.designator:type_name -> aviation.airlines.v0.Designator\n\t43, // 29: aviation.airlines.v0.UpdateDesignatorRequest.validFrom:type_name -> google.protobuf.Timestamp\n\t43, // 30: aviation.airlines.v0.UpdateDesignatorRequest.validTo:type_name -> google.protobuf.Timestamp\n\t18, // 31: aviation.airlines.v0.UpdateDesignatorResponse.designator:type_name -> aviation.airlines.v0.Designator\n\t18, // 32: aviation.airlines.v0.GetDesignatorResponse.designator:type_name -> aviation.airlines.v0.Designator\n\t18, // 33: aviation.airlines.v0.SearchDesignatorsResponse.result:type_name -> aviation.airlines.v0.Designator\n\t38, // 34: aviation.airlines.v0.Airline.Airport.name:type_name -> aviation.airlines.v0.Airline.Airport.NameEntry\n\t39, // 35: aviation.airlines.v0.Airline.Airport.city:type_name -> aviation.airlines.v0.Airline.Airport.City\n\t40, // 36: aviation.airlines.v0.Airline.Airport.City.name:type_name -> aviation.airlines.v0.Airline.Airport.City.NameEntry\n\t41, // 37: aviation.airlines.v0.Airline.Airport.City.country:type_name -> aviation.airlines.v0.Airline.Airport.City.Country\n\t42, // 38: aviation.airlines.v0.Airline.Airport.City.Country.name:type_name -> aviation.airlines.v0.Airline.Airport.City.Country.NameEntry\n\t8,  // 39: aviation.airlines.v0.AirlinesService.Get:input_type -> aviation.airlines.v0.AirlineDetailsRequest\n\t10, // 40: aviation.airlines.v0.AirlinesService.BatchGet:input_type -> aviation.airlines.v0.BatchGetRequest\n\t0,  // 41: aviation.airlines.v0.AirlinesService.Search:input_type -> aviation.airlines.v0.SearchAirlinesRequest\n\t6,  // 42: aviation.airlines.v0.AirlinesService.Create:input_type -> aviation.airlines.v0.CreateAirlineRequest\n\t4,  // 43: aviation.airlines.v0.AirlinesService.Update:input_type -> aviation.airlines.v0.UpdateAirlineRequest\n\t2,  // 44: aviation.airlines.v0.AirlinesService.Delete:input_type -> aviation.airlines.v0.DeleteAirlineRequest\n\t12, // 45: aviation.airlines.v0.AirlinesService.BatchGetByDesignator:input_type -> aviation.airlines.v0.BatchGetByDesignatorRequest\n\t14, // 46: aviation.airlines.v0.AirlinesService.GetByDesignator:input_type -> aviation.airlines.v0.GetByDesignatorRequest\n\t16, // 47: aviation.airlines.v0.AirlinesService.GetDesignatorsForAirline:input_type -> aviation.airlines.v0.GetDesignatorsForAirlineRequest\n\t23, // 48: aviation.airlines.v0.DesignatorsService.Create:input_type -> aviation.airlines.v0.CreateDesignatorRequest\n\t27, // 49: aviation.airlines.v0.DesignatorsService.Get:input_type -> aviation.airlines.v0.GetDesignatorRequest\n\t25, // 50: aviation.airlines.v0.DesignatorsService.Update:input_type -> aviation.airlines.v0.UpdateDesignatorRequest\n\t29, // 51: aviation.airlines.v0.DesignatorsService.Search:input_type -> aviation.airlines.v0.SearchDesignatorsRequest\n\t9,  // 52: aviation.airlines.v0.AirlinesService.Get:output_type -> aviation.airlines.v0.AirlineDetailsResponse\n\t11, // 53: aviation.airlines.v0.AirlinesService.BatchGet:output_type -> aviation.airlines.v0.BatchGetResponse\n\t1,  // 54: aviation.airlines.v0.AirlinesService.Search:output_type -> aviation.airlines.v0.SearchAirlinesResponse\n\t7,  // 55: aviation.airlines.v0.AirlinesService.Create:output_type -> aviation.airlines.v0.CreateAirlineResponse\n\t5,  // 56: aviation.airlines.v0.AirlinesService.Update:output_type -> aviation.airlines.v0.UpdateAirlineResponse\n\t3,  // 57: aviation.airlines.v0.AirlinesService.Delete:output_type -> aviation.airlines.v0.DeleteAirlineResponse\n\t13, // 58: aviation.airlines.v0.AirlinesService.BatchGetByDesignator:output_type -> aviation.airlines.v0.BatchGetByDesignatorResponse\n\t15, // 59: aviation.airlines.v0.AirlinesService.GetByDesignator:output_type -> aviation.airlines.v0.GetByDesignatorResponse\n\t17, // 60: aviation.airlines.v0.AirlinesService.GetDesignatorsForAirline:output_type -> aviation.airlines.v0.GetDesignatorsForAirlineResponse\n\t24, // 61: aviation.airlines.v0.DesignatorsService.Create:output_type -> aviation.airlines.v0.CreateDesignatorResponse\n\t28, // 62: aviation.airlines.v0.DesignatorsService.Get:output_type -> aviation.airlines.v0.GetDesignatorResponse\n\t26, // 63: aviation.airlines.v0.DesignatorsService.Update:output_type -> aviation.airlines.v0.UpdateDesignatorResponse\n\t30, // 64: aviation.airlines.v0.DesignatorsService.Search:output_type -> aviation.airlines.v0.SearchDesignatorsResponse\n\t52, // [52:65] is the sub-list for method output_type\n\t39, // [39:52] is the sub-list for method input_type\n\t39, // [39:39] is the sub-list for extension type_name\n\t39, // [39:39] is the sub-list for extension extendee\n\t0,  // [0:39] is the sub-list for field type_name\n}\n", "n_tokens": 3224, "primary_symbol": "file_airlines_proto_rawDescGZIP", "primary_kind": "function", "primary_span": [2462, 2588], "def_symbols": [], "symbols": ["file_airlines_proto_rawDescGZIP", "func", "byte", "file_airlines_proto_rawDescOnce", "file_airlines_proto_rawDescData", "protoimpl", "CompressGZIP", "unsafe", "Slice", "StringData", "file_airlines_proto_rawDesc", "len", "return", "var", "file_airlines_proto_msgTypes", "make", "MessageInfo", "file_airlines_proto_goTypes", "any", "SearchAirlinesRequest", "nil", "aviation", "airlines", "SearchAirlinesResponse", "DeleteAirlineRequest", "DeleteAirlineResponse", "UpdateAirlineRequest", "UpdateAirlineResponse", "CreateAirlineRequest", "CreateAirlineResponse", "AirlineDetailsRequest", "AirlineDetailsResponse", "BatchGetRequest", "BatchGetResponse", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "GetByDesignatorRequest", "GetByDesignatorResponse", "GetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse", "Designator", "SlimAirline", "Airline", "Assets", "Error", "CreateDesignatorRequest", "CreateDesignatorResponse", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "GetDesignatorRequest", "GetDesignatorResponse", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "DescriptionEntry", "WikipediaUrlEntry", "Airline_Airport", "Airport", "NameEntry", "Airline_Airport_City", "City", "Airline_Airport_City_Country", "Country", "timestamppb", "Timestamp", "google", "protobuf", "file_airlines_proto_depIdxs", "int32", "result", "type_name", "airline", "description", "wikipediaUrl", "designators", "validFrom", "validTo", "createdAt", "updatedAt", "assets", "hubAirport", "designator", "name", "city", "country", "AirlinesService", "Get", "input_type", "BatchGet", "Search", "Create", "Update", "Delete", "BatchGetByDesignator", "GetByDesignator", "GetDesignatorsForAirline", "DesignatorsService", "output_type", "the", "sub", "list", "for", "method", "extension", "extendee", "field"], "doc_head": "func file_airlines_proto_rawDescGZIP() []byte {\n\tfile_airlines_proto_rawDescOnce.Do(func() {\n\t\tfile_airlines_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_airlines_proto_rawDesc), len(file_airlines_proto_rawDesc)))\n\t})\n\treturn file_airlines_proto_rawDescData\n}\nvar file_airlines_proto_msgTypes = make([]protoimpl.MessageInfo, 43)\nvar file_airlines_proto_goTypes = []any{\n\t(*SearchAirlinesRequest)(nil),            // 0: aviation.airlines.v0.SearchAirlinesRequest\n\t(*SearchAirlinesResponse)(nil),           // 1: aviation.airlines.v0.SearchAirlinesResponse\n\t(*DeleteAirlineRequest)(nil),             // 2: aviation.airlines.v0.DeleteAirlineRequest\n\t(*DeleteAirlineResponse)(nil),            // 3: aviation.airlines.v0.DeleteAirlineResponse\n\t(*UpdateAirlineRequest)(nil),             // 4: aviation.airlines.v0.UpdateAirlineRequest\n\t(*UpdateAirlineResponse)(nil),            // 5: aviation.airlines.v0.UpdateAirlineResponse\n\t(*CreateAirlineRequest)(nil),             // 6: aviation.airlines.v0.CreateAirlineRequest\n\t(*CreateAirlineResponse)(nil),            // 7: aviation.airlines.v0.CreateAirlineResponse", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:file_airlines_proto_rawDescGZIP/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "file_airlines_proto_rawDescGZIP", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["file_airlines_proto_rawDescGZIP"], "all_kinds": ["function"], "all_ast_paths": ["go:function:file_airlines_proto_rawDescGZIP/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [75720], "all_end_bytes": [76015], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb", "unsafe"], "symbols_referenced_strict": ["Airline", "AirlineDetailsRequest", "AirlineDetailsResponse", "Airline_Airport", "Airline_Airport_City", "Airline_Airport_City_Country", "Assets", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "BatchGetRequest", "BatchGetResponse", "CompressGZIP", "CreateAirlineRequest", "CreateAirlineResponse", "CreateDesignatorRequest", "CreateDesignatorResponse", "DeleteAirlineRequest", "DeleteAirlineResponse", "Designator", "Error", "GetByDesignatorRequest", "GetByDesignatorResponse", "GetDesignatorRequest", "GetDesignatorResponse", "GetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse", "MessageInfo", "SearchAirlinesRequest", "SearchAirlinesResponse", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "Slice", "SlimAirline", "StringData", "Timestamp", "UpdateAirlineRequest", "UpdateAirlineResponse", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "file_airlines_proto_rawDescOnce.Do", "protoimpl.MessageInfo", "protoimpl.X", "timestamppb.Timestamp", "unsafe.Slice", "unsafe.StringData"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n    \"unsafe\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#323", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#325"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#325", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 325, "start_line": 2589, "end_line": 2589, "text": "func init() { file_airlines_proto_init() }", "n_tokens": 11, "primary_symbol": "init", "primary_kind": "function", "primary_span": [2589, 2589], "def_symbols": [], "symbols": ["init", "func", "file_airlines_proto_init"], "doc_head": "func init() { file_airlines_proto_init() }", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:init/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "init", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["init"], "all_kinds": ["function"], "all_ast_paths": ["go:function:init/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [87929], "all_end_bytes": [87971], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#324", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#326"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#326", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines.pb.go", "ext": "go", "language": "go", "chunk_number": 326, "start_line": 2590, "end_line": 2625, "text": "func file_airlines_proto_init() {\n\tif File_airlines_proto != nil {\n\t\treturn\n\t}\n\tfile_airlines_proto_msgTypes[0].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[1].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[4].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[6].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[12].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[14].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[19].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[20].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[21].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[29].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[30].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[35].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[39].OneofWrappers = []any{}\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: unsafe.Slice(unsafe.StringData(file_airlines_proto_rawDesc), len(file_airlines_proto_rawDesc)),\n\t\t\tNumEnums:      0,\n\t\t\tNumMessages:   43,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   2,\n\t\t},\n\t\tGoTypes:           file_airlines_proto_goTypes,\n\t\tDependencyIndexes: file_airlines_proto_depIdxs,\n\t\tMessageInfos:      file_airlines_proto_msgTypes,\n\t}.Build()\n\tFile_airlines_proto = out.File\n\tfile_airlines_proto_goTypes = nil\n\tfile_airlines_proto_depIdxs = nil\n}\n", "n_tokens": 410, "primary_symbol": "file_airlines_proto_init", "primary_kind": "function", "primary_span": [2590, 2625], "def_symbols": [], "symbols": ["file_airlines_proto_init", "func", "File_airlines_proto", "nil", "return", "file_airlines_proto_msgTypes", "OneofWrappers", "any", "type", "struct", "out", "protoimpl", "TypeBuilder", "File", "DescBuilder", "GoPackagePath", "reflect", "TypeOf", "PkgPath", "RawDescriptor", "unsafe", "Slice", "StringData", "file_airlines_proto_rawDesc", "len", "NumEnums", "NumMessages", "NumExtensions", "NumServices", "GoTypes", "file_airlines_proto_goTypes", "DependencyIndexes", "file_airlines_proto_depIdxs", "MessageInfos", "Build"], "doc_head": "func file_airlines_proto_init() {\n\tif File_airlines_proto != nil {\n\t\treturn\n\t}\n\tfile_airlines_proto_msgTypes[0].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[1].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[4].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[6].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[12].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[14].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[19].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[20].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[21].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[29].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[30].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[35].OneofWrappers = []any{}\n\tfile_airlines_proto_msgTypes[39].OneofWrappers = []any{}\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: unsafe.Slice(unsafe.StringData(file_airlines_proto_rawDesc), len(file_airlines_proto_rawDesc)),\n\t\t\tNumEnums:      0,\n\t\t\tNumMessages:   43,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   2,\n\t\t},", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:file_airlines_proto_init/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "file_airlines_proto_init", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["file_airlines_proto_init"], "all_kinds": ["function"], "all_ast_paths": ["go:function:file_airlines_proto_init/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [87972], "all_end_bytes": [89398], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "reflect", "unsafe"], "symbols_referenced_strict": ["Build", "DependencyIndexes", "DescBuilder", "File", "File_airlines_proto", "GoPackagePath", "GoTypes", "MessageInfos", "NumEnums", "NumExtensions", "NumMessages", "NumServices", "OneofWrappers", "PkgPath", "RawDescriptor", "Slice", "StringData", "TypeBuilder", "TypeOf", "out.File", "protoimpl.DescBuilder", "protoimpl.TypeBuilder", "reflect.TypeOf", "unsafe.Slice", "unsafe.StringData"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"reflect\"\n    \"unsafe\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines.pb.go#325"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 6, "text": "// Code generated by protoc-gen-go-grpc. DO NOT EDIT.\n// versions:\n// - protoc-gen-go-grpc v1.5.1\n// - protoc             v3.21.12\n// source: airlines.proto\n", "n_tokens": 51, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 6], "def_symbols": [], "symbols": ["Code", "generated", "protoc", "gen", "grpc", "NOT", "EDIT", "versions", "source", "airlines", "proto"], "doc_head": "// Code generated by protoc-gen-go-grpc. DO NOT EDIT.\n// versions:\n// - protoc-gen-go-grpc v1.5.1\n// - protoc             v3.21.12\n// source: airlines.proto", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 7, "end_line": 8, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [7, 8], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 9, "end_line": 32, "text": "import (\n\tcontext \"context\"\n\tgrpc \"google.golang.org/grpc\"\n\tcodes \"google.golang.org/grpc/codes\"\n\tstatus \"google.golang.org/grpc/status\"\n)\n\n// This is a compile-time assertion to ensure that this generated file\n// is compatible with the grpc package it is being compiled against.\n// Requires gRPC-Go v1.64.0 or later.\nconst _ = grpc.SupportPackageIsVersion9\n\nconst (\n\tAirlinesService_Get_FullMethodName                      = \"/aviation.airlines.v0.AirlinesService/Get\"\n\tAirlinesService_BatchGet_FullMethodName                 = \"/aviation.airlines.v0.AirlinesService/BatchGet\"\n\tAirlinesService_Search_FullMethodName                   = \"/aviation.airlines.v0.AirlinesService/Search\"\n\tAirlinesService_Create_FullMethodName                   = \"/aviation.airlines.v0.AirlinesService/Create\"\n\tAirlinesService_Update_FullMethodName                   = \"/aviation.airlines.v0.AirlinesService/Update\"\n\tAirlinesService_Delete_FullMethodName                   = \"/aviation.airlines.v0.AirlinesService/Delete\"\n\tAirlinesService_BatchGetByDesignator_FullMethodName     = \"/aviation.airlines.v0.AirlinesService/BatchGetByDesignator\"\n\tAirlinesService_GetByDesignator_FullMethodName          = \"/aviation.airlines.v0.AirlinesService/GetByDesignator\"\n\tAirlinesService_GetDesignatorsForAirline_FullMethodName = \"/aviation.airlines.v0.AirlinesService/GetDesignatorsForAirline\"\n)\n", "n_tokens": 313, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 32], "def_symbols": [], "symbols": ["import", "context", "grpc", "google", "golang", "org", "codes", "status", "This", "compile", "time", "assertion", "ensure", "that", "this", "generated", "file", "compatible", "with", "the", "package", "being", "compiled", "against", "Requires", "gRPC", "later", "const", "SupportPackageIsVersion9", "AirlinesService_Get_FullMethodName", "aviation", "airlines", "AirlinesService", "Get", "AirlinesService_BatchGet_FullMethodName", "BatchGet", "AirlinesService_Search_FullMethodName", "Search", "AirlinesService_Create_FullMethodName", "Create", "AirlinesService_Update_FullMethodName", "Update", "AirlinesService_Delete_FullMethodName", "Delete", "AirlinesService_BatchGetByDesignator_FullMethodName", "BatchGetByDesignator", "AirlinesService_GetByDesignator_FullMethodName", "GetByDesignator", "AirlinesService_GetDesignatorsForAirline_FullMethodName", "GetDesignatorsForAirline"], "doc_head": "import (\n\tcontext \"context\"\n\tgrpc \"google.golang.org/grpc\"\n\tcodes \"google.golang.org/grpc/codes\"\n\tstatus \"google.golang.org/grpc/status\"\n)\n// This is a compile-time assertion to ensure that this generated file\n// is compatible with the grpc package it is being compiled against.\n// Requires gRPC-Go v1.64.0 or later.\nconst _ = grpc.SupportPackageIsVersion9\nconst (\n\tAirlinesService_Get_FullMethodName                      = \"/aviation.airlines.v0.AirlinesService/Get\"\n\tAirlinesService_BatchGet_FullMethodName                 = \"/aviation.airlines.v0.AirlinesService/BatchGet\"\n\tAirlinesService_Search_FullMethodName                   = \"/aviation.airlines.v0.AirlinesService/Search\"\n\tAirlinesService_Create_FullMethodName                   = \"/aviation.airlines.v0.AirlinesService/Create\"\n\tAirlinesService_Update_FullMethodName                   = \"/aviation.airlines.v0.AirlinesService/Update\"\n\tAirlinesService_Delete_FullMethodName                   = \"/aviation.airlines.v0.AirlinesService/Delete\"\n\tAirlinesService_BatchGetByDesignator_FullMethodName     = \"/aviation.airlines.v0.AirlinesService/BatchGetByDesignator\"", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesService_BatchGetByDesignator_FullMethodName", "AirlinesService_BatchGet_FullMethodName", "AirlinesService_Create_FullMethodName", "AirlinesService_Delete_FullMethodName", "AirlinesService_GetByDesignator_FullMethodName", "AirlinesService_GetDesignatorsForAirline_FullMethodName", "AirlinesService_Get_FullMethodName", "AirlinesService_Search_FullMethodName", "AirlinesService_Update_FullMethodName", "SupportPackageIsVersion9", "grpc.SupportPackageIsVersion9"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 33, "end_line": 47, "text": "// AirlinesServiceClient is the client API for AirlinesService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype AirlinesServiceClient interface {\n\tGet(ctx context.Context, in *AirlineDetailsRequest, opts ...grpc.CallOption) (*AirlineDetailsResponse, error)\n\tBatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error)\n\tSearch(ctx context.Context, in *SearchAirlinesRequest, opts ...grpc.CallOption) (*SearchAirlinesResponse, error)\n\tCreate(ctx context.Context, in *CreateAirlineRequest, opts ...grpc.CallOption) (*CreateAirlineResponse, error)\n\tUpdate(ctx context.Context, in *UpdateAirlineRequest, opts ...grpc.CallOption) (*UpdateAirlineResponse, error)\n\tDelete(ctx context.Context, in *DeleteAirlineRequest, opts ...grpc.CallOption) (*DeleteAirlineResponse, error)\n\tBatchGetByDesignator(ctx context.Context, in *BatchGetByDesignatorRequest, opts ...grpc.CallOption) (*BatchGetByDesignatorResponse, error)\n\tGetByDesignator(ctx context.Context, in *GetByDesignatorRequest, opts ...grpc.CallOption) (*GetByDesignatorResponse, error)\n\tGetDesignatorsForAirline(ctx context.Context, in *GetDesignatorsForAirlineRequest, opts ...grpc.CallOption) (*GetDesignatorsForAirlineResponse, error)\n}\n", "n_tokens": 318, "primary_symbol": "AirlinesServiceClient", "primary_kind": "type", "primary_span": [33, 47], "def_symbols": [], "symbols": ["AirlinesServiceClient", "the", "client", "API", "for", "AirlinesService", "service", "For", "semantics", "around", "ctx", "use", "and", "closing", "ending", "streaming", "RPCs", "please", "refer", "https", "pkg", "dev", "google", "golang", "org", "grpc", "tab", "doc", "ClientConn", "NewStream", "type", "interface", "Get", "context", "Context", "AirlineDetailsRequest", "opts", "CallOption", "AirlineDetailsResponse", "error", "BatchGet", "BatchGetRequest", "BatchGetResponse", "Search", "SearchAirlinesRequest", "SearchAirlinesResponse", "Create", "CreateAirlineRequest", "CreateAirlineResponse", "Update", "UpdateAirlineRequest", "UpdateAirlineResponse", "Delete", "DeleteAirlineRequest", "DeleteAirlineResponse", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "GetDesignatorsForAirline", "GetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse"], "doc_head": "// AirlinesServiceClient is the client API for AirlinesService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype AirlinesServiceClient interface {\n\tGet(ctx context.Context, in *AirlineDetailsRequest, opts ...grpc.CallOption) (*AirlineDetailsResponse, error)\n\tBatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error)\n\tSearch(ctx context.Context, in *SearchAirlinesRequest, opts ...grpc.CallOption) (*SearchAirlinesResponse, error)\n\tCreate(ctx context.Context, in *CreateAirlineRequest, opts ...grpc.CallOption) (*CreateAirlineResponse, error)\n\tUpdate(ctx context.Context, in *UpdateAirlineRequest, opts ...grpc.CallOption) (*UpdateAirlineResponse, error)\n\tDelete(ctx context.Context, in *DeleteAirlineRequest, opts ...grpc.CallOption) (*DeleteAirlineResponse, error)\n\tBatchGetByDesignator(ctx context.Context, in *BatchGetByDesignatorRequest, opts ...grpc.CallOption) (*BatchGetByDesignatorResponse, error)\n\tGetByDesignator(ctx context.Context, in *GetByDesignatorRequest, opts ...grpc.CallOption) (*GetByDesignatorResponse, error)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:AirlinesServiceClient (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirlinesServiceClient", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["AirlinesServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirlinesServiceClient (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirlinesServiceClient"], "all_type_kinds": ["interface"], "all_start_bytes": [1770], "all_end_bytes": [2887], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlineDetailsRequest", "AirlineDetailsResponse", "AirlinesServiceClient", "BatchGet", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "BatchGetRequest", "BatchGetResponse", "CallOption", "Context", "Create", "CreateAirlineRequest", "CreateAirlineResponse", "Delete", "DeleteAirlineRequest", "DeleteAirlineResponse", "Get", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "GetDesignatorsForAirline", "GetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse", "Search", "SearchAirlinesRequest", "SearchAirlinesResponse", "Update", "UpdateAirlineRequest", "UpdateAirlineResponse", "context.Context", "grpc.CallOption"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 48, "end_line": 51, "text": "type airlinesServiceClient struct {\n\tcc grpc.ClientConnInterface\n}\n", "n_tokens": 13, "primary_symbol": "airlinesServiceClient", "primary_kind": "type", "primary_span": [48, 51], "def_symbols": [], "symbols": ["type", "airlinesServiceClient", "struct", "grpc", "ClientConnInterface"], "doc_head": "type airlinesServiceClient struct {\n\tcc grpc.ClientConnInterface\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:airlinesServiceClient (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "airlinesServiceClient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["airlinesServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:airlinesServiceClient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": ["struct"], "all_start_bytes": [2894], "all_end_bytes": [2955], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["ClientConnInterface", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 52, "end_line": 55, "text": "func NewAirlinesServiceClient(cc grpc.ClientConnInterface) AirlinesServiceClient {\n\treturn &airlinesServiceClient{cc}\n}\n", "n_tokens": 26, "primary_symbol": "NewAirlinesServiceClient", "primary_kind": "function", "primary_span": [52, 55], "def_symbols": [], "symbols": ["NewAirlinesServiceClient", "func", "grpc", "ClientConnInterface", "AirlinesServiceClient", "return", "airlinesServiceClient"], "doc_head": "func NewAirlinesServiceClient(cc grpc.ClientConnInterface) AirlinesServiceClient {\n\treturn &airlinesServiceClient{cc}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewAirlinesServiceClient/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "NewAirlinesServiceClient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewAirlinesServiceClient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewAirlinesServiceClient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2957], "all_end_bytes": [3076], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceClient", "ClientConnInterface", "NewAirlinesServiceClient", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 56, "end_line": 65, "text": "func (c *airlinesServiceClient) Get(ctx context.Context, in *AirlineDetailsRequest, opts ...grpc.CallOption) (*AirlineDetailsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(AirlineDetailsResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [56, 65], "def_symbols": [], "symbols": ["Get", "func", "airlinesServiceClient", "ctx", "context", "Context", "AirlineDetailsRequest", "opts", "grpc", "CallOption", "AirlineDetailsResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirlinesService_Get_FullMethodName", "nil", "return"], "doc_head": "func (c *airlinesServiceClient) Get(ctx context.Context, in *AirlineDetailsRequest, opts ...grpc.CallOption) (*AirlineDetailsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(AirlineDetailsResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airlinesServiceClient).Get/complete", "package": "v0", "node_kind": "method", "receiver": "c *airlinesServiceClient", "function_name": "", "method_name": "Get", "type_name": "airlinesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airlinesServiceClient).Get/complete"], "all_roles": ["complete"], "all_receivers": ["c *airlinesServiceClient"], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [3078], "all_end_bytes": [3460], "primary_index": 0, "all_receivers_normalized": ["(*airlinesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlineDetailsRequest", "AirlineDetailsResponse", "AirlinesService_Get_FullMethodName", "CallOption", "Context", "Get", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airlinesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 66, "end_line": 75, "text": "func (c *airlinesServiceClient) BatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_BatchGet_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "BatchGet", "primary_kind": "method", "primary_span": [66, 75], "def_symbols": [], "symbols": ["BatchGet", "func", "airlinesServiceClient", "ctx", "context", "Context", "BatchGetRequest", "opts", "grpc", "CallOption", "BatchGetResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirlinesService_BatchGet_FullMethodName", "nil", "return"], "doc_head": "func (c *airlinesServiceClient) BatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_BatchGet_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airlinesServiceClient).BatchGet/complete", "package": "v0", "node_kind": "method", "receiver": "c *airlinesServiceClient", "function_name": "", "method_name": "BatchGet", "type_name": "airlinesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["BatchGet"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airlinesServiceClient).BatchGet/complete"], "all_roles": ["complete"], "all_receivers": ["c *airlinesServiceClient"], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [3462], "all_end_bytes": [3836], "primary_index": 0, "all_receivers_normalized": ["(*airlinesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesService_BatchGet_FullMethodName", "BatchGet", "BatchGetRequest", "BatchGetResponse", "CallOption", "Context", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airlinesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 76, "end_line": 85, "text": "func (c *airlinesServiceClient) Search(ctx context.Context, in *SearchAirlinesRequest, opts ...grpc.CallOption) (*SearchAirlinesResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchAirlinesResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 99, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [76, 85], "def_symbols": [], "symbols": ["Search", "func", "airlinesServiceClient", "ctx", "context", "Context", "SearchAirlinesRequest", "opts", "grpc", "CallOption", "SearchAirlinesResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirlinesService_Search_FullMethodName", "nil", "return"], "doc_head": "func (c *airlinesServiceClient) Search(ctx context.Context, in *SearchAirlinesRequest, opts ...grpc.CallOption) (*SearchAirlinesResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchAirlinesResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airlinesServiceClient).Search/complete", "package": "v0", "node_kind": "method", "receiver": "c *airlinesServiceClient", "function_name": "", "method_name": "Search", "type_name": "airlinesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airlinesServiceClient).Search/complete"], "all_roles": ["complete"], "all_receivers": ["c *airlinesServiceClient"], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [3838], "all_end_bytes": [4226], "primary_index": 0, "all_receivers_normalized": ["(*airlinesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesService_Search_FullMethodName", "CallOption", "Context", "Invoke", "Search", "SearchAirlinesRequest", "SearchAirlinesResponse", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airlinesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 86, "end_line": 95, "text": "func (c *airlinesServiceClient) Create(ctx context.Context, in *CreateAirlineRequest, opts ...grpc.CallOption) (*CreateAirlineResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateAirlineResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 99, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [86, 95], "def_symbols": [], "symbols": ["Create", "func", "airlinesServiceClient", "ctx", "context", "Context", "CreateAirlineRequest", "opts", "grpc", "CallOption", "CreateAirlineResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirlinesService_Create_FullMethodName", "nil", "return"], "doc_head": "func (c *airlinesServiceClient) Create(ctx context.Context, in *CreateAirlineRequest, opts ...grpc.CallOption) (*CreateAirlineResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateAirlineResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airlinesServiceClient).Create/complete", "package": "v0", "node_kind": "method", "receiver": "c *airlinesServiceClient", "function_name": "", "method_name": "Create", "type_name": "airlinesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airlinesServiceClient).Create/complete"], "all_roles": ["complete"], "all_receivers": ["c *airlinesServiceClient"], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [4228], "all_end_bytes": [4613], "primary_index": 0, "all_receivers_normalized": ["(*airlinesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesService_Create_FullMethodName", "CallOption", "Context", "Create", "CreateAirlineRequest", "CreateAirlineResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airlinesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 96, "end_line": 105, "text": "func (c *airlinesServiceClient) Update(ctx context.Context, in *UpdateAirlineRequest, opts ...grpc.CallOption) (*UpdateAirlineResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateAirlineResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [96, 105], "def_symbols": [], "symbols": ["Update", "func", "airlinesServiceClient", "ctx", "context", "Context", "UpdateAirlineRequest", "opts", "grpc", "CallOption", "UpdateAirlineResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirlinesService_Update_FullMethodName", "nil", "return"], "doc_head": "func (c *airlinesServiceClient) Update(ctx context.Context, in *UpdateAirlineRequest, opts ...grpc.CallOption) (*UpdateAirlineResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateAirlineResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airlinesServiceClient).Update/complete", "package": "v0", "node_kind": "method", "receiver": "c *airlinesServiceClient", "function_name": "", "method_name": "Update", "type_name": "airlinesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airlinesServiceClient).Update/complete"], "all_roles": ["complete"], "all_receivers": ["c *airlinesServiceClient"], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [4615], "all_end_bytes": [5000], "primary_index": 0, "all_receivers_normalized": ["(*airlinesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesService_Update_FullMethodName", "CallOption", "Context", "Invoke", "StaticMethod", "Update", "UpdateAirlineRequest", "UpdateAirlineResponse", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airlinesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 106, "end_line": 115, "text": "func (c *airlinesServiceClient) Delete(ctx context.Context, in *DeleteAirlineRequest, opts ...grpc.CallOption) (*DeleteAirlineResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(DeleteAirlineResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Delete_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Delete", "primary_kind": "method", "primary_span": [106, 115], "def_symbols": [], "symbols": ["Delete", "func", "airlinesServiceClient", "ctx", "context", "Context", "DeleteAirlineRequest", "opts", "grpc", "CallOption", "DeleteAirlineResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirlinesService_Delete_FullMethodName", "nil", "return"], "doc_head": "func (c *airlinesServiceClient) Delete(ctx context.Context, in *DeleteAirlineRequest, opts ...grpc.CallOption) (*DeleteAirlineResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(DeleteAirlineResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_Delete_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airlinesServiceClient).Delete/complete", "package": "v0", "node_kind": "method", "receiver": "c *airlinesServiceClient", "function_name": "", "method_name": "Delete", "type_name": "airlinesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Delete"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airlinesServiceClient).Delete/complete"], "all_roles": ["complete"], "all_receivers": ["c *airlinesServiceClient"], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [5002], "all_end_bytes": [5387], "primary_index": 0, "all_receivers_normalized": ["(*airlinesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesService_Delete_FullMethodName", "CallOption", "Context", "Delete", "DeleteAirlineRequest", "DeleteAirlineResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airlinesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 116, "end_line": 125, "text": "func (c *airlinesServiceClient) BatchGetByDesignator(ctx context.Context, in *BatchGetByDesignatorRequest, opts ...grpc.CallOption) (*BatchGetByDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetByDesignatorResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_BatchGetByDesignator_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 115, "primary_symbol": "BatchGetByDesignator", "primary_kind": "method", "primary_span": [116, 125], "def_symbols": [], "symbols": ["BatchGetByDesignator", "func", "airlinesServiceClient", "ctx", "context", "Context", "BatchGetByDesignatorRequest", "opts", "grpc", "CallOption", "BatchGetByDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirlinesService_BatchGetByDesignator_FullMethodName", "nil", "return"], "doc_head": "func (c *airlinesServiceClient) BatchGetByDesignator(ctx context.Context, in *BatchGetByDesignatorRequest, opts ...grpc.CallOption) (*BatchGetByDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetByDesignatorResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_BatchGetByDesignator_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airlinesServiceClient).BatchGetByDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "c *airlinesServiceClient", "function_name": "", "method_name": "BatchGetByDesignator", "type_name": "airlinesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["BatchGetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airlinesServiceClient).BatchGetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["c *airlinesServiceClient"], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [5389], "all_end_bytes": [5823], "primary_index": 0, "all_receivers_normalized": ["(*airlinesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesService_BatchGetByDesignator_FullMethodName", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "CallOption", "Context", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airlinesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 126, "end_line": 135, "text": "func (c *airlinesServiceClient) GetByDesignator(ctx context.Context, in *GetByDesignatorRequest, opts ...grpc.CallOption) (*GetByDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetByDesignatorResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_GetByDesignator_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 108, "primary_symbol": "GetByDesignator", "primary_kind": "method", "primary_span": [126, 135], "def_symbols": [], "symbols": ["GetByDesignator", "func", "airlinesServiceClient", "ctx", "context", "Context", "GetByDesignatorRequest", "opts", "grpc", "CallOption", "GetByDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirlinesService_GetByDesignator_FullMethodName", "nil", "return"], "doc_head": "func (c *airlinesServiceClient) GetByDesignator(ctx context.Context, in *GetByDesignatorRequest, opts ...grpc.CallOption) (*GetByDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetByDesignatorResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_GetByDesignator_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airlinesServiceClient).GetByDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "c *airlinesServiceClient", "function_name": "", "method_name": "GetByDesignator", "type_name": "airlinesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airlinesServiceClient).GetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["c *airlinesServiceClient"], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [5825], "all_end_bytes": [6234], "primary_index": 0, "all_receivers_normalized": ["(*airlinesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesService_GetByDesignator_FullMethodName", "CallOption", "Context", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airlinesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 136, "end_line": 145, "text": "func (c *airlinesServiceClient) GetDesignatorsForAirline(ctx context.Context, in *GetDesignatorsForAirlineRequest, opts ...grpc.CallOption) (*GetDesignatorsForAirlineResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetDesignatorsForAirlineResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_GetDesignatorsForAirline_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 118, "primary_symbol": "GetDesignatorsForAirline", "primary_kind": "method", "primary_span": [136, 145], "def_symbols": [], "symbols": ["GetDesignatorsForAirline", "func", "airlinesServiceClient", "ctx", "context", "Context", "GetDesignatorsForAirlineRequest", "opts", "grpc", "CallOption", "GetDesignatorsForAirlineResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirlinesService_GetDesignatorsForAirline_FullMethodName", "nil", "return"], "doc_head": "func (c *airlinesServiceClient) GetDesignatorsForAirline(ctx context.Context, in *GetDesignatorsForAirlineRequest, opts ...grpc.CallOption) (*GetDesignatorsForAirlineResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetDesignatorsForAirlineResponse)\n\terr := c.cc.Invoke(ctx, AirlinesService_GetDesignatorsForAirline_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airlinesServiceClient).GetDesignatorsForAirline/complete", "package": "v0", "node_kind": "method", "receiver": "c *airlinesServiceClient", "function_name": "", "method_name": "GetDesignatorsForAirline", "type_name": "airlinesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignatorsForAirline"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airlinesServiceClient).GetDesignatorsForAirline/complete"], "all_roles": ["complete"], "all_receivers": ["c *airlinesServiceClient"], "all_type_names": ["airlinesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [6236], "all_end_bytes": [6690], "primary_index": 0, "all_receivers_normalized": ["(*airlinesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesService_GetDesignatorsForAirline_FullMethodName", "CallOption", "Context", "GetDesignatorsForAirline", "GetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airlinesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#14", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#16", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 16, "start_line": 146, "end_line": 161, "text": "// AirlinesServiceServer is the server API for AirlinesService service.\n// All implementations must embed UnimplementedAirlinesServiceServer\n// for forward compatibility.\ntype AirlinesServiceServer interface {\n\tGet(context.Context, *AirlineDetailsRequest) (*AirlineDetailsResponse, error)\n\tBatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error)\n\tSearch(context.Context, *SearchAirlinesRequest) (*SearchAirlinesResponse, error)\n\tCreate(context.Context, *CreateAirlineRequest) (*CreateAirlineResponse, error)\n\tUpdate(context.Context, *UpdateAirlineRequest) (*UpdateAirlineResponse, error)\n\tDelete(context.Context, *DeleteAirlineRequest) (*DeleteAirlineResponse, error)\n\tBatchGetByDesignator(context.Context, *BatchGetByDesignatorRequest) (*BatchGetByDesignatorResponse, error)\n\tGetByDesignator(context.Context, *GetByDesignatorRequest) (*GetByDesignatorResponse, error)\n\tGetDesignatorsForAirline(context.Context, *GetDesignatorsForAirlineRequest) (*GetDesignatorsForAirlineResponse, error)\n\tmustEmbedUnimplementedAirlinesServiceServer()\n}\n", "n_tokens": 235, "primary_symbol": "AirlinesServiceServer", "primary_kind": "type", "primary_span": [146, 161], "def_symbols": [], "symbols": ["AirlinesServiceServer", "the", "server", "API", "for", "AirlinesService", "service", "All", "implementations", "must", "embed", "UnimplementedAirlinesServiceServer", "forward", "compatibility", "type", "interface", "Get", "context", "Context", "AirlineDetailsRequest", "AirlineDetailsResponse", "error", "BatchGet", "BatchGetRequest", "BatchGetResponse", "Search", "SearchAirlinesRequest", "SearchAirlinesResponse", "Create", "CreateAirlineRequest", "CreateAirlineResponse", "Update", "UpdateAirlineRequest", "UpdateAirlineResponse", "Delete", "DeleteAirlineRequest", "DeleteAirlineResponse", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "GetDesignatorsForAirline", "GetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse", "mustEmbedUnimplementedAirlinesServiceServer"], "doc_head": "// AirlinesServiceServer is the server API for AirlinesService service.\n// All implementations must embed UnimplementedAirlinesServiceServer\n// for forward compatibility.\ntype AirlinesServiceServer interface {\n\tGet(context.Context, *AirlineDetailsRequest) (*AirlineDetailsResponse, error)\n\tBatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error)\n\tSearch(context.Context, *SearchAirlinesRequest) (*SearchAirlinesResponse, error)\n\tCreate(context.Context, *CreateAirlineRequest) (*CreateAirlineResponse, error)\n\tUpdate(context.Context, *UpdateAirlineRequest) (*UpdateAirlineResponse, error)\n\tDelete(context.Context, *DeleteAirlineRequest) (*DeleteAirlineResponse, error)\n\tBatchGetByDesignator(context.Context, *BatchGetByDesignatorRequest) (*BatchGetByDesignatorResponse, error)\n\tGetByDesignator(context.Context, *GetByDesignatorRequest) (*GetByDesignatorResponse, error)\n\tGetDesignatorsForAirline(context.Context, *GetDesignatorsForAirlineRequest) (*GetDesignatorsForAirlineResponse, error)\n\tmustEmbedUnimplementedAirlinesServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:AirlinesServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirlinesServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["AirlinesServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirlinesServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirlinesServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [6868], "all_end_bytes": [7744], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["AirlineDetailsRequest", "AirlineDetailsResponse", "AirlinesServiceServer", "BatchGet", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "BatchGetRequest", "BatchGetResponse", "Context", "Create", "CreateAirlineRequest", "CreateAirlineResponse", "Delete", "DeleteAirlineRequest", "DeleteAirlineResponse", "Get", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "GetDesignatorsForAirline", "GetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse", "Search", "SearchAirlinesRequest", "SearchAirlinesResponse", "Update", "UpdateAirlineRequest", "UpdateAirlineResponse", "context.Context"], "header_context_minimal": "package v0\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#15", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#17"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#17", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 17, "start_line": 162, "end_line": 168, "text": "// UnimplementedAirlinesServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedAirlinesServiceServer struct{}\n", "n_tokens": 54, "primary_symbol": "UnimplementedAirlinesServiceServer", "primary_kind": "type", "primary_span": [162, 168], "def_symbols": [], "symbols": ["UnimplementedAirlinesServiceServer", "must", "embedded", "have", "forward", "compatible", "implementations", "NOTE", "this", "should", "value", "instead", "pointer", "avoid", "nil", "dereference", "when", "methods", "are", "called", "type", "struct"], "doc_head": "// UnimplementedAirlinesServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedAirlinesServiceServer struct{}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnimplementedAirlinesServiceServer (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnimplementedAirlinesServiceServer", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UnimplementedAirlinesServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnimplementedAirlinesServiceServer (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnimplementedAirlinesServiceServer"], "all_type_kinds": ["struct"], "all_start_bytes": [7980], "all_end_bytes": [8023], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedAirlinesServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#16", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#18"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#18", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 18, "start_line": 169, "end_line": 171, "text": "func (UnimplementedAirlinesServiceServer) Get(context.Context, *AirlineDetailsRequest) (*AirlineDetailsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [169, 171], "def_symbols": [], "symbols": ["Get", "func", "UnimplementedAirlinesServiceServer", "context", "Context", "AirlineDetailsRequest", "AirlineDetailsResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirlinesServiceServer) Get(context.Context, *AirlineDetailsRequest) (*AirlineDetailsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Get/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "Get", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Get/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8025], "all_end_bytes": [8226], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["AirlineDetailsRequest", "AirlineDetailsResponse", "Context", "Errorf", "Get", "Unimplemented", "UnimplementedAirlinesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#17", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#19"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#19", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 19, "start_line": 172, "end_line": 174, "text": "func (UnimplementedAirlinesServiceServer) BatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method BatchGet not implemented\")\n}", "n_tokens": 45, "primary_symbol": "BatchGet", "primary_kind": "method", "primary_span": [172, 174], "def_symbols": [], "symbols": ["BatchGet", "func", "UnimplementedAirlinesServiceServer", "context", "Context", "BatchGetRequest", "BatchGetResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirlinesServiceServer) BatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method BatchGet not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).BatchGet/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "BatchGet", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["BatchGet"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).BatchGet/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8227], "all_end_bytes": [8426], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["BatchGet", "BatchGetRequest", "BatchGetResponse", "Context", "Errorf", "Unimplemented", "UnimplementedAirlinesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#18", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#20"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#20", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 20, "start_line": 175, "end_line": 177, "text": "func (UnimplementedAirlinesServiceServer) Search(context.Context, *SearchAirlinesRequest) (*SearchAirlinesResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [175, 177], "def_symbols": [], "symbols": ["Search", "func", "UnimplementedAirlinesServiceServer", "context", "Context", "SearchAirlinesRequest", "SearchAirlinesResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirlinesServiceServer) Search(context.Context, *SearchAirlinesRequest) (*SearchAirlinesResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Search/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "Search", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Search/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8427], "all_end_bytes": [8634], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Search", "SearchAirlinesRequest", "SearchAirlinesResponse", "Unimplemented", "UnimplementedAirlinesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#19", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#21"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#21", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 21, "start_line": 178, "end_line": 180, "text": "func (UnimplementedAirlinesServiceServer) Create(context.Context, *CreateAirlineRequest) (*CreateAirlineResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [178, 180], "def_symbols": [], "symbols": ["Create", "func", "UnimplementedAirlinesServiceServer", "context", "Context", "CreateAirlineRequest", "CreateAirlineResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirlinesServiceServer) Create(context.Context, *CreateAirlineRequest) (*CreateAirlineResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Create/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "Create", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Create/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8635], "all_end_bytes": [8840], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Create", "CreateAirlineRequest", "CreateAirlineResponse", "Errorf", "Unimplemented", "UnimplementedAirlinesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#20", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#22"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#22", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 22, "start_line": 181, "end_line": 183, "text": "func (UnimplementedAirlinesServiceServer) Update(context.Context, *UpdateAirlineRequest) (*UpdateAirlineResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [181, 183], "def_symbols": [], "symbols": ["Update", "func", "UnimplementedAirlinesServiceServer", "context", "Context", "UpdateAirlineRequest", "UpdateAirlineResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirlinesServiceServer) Update(context.Context, *UpdateAirlineRequest) (*UpdateAirlineResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Update/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "Update", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Update/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8841], "all_end_bytes": [9046], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Unimplemented", "UnimplementedAirlinesServiceServer", "Update", "UpdateAirlineRequest", "UpdateAirlineResponse", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#21", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#23"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#23", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 23, "start_line": 184, "end_line": 186, "text": "func (UnimplementedAirlinesServiceServer) Delete(context.Context, *DeleteAirlineRequest) (*DeleteAirlineResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Delete not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Delete", "primary_kind": "method", "primary_span": [184, 186], "def_symbols": [], "symbols": ["Delete", "func", "UnimplementedAirlinesServiceServer", "context", "Context", "DeleteAirlineRequest", "DeleteAirlineResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirlinesServiceServer) Delete(context.Context, *DeleteAirlineRequest) (*DeleteAirlineResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Delete not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Delete/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "Delete", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Delete"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Delete/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9047], "all_end_bytes": [9252], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Delete", "DeleteAirlineRequest", "DeleteAirlineResponse", "Errorf", "Unimplemented", "UnimplementedAirlinesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#22", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#24"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#24", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 24, "start_line": 187, "end_line": 189, "text": "func (UnimplementedAirlinesServiceServer) BatchGetByDesignator(context.Context, *BatchGetByDesignatorRequest) (*BatchGetByDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method BatchGetByDesignator not implemented\")\n}", "n_tokens": 57, "primary_symbol": "BatchGetByDesignator", "primary_kind": "method", "primary_span": [187, 189], "def_symbols": [], "symbols": ["BatchGetByDesignator", "func", "UnimplementedAirlinesServiceServer", "context", "Context", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirlinesServiceServer) BatchGetByDesignator(context.Context, *BatchGetByDesignatorRequest) (*BatchGetByDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method BatchGetByDesignator not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).BatchGetByDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "BatchGetByDesignator", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["BatchGetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).BatchGetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9253], "all_end_bytes": [9500], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "Context", "Errorf", "Unimplemented", "UnimplementedAirlinesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#23", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#25"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#25", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 25, "start_line": 190, "end_line": 192, "text": "func (UnimplementedAirlinesServiceServer) GetByDesignator(context.Context, *GetByDesignatorRequest) (*GetByDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetByDesignator not implemented\")\n}", "n_tokens": 53, "primary_symbol": "GetByDesignator", "primary_kind": "method", "primary_span": [190, 192], "def_symbols": [], "symbols": ["GetByDesignator", "func", "UnimplementedAirlinesServiceServer", "context", "Context", "GetByDesignatorRequest", "GetByDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirlinesServiceServer) GetByDesignator(context.Context, *GetByDesignatorRequest) (*GetByDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetByDesignator not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).GetByDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "GetByDesignator", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).GetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9501], "all_end_bytes": [9728], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "Unimplemented", "UnimplementedAirlinesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#24", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#26"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#26", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 26, "start_line": 193, "end_line": 195, "text": "func (UnimplementedAirlinesServiceServer) GetDesignatorsForAirline(context.Context, *GetDesignatorsForAirlineRequest) (*GetDesignatorsForAirlineResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetDesignatorsForAirline not implemented\")\n}", "n_tokens": 61, "primary_symbol": "GetDesignatorsForAirline", "primary_kind": "method", "primary_span": [193, 195], "def_symbols": [], "symbols": ["GetDesignatorsForAirline", "func", "UnimplementedAirlinesServiceServer", "context", "Context", "GetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirlinesServiceServer) GetDesignatorsForAirline(context.Context, *GetDesignatorsForAirlineRequest) (*GetDesignatorsForAirlineResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetDesignatorsForAirline not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).GetDesignatorsForAirline/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "GetDesignatorsForAirline", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignatorsForAirline"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).GetDesignatorsForAirline/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9729], "all_end_bytes": [9992], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "GetDesignatorsForAirline", "GetDesignatorsForAirlineRequest", "GetDesignatorsForAirlineResponse", "Unimplemented", "UnimplementedAirlinesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#25", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#27"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#27", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 27, "start_line": 196, "end_line": 196, "text": "func (UnimplementedAirlinesServiceServer) mustEmbedUnimplementedAirlinesServiceServer() {}", "n_tokens": 19, "primary_symbol": "mustEmbedUnimplementedAirlinesServiceServer", "primary_kind": "method", "primary_span": [196, 196], "def_symbols": [], "symbols": ["mustEmbedUnimplementedAirlinesServiceServer", "func", "UnimplementedAirlinesServiceServer"], "doc_head": "func (UnimplementedAirlinesServiceServer) mustEmbedUnimplementedAirlinesServiceServer() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).mustEmbedUnimplementedAirlinesServiceServer/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "mustEmbedUnimplementedAirlinesServiceServer", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["mustEmbedUnimplementedAirlinesServiceServer"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).mustEmbedUnimplementedAirlinesServiceServer/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9993], "all_end_bytes": [10083], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedAirlinesServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#26", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#28"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#28", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 28, "start_line": 197, "end_line": 198, "text": "func (UnimplementedAirlinesServiceServer) testEmbeddedByValue()                         {}\n", "n_tokens": 16, "primary_symbol": "testEmbeddedByValue", "primary_kind": "method", "primary_span": [197, 198], "def_symbols": [], "symbols": ["testEmbeddedByValue", "func", "UnimplementedAirlinesServiceServer"], "doc_head": "func (UnimplementedAirlinesServiceServer) testEmbeddedByValue()                         {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).testEmbeddedByValue/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirlinesServiceServer", "function_name": "", "method_name": "testEmbeddedByValue", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["testEmbeddedByValue"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).testEmbeddedByValue/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirlinesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [10084], "all_end_bytes": [10174], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirlinesServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedAirlinesServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedAirlinesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#27", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#29"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#29", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 29, "start_line": 199, "end_line": 205, "text": "// UnsafeAirlinesServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to AirlinesServiceServer will\n// result in compilation errors.\ntype UnsafeAirlinesServiceServer interface {\n\tmustEmbedUnimplementedAirlinesServiceServer()\n}\n", "n_tokens": 62, "primary_symbol": "UnsafeAirlinesServiceServer", "primary_kind": "type", "primary_span": [199, 205], "def_symbols": [], "symbols": ["UnsafeAirlinesServiceServer", "may", "embedded", "opt", "out", "forward", "compatibility", "for", "this", "service", "Use", "interface", "not", "recommended", "added", "methods", "AirlinesServiceServer", "will", "result", "compilation", "errors", "type", "mustEmbedUnimplementedAirlinesServiceServer"], "doc_head": "// UnsafeAirlinesServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to AirlinesServiceServer will\n// result in compilation errors.\ntype UnsafeAirlinesServiceServer interface {\n\tmustEmbedUnimplementedAirlinesServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnsafeAirlinesServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnsafeAirlinesServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["UnsafeAirlinesServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnsafeAirlinesServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnsafeAirlinesServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [10407], "all_end_bytes": [10495], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnsafeAirlinesServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#28", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#30"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#30", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 30, "start_line": 206, "end_line": 216, "text": "func RegisterAirlinesServiceServer(s grpc.ServiceRegistrar, srv AirlinesServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedAirlinesServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&AirlinesService_ServiceDesc, srv)\n}\n", "n_tokens": 125, "primary_symbol": "RegisterAirlinesServiceServer", "primary_kind": "function", "primary_span": [206, 216], "def_symbols": [], "symbols": ["RegisterAirlinesServiceServer", "func", "grpc", "ServiceRegistrar", "srv", "AirlinesServiceServer", "the", "following", "call", "pancis", "indicates", "UnimplementedAirlinesServiceServer", "was", "embedded", "pointer", "and", "nil", "This", "will", "cause", "panics", "unimplemented", "method", "ever", "invoked", "test", "this", "initialization", "time", "prevent", "from", "happening", "runtime", "later", "due", "interface", "testEmbeddedByValue", "RegisterService", "AirlinesService_ServiceDesc"], "doc_head": "func RegisterAirlinesServiceServer(s grpc.ServiceRegistrar, srv AirlinesServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedAirlinesServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&AirlinesService_ServiceDesc, srv)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:RegisterAirlinesServiceServer/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "RegisterAirlinesServiceServer", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["RegisterAirlinesServiceServer"], "all_kinds": ["function"], "all_ast_paths": ["go:function:RegisterAirlinesServiceServer/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [10497], "all_end_bytes": [11025], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceServer", "AirlinesService_ServiceDesc", "RegisterAirlinesServiceServer", "RegisterService", "ServiceRegistrar", "grpc.ServiceRegistrar", "s.RegisterService", "t.testEmbeddedByValue"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#29", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#31"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#31", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 31, "start_line": 217, "end_line": 234, "text": "func _AirlinesService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(AirlineDetailsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Get(ctx, req.(*AirlineDetailsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 159, "primary_symbol": "_AirlinesService_Get_Handler", "primary_kind": "function", "primary_span": [217, 234], "def_symbols": [], "symbols": ["_AirlinesService_Get_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "AirlineDetailsRequest", "err", "nil", "return", "AirlinesServiceServer", "Get", "info", "UnaryServerInfo", "Server", "FullMethod", "AirlinesService_Get_FullMethodName", "handler", "req"], "doc_head": "func _AirlinesService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(AirlineDetailsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Get(ctx, req.(*AirlineDetailsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirlinesService_Get_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirlinesService_Get_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirlinesService_Get_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirlinesService_Get_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [11027], "all_end_bytes": [11664], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlineDetailsRequest", "AirlinesServiceServer", "AirlinesService_Get_FullMethodName", "Context", "FullMethod", "Get", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#30", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#32"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#32", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 32, "start_line": 235, "end_line": 252, "text": "func _AirlinesService_BatchGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(BatchGetRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).BatchGet(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_BatchGet_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).BatchGet(ctx, req.(*BatchGetRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 163, "primary_symbol": "_AirlinesService_BatchGet_Handler", "primary_kind": "function", "primary_span": [235, 252], "def_symbols": [], "symbols": ["_AirlinesService_BatchGet_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "BatchGetRequest", "err", "nil", "return", "AirlinesServiceServer", "BatchGet", "info", "UnaryServerInfo", "Server", "FullMethod", "AirlinesService_BatchGet_FullMethodName", "handler", "req"], "doc_head": "func _AirlinesService_BatchGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(BatchGetRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).BatchGet(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_BatchGet_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).BatchGet(ctx, req.(*BatchGetRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirlinesService_BatchGet_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirlinesService_BatchGet_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirlinesService_BatchGet_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirlinesService_BatchGet_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [11666], "all_end_bytes": [12311], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceServer", "AirlinesService_BatchGet_FullMethodName", "BatchGet", "BatchGetRequest", "Context", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#31", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#33"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#33", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 33, "start_line": 253, "end_line": 270, "text": "func _AirlinesService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchAirlinesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Search(ctx, req.(*SearchAirlinesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 158, "primary_symbol": "_AirlinesService_Search_Handler", "primary_kind": "function", "primary_span": [253, 270], "def_symbols": [], "symbols": ["_AirlinesService_Search_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "SearchAirlinesRequest", "err", "nil", "return", "AirlinesServiceServer", "Search", "info", "UnaryServerInfo", "Server", "FullMethod", "AirlinesService_Search_FullMethodName", "handler", "req"], "doc_head": "func _AirlinesService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchAirlinesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Search(ctx, req.(*SearchAirlinesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirlinesService_Search_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirlinesService_Search_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirlinesService_Search_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirlinesService_Search_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [12313], "all_end_bytes": [12962], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceServer", "AirlinesService_Search_FullMethodName", "Context", "FullMethod", "Search", "SearchAirlinesRequest", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#32", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#34"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#34", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 34, "start_line": 271, "end_line": 288, "text": "func _AirlinesService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateAirlineRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Create(ctx, req.(*CreateAirlineRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 158, "primary_symbol": "_AirlinesService_Create_Handler", "primary_kind": "function", "primary_span": [271, 288], "def_symbols": [], "symbols": ["_AirlinesService_Create_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "CreateAirlineRequest", "err", "nil", "return", "AirlinesServiceServer", "Create", "info", "UnaryServerInfo", "Server", "FullMethod", "AirlinesService_Create_FullMethodName", "handler", "req"], "doc_head": "func _AirlinesService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateAirlineRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Create(ctx, req.(*CreateAirlineRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirlinesService_Create_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirlinesService_Create_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirlinesService_Create_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirlinesService_Create_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [12964], "all_end_bytes": [13611], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceServer", "AirlinesService_Create_FullMethodName", "Context", "Create", "CreateAirlineRequest", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#33", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#35"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#35", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 35, "start_line": 289, "end_line": 306, "text": "func _AirlinesService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateAirlineRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Update(ctx, req.(*UpdateAirlineRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 159, "primary_symbol": "_AirlinesService_Update_Handler", "primary_kind": "function", "primary_span": [289, 306], "def_symbols": [], "symbols": ["_AirlinesService_Update_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "UpdateAirlineRequest", "err", "nil", "return", "AirlinesServiceServer", "Update", "info", "UnaryServerInfo", "Server", "FullMethod", "AirlinesService_Update_FullMethodName", "handler", "req"], "doc_head": "func _AirlinesService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateAirlineRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Update(ctx, req.(*UpdateAirlineRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirlinesService_Update_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirlinesService_Update_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirlinesService_Update_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirlinesService_Update_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [13613], "all_end_bytes": [14260], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceServer", "AirlinesService_Update_FullMethodName", "Context", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "Update", "UpdateAirlineRequest", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#34", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#36"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#36", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 36, "start_line": 307, "end_line": 324, "text": "func _AirlinesService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(DeleteAirlineRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Delete(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Delete_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Delete(ctx, req.(*DeleteAirlineRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 159, "primary_symbol": "_AirlinesService_Delete_Handler", "primary_kind": "function", "primary_span": [307, 324], "def_symbols": [], "symbols": ["_AirlinesService_Delete_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "DeleteAirlineRequest", "err", "nil", "return", "AirlinesServiceServer", "Delete", "info", "UnaryServerInfo", "Server", "FullMethod", "AirlinesService_Delete_FullMethodName", "handler", "req"], "doc_head": "func _AirlinesService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(DeleteAirlineRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).Delete(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_Delete_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).Delete(ctx, req.(*DeleteAirlineRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirlinesService_Delete_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirlinesService_Delete_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirlinesService_Delete_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirlinesService_Delete_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [14262], "all_end_bytes": [14909], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceServer", "AirlinesService_Delete_FullMethodName", "Context", "Delete", "DeleteAirlineRequest", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#35", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#37"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#37", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 37, "start_line": 325, "end_line": 342, "text": "func _AirlinesService_BatchGetByDesignator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(BatchGetByDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).BatchGetByDesignator(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_BatchGetByDesignator_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).BatchGetByDesignator(ctx, req.(*BatchGetByDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 181, "primary_symbol": "_AirlinesService_BatchGetByDesignator_Handler", "primary_kind": "function", "primary_span": [325, 342], "def_symbols": [], "symbols": ["_AirlinesService_BatchGetByDesignator_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "BatchGetByDesignatorRequest", "err", "nil", "return", "AirlinesServiceServer", "BatchGetByDesignator", "info", "UnaryServerInfo", "Server", "FullMethod", "AirlinesService_BatchGetByDesignator_FullMethodName", "handler", "req"], "doc_head": "func _AirlinesService_BatchGetByDesignator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(BatchGetByDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).BatchGetByDesignator(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_BatchGetByDesignator_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).BatchGetByDesignator(ctx, req.(*BatchGetByDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirlinesService_BatchGetByDesignator_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirlinesService_BatchGetByDesignator_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirlinesService_BatchGetByDesignator_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirlinesService_BatchGetByDesignator_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [14911], "all_end_bytes": [15628], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceServer", "AirlinesService_BatchGetByDesignator_FullMethodName", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "Context", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#36", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#38"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#38", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 38, "start_line": 343, "end_line": 360, "text": "func _AirlinesService_GetByDesignator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetByDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).GetByDesignator(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_GetByDesignator_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).GetByDesignator(ctx, req.(*GetByDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 172, "primary_symbol": "_AirlinesService_GetByDesignator_Handler", "primary_kind": "function", "primary_span": [343, 360], "def_symbols": [], "symbols": ["_AirlinesService_GetByDesignator_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "GetByDesignatorRequest", "err", "nil", "return", "AirlinesServiceServer", "GetByDesignator", "info", "UnaryServerInfo", "Server", "FullMethod", "AirlinesService_GetByDesignator_FullMethodName", "handler", "req"], "doc_head": "func _AirlinesService_GetByDesignator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetByDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).GetByDesignator(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_GetByDesignator_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).GetByDesignator(ctx, req.(*GetByDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirlinesService_GetByDesignator_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirlinesService_GetByDesignator_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirlinesService_GetByDesignator_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirlinesService_GetByDesignator_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [15630], "all_end_bytes": [16317], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceServer", "AirlinesService_GetByDesignator_FullMethodName", "Context", "FullMethod", "GetByDesignator", "GetByDesignatorRequest", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#37", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#39"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#39", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 39, "start_line": 361, "end_line": 433, "text": "func _AirlinesService_GetDesignatorsForAirline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetDesignatorsForAirlineRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).GetDesignatorsForAirline(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_GetDesignatorsForAirline_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).GetDesignatorsForAirline(ctx, req.(*GetDesignatorsForAirlineRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\n// AirlinesService_ServiceDesc is the grpc.ServiceDesc for AirlinesService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar AirlinesService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airlines.v0.AirlinesService\",\n\tHandlerType: (*AirlinesServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _AirlinesService_Get_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"BatchGet\",\n\t\t\tHandler:    _AirlinesService_BatchGet_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Search\",\n\t\t\tHandler:    _AirlinesService_Search_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Create\",\n\t\t\tHandler:    _AirlinesService_Create_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Update\",\n\t\t\tHandler:    _AirlinesService_Update_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Delete\",\n\t\t\tHandler:    _AirlinesService_Delete_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"BatchGetByDesignator\",\n\t\t\tHandler:    _AirlinesService_BatchGetByDesignator_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetByDesignator\",\n\t\t\tHandler:    _AirlinesService_GetByDesignator_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetDesignatorsForAirline\",\n\t\t\tHandler:    _AirlinesService_GetDesignatorsForAirline_Handler,\n\t\t},\n\t},\n\tStreams:  []grpc.StreamDesc{},\n\tMetadata: \"airlines.proto\",\n}\n\nconst (\n\tDesignatorsService_Create_FullMethodName = \"/aviation.airlines.v0.DesignatorsService/Create\"\n\tDesignatorsService_Get_FullMethodName    = \"/aviation.airlines.v0.DesignatorsService/Get\"\n\tDesignatorsService_Update_FullMethodName = \"/aviation.airlines.v0.DesignatorsService/Update\"\n\tDesignatorsService_Search_FullMethodName = \"/aviation.airlines.v0.DesignatorsService/Search\"\n)\n", "n_tokens": 634, "primary_symbol": "_AirlinesService_GetDesignatorsForAirline_Handler", "primary_kind": "function", "primary_span": [361, 433], "def_symbols": [], "symbols": ["_AirlinesService_GetDesignatorsForAirline_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "GetDesignatorsForAirlineRequest", "err", "nil", "return", "AirlinesServiceServer", "GetDesignatorsForAirline", "info", "UnaryServerInfo", "Server", "FullMethod", "AirlinesService_GetDesignatorsForAirline_FullMethodName", "handler", "req", "AirlinesService_ServiceDesc", "the", "ServiceDesc", "for", "AirlinesService", "service", "only", "intended", "direct", "use", "with", "RegisterService", "and", "not", "introspected", "modified", "even", "copy", "var", "ServiceName", "aviation", "airlines", "HandlerType", "Methods", "MethodDesc", "MethodName", "Get", "Handler", "_AirlinesService_Get_Handler", "BatchGet", "_AirlinesService_BatchGet_Handler", "Search", "_AirlinesService_Search_Handler", "Create", "_AirlinesService_Create_Handler", "Update", "_AirlinesService_Update_Handler", "Delete", "_AirlinesService_Delete_Handler", "BatchGetByDesignator", "_AirlinesService_BatchGetByDesignator_Handler", "GetByDesignator", "_AirlinesService_GetByDesignator_Handler", "Streams", "StreamDesc", "Metadata", "proto", "const", "DesignatorsService_Create_FullMethodName", "DesignatorsService", "DesignatorsService_Get_FullMethodName", "DesignatorsService_Update_FullMethodName", "DesignatorsService_Search_FullMethodName"], "doc_head": "func _AirlinesService_GetDesignatorsForAirline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetDesignatorsForAirlineRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirlinesServiceServer).GetDesignatorsForAirline(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirlinesService_GetDesignatorsForAirline_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirlinesServiceServer).GetDesignatorsForAirline(ctx, req.(*GetDesignatorsForAirlineRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n// AirlinesService_ServiceDesc is the grpc.ServiceDesc for AirlinesService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar AirlinesService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airlines.v0.AirlinesService\",\n\tHandlerType: (*AirlinesServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _AirlinesService_Get_Handler,", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirlinesService_GetDesignatorsForAirline_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirlinesService_GetDesignatorsForAirline_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirlinesService_GetDesignatorsForAirline_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirlinesService_GetDesignatorsForAirline_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [16319], "all_end_bytes": [17060], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirlinesServiceServer", "AirlinesService_GetDesignatorsForAirline_FullMethodName", "AirlinesService_ServiceDesc", "Context", "DesignatorsService_Create_FullMethodName", "DesignatorsService_Get_FullMethodName", "DesignatorsService_Search_FullMethodName", "DesignatorsService_Update_FullMethodName", "FullMethod", "GetDesignatorsForAirline", "GetDesignatorsForAirlineRequest", "Handler", "HandlerType", "Metadata", "MethodDesc", "MethodName", "Methods", "Server", "ServiceDesc", "ServiceName", "StreamDesc", "Streams", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.MethodDesc", "grpc.ServiceDesc", "grpc.StreamDesc", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#38", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#40"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#40", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 40, "start_line": 434, "end_line": 443, "text": "// DesignatorsServiceClient is the client API for DesignatorsService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype DesignatorsServiceClient interface {\n\tCreate(ctx context.Context, in *CreateDesignatorRequest, opts ...grpc.CallOption) (*CreateDesignatorResponse, error)\n\tGet(ctx context.Context, in *GetDesignatorRequest, opts ...grpc.CallOption) (*GetDesignatorResponse, error)\n\tUpdate(ctx context.Context, in *UpdateDesignatorRequest, opts ...grpc.CallOption) (*UpdateDesignatorResponse, error)\n\tSearch(ctx context.Context, in *SearchDesignatorsRequest, opts ...grpc.CallOption) (*SearchDesignatorsResponse, error)\n}\n", "n_tokens": 166, "primary_symbol": "DesignatorsServiceClient", "primary_kind": "type", "primary_span": [434, 443], "def_symbols": [], "symbols": ["DesignatorsServiceClient", "the", "client", "API", "for", "DesignatorsService", "service", "For", "semantics", "around", "ctx", "use", "and", "closing", "ending", "streaming", "RPCs", "please", "refer", "https", "pkg", "dev", "google", "golang", "org", "grpc", "tab", "doc", "ClientConn", "NewStream", "type", "interface", "Create", "context", "Context", "CreateDesignatorRequest", "opts", "CallOption", "CreateDesignatorResponse", "error", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse"], "doc_head": "// DesignatorsServiceClient is the client API for DesignatorsService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype DesignatorsServiceClient interface {\n\tCreate(ctx context.Context, in *CreateDesignatorRequest, opts ...grpc.CallOption) (*CreateDesignatorResponse, error)\n\tGet(ctx context.Context, in *GetDesignatorRequest, opts ...grpc.CallOption) (*GetDesignatorResponse, error)\n\tUpdate(ctx context.Context, in *UpdateDesignatorRequest, opts ...grpc.CallOption) (*UpdateDesignatorResponse, error)\n\tSearch(ctx context.Context, in *SearchDesignatorsRequest, opts ...grpc.CallOption) (*SearchDesignatorsResponse, error)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:DesignatorsServiceClient (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "DesignatorsServiceClient", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["DesignatorsServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:DesignatorsServiceClient (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["DesignatorsServiceClient"], "all_type_kinds": ["interface"], "all_start_bytes": [18961], "all_end_bytes": [19464], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "Create", "CreateDesignatorRequest", "CreateDesignatorResponse", "DesignatorsServiceClient", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "context.Context", "grpc.CallOption"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#39", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#41"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#41", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 41, "start_line": 444, "end_line": 447, "text": "type designatorsServiceClient struct {\n\tcc grpc.ClientConnInterface\n}\n", "n_tokens": 14, "primary_symbol": "designatorsServiceClient", "primary_kind": "type", "primary_span": [444, 447], "def_symbols": [], "symbols": ["type", "designatorsServiceClient", "struct", "grpc", "ClientConnInterface"], "doc_head": "type designatorsServiceClient struct {\n\tcc grpc.ClientConnInterface\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:designatorsServiceClient (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "designatorsServiceClient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["designatorsServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:designatorsServiceClient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": ["struct"], "all_start_bytes": [19471], "all_end_bytes": [19535], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["ClientConnInterface", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#40", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#42"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#42", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 42, "start_line": 448, "end_line": 451, "text": "func NewDesignatorsServiceClient(cc grpc.ClientConnInterface) DesignatorsServiceClient {\n\treturn &designatorsServiceClient{cc}\n}\n", "n_tokens": 27, "primary_symbol": "NewDesignatorsServiceClient", "primary_kind": "function", "primary_span": [448, 451], "def_symbols": [], "symbols": ["NewDesignatorsServiceClient", "func", "grpc", "ClientConnInterface", "DesignatorsServiceClient", "return", "designatorsServiceClient"], "doc_head": "func NewDesignatorsServiceClient(cc grpc.ClientConnInterface) DesignatorsServiceClient {\n\treturn &designatorsServiceClient{cc}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewDesignatorsServiceClient/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "NewDesignatorsServiceClient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewDesignatorsServiceClient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewDesignatorsServiceClient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [19537], "all_end_bytes": [19665], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["ClientConnInterface", "DesignatorsServiceClient", "NewDesignatorsServiceClient", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#41", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#43"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#43", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 43, "start_line": 452, "end_line": 461, "text": "func (c *designatorsServiceClient) Create(ctx context.Context, in *CreateDesignatorRequest, opts ...grpc.CallOption) (*CreateDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [452, 461], "def_symbols": [], "symbols": ["Create", "func", "designatorsServiceClient", "ctx", "context", "Context", "CreateDesignatorRequest", "opts", "grpc", "CallOption", "CreateDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "DesignatorsService_Create_FullMethodName", "nil", "return"], "doc_head": "func (c *designatorsServiceClient) Create(ctx context.Context, in *CreateDesignatorRequest, opts ...grpc.CallOption) (*CreateDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*designatorsServiceClient).Create/complete", "package": "v0", "node_kind": "method", "receiver": "c *designatorsServiceClient", "function_name": "", "method_name": "Create", "type_name": "designatorsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*designatorsServiceClient).Create/complete"], "all_roles": ["complete"], "all_receivers": ["c *designatorsServiceClient"], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [19667], "all_end_bytes": [20067], "primary_index": 0, "all_receivers_normalized": ["(*designatorsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "Create", "CreateDesignatorRequest", "CreateDesignatorResponse", "DesignatorsService_Create_FullMethodName", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *designatorsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#42", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#44"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#44", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 44, "start_line": 462, "end_line": 471, "text": "func (c *designatorsServiceClient) Get(ctx context.Context, in *GetDesignatorRequest, opts ...grpc.CallOption) (*GetDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [462, 471], "def_symbols": [], "symbols": ["Get", "func", "designatorsServiceClient", "ctx", "context", "Context", "GetDesignatorRequest", "opts", "grpc", "CallOption", "GetDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "DesignatorsService_Get_FullMethodName", "nil", "return"], "doc_head": "func (c *designatorsServiceClient) Get(ctx context.Context, in *GetDesignatorRequest, opts ...grpc.CallOption) (*GetDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*designatorsServiceClient).Get/complete", "package": "v0", "node_kind": "method", "receiver": "c *designatorsServiceClient", "function_name": "", "method_name": "Get", "type_name": "designatorsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*designatorsServiceClient).Get/complete"], "all_roles": ["complete"], "all_receivers": ["c *designatorsServiceClient"], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [20069], "all_end_bytes": [20454], "primary_index": 0, "all_receivers_normalized": ["(*designatorsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "DesignatorsService_Get_FullMethodName", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *designatorsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#43", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#45"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#45", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 45, "start_line": 472, "end_line": 481, "text": "func (c *designatorsServiceClient) Update(ctx context.Context, in *UpdateDesignatorRequest, opts ...grpc.CallOption) (*UpdateDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 101, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [472, 481], "def_symbols": [], "symbols": ["Update", "func", "designatorsServiceClient", "ctx", "context", "Context", "UpdateDesignatorRequest", "opts", "grpc", "CallOption", "UpdateDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "DesignatorsService_Update_FullMethodName", "nil", "return"], "doc_head": "func (c *designatorsServiceClient) Update(ctx context.Context, in *UpdateDesignatorRequest, opts ...grpc.CallOption) (*UpdateDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*designatorsServiceClient).Update/complete", "package": "v0", "node_kind": "method", "receiver": "c *designatorsServiceClient", "function_name": "", "method_name": "Update", "type_name": "designatorsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*designatorsServiceClient).Update/complete"], "all_roles": ["complete"], "all_receivers": ["c *designatorsServiceClient"], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [20456], "all_end_bytes": [20856], "primary_index": 0, "all_receivers_normalized": ["(*designatorsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "DesignatorsService_Update_FullMethodName", "Invoke", "StaticMethod", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *designatorsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#44", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#46"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#46", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 46, "start_line": 482, "end_line": 491, "text": "func (c *designatorsServiceClient) Search(ctx context.Context, in *SearchDesignatorsRequest, opts ...grpc.CallOption) (*SearchDesignatorsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchDesignatorsResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [482, 491], "def_symbols": [], "symbols": ["Search", "func", "designatorsServiceClient", "ctx", "context", "Context", "SearchDesignatorsRequest", "opts", "grpc", "CallOption", "SearchDesignatorsResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "DesignatorsService_Search_FullMethodName", "nil", "return"], "doc_head": "func (c *designatorsServiceClient) Search(ctx context.Context, in *SearchDesignatorsRequest, opts ...grpc.CallOption) (*SearchDesignatorsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchDesignatorsResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*designatorsServiceClient).Search/complete", "package": "v0", "node_kind": "method", "receiver": "c *designatorsServiceClient", "function_name": "", "method_name": "Search", "type_name": "designatorsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*designatorsServiceClient).Search/complete"], "all_roles": ["complete"], "all_receivers": ["c *designatorsServiceClient"], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [20858], "all_end_bytes": [21261], "primary_index": 0, "all_receivers_normalized": ["(*designatorsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "DesignatorsService_Search_FullMethodName", "Invoke", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *designatorsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#45", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#47"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#47", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 47, "start_line": 492, "end_line": 502, "text": "// DesignatorsServiceServer is the server API for DesignatorsService service.\n// All implementations must embed UnimplementedDesignatorsServiceServer\n// for forward compatibility.\ntype DesignatorsServiceServer interface {\n\tCreate(context.Context, *CreateDesignatorRequest) (*CreateDesignatorResponse, error)\n\tGet(context.Context, *GetDesignatorRequest) (*GetDesignatorResponse, error)\n\tUpdate(context.Context, *UpdateDesignatorRequest) (*UpdateDesignatorResponse, error)\n\tSearch(context.Context, *SearchDesignatorsRequest) (*SearchDesignatorsResponse, error)\n\tmustEmbedUnimplementedDesignatorsServiceServer()\n}\n", "n_tokens": 123, "primary_symbol": "DesignatorsServiceServer", "primary_kind": "type", "primary_span": [492, 502], "def_symbols": [], "symbols": ["DesignatorsServiceServer", "the", "server", "API", "for", "DesignatorsService", "service", "All", "implementations", "must", "embed", "UnimplementedDesignatorsServiceServer", "forward", "compatibility", "type", "interface", "Create", "context", "Context", "CreateDesignatorRequest", "CreateDesignatorResponse", "error", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "mustEmbedUnimplementedDesignatorsServiceServer"], "doc_head": "// DesignatorsServiceServer is the server API for DesignatorsService service.\n// All implementations must embed UnimplementedDesignatorsServiceServer\n// for forward compatibility.\ntype DesignatorsServiceServer interface {\n\tCreate(context.Context, *CreateDesignatorRequest) (*CreateDesignatorResponse, error)\n\tGet(context.Context, *GetDesignatorRequest) (*GetDesignatorResponse, error)\n\tUpdate(context.Context, *UpdateDesignatorRequest) (*UpdateDesignatorResponse, error)\n\tSearch(context.Context, *SearchDesignatorsRequest) (*SearchDesignatorsResponse, error)\n\tmustEmbedUnimplementedDesignatorsServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:DesignatorsServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "DesignatorsServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["DesignatorsServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:DesignatorsServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["DesignatorsServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [21448], "all_end_bytes": [21873], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "Create", "CreateDesignatorRequest", "CreateDesignatorResponse", "DesignatorsServiceServer", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "context.Context"], "header_context_minimal": "package v0\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#46", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#48"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#48", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 48, "start_line": 503, "end_line": 509, "text": "// UnimplementedDesignatorsServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedDesignatorsServiceServer struct{}\n", "n_tokens": 54, "primary_symbol": "UnimplementedDesignatorsServiceServer", "primary_kind": "type", "primary_span": [503, 509], "def_symbols": [], "symbols": ["UnimplementedDesignatorsServiceServer", "must", "embedded", "have", "forward", "compatible", "implementations", "NOTE", "this", "should", "value", "instead", "pointer", "avoid", "nil", "dereference", "when", "methods", "are", "called", "type", "struct"], "doc_head": "// UnimplementedDesignatorsServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedDesignatorsServiceServer struct{}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnimplementedDesignatorsServiceServer (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnimplementedDesignatorsServiceServer", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UnimplementedDesignatorsServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnimplementedDesignatorsServiceServer (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnimplementedDesignatorsServiceServer"], "all_type_kinds": ["struct"], "all_start_bytes": [22112], "all_end_bytes": [22158], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedDesignatorsServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#47", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#49"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#49", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 49, "start_line": 510, "end_line": 512, "text": "func (UnimplementedDesignatorsServiceServer) Create(context.Context, *CreateDesignatorRequest) (*CreateDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [510, 512], "def_symbols": [], "symbols": ["Create", "func", "UnimplementedDesignatorsServiceServer", "context", "Context", "CreateDesignatorRequest", "CreateDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedDesignatorsServiceServer) Create(context.Context, *CreateDesignatorRequest) (*CreateDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Create/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "Create", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Create/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [22160], "all_end_bytes": [22374], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Create", "CreateDesignatorRequest", "CreateDesignatorResponse", "Errorf", "Unimplemented", "UnimplementedDesignatorsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#48", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#50"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#50", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 50, "start_line": 513, "end_line": 515, "text": "func (UnimplementedDesignatorsServiceServer) Get(context.Context, *GetDesignatorRequest) (*GetDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [513, 515], "def_symbols": [], "symbols": ["Get", "func", "UnimplementedDesignatorsServiceServer", "context", "Context", "GetDesignatorRequest", "GetDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedDesignatorsServiceServer) Get(context.Context, *GetDesignatorRequest) (*GetDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Get/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "Get", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Get/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [22375], "all_end_bytes": [22577], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Unimplemented", "UnimplementedDesignatorsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#49", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#51"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#51", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 51, "start_line": 516, "end_line": 518, "text": "func (UnimplementedDesignatorsServiceServer) Update(context.Context, *UpdateDesignatorRequest) (*UpdateDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [516, 518], "def_symbols": [], "symbols": ["Update", "func", "UnimplementedDesignatorsServiceServer", "context", "Context", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedDesignatorsServiceServer) Update(context.Context, *UpdateDesignatorRequest) (*UpdateDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Update/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "Update", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Update/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [22578], "all_end_bytes": [22792], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Unimplemented", "UnimplementedDesignatorsServiceServer", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#50", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#52"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#52", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 52, "start_line": 519, "end_line": 521, "text": "func (UnimplementedDesignatorsServiceServer) Search(context.Context, *SearchDesignatorsRequest) (*SearchDesignatorsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [519, 521], "def_symbols": [], "symbols": ["Search", "func", "UnimplementedDesignatorsServiceServer", "context", "Context", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedDesignatorsServiceServer) Search(context.Context, *SearchDesignatorsRequest) (*SearchDesignatorsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Search/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "Search", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Search/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [22793], "all_end_bytes": [23009], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "Unimplemented", "UnimplementedDesignatorsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#51", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#53"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#53", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 53, "start_line": 522, "end_line": 522, "text": "func (UnimplementedDesignatorsServiceServer) mustEmbedUnimplementedDesignatorsServiceServer() {}", "n_tokens": 19, "primary_symbol": "mustEmbedUnimplementedDesignatorsServiceServer", "primary_kind": "method", "primary_span": [522, 522], "def_symbols": [], "symbols": ["mustEmbedUnimplementedDesignatorsServiceServer", "func", "UnimplementedDesignatorsServiceServer"], "doc_head": "func (UnimplementedDesignatorsServiceServer) mustEmbedUnimplementedDesignatorsServiceServer() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).mustEmbedUnimplementedDesignatorsServiceServer/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "mustEmbedUnimplementedDesignatorsServiceServer", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["mustEmbedUnimplementedDesignatorsServiceServer"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).mustEmbedUnimplementedDesignatorsServiceServer/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [23010], "all_end_bytes": [23106], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedDesignatorsServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#52", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#54"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#54", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 54, "start_line": 523, "end_line": 524, "text": "func (UnimplementedDesignatorsServiceServer) testEmbeddedByValue()                            {}\n", "n_tokens": 16, "primary_symbol": "testEmbeddedByValue", "primary_kind": "method", "primary_span": [523, 524], "def_symbols": [], "symbols": ["testEmbeddedByValue", "func", "UnimplementedDesignatorsServiceServer"], "doc_head": "func (UnimplementedDesignatorsServiceServer) testEmbeddedByValue()                            {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).testEmbeddedByValue/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "testEmbeddedByValue", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["testEmbeddedByValue"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).testEmbeddedByValue/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [23107], "all_end_bytes": [23203], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedDesignatorsServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#53", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#55"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#55", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 55, "start_line": 525, "end_line": 531, "text": "// UnsafeDesignatorsServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to DesignatorsServiceServer will\n// result in compilation errors.\ntype UnsafeDesignatorsServiceServer interface {\n\tmustEmbedUnimplementedDesignatorsServiceServer()\n}\n", "n_tokens": 63, "primary_symbol": "UnsafeDesignatorsServiceServer", "primary_kind": "type", "primary_span": [525, 531], "def_symbols": [], "symbols": ["UnsafeDesignatorsServiceServer", "may", "embedded", "opt", "out", "forward", "compatibility", "for", "this", "service", "Use", "interface", "not", "recommended", "added", "methods", "DesignatorsServiceServer", "will", "result", "compilation", "errors", "type", "mustEmbedUnimplementedDesignatorsServiceServer"], "doc_head": "// UnsafeDesignatorsServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to DesignatorsServiceServer will\n// result in compilation errors.\ntype UnsafeDesignatorsServiceServer interface {\n\tmustEmbedUnimplementedDesignatorsServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnsafeDesignatorsServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnsafeDesignatorsServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["UnsafeDesignatorsServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnsafeDesignatorsServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnsafeDesignatorsServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [23442], "all_end_bytes": [23536], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnsafeDesignatorsServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#54", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#56"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#56", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 56, "start_line": 532, "end_line": 542, "text": "func RegisterDesignatorsServiceServer(s grpc.ServiceRegistrar, srv DesignatorsServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedDesignatorsServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&DesignatorsService_ServiceDesc, srv)\n}\n", "n_tokens": 126, "primary_symbol": "RegisterDesignatorsServiceServer", "primary_kind": "function", "primary_span": [532, 542], "def_symbols": [], "symbols": ["RegisterDesignatorsServiceServer", "func", "grpc", "ServiceRegistrar", "srv", "DesignatorsServiceServer", "the", "following", "call", "pancis", "indicates", "UnimplementedDesignatorsServiceServer", "was", "embedded", "pointer", "and", "nil", "This", "will", "cause", "panics", "unimplemented", "method", "ever", "invoked", "test", "this", "initialization", "time", "prevent", "from", "happening", "runtime", "later", "due", "interface", "testEmbeddedByValue", "RegisterService", "DesignatorsService_ServiceDesc"], "doc_head": "func RegisterDesignatorsServiceServer(s grpc.ServiceRegistrar, srv DesignatorsServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedDesignatorsServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&DesignatorsService_ServiceDesc, srv)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:RegisterDesignatorsServiceServer/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "RegisterDesignatorsServiceServer", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["RegisterDesignatorsServiceServer"], "all_kinds": ["function"], "all_ast_paths": ["go:function:RegisterDesignatorsServiceServer/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [23538], "all_end_bytes": [24078], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["DesignatorsServiceServer", "DesignatorsService_ServiceDesc", "RegisterDesignatorsServiceServer", "RegisterService", "ServiceRegistrar", "grpc.ServiceRegistrar", "s.RegisterService", "t.testEmbeddedByValue"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#55", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#57"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#57", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 57, "start_line": 543, "end_line": 560, "text": "func _DesignatorsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Create(ctx, req.(*CreateDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 159, "primary_symbol": "_DesignatorsService_Create_Handler", "primary_kind": "function", "primary_span": [543, 560], "def_symbols": [], "symbols": ["_DesignatorsService_Create_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "CreateDesignatorRequest", "err", "nil", "return", "DesignatorsServiceServer", "Create", "info", "UnaryServerInfo", "Server", "FullMethod", "DesignatorsService_Create_FullMethodName", "handler", "req"], "doc_head": "func _DesignatorsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Create(ctx, req.(*CreateDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_DesignatorsService_Create_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_DesignatorsService_Create_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_DesignatorsService_Create_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_DesignatorsService_Create_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [24080], "all_end_bytes": [24745], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "Create", "CreateDesignatorRequest", "DesignatorsServiceServer", "DesignatorsService_Create_FullMethodName", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#56", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#58"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#58", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 58, "start_line": 561, "end_line": 578, "text": "func _DesignatorsService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Get(ctx, req.(*GetDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 159, "primary_symbol": "_DesignatorsService_Get_Handler", "primary_kind": "function", "primary_span": [561, 578], "def_symbols": [], "symbols": ["_DesignatorsService_Get_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "GetDesignatorRequest", "err", "nil", "return", "DesignatorsServiceServer", "Get", "info", "UnaryServerInfo", "Server", "FullMethod", "DesignatorsService_Get_FullMethodName", "handler", "req"], "doc_head": "func _DesignatorsService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Get(ctx, req.(*GetDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_DesignatorsService_Get_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_DesignatorsService_Get_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_DesignatorsService_Get_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_DesignatorsService_Get_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [24747], "all_end_bytes": [25394], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "DesignatorsServiceServer", "DesignatorsService_Get_FullMethodName", "FullMethod", "Get", "GetDesignatorRequest", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#57", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#59"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#59", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 59, "start_line": 579, "end_line": 596, "text": "func _DesignatorsService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Update(ctx, req.(*UpdateDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 160, "primary_symbol": "_DesignatorsService_Update_Handler", "primary_kind": "function", "primary_span": [579, 596], "def_symbols": [], "symbols": ["_DesignatorsService_Update_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "UpdateDesignatorRequest", "err", "nil", "return", "DesignatorsServiceServer", "Update", "info", "UnaryServerInfo", "Server", "FullMethod", "DesignatorsService_Update_FullMethodName", "handler", "req"], "doc_head": "func _DesignatorsService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Update(ctx, req.(*UpdateDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_DesignatorsService_Update_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_DesignatorsService_Update_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_DesignatorsService_Update_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_DesignatorsService_Update_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [25396], "all_end_bytes": [26061], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "DesignatorsServiceServer", "DesignatorsService_Update_FullMethodName", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "Update", "UpdateDesignatorRequest", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#58", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#60"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#60", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go", "rel_path": "pkg/grpc/airlines/v0/airlines_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 60, "start_line": 597, "end_line": 642, "text": "func _DesignatorsService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchDesignatorsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Search(ctx, req.(*SearchDesignatorsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\n// DesignatorsService_ServiceDesc is the grpc.ServiceDesc for DesignatorsService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar DesignatorsService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airlines.v0.DesignatorsService\",\n\tHandlerType: (*DesignatorsServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Create\",\n\t\t\tHandler:    _DesignatorsService_Create_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _DesignatorsService_Get_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Update\",\n\t\t\tHandler:    _DesignatorsService_Update_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Search\",\n\t\t\tHandler:    _DesignatorsService_Search_Handler,\n\t\t},\n\t},\n\tStreams:  []grpc.StreamDesc{},\n\tMetadata: \"airlines.proto\",\n}\n", "n_tokens": 369, "primary_symbol": "_DesignatorsService_Search_Handler", "primary_kind": "function", "primary_span": [597, 642], "def_symbols": [], "symbols": ["_DesignatorsService_Search_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "SearchDesignatorsRequest", "err", "nil", "return", "DesignatorsServiceServer", "Search", "info", "UnaryServerInfo", "Server", "FullMethod", "DesignatorsService_Search_FullMethodName", "handler", "req", "DesignatorsService_ServiceDesc", "the", "ServiceDesc", "for", "DesignatorsService", "service", "only", "intended", "direct", "use", "with", "RegisterService", "and", "not", "introspected", "modified", "even", "copy", "var", "ServiceName", "aviation", "airlines", "HandlerType", "Methods", "MethodDesc", "MethodName", "Create", "Handler", "_DesignatorsService_Create_Handler", "Get", "_DesignatorsService_Get_Handler", "Update", "_DesignatorsService_Update_Handler", "Streams", "StreamDesc", "Metadata", "proto"], "doc_head": "func _DesignatorsService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchDesignatorsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Search(ctx, req.(*SearchDesignatorsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n// DesignatorsService_ServiceDesc is the grpc.ServiceDesc for DesignatorsService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar DesignatorsService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airlines.v0.DesignatorsService\",\n\tHandlerType: (*DesignatorsServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Create\",\n\t\t\tHandler:    _DesignatorsService_Create_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Get\",", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_DesignatorsService_Search_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_DesignatorsService_Search_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_DesignatorsService_Search_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_DesignatorsService_Search_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [26063], "all_end_bytes": [26730], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "DesignatorsServiceServer", "DesignatorsService_Search_FullMethodName", "DesignatorsService_ServiceDesc", "FullMethod", "Handler", "HandlerType", "Metadata", "MethodDesc", "MethodName", "Methods", "Search", "SearchDesignatorsRequest", "Server", "ServiceDesc", "ServiceName", "StreamDesc", "Streams", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.MethodDesc", "grpc.ServiceDesc", "grpc.StreamDesc", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airlines/v0/airlines_grpc.pb.go#59"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/pb.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/pb.go", "rel_path": "pkg/grpc/airports/v0/pb.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 6, "text": "package v0\n\n// Generate gRPC client and server auto-generated code\n//go:generate protoc --proto_path=. --go_out=. --go_opt=Mairports.proto=.;v0 airports.proto\n//go:generate protoc --proto_path=. --go-grpc_out=. --go-grpc_opt=Mairports.proto=.;v0 airports.proto\n", "n_tokens": 75, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 6], "def_symbols": [], "symbols": ["package", "Generate", "gRPC", "client", "and", "server", "auto", "generated", "code", "generate", "protoc", "proto_path", "go_out", "go_opt", "Mairports", "proto", "airports", "grpc_out", "grpc_opt"], "doc_head": "package v0\n// Generate gRPC client and server auto-generated code\n//go:generate protoc --proto_path=. --go_out=. --go_opt=Mairports.proto=.;v0 airports.proto\n//go:generate protoc --proto_path=. --go-grpc_out=. --go-grpc_opt=Mairports.proto=.;v0 airports.proto", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 6, "text": "// Code generated by protoc-gen-go-grpc. DO NOT EDIT.\n// versions:\n// - protoc-gen-go-grpc v1.5.1\n// - protoc             v3.21.12\n// source: airports.proto\n", "n_tokens": 51, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 6], "def_symbols": [], "symbols": ["Code", "generated", "protoc", "gen", "grpc", "NOT", "EDIT", "versions", "source", "airports", "proto"], "doc_head": "// Code generated by protoc-gen-go-grpc. DO NOT EDIT.\n// versions:\n// - protoc-gen-go-grpc v1.5.1\n// - protoc             v3.21.12\n// source: airports.proto", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 7, "end_line": 8, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [7, 8], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 9, "end_line": 32, "text": "import (\n\tcontext \"context\"\n\tgrpc \"google.golang.org/grpc\"\n\tcodes \"google.golang.org/grpc/codes\"\n\tstatus \"google.golang.org/grpc/status\"\n)\n\n// This is a compile-time assertion to ensure that this generated file\n// is compatible with the grpc package it is being compiled against.\n// Requires gRPC-Go v1.64.0 or later.\nconst _ = grpc.SupportPackageIsVersion9\n\nconst (\n\tAirportsService_Get_FullMethodName                  = \"/aviation.airports.v0.AirportsService/Get\"\n\tAirportsService_BatchGet_FullMethodName             = \"/aviation.airports.v0.AirportsService/BatchGet\"\n\tAirportsService_GetByCity_FullMethodName            = \"/aviation.airports.v0.AirportsService/GetByCity\"\n\tAirportsService_UploadImage_FullMethodName          = \"/aviation.airports.v0.AirportsService/UploadImage\"\n\tAirportsService_Search_FullMethodName               = \"/aviation.airports.v0.AirportsService/Search\"\n\tAirportsService_Create_FullMethodName               = \"/aviation.airports.v0.AirportsService/Create\"\n\tAirportsService_Update_FullMethodName               = \"/aviation.airports.v0.AirportsService/Update\"\n\tAirportsService_BatchGetByDesignator_FullMethodName = \"/aviation.airports.v0.AirportsService/BatchGetByDesignator\"\n\tAirportsService_GetByDesignator_FullMethodName      = \"/aviation.airports.v0.AirportsService/GetByDesignator\"\n)\n", "n_tokens": 329, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 32], "def_symbols": [], "symbols": ["import", "context", "grpc", "google", "golang", "org", "codes", "status", "This", "compile", "time", "assertion", "ensure", "that", "this", "generated", "file", "compatible", "with", "the", "package", "being", "compiled", "against", "Requires", "gRPC", "later", "const", "SupportPackageIsVersion9", "AirportsService_Get_FullMethodName", "aviation", "airports", "AirportsService", "Get", "AirportsService_BatchGet_FullMethodName", "BatchGet", "AirportsService_GetByCity_FullMethodName", "GetByCity", "AirportsService_UploadImage_FullMethodName", "UploadImage", "AirportsService_Search_FullMethodName", "Search", "AirportsService_Create_FullMethodName", "Create", "AirportsService_Update_FullMethodName", "Update", "AirportsService_BatchGetByDesignator_FullMethodName", "BatchGetByDesignator", "AirportsService_GetByDesignator_FullMethodName", "GetByDesignator"], "doc_head": "import (\n\tcontext \"context\"\n\tgrpc \"google.golang.org/grpc\"\n\tcodes \"google.golang.org/grpc/codes\"\n\tstatus \"google.golang.org/grpc/status\"\n)\n// This is a compile-time assertion to ensure that this generated file\n// is compatible with the grpc package it is being compiled against.\n// Requires gRPC-Go v1.64.0 or later.\nconst _ = grpc.SupportPackageIsVersion9\nconst (\n\tAirportsService_Get_FullMethodName                  = \"/aviation.airports.v0.AirportsService/Get\"\n\tAirportsService_BatchGet_FullMethodName             = \"/aviation.airports.v0.AirportsService/BatchGet\"\n\tAirportsService_GetByCity_FullMethodName            = \"/aviation.airports.v0.AirportsService/GetByCity\"\n\tAirportsService_UploadImage_FullMethodName          = \"/aviation.airports.v0.AirportsService/UploadImage\"\n\tAirportsService_Search_FullMethodName               = \"/aviation.airports.v0.AirportsService/Search\"\n\tAirportsService_Create_FullMethodName               = \"/aviation.airports.v0.AirportsService/Create\"\n\tAirportsService_Update_FullMethodName               = \"/aviation.airports.v0.AirportsService/Update\"", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_BatchGetByDesignator_FullMethodName", "AirportsService_BatchGet_FullMethodName", "AirportsService_Create_FullMethodName", "AirportsService_GetByCity_FullMethodName", "AirportsService_GetByDesignator_FullMethodName", "AirportsService_Get_FullMethodName", "AirportsService_Search_FullMethodName", "AirportsService_Update_FullMethodName", "AirportsService_UploadImage_FullMethodName", "SupportPackageIsVersion9", "grpc.SupportPackageIsVersion9"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 33, "end_line": 47, "text": "// AirportsServiceClient is the client API for AirportsService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype AirportsServiceClient interface {\n\tGet(ctx context.Context, in *AirportDetailsRequest, opts ...grpc.CallOption) (*AirportDetailsResponse, error)\n\tBatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error)\n\tGetByCity(ctx context.Context, in *AirportByCityRequest, opts ...grpc.CallOption) (*BatchGetResponse, error)\n\tUploadImage(ctx context.Context, opts ...grpc.CallOption) (grpc.ClientStreamingClient[UploadImageRequest, UploadImageResponse], error)\n\tSearch(ctx context.Context, in *SearchAirportsRequest, opts ...grpc.CallOption) (*SearchAirportsResponse, error)\n\tCreate(ctx context.Context, in *CreateAirportRequest, opts ...grpc.CallOption) (*CreateAirportResponse, error)\n\tUpdate(ctx context.Context, in *UpdateAirportRequest, opts ...grpc.CallOption) (*UpdateAirportResponse, error)\n\tBatchGetByDesignator(ctx context.Context, in *BatchGetByDesignatorRequest, opts ...grpc.CallOption) (*BatchGetByDesignatorResponse, error)\n\tGetByDesignator(ctx context.Context, in *GetByDesignatorRequest, opts ...grpc.CallOption) (*GetByDesignatorResponse, error)\n}\n", "n_tokens": 308, "primary_symbol": "AirportsServiceClient", "primary_kind": "type", "primary_span": [33, 47], "def_symbols": [], "symbols": ["AirportsServiceClient", "the", "client", "API", "for", "AirportsService", "service", "For", "semantics", "around", "ctx", "use", "and", "closing", "ending", "streaming", "RPCs", "please", "refer", "https", "pkg", "dev", "google", "golang", "org", "grpc", "tab", "doc", "ClientConn", "NewStream", "type", "interface", "Get", "context", "Context", "AirportDetailsRequest", "opts", "CallOption", "AirportDetailsResponse", "error", "BatchGet", "BatchGetRequest", "BatchGetResponse", "GetByCity", "AirportByCityRequest", "UploadImage", "ClientStreamingClient", "UploadImageRequest", "UploadImageResponse", "Search", "SearchAirportsRequest", "SearchAirportsResponse", "Create", "CreateAirportRequest", "CreateAirportResponse", "Update", "UpdateAirportRequest", "UpdateAirportResponse", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse"], "doc_head": "// AirportsServiceClient is the client API for AirportsService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype AirportsServiceClient interface {\n\tGet(ctx context.Context, in *AirportDetailsRequest, opts ...grpc.CallOption) (*AirportDetailsResponse, error)\n\tBatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error)\n\tGetByCity(ctx context.Context, in *AirportByCityRequest, opts ...grpc.CallOption) (*BatchGetResponse, error)\n\tUploadImage(ctx context.Context, opts ...grpc.CallOption) (grpc.ClientStreamingClient[UploadImageRequest, UploadImageResponse], error)\n\tSearch(ctx context.Context, in *SearchAirportsRequest, opts ...grpc.CallOption) (*SearchAirportsResponse, error)\n\tCreate(ctx context.Context, in *CreateAirportRequest, opts ...grpc.CallOption) (*CreateAirportResponse, error)\n\tUpdate(ctx context.Context, in *UpdateAirportRequest, opts ...grpc.CallOption) (*UpdateAirportResponse, error)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:AirportsServiceClient (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirportsServiceClient", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["AirportsServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirportsServiceClient (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirportsServiceClient"], "all_type_kinds": ["interface"], "all_start_bytes": [1724], "all_end_bytes": [2823], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportByCityRequest", "AirportDetailsRequest", "AirportDetailsResponse", "AirportsServiceClient", "BatchGet", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "BatchGetRequest", "BatchGetResponse", "CallOption", "ClientStreamingClient", "Context", "Create", "CreateAirportRequest", "CreateAirportResponse", "Get", "GetByCity", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "Search", "SearchAirportsRequest", "SearchAirportsResponse", "Update", "UpdateAirportRequest", "UpdateAirportResponse", "UploadImage", "UploadImageRequest", "UploadImageResponse", "context.Context", "grpc.CallOption", "grpc.ClientStreamingClient"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 48, "end_line": 51, "text": "type airportsServiceClient struct {\n\tcc grpc.ClientConnInterface\n}\n", "n_tokens": 13, "primary_symbol": "airportsServiceClient", "primary_kind": "type", "primary_span": [48, 51], "def_symbols": [], "symbols": ["type", "airportsServiceClient", "struct", "grpc", "ClientConnInterface"], "doc_head": "type airportsServiceClient struct {\n\tcc grpc.ClientConnInterface\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:airportsServiceClient (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "airportsServiceClient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["airportsServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:airportsServiceClient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["airportsServiceClient"], "all_type_kinds": ["struct"], "all_start_bytes": [2830], "all_end_bytes": [2891], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["ClientConnInterface", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 52, "end_line": 55, "text": "func NewAirportsServiceClient(cc grpc.ClientConnInterface) AirportsServiceClient {\n\treturn &airportsServiceClient{cc}\n}\n", "n_tokens": 27, "primary_symbol": "NewAirportsServiceClient", "primary_kind": "function", "primary_span": [52, 55], "def_symbols": [], "symbols": ["NewAirportsServiceClient", "func", "grpc", "ClientConnInterface", "AirportsServiceClient", "return", "airportsServiceClient"], "doc_head": "func NewAirportsServiceClient(cc grpc.ClientConnInterface) AirportsServiceClient {\n\treturn &airportsServiceClient{cc}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewAirportsServiceClient/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "NewAirportsServiceClient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewAirportsServiceClient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewAirportsServiceClient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2893], "all_end_bytes": [3012], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsServiceClient", "ClientConnInterface", "NewAirportsServiceClient", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 56, "end_line": 65, "text": "func (c *airportsServiceClient) Get(ctx context.Context, in *AirportDetailsRequest, opts ...grpc.CallOption) (*AirportDetailsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(AirportDetailsResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 99, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [56, 65], "def_symbols": [], "symbols": ["Get", "func", "airportsServiceClient", "ctx", "context", "Context", "AirportDetailsRequest", "opts", "grpc", "CallOption", "AirportDetailsResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirportsService_Get_FullMethodName", "nil", "return"], "doc_head": "func (c *airportsServiceClient) Get(ctx context.Context, in *AirportDetailsRequest, opts ...grpc.CallOption) (*AirportDetailsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(AirportDetailsResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airportsServiceClient).Get/complete", "package": "v0", "node_kind": "method", "receiver": "c *airportsServiceClient", "function_name": "", "method_name": "Get", "type_name": "airportsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airportsServiceClient).Get/complete"], "all_roles": ["complete"], "all_receivers": ["c *airportsServiceClient"], "all_type_names": ["airportsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [3014], "all_end_bytes": [3396], "primary_index": 0, "all_receivers_normalized": ["(*airportsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportDetailsRequest", "AirportDetailsResponse", "AirportsService_Get_FullMethodName", "CallOption", "Context", "Get", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airportsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 66, "end_line": 75, "text": "func (c *airportsServiceClient) BatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_BatchGet_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 101, "primary_symbol": "BatchGet", "primary_kind": "method", "primary_span": [66, 75], "def_symbols": [], "symbols": ["BatchGet", "func", "airportsServiceClient", "ctx", "context", "Context", "BatchGetRequest", "opts", "grpc", "CallOption", "BatchGetResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirportsService_BatchGet_FullMethodName", "nil", "return"], "doc_head": "func (c *airportsServiceClient) BatchGet(ctx context.Context, in *BatchGetRequest, opts ...grpc.CallOption) (*BatchGetResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_BatchGet_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airportsServiceClient).BatchGet/complete", "package": "v0", "node_kind": "method", "receiver": "c *airportsServiceClient", "function_name": "", "method_name": "BatchGet", "type_name": "airportsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["BatchGet"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airportsServiceClient).BatchGet/complete"], "all_roles": ["complete"], "all_receivers": ["c *airportsServiceClient"], "all_type_names": ["airportsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [3398], "all_end_bytes": [3772], "primary_index": 0, "all_receivers_normalized": ["(*airportsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_BatchGet_FullMethodName", "BatchGet", "BatchGetRequest", "BatchGetResponse", "CallOption", "Context", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airportsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 76, "end_line": 85, "text": "func (c *airportsServiceClient) GetByCity(ctx context.Context, in *AirportByCityRequest, opts ...grpc.CallOption) (*BatchGetResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_GetByCity_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 103, "primary_symbol": "GetByCity", "primary_kind": "method", "primary_span": [76, 85], "def_symbols": [], "symbols": ["GetByCity", "func", "airportsServiceClient", "ctx", "context", "Context", "AirportByCityRequest", "opts", "grpc", "CallOption", "BatchGetResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirportsService_GetByCity_FullMethodName", "nil", "return"], "doc_head": "func (c *airportsServiceClient) GetByCity(ctx context.Context, in *AirportByCityRequest, opts ...grpc.CallOption) (*BatchGetResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_GetByCity_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airportsServiceClient).GetByCity/complete", "package": "v0", "node_kind": "method", "receiver": "c *airportsServiceClient", "function_name": "", "method_name": "GetByCity", "type_name": "airportsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByCity"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airportsServiceClient).GetByCity/complete"], "all_roles": ["complete"], "all_receivers": ["c *airportsServiceClient"], "all_type_names": ["airportsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [3774], "all_end_bytes": [4155], "primary_index": 0, "all_receivers_normalized": ["(*airportsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportByCityRequest", "AirportsService_GetByCity_FullMethodName", "BatchGetResponse", "CallOption", "Context", "GetByCity", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airportsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 86, "end_line": 95, "text": "func (c *airportsServiceClient) UploadImage(ctx context.Context, opts ...grpc.CallOption) (grpc.ClientStreamingClient[UploadImageRequest, UploadImageResponse], error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tstream, err := c.cc.NewStream(ctx, &AirportsService_ServiceDesc.Streams[0], AirportsService_UploadImage_FullMethodName, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tx := &grpc.GenericClientStream[UploadImageRequest, UploadImageResponse]{ClientStream: stream}\n\treturn x, nil\n}\n", "n_tokens": 127, "primary_symbol": "UploadImage", "primary_kind": "method", "primary_span": [86, 95], "def_symbols": [], "symbols": ["UploadImage", "func", "airportsServiceClient", "ctx", "context", "Context", "opts", "grpc", "CallOption", "ClientStreamingClient", "UploadImageRequest", "UploadImageResponse", "error", "cOpts", "append", "StaticMethod", "stream", "err", "NewStream", "AirportsService_ServiceDesc", "Streams", "AirportsService_UploadImage_FullMethodName", "nil", "return", "GenericClientStream", "ClientStream"], "doc_head": "func (c *airportsServiceClient) UploadImage(ctx context.Context, opts ...grpc.CallOption) (grpc.ClientStreamingClient[UploadImageRequest, UploadImageResponse], error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tstream, err := c.cc.NewStream(ctx, &AirportsService_ServiceDesc.Streams[0], AirportsService_UploadImage_FullMethodName, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tx := &grpc.GenericClientStream[UploadImageRequest, UploadImageResponse]{ClientStream: stream}\n\treturn x, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airportsServiceClient).UploadImage/complete", "package": "v0", "node_kind": "method", "receiver": "c *airportsServiceClient", "function_name": "", "method_name": "UploadImage", "type_name": "airportsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["UploadImage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airportsServiceClient).UploadImage/complete"], "all_roles": ["complete"], "all_receivers": ["c *airportsServiceClient"], "all_type_names": ["airportsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [4157], "all_end_bytes": [4672], "primary_index": 0, "all_receivers_normalized": ["(*airportsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_ServiceDesc", "AirportsService_ServiceDesc.Streams", "AirportsService_UploadImage_FullMethodName", "CallOption", "ClientStream", "ClientStreamingClient", "Context", "GenericClientStream", "NewStream", "StaticMethod", "Streams", "UploadImage", "UploadImageRequest", "UploadImageResponse", "c.cc", "context.Context", "grpc.CallOption", "grpc.ClientStreamingClient", "grpc.GenericClientStream", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airportsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 96, "end_line": 98, "text": "// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.\ntype AirportsService_UploadImageClient = grpc.ClientStreamingClient[UploadImageRequest, UploadImageResponse]\n", "n_tokens": 45, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [96, 98], "def_symbols": [], "symbols": ["This", "type", "alias", "provided", "for", "backwards", "compatibility", "with", "existing", "code", "that", "references", "the", "prior", "non", "generic", "stream", "name", "AirportsService_UploadImageClient", "grpc", "ClientStreamingClient", "UploadImageRequest", "UploadImageResponse"], "doc_head": "// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.\ntype AirportsService_UploadImageClient = grpc.ClientStreamingClient[UploadImageRequest, UploadImageResponse]", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:block", "package": "v0", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_UploadImageClient", "ClientStreamingClient", "UploadImageRequest", "UploadImageResponse", "grpc.ClientStreamingClient"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 99, "end_line": 108, "text": "func (c *airportsServiceClient) Search(ctx context.Context, in *SearchAirportsRequest, opts ...grpc.CallOption) (*SearchAirportsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchAirportsResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [99, 108], "def_symbols": [], "symbols": ["Search", "func", "airportsServiceClient", "ctx", "context", "Context", "SearchAirportsRequest", "opts", "grpc", "CallOption", "SearchAirportsResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirportsService_Search_FullMethodName", "nil", "return"], "doc_head": "func (c *airportsServiceClient) Search(ctx context.Context, in *SearchAirportsRequest, opts ...grpc.CallOption) (*SearchAirportsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchAirportsResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airportsServiceClient).Search/complete", "package": "v0", "node_kind": "method", "receiver": "c *airportsServiceClient", "function_name": "", "method_name": "Search", "type_name": "airportsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airportsServiceClient).Search/complete"], "all_roles": ["complete"], "all_receivers": ["c *airportsServiceClient"], "all_type_names": ["airportsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [4921], "all_end_bytes": [5309], "primary_index": 0, "all_receivers_normalized": ["(*airportsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_Search_FullMethodName", "CallOption", "Context", "Invoke", "Search", "SearchAirportsRequest", "SearchAirportsResponse", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airportsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 109, "end_line": 118, "text": "func (c *airportsServiceClient) Create(ctx context.Context, in *CreateAirportRequest, opts ...grpc.CallOption) (*CreateAirportResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateAirportResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 97, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [109, 118], "def_symbols": [], "symbols": ["Create", "func", "airportsServiceClient", "ctx", "context", "Context", "CreateAirportRequest", "opts", "grpc", "CallOption", "CreateAirportResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirportsService_Create_FullMethodName", "nil", "return"], "doc_head": "func (c *airportsServiceClient) Create(ctx context.Context, in *CreateAirportRequest, opts ...grpc.CallOption) (*CreateAirportResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateAirportResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airportsServiceClient).Create/complete", "package": "v0", "node_kind": "method", "receiver": "c *airportsServiceClient", "function_name": "", "method_name": "Create", "type_name": "airportsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airportsServiceClient).Create/complete"], "all_roles": ["complete"], "all_receivers": ["c *airportsServiceClient"], "all_type_names": ["airportsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [5311], "all_end_bytes": [5696], "primary_index": 0, "all_receivers_normalized": ["(*airportsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_Create_FullMethodName", "CallOption", "Context", "Create", "CreateAirportRequest", "CreateAirportResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airportsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 119, "end_line": 128, "text": "func (c *airportsServiceClient) Update(ctx context.Context, in *UpdateAirportRequest, opts ...grpc.CallOption) (*UpdateAirportResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateAirportResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 98, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [119, 128], "def_symbols": [], "symbols": ["Update", "func", "airportsServiceClient", "ctx", "context", "Context", "UpdateAirportRequest", "opts", "grpc", "CallOption", "UpdateAirportResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirportsService_Update_FullMethodName", "nil", "return"], "doc_head": "func (c *airportsServiceClient) Update(ctx context.Context, in *UpdateAirportRequest, opts ...grpc.CallOption) (*UpdateAirportResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateAirportResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airportsServiceClient).Update/complete", "package": "v0", "node_kind": "method", "receiver": "c *airportsServiceClient", "function_name": "", "method_name": "Update", "type_name": "airportsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airportsServiceClient).Update/complete"], "all_roles": ["complete"], "all_receivers": ["c *airportsServiceClient"], "all_type_names": ["airportsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [5698], "all_end_bytes": [6083], "primary_index": 0, "all_receivers_normalized": ["(*airportsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_Update_FullMethodName", "CallOption", "Context", "Invoke", "StaticMethod", "Update", "UpdateAirportRequest", "UpdateAirportResponse", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airportsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 129, "end_line": 138, "text": "func (c *airportsServiceClient) BatchGetByDesignator(ctx context.Context, in *BatchGetByDesignatorRequest, opts ...grpc.CallOption) (*BatchGetByDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetByDesignatorResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_BatchGetByDesignator_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 116, "primary_symbol": "BatchGetByDesignator", "primary_kind": "method", "primary_span": [129, 138], "def_symbols": [], "symbols": ["BatchGetByDesignator", "func", "airportsServiceClient", "ctx", "context", "Context", "BatchGetByDesignatorRequest", "opts", "grpc", "CallOption", "BatchGetByDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirportsService_BatchGetByDesignator_FullMethodName", "nil", "return"], "doc_head": "func (c *airportsServiceClient) BatchGetByDesignator(ctx context.Context, in *BatchGetByDesignatorRequest, opts ...grpc.CallOption) (*BatchGetByDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(BatchGetByDesignatorResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_BatchGetByDesignator_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airportsServiceClient).BatchGetByDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "c *airportsServiceClient", "function_name": "", "method_name": "BatchGetByDesignator", "type_name": "airportsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["BatchGetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airportsServiceClient).BatchGetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["c *airportsServiceClient"], "all_type_names": ["airportsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [6085], "all_end_bytes": [6519], "primary_index": 0, "all_receivers_normalized": ["(*airportsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_BatchGetByDesignator_FullMethodName", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "CallOption", "Context", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airportsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#14", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#16", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 16, "start_line": 139, "end_line": 148, "text": "func (c *airportsServiceClient) GetByDesignator(ctx context.Context, in *GetByDesignatorRequest, opts ...grpc.CallOption) (*GetByDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetByDesignatorResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_GetByDesignator_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 109, "primary_symbol": "GetByDesignator", "primary_kind": "method", "primary_span": [139, 148], "def_symbols": [], "symbols": ["GetByDesignator", "func", "airportsServiceClient", "ctx", "context", "Context", "GetByDesignatorRequest", "opts", "grpc", "CallOption", "GetByDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "AirportsService_GetByDesignator_FullMethodName", "nil", "return"], "doc_head": "func (c *airportsServiceClient) GetByDesignator(ctx context.Context, in *GetByDesignatorRequest, opts ...grpc.CallOption) (*GetByDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetByDesignatorResponse)\n\terr := c.cc.Invoke(ctx, AirportsService_GetByDesignator_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*airportsServiceClient).GetByDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "c *airportsServiceClient", "function_name": "", "method_name": "GetByDesignator", "type_name": "airportsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*airportsServiceClient).GetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["c *airportsServiceClient"], "all_type_names": ["airportsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [6521], "all_end_bytes": [6930], "primary_index": 0, "all_receivers_normalized": ["(*airportsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_GetByDesignator_FullMethodName", "CallOption", "Context", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *airportsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#15", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#17"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#17", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 17, "start_line": 149, "end_line": 164, "text": "// AirportsServiceServer is the server API for AirportsService service.\n// All implementations must embed UnimplementedAirportsServiceServer\n// for forward compatibility.\ntype AirportsServiceServer interface {\n\tGet(context.Context, *AirportDetailsRequest) (*AirportDetailsResponse, error)\n\tBatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error)\n\tGetByCity(context.Context, *AirportByCityRequest) (*BatchGetResponse, error)\n\tUploadImage(grpc.ClientStreamingServer[UploadImageRequest, UploadImageResponse]) error\n\tSearch(context.Context, *SearchAirportsRequest) (*SearchAirportsResponse, error)\n\tCreate(context.Context, *CreateAirportRequest) (*CreateAirportResponse, error)\n\tUpdate(context.Context, *UpdateAirportRequest) (*UpdateAirportResponse, error)\n\tBatchGetByDesignator(context.Context, *BatchGetByDesignatorRequest) (*BatchGetByDesignatorResponse, error)\n\tGetByDesignator(context.Context, *GetByDesignatorRequest) (*GetByDesignatorResponse, error)\n\tmustEmbedUnimplementedAirportsServiceServer()\n}\n", "n_tokens": 223, "primary_symbol": "AirportsServiceServer", "primary_kind": "type", "primary_span": [149, 164], "def_symbols": [], "symbols": ["AirportsServiceServer", "the", "server", "API", "for", "AirportsService", "service", "All", "implementations", "must", "embed", "UnimplementedAirportsServiceServer", "forward", "compatibility", "type", "interface", "Get", "context", "Context", "AirportDetailsRequest", "AirportDetailsResponse", "error", "BatchGet", "BatchGetRequest", "BatchGetResponse", "GetByCity", "AirportByCityRequest", "UploadImage", "grpc", "ClientStreamingServer", "UploadImageRequest", "UploadImageResponse", "Search", "SearchAirportsRequest", "SearchAirportsResponse", "Create", "CreateAirportRequest", "CreateAirportResponse", "Update", "UpdateAirportRequest", "UpdateAirportResponse", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "mustEmbedUnimplementedAirportsServiceServer"], "doc_head": "// AirportsServiceServer is the server API for AirportsService service.\n// All implementations must embed UnimplementedAirportsServiceServer\n// for forward compatibility.\ntype AirportsServiceServer interface {\n\tGet(context.Context, *AirportDetailsRequest) (*AirportDetailsResponse, error)\n\tBatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error)\n\tGetByCity(context.Context, *AirportByCityRequest) (*BatchGetResponse, error)\n\tUploadImage(grpc.ClientStreamingServer[UploadImageRequest, UploadImageResponse]) error\n\tSearch(context.Context, *SearchAirportsRequest) (*SearchAirportsResponse, error)\n\tCreate(context.Context, *CreateAirportRequest) (*CreateAirportResponse, error)\n\tUpdate(context.Context, *UpdateAirportRequest) (*UpdateAirportResponse, error)\n\tBatchGetByDesignator(context.Context, *BatchGetByDesignatorRequest) (*BatchGetByDesignatorResponse, error)\n\tGetByDesignator(context.Context, *GetByDesignatorRequest) (*GetByDesignatorResponse, error)\n\tmustEmbedUnimplementedAirportsServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:AirportsServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirportsServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["AirportsServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirportsServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirportsServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [7108], "all_end_bytes": [7950], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportByCityRequest", "AirportDetailsRequest", "AirportDetailsResponse", "AirportsServiceServer", "BatchGet", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "BatchGetRequest", "BatchGetResponse", "ClientStreamingServer", "Context", "Create", "CreateAirportRequest", "CreateAirportResponse", "Get", "GetByCity", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "Search", "SearchAirportsRequest", "SearchAirportsResponse", "Update", "UpdateAirportRequest", "UpdateAirportResponse", "UploadImage", "UploadImageRequest", "UploadImageResponse", "context.Context", "grpc.ClientStreamingServer"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#16", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#18"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#18", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 18, "start_line": 165, "end_line": 171, "text": "// UnimplementedAirportsServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedAirportsServiceServer struct{}\n", "n_tokens": 54, "primary_symbol": "UnimplementedAirportsServiceServer", "primary_kind": "type", "primary_span": [165, 171], "def_symbols": [], "symbols": ["UnimplementedAirportsServiceServer", "must", "embedded", "have", "forward", "compatible", "implementations", "NOTE", "this", "should", "value", "instead", "pointer", "avoid", "nil", "dereference", "when", "methods", "are", "called", "type", "struct"], "doc_head": "// UnimplementedAirportsServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedAirportsServiceServer struct{}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnimplementedAirportsServiceServer (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnimplementedAirportsServiceServer", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UnimplementedAirportsServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnimplementedAirportsServiceServer (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnimplementedAirportsServiceServer"], "all_type_kinds": ["struct"], "all_start_bytes": [8186], "all_end_bytes": [8229], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedAirportsServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#17", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#19"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#19", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 19, "start_line": 172, "end_line": 174, "text": "func (UnimplementedAirportsServiceServer) Get(context.Context, *AirportDetailsRequest) (*AirportDetailsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "n_tokens": 43, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [172, 174], "def_symbols": [], "symbols": ["Get", "func", "UnimplementedAirportsServiceServer", "context", "Context", "AirportDetailsRequest", "AirportDetailsResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirportsServiceServer) Get(context.Context, *AirportDetailsRequest) (*AirportDetailsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Get/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "Get", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Get/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8231], "all_end_bytes": [8432], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["AirportDetailsRequest", "AirportDetailsResponse", "Context", "Errorf", "Get", "Unimplemented", "UnimplementedAirportsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#18", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#20"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#20", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 20, "start_line": 175, "end_line": 177, "text": "func (UnimplementedAirportsServiceServer) BatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method BatchGet not implemented\")\n}", "n_tokens": 45, "primary_symbol": "BatchGet", "primary_kind": "method", "primary_span": [175, 177], "def_symbols": [], "symbols": ["BatchGet", "func", "UnimplementedAirportsServiceServer", "context", "Context", "BatchGetRequest", "BatchGetResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirportsServiceServer) BatchGet(context.Context, *BatchGetRequest) (*BatchGetResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method BatchGet not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).BatchGet/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "BatchGet", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["BatchGet"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).BatchGet/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8433], "all_end_bytes": [8632], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["BatchGet", "BatchGetRequest", "BatchGetResponse", "Context", "Errorf", "Unimplemented", "UnimplementedAirportsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#19", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#21"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#21", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 21, "start_line": 178, "end_line": 180, "text": "func (UnimplementedAirportsServiceServer) GetByCity(context.Context, *AirportByCityRequest) (*BatchGetResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetByCity not implemented\")\n}", "n_tokens": 48, "primary_symbol": "GetByCity", "primary_kind": "method", "primary_span": [178, 180], "def_symbols": [], "symbols": ["GetByCity", "func", "UnimplementedAirportsServiceServer", "context", "Context", "AirportByCityRequest", "BatchGetResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirportsServiceServer) GetByCity(context.Context, *AirportByCityRequest) (*BatchGetResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetByCity not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).GetByCity/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "GetByCity", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByCity"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).GetByCity/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8633], "all_end_bytes": [8839], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["AirportByCityRequest", "BatchGetResponse", "Context", "Errorf", "GetByCity", "Unimplemented", "UnimplementedAirportsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#20", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#22"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#22", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 22, "start_line": 181, "end_line": 183, "text": "func (UnimplementedAirportsServiceServer) UploadImage(grpc.ClientStreamingServer[UploadImageRequest, UploadImageResponse]) error {\n\treturn status.Errorf(codes.Unimplemented, \"method UploadImage not implemented\")\n}", "n_tokens": 43, "primary_symbol": "UploadImage", "primary_kind": "method", "primary_span": [181, 183], "def_symbols": [], "symbols": ["UploadImage", "func", "UnimplementedAirportsServiceServer", "grpc", "ClientStreamingServer", "UploadImageRequest", "UploadImageResponse", "error", "return", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirportsServiceServer) UploadImage(grpc.ClientStreamingServer[UploadImageRequest, UploadImageResponse]) error {\n\treturn status.Errorf(codes.Unimplemented, \"method UploadImage not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).UploadImage/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "UploadImage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["UploadImage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).UploadImage/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8840], "all_end_bytes": [9053], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": ["google.golang.org/grpc", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["ClientStreamingServer", "Errorf", "Unimplemented", "UnimplementedAirportsServiceServer", "UploadImage", "UploadImageRequest", "UploadImageResponse", "codes.Unimplemented", "grpc.ClientStreamingServer", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/grpc\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#21", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#23"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#23", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 23, "start_line": 184, "end_line": 186, "text": "func (UnimplementedAirportsServiceServer) Search(context.Context, *SearchAirportsRequest) (*SearchAirportsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [184, 186], "def_symbols": [], "symbols": ["Search", "func", "UnimplementedAirportsServiceServer", "context", "Context", "SearchAirportsRequest", "SearchAirportsResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirportsServiceServer) Search(context.Context, *SearchAirportsRequest) (*SearchAirportsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Search/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "Search", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Search/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9054], "all_end_bytes": [9261], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Search", "SearchAirportsRequest", "SearchAirportsResponse", "Unimplemented", "UnimplementedAirportsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#22", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#24"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#24", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 24, "start_line": 187, "end_line": 189, "text": "func (UnimplementedAirportsServiceServer) Create(context.Context, *CreateAirportRequest) (*CreateAirportResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "n_tokens": 43, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [187, 189], "def_symbols": [], "symbols": ["Create", "func", "UnimplementedAirportsServiceServer", "context", "Context", "CreateAirportRequest", "CreateAirportResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirportsServiceServer) Create(context.Context, *CreateAirportRequest) (*CreateAirportResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Create/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "Create", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Create/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9262], "all_end_bytes": [9467], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Create", "CreateAirportRequest", "CreateAirportResponse", "Errorf", "Unimplemented", "UnimplementedAirportsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#23", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#25"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#25", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 25, "start_line": 190, "end_line": 192, "text": "func (UnimplementedAirportsServiceServer) Update(context.Context, *UpdateAirportRequest) (*UpdateAirportResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "n_tokens": 43, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [190, 192], "def_symbols": [], "symbols": ["Update", "func", "UnimplementedAirportsServiceServer", "context", "Context", "UpdateAirportRequest", "UpdateAirportResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirportsServiceServer) Update(context.Context, *UpdateAirportRequest) (*UpdateAirportResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Update/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "Update", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Update/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9468], "all_end_bytes": [9673], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Unimplemented", "UnimplementedAirportsServiceServer", "Update", "UpdateAirportRequest", "UpdateAirportResponse", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#24", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#26"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#26", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 26, "start_line": 193, "end_line": 195, "text": "func (UnimplementedAirportsServiceServer) BatchGetByDesignator(context.Context, *BatchGetByDesignatorRequest) (*BatchGetByDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method BatchGetByDesignator not implemented\")\n}", "n_tokens": 57, "primary_symbol": "BatchGetByDesignator", "primary_kind": "method", "primary_span": [193, 195], "def_symbols": [], "symbols": ["BatchGetByDesignator", "func", "UnimplementedAirportsServiceServer", "context", "Context", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirportsServiceServer) BatchGetByDesignator(context.Context, *BatchGetByDesignatorRequest) (*BatchGetByDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method BatchGetByDesignator not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).BatchGetByDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "BatchGetByDesignator", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["BatchGetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).BatchGetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9674], "all_end_bytes": [9921], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["BatchGetByDesignator", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "Context", "Errorf", "Unimplemented", "UnimplementedAirportsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#25", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#27"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#27", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 27, "start_line": 196, "end_line": 198, "text": "func (UnimplementedAirportsServiceServer) GetByDesignator(context.Context, *GetByDesignatorRequest) (*GetByDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetByDesignator not implemented\")\n}", "n_tokens": 53, "primary_symbol": "GetByDesignator", "primary_kind": "method", "primary_span": [196, 198], "def_symbols": [], "symbols": ["GetByDesignator", "func", "UnimplementedAirportsServiceServer", "context", "Context", "GetByDesignatorRequest", "GetByDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedAirportsServiceServer) GetByDesignator(context.Context, *GetByDesignatorRequest) (*GetByDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method GetByDesignator not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).GetByDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "GetByDesignator", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetByDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).GetByDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9922], "all_end_bytes": [10149], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "GetByDesignator", "GetByDesignatorRequest", "GetByDesignatorResponse", "Unimplemented", "UnimplementedAirportsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#26", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#28"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#28", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 28, "start_line": 199, "end_line": 199, "text": "func (UnimplementedAirportsServiceServer) mustEmbedUnimplementedAirportsServiceServer() {}", "n_tokens": 19, "primary_symbol": "mustEmbedUnimplementedAirportsServiceServer", "primary_kind": "method", "primary_span": [199, 199], "def_symbols": [], "symbols": ["mustEmbedUnimplementedAirportsServiceServer", "func", "UnimplementedAirportsServiceServer"], "doc_head": "func (UnimplementedAirportsServiceServer) mustEmbedUnimplementedAirportsServiceServer() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).mustEmbedUnimplementedAirportsServiceServer/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "mustEmbedUnimplementedAirportsServiceServer", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["mustEmbedUnimplementedAirportsServiceServer"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).mustEmbedUnimplementedAirportsServiceServer/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [10150], "all_end_bytes": [10240], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedAirportsServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#27", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#29"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#29", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 29, "start_line": 200, "end_line": 201, "text": "func (UnimplementedAirportsServiceServer) testEmbeddedByValue()                         {}\n", "n_tokens": 16, "primary_symbol": "testEmbeddedByValue", "primary_kind": "method", "primary_span": [200, 201], "def_symbols": [], "symbols": ["testEmbeddedByValue", "func", "UnimplementedAirportsServiceServer"], "doc_head": "func (UnimplementedAirportsServiceServer) testEmbeddedByValue()                         {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).testEmbeddedByValue/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedAirportsServiceServer", "function_name": "", "method_name": "testEmbeddedByValue", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["testEmbeddedByValue"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).testEmbeddedByValue/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedAirportsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [10241], "all_end_bytes": [10331], "primary_index": 0, "all_receivers_normalized": ["UnimplementedAirportsServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedAirportsServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedAirportsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#28", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#30"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#30", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 30, "start_line": 202, "end_line": 208, "text": "// UnsafeAirportsServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to AirportsServiceServer will\n// result in compilation errors.\ntype UnsafeAirportsServiceServer interface {\n\tmustEmbedUnimplementedAirportsServiceServer()\n}\n", "n_tokens": 63, "primary_symbol": "UnsafeAirportsServiceServer", "primary_kind": "type", "primary_span": [202, 208], "def_symbols": [], "symbols": ["UnsafeAirportsServiceServer", "may", "embedded", "opt", "out", "forward", "compatibility", "for", "this", "service", "Use", "interface", "not", "recommended", "added", "methods", "AirportsServiceServer", "will", "result", "compilation", "errors", "type", "mustEmbedUnimplementedAirportsServiceServer"], "doc_head": "// UnsafeAirportsServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to AirportsServiceServer will\n// result in compilation errors.\ntype UnsafeAirportsServiceServer interface {\n\tmustEmbedUnimplementedAirportsServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnsafeAirportsServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnsafeAirportsServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["UnsafeAirportsServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnsafeAirportsServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnsafeAirportsServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [10564], "all_end_bytes": [10652], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnsafeAirportsServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#29", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#31"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#31", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 31, "start_line": 209, "end_line": 219, "text": "func RegisterAirportsServiceServer(s grpc.ServiceRegistrar, srv AirportsServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedAirportsServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&AirportsService_ServiceDesc, srv)\n}\n", "n_tokens": 126, "primary_symbol": "RegisterAirportsServiceServer", "primary_kind": "function", "primary_span": [209, 219], "def_symbols": [], "symbols": ["RegisterAirportsServiceServer", "func", "grpc", "ServiceRegistrar", "srv", "AirportsServiceServer", "the", "following", "call", "pancis", "indicates", "UnimplementedAirportsServiceServer", "was", "embedded", "pointer", "and", "nil", "This", "will", "cause", "panics", "unimplemented", "method", "ever", "invoked", "test", "this", "initialization", "time", "prevent", "from", "happening", "runtime", "later", "due", "interface", "testEmbeddedByValue", "RegisterService", "AirportsService_ServiceDesc"], "doc_head": "func RegisterAirportsServiceServer(s grpc.ServiceRegistrar, srv AirportsServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedAirportsServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&AirportsService_ServiceDesc, srv)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:RegisterAirportsServiceServer/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "RegisterAirportsServiceServer", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["RegisterAirportsServiceServer"], "all_kinds": ["function"], "all_ast_paths": ["go:function:RegisterAirportsServiceServer/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [10654], "all_end_bytes": [11182], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsServiceServer", "AirportsService_ServiceDesc", "RegisterAirportsServiceServer", "RegisterService", "ServiceRegistrar", "grpc.ServiceRegistrar", "s.RegisterService", "t.testEmbeddedByValue"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#30", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#32"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#32", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 32, "start_line": 220, "end_line": 237, "text": "func _AirportsService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(AirportDetailsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).Get(ctx, req.(*AirportDetailsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 159, "primary_symbol": "_AirportsService_Get_Handler", "primary_kind": "function", "primary_span": [220, 237], "def_symbols": [], "symbols": ["_AirportsService_Get_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "AirportDetailsRequest", "err", "nil", "return", "AirportsServiceServer", "Get", "info", "UnaryServerInfo", "Server", "FullMethod", "AirportsService_Get_FullMethodName", "handler", "req"], "doc_head": "func _AirportsService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(AirportDetailsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).Get(ctx, req.(*AirportDetailsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirportsService_Get_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirportsService_Get_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirportsService_Get_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirportsService_Get_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [11184], "all_end_bytes": [11821], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportDetailsRequest", "AirportsServiceServer", "AirportsService_Get_FullMethodName", "Context", "FullMethod", "Get", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#31", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#33"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#33", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 33, "start_line": 238, "end_line": 255, "text": "func _AirportsService_BatchGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(BatchGetRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).BatchGet(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_BatchGet_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).BatchGet(ctx, req.(*BatchGetRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 164, "primary_symbol": "_AirportsService_BatchGet_Handler", "primary_kind": "function", "primary_span": [238, 255], "def_symbols": [], "symbols": ["_AirportsService_BatchGet_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "BatchGetRequest", "err", "nil", "return", "AirportsServiceServer", "BatchGet", "info", "UnaryServerInfo", "Server", "FullMethod", "AirportsService_BatchGet_FullMethodName", "handler", "req"], "doc_head": "func _AirportsService_BatchGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(BatchGetRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).BatchGet(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_BatchGet_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).BatchGet(ctx, req.(*BatchGetRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirportsService_BatchGet_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirportsService_BatchGet_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirportsService_BatchGet_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirportsService_BatchGet_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [11823], "all_end_bytes": [12468], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsServiceServer", "AirportsService_BatchGet_FullMethodName", "BatchGet", "BatchGetRequest", "Context", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#32", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#34"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#34", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 34, "start_line": 256, "end_line": 273, "text": "func _AirportsService_GetByCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(AirportByCityRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).GetByCity(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_GetByCity_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).GetByCity(ctx, req.(*AirportByCityRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 169, "primary_symbol": "_AirportsService_GetByCity_Handler", "primary_kind": "function", "primary_span": [256, 273], "def_symbols": [], "symbols": ["_AirportsService_GetByCity_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "AirportByCityRequest", "err", "nil", "return", "AirportsServiceServer", "GetByCity", "info", "UnaryServerInfo", "Server", "FullMethod", "AirportsService_GetByCity_FullMethodName", "handler", "req"], "doc_head": "func _AirportsService_GetByCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(AirportByCityRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).GetByCity(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_GetByCity_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).GetByCity(ctx, req.(*AirportByCityRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirportsService_GetByCity_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirportsService_GetByCity_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirportsService_GetByCity_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirportsService_GetByCity_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [12470], "all_end_bytes": [13129], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportByCityRequest", "AirportsServiceServer", "AirportsService_GetByCity_FullMethodName", "Context", "FullMethod", "GetByCity", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#33", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#35"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#35", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 35, "start_line": 274, "end_line": 277, "text": "func _AirportsService_UploadImage_Handler(srv interface{}, stream grpc.ServerStream) error {\n\treturn srv.(AirportsServiceServer).UploadImage(&grpc.GenericServerStream[UploadImageRequest, UploadImageResponse]{ServerStream: stream})\n}\n", "n_tokens": 50, "primary_symbol": "_AirportsService_UploadImage_Handler", "primary_kind": "function", "primary_span": [274, 277], "def_symbols": [], "symbols": ["_AirportsService_UploadImage_Handler", "func", "srv", "interface", "stream", "grpc", "ServerStream", "error", "return", "AirportsServiceServer", "UploadImage", "GenericServerStream", "UploadImageRequest", "UploadImageResponse"], "doc_head": "func _AirportsService_UploadImage_Handler(srv interface{}, stream grpc.ServerStream) error {\n\treturn srv.(AirportsServiceServer).UploadImage(&grpc.GenericServerStream[UploadImageRequest, UploadImageResponse]{ServerStream: stream})\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirportsService_UploadImage_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirportsService_UploadImage_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirportsService_UploadImage_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirportsService_UploadImage_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [13131], "all_end_bytes": [13363], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsServiceServer", "GenericServerStream", "ServerStream", "UploadImage", "UploadImageRequest", "UploadImageResponse", "grpc.GenericServerStream", "grpc.ServerStream"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#34", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#36"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#36", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 36, "start_line": 278, "end_line": 280, "text": "// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.\ntype AirportsService_UploadImageServer = grpc.ClientStreamingServer[UploadImageRequest, UploadImageResponse]\n", "n_tokens": 45, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [278, 280], "def_symbols": [], "symbols": ["This", "type", "alias", "provided", "for", "backwards", "compatibility", "with", "existing", "code", "that", "references", "the", "prior", "non", "generic", "stream", "name", "AirportsService_UploadImageServer", "grpc", "ClientStreamingServer", "UploadImageRequest", "UploadImageResponse"], "doc_head": "// This type alias is provided for backwards compatibility with existing code that references the prior non-generic stream type by name.\ntype AirportsService_UploadImageServer = grpc.ClientStreamingServer[UploadImageRequest, UploadImageResponse]", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:block", "package": "v0", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsService_UploadImageServer", "ClientStreamingServer", "UploadImageRequest", "UploadImageResponse", "grpc.ClientStreamingServer"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#35", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#37"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#37", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 37, "start_line": 281, "end_line": 298, "text": "func _AirportsService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchAirportsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).Search(ctx, req.(*SearchAirportsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 159, "primary_symbol": "_AirportsService_Search_Handler", "primary_kind": "function", "primary_span": [281, 298], "def_symbols": [], "symbols": ["_AirportsService_Search_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "SearchAirportsRequest", "err", "nil", "return", "AirportsServiceServer", "Search", "info", "UnaryServerInfo", "Server", "FullMethod", "AirportsService_Search_FullMethodName", "handler", "req"], "doc_head": "func _AirportsService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchAirportsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).Search(ctx, req.(*SearchAirportsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirportsService_Search_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirportsService_Search_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirportsService_Search_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirportsService_Search_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [13612], "all_end_bytes": [14261], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsServiceServer", "AirportsService_Search_FullMethodName", "Context", "FullMethod", "Search", "SearchAirportsRequest", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#36", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#38"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#38", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 38, "start_line": 299, "end_line": 316, "text": "func _AirportsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateAirportRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).Create(ctx, req.(*CreateAirportRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 157, "primary_symbol": "_AirportsService_Create_Handler", "primary_kind": "function", "primary_span": [299, 316], "def_symbols": [], "symbols": ["_AirportsService_Create_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "CreateAirportRequest", "err", "nil", "return", "AirportsServiceServer", "Create", "info", "UnaryServerInfo", "Server", "FullMethod", "AirportsService_Create_FullMethodName", "handler", "req"], "doc_head": "func _AirportsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateAirportRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).Create(ctx, req.(*CreateAirportRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirportsService_Create_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirportsService_Create_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirportsService_Create_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirportsService_Create_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [14263], "all_end_bytes": [14910], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsServiceServer", "AirportsService_Create_FullMethodName", "Context", "Create", "CreateAirportRequest", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#37", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#39"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#39", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 39, "start_line": 317, "end_line": 334, "text": "func _AirportsService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateAirportRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).Update(ctx, req.(*UpdateAirportRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 158, "primary_symbol": "_AirportsService_Update_Handler", "primary_kind": "function", "primary_span": [317, 334], "def_symbols": [], "symbols": ["_AirportsService_Update_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "UpdateAirportRequest", "err", "nil", "return", "AirportsServiceServer", "Update", "info", "UnaryServerInfo", "Server", "FullMethod", "AirportsService_Update_FullMethodName", "handler", "req"], "doc_head": "func _AirportsService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateAirportRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).Update(ctx, req.(*UpdateAirportRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirportsService_Update_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirportsService_Update_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirportsService_Update_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirportsService_Update_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [14912], "all_end_bytes": [15559], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsServiceServer", "AirportsService_Update_FullMethodName", "Context", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "Update", "UpdateAirportRequest", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#38", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#40"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#40", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 40, "start_line": 335, "end_line": 352, "text": "func _AirportsService_BatchGetByDesignator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(BatchGetByDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).BatchGetByDesignator(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_BatchGetByDesignator_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).BatchGetByDesignator(ctx, req.(*BatchGetByDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 182, "primary_symbol": "_AirportsService_BatchGetByDesignator_Handler", "primary_kind": "function", "primary_span": [335, 352], "def_symbols": [], "symbols": ["_AirportsService_BatchGetByDesignator_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "BatchGetByDesignatorRequest", "err", "nil", "return", "AirportsServiceServer", "BatchGetByDesignator", "info", "UnaryServerInfo", "Server", "FullMethod", "AirportsService_BatchGetByDesignator_FullMethodName", "handler", "req"], "doc_head": "func _AirportsService_BatchGetByDesignator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(BatchGetByDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).BatchGetByDesignator(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_BatchGetByDesignator_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).BatchGetByDesignator(ctx, req.(*BatchGetByDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirportsService_BatchGetByDesignator_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirportsService_BatchGetByDesignator_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirportsService_BatchGetByDesignator_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirportsService_BatchGetByDesignator_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [15561], "all_end_bytes": [16278], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsServiceServer", "AirportsService_BatchGetByDesignator_FullMethodName", "BatchGetByDesignator", "BatchGetByDesignatorRequest", "Context", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#39", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#41"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#41", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 41, "start_line": 353, "end_line": 427, "text": "func _AirportsService_GetByDesignator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetByDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).GetByDesignator(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_GetByDesignator_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).GetByDesignator(ctx, req.(*GetByDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\n// AirportsService_ServiceDesc is the grpc.ServiceDesc for AirportsService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar AirportsService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airports.v0.AirportsService\",\n\tHandlerType: (*AirportsServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _AirportsService_Get_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"BatchGet\",\n\t\t\tHandler:    _AirportsService_BatchGet_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetByCity\",\n\t\t\tHandler:    _AirportsService_GetByCity_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Search\",\n\t\t\tHandler:    _AirportsService_Search_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Create\",\n\t\t\tHandler:    _AirportsService_Create_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Update\",\n\t\t\tHandler:    _AirportsService_Update_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"BatchGetByDesignator\",\n\t\t\tHandler:    _AirportsService_BatchGetByDesignator_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"GetByDesignator\",\n\t\t\tHandler:    _AirportsService_GetByDesignator_Handler,\n\t\t},\n\t},\n\tStreams: []grpc.StreamDesc{\n\t\t{\n\t\t\tStreamName:    \"UploadImage\",\n\t\t\tHandler:       _AirportsService_UploadImage_Handler,\n\t\t\tClientStreams: true,\n\t\t},\n\t},\n\tMetadata: \"airports.proto\",\n}\n\nconst (\n\tCitiesService_Search_FullMethodName = \"/aviation.airports.v0.CitiesService/Search\"\n\tCitiesService_Get_FullMethodName    = \"/aviation.airports.v0.CitiesService/Get\"\n\tCitiesService_Create_FullMethodName = \"/aviation.airports.v0.CitiesService/Create\"\n\tCitiesService_Update_FullMethodName = \"/aviation.airports.v0.CitiesService/Update\"\n)\n", "n_tokens": 629, "primary_symbol": "_AirportsService_GetByDesignator_Handler", "primary_kind": "function", "primary_span": [353, 427], "def_symbols": [], "symbols": ["_AirportsService_GetByDesignator_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "GetByDesignatorRequest", "err", "nil", "return", "AirportsServiceServer", "GetByDesignator", "info", "UnaryServerInfo", "Server", "FullMethod", "AirportsService_GetByDesignator_FullMethodName", "handler", "req", "AirportsService_ServiceDesc", "the", "ServiceDesc", "for", "AirportsService", "service", "only", "intended", "direct", "use", "with", "RegisterService", "and", "not", "introspected", "modified", "even", "copy", "var", "ServiceName", "aviation", "airports", "HandlerType", "Methods", "MethodDesc", "MethodName", "Get", "Handler", "_AirportsService_Get_Handler", "BatchGet", "_AirportsService_BatchGet_Handler", "GetByCity", "_AirportsService_GetByCity_Handler", "Search", "_AirportsService_Search_Handler", "Create", "_AirportsService_Create_Handler", "Update", "_AirportsService_Update_Handler", "BatchGetByDesignator", "_AirportsService_BatchGetByDesignator_Handler", "Streams", "StreamDesc", "StreamName", "UploadImage", "_AirportsService_UploadImage_Handler", "ClientStreams", "true", "Metadata", "proto", "const", "CitiesService_Search_FullMethodName", "CitiesService", "CitiesService_Get_FullMethodName", "CitiesService_Create_FullMethodName", "CitiesService_Update_FullMethodName"], "doc_head": "func _AirportsService_GetByDesignator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetByDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(AirportsServiceServer).GetByDesignator(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: AirportsService_GetByDesignator_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(AirportsServiceServer).GetByDesignator(ctx, req.(*GetByDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n// AirportsService_ServiceDesc is the grpc.ServiceDesc for AirportsService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar AirportsService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airports.v0.AirportsService\",\n\tHandlerType: (*AirportsServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _AirportsService_Get_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"BatchGet\",", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_AirportsService_GetByDesignator_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_AirportsService_GetByDesignator_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_AirportsService_GetByDesignator_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_AirportsService_GetByDesignator_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [16280], "all_end_bytes": [16967], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["AirportsServiceServer", "AirportsService_GetByDesignator_FullMethodName", "AirportsService_ServiceDesc", "CitiesService_Create_FullMethodName", "CitiesService_Get_FullMethodName", "CitiesService_Search_FullMethodName", "CitiesService_Update_FullMethodName", "ClientStreams", "Context", "FullMethod", "GetByDesignator", "GetByDesignatorRequest", "Handler", "HandlerType", "Metadata", "MethodDesc", "MethodName", "Methods", "Server", "ServiceDesc", "ServiceName", "StreamDesc", "StreamName", "Streams", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.MethodDesc", "grpc.ServiceDesc", "grpc.StreamDesc", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#40", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#42"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#42", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 42, "start_line": 428, "end_line": 437, "text": "// CitiesServiceClient is the client API for CitiesService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype CitiesServiceClient interface {\n\tSearch(ctx context.Context, in *SearchCitiesRequest, opts ...grpc.CallOption) (*SearchCitiesResponse, error)\n\tGet(ctx context.Context, in *GetCityRequest, opts ...grpc.CallOption) (*GetCityResponse, error)\n\tCreate(ctx context.Context, in *CreateCityRequest, opts ...grpc.CallOption) (*CreateCityResponse, error)\n\tUpdate(ctx context.Context, in *UpdateCityRequest, opts ...grpc.CallOption) (*UpdateCityResponse, error)\n}\n", "n_tokens": 155, "primary_symbol": "CitiesServiceClient", "primary_kind": "type", "primary_span": [428, 437], "def_symbols": [], "symbols": ["CitiesServiceClient", "the", "client", "API", "for", "CitiesService", "service", "For", "semantics", "around", "ctx", "use", "and", "closing", "ending", "streaming", "RPCs", "please", "refer", "https", "pkg", "dev", "google", "golang", "org", "grpc", "tab", "doc", "ClientConn", "NewStream", "type", "interface", "Search", "context", "Context", "SearchCitiesRequest", "opts", "CallOption", "SearchCitiesResponse", "error", "Get", "GetCityRequest", "GetCityResponse", "Create", "CreateCityRequest", "CreateCityResponse", "Update", "UpdateCityRequest", "UpdateCityResponse"], "doc_head": "// CitiesServiceClient is the client API for CitiesService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype CitiesServiceClient interface {\n\tSearch(ctx context.Context, in *SearchCitiesRequest, opts ...grpc.CallOption) (*SearchCitiesResponse, error)\n\tGet(ctx context.Context, in *GetCityRequest, opts ...grpc.CallOption) (*GetCityResponse, error)\n\tCreate(ctx context.Context, in *CreateCityRequest, opts ...grpc.CallOption) (*CreateCityResponse, error)\n\tUpdate(ctx context.Context, in *UpdateCityRequest, opts ...grpc.CallOption) (*UpdateCityResponse, error)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CitiesServiceClient (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CitiesServiceClient", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["CitiesServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CitiesServiceClient (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CitiesServiceClient"], "all_type_kinds": ["interface"], "all_start_bytes": [18829], "all_end_bytes": [19281], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "CitiesServiceClient", "Context", "Create", "CreateCityRequest", "CreateCityResponse", "Get", "GetCityRequest", "GetCityResponse", "Search", "SearchCitiesRequest", "SearchCitiesResponse", "Update", "UpdateCityRequest", "UpdateCityResponse", "context.Context", "grpc.CallOption"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#41", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#43"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#43", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 43, "start_line": 438, "end_line": 441, "text": "type citiesServiceClient struct {\n\tcc grpc.ClientConnInterface\n}\n", "n_tokens": 13, "primary_symbol": "citiesServiceClient", "primary_kind": "type", "primary_span": [438, 441], "def_symbols": [], "symbols": ["type", "citiesServiceClient", "struct", "grpc", "ClientConnInterface"], "doc_head": "type citiesServiceClient struct {\n\tcc grpc.ClientConnInterface\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:citiesServiceClient (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "citiesServiceClient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["citiesServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:citiesServiceClient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["citiesServiceClient"], "all_type_kinds": ["struct"], "all_start_bytes": [19288], "all_end_bytes": [19347], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["ClientConnInterface", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#42", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#44"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#44", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 44, "start_line": 442, "end_line": 445, "text": "func NewCitiesServiceClient(cc grpc.ClientConnInterface) CitiesServiceClient {\n\treturn &citiesServiceClient{cc}\n}\n", "n_tokens": 24, "primary_symbol": "NewCitiesServiceClient", "primary_kind": "function", "primary_span": [442, 445], "def_symbols": [], "symbols": ["NewCitiesServiceClient", "func", "grpc", "ClientConnInterface", "CitiesServiceClient", "return", "citiesServiceClient"], "doc_head": "func NewCitiesServiceClient(cc grpc.ClientConnInterface) CitiesServiceClient {\n\treturn &citiesServiceClient{cc}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewCitiesServiceClient/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "NewCitiesServiceClient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewCitiesServiceClient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewCitiesServiceClient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [19349], "all_end_bytes": [19462], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["CitiesServiceClient", "ClientConnInterface", "NewCitiesServiceClient", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#43", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#45"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#45", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 45, "start_line": 446, "end_line": 455, "text": "func (c *citiesServiceClient) Search(ctx context.Context, in *SearchCitiesRequest, opts ...grpc.CallOption) (*SearchCitiesResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchCitiesResponse)\n\terr := c.cc.Invoke(ctx, CitiesService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 95, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [446, 455], "def_symbols": [], "symbols": ["Search", "func", "citiesServiceClient", "ctx", "context", "Context", "SearchCitiesRequest", "opts", "grpc", "CallOption", "SearchCitiesResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "CitiesService_Search_FullMethodName", "nil", "return"], "doc_head": "func (c *citiesServiceClient) Search(ctx context.Context, in *SearchCitiesRequest, opts ...grpc.CallOption) (*SearchCitiesResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchCitiesResponse)\n\terr := c.cc.Invoke(ctx, CitiesService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*citiesServiceClient).Search/complete", "package": "v0", "node_kind": "method", "receiver": "c *citiesServiceClient", "function_name": "", "method_name": "Search", "type_name": "citiesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*citiesServiceClient).Search/complete"], "all_roles": ["complete"], "all_receivers": ["c *citiesServiceClient"], "all_type_names": ["citiesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [19464], "all_end_bytes": [19842], "primary_index": 0, "all_receivers_normalized": ["(*citiesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "CitiesService_Search_FullMethodName", "Context", "Invoke", "Search", "SearchCitiesRequest", "SearchCitiesResponse", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *citiesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#44", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#46"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#46", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 46, "start_line": 456, "end_line": 465, "text": "func (c *citiesServiceClient) Get(ctx context.Context, in *GetCityRequest, opts ...grpc.CallOption) (*GetCityResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetCityResponse)\n\terr := c.cc.Invoke(ctx, CitiesService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 95, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [456, 465], "def_symbols": [], "symbols": ["Get", "func", "citiesServiceClient", "ctx", "context", "Context", "GetCityRequest", "opts", "grpc", "CallOption", "GetCityResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "CitiesService_Get_FullMethodName", "nil", "return"], "doc_head": "func (c *citiesServiceClient) Get(ctx context.Context, in *GetCityRequest, opts ...grpc.CallOption) (*GetCityResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetCityResponse)\n\terr := c.cc.Invoke(ctx, CitiesService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*citiesServiceClient).Get/complete", "package": "v0", "node_kind": "method", "receiver": "c *citiesServiceClient", "function_name": "", "method_name": "Get", "type_name": "citiesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*citiesServiceClient).Get/complete"], "all_roles": ["complete"], "all_receivers": ["c *citiesServiceClient"], "all_type_names": ["citiesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [19844], "all_end_bytes": [20201], "primary_index": 0, "all_receivers_normalized": ["(*citiesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "CitiesService_Get_FullMethodName", "Context", "Get", "GetCityRequest", "GetCityResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *citiesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#45", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#47"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#47", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 47, "start_line": 466, "end_line": 475, "text": "func (c *citiesServiceClient) Create(ctx context.Context, in *CreateCityRequest, opts ...grpc.CallOption) (*CreateCityResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateCityResponse)\n\terr := c.cc.Invoke(ctx, CitiesService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 95, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [466, 475], "def_symbols": [], "symbols": ["Create", "func", "citiesServiceClient", "ctx", "context", "Context", "CreateCityRequest", "opts", "grpc", "CallOption", "CreateCityResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "CitiesService_Create_FullMethodName", "nil", "return"], "doc_head": "func (c *citiesServiceClient) Create(ctx context.Context, in *CreateCityRequest, opts ...grpc.CallOption) (*CreateCityResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateCityResponse)\n\terr := c.cc.Invoke(ctx, CitiesService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*citiesServiceClient).Create/complete", "package": "v0", "node_kind": "method", "receiver": "c *citiesServiceClient", "function_name": "", "method_name": "Create", "type_name": "citiesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*citiesServiceClient).Create/complete"], "all_roles": ["complete"], "all_receivers": ["c *citiesServiceClient"], "all_type_names": ["citiesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [20203], "all_end_bytes": [20575], "primary_index": 0, "all_receivers_normalized": ["(*citiesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "CitiesService_Create_FullMethodName", "Context", "Create", "CreateCityRequest", "CreateCityResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *citiesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#46", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#48"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#48", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 48, "start_line": 476, "end_line": 485, "text": "func (c *citiesServiceClient) Update(ctx context.Context, in *UpdateCityRequest, opts ...grpc.CallOption) (*UpdateCityResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateCityResponse)\n\terr := c.cc.Invoke(ctx, CitiesService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 96, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [476, 485], "def_symbols": [], "symbols": ["Update", "func", "citiesServiceClient", "ctx", "context", "Context", "UpdateCityRequest", "opts", "grpc", "CallOption", "UpdateCityResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "CitiesService_Update_FullMethodName", "nil", "return"], "doc_head": "func (c *citiesServiceClient) Update(ctx context.Context, in *UpdateCityRequest, opts ...grpc.CallOption) (*UpdateCityResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateCityResponse)\n\terr := c.cc.Invoke(ctx, CitiesService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*citiesServiceClient).Update/complete", "package": "v0", "node_kind": "method", "receiver": "c *citiesServiceClient", "function_name": "", "method_name": "Update", "type_name": "citiesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*citiesServiceClient).Update/complete"], "all_roles": ["complete"], "all_receivers": ["c *citiesServiceClient"], "all_type_names": ["citiesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [20577], "all_end_bytes": [20949], "primary_index": 0, "all_receivers_normalized": ["(*citiesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "CitiesService_Update_FullMethodName", "Context", "Invoke", "StaticMethod", "Update", "UpdateCityRequest", "UpdateCityResponse", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *citiesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#47", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#49"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#49", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 49, "start_line": 486, "end_line": 496, "text": "// CitiesServiceServer is the server API for CitiesService service.\n// All implementations must embed UnimplementedCitiesServiceServer\n// for forward compatibility.\ntype CitiesServiceServer interface {\n\tSearch(context.Context, *SearchCitiesRequest) (*SearchCitiesResponse, error)\n\tGet(context.Context, *GetCityRequest) (*GetCityResponse, error)\n\tCreate(context.Context, *CreateCityRequest) (*CreateCityResponse, error)\n\tUpdate(context.Context, *UpdateCityRequest) (*UpdateCityResponse, error)\n\tmustEmbedUnimplementedCitiesServiceServer()\n}\n", "n_tokens": 110, "primary_symbol": "CitiesServiceServer", "primary_kind": "type", "primary_span": [486, 496], "def_symbols": [], "symbols": ["CitiesServiceServer", "the", "server", "API", "for", "CitiesService", "service", "All", "implementations", "must", "embed", "UnimplementedCitiesServiceServer", "forward", "compatibility", "type", "interface", "Search", "context", "Context", "SearchCitiesRequest", "SearchCitiesResponse", "error", "Get", "GetCityRequest", "GetCityResponse", "Create", "CreateCityRequest", "CreateCityResponse", "Update", "UpdateCityRequest", "UpdateCityResponse", "mustEmbedUnimplementedCitiesServiceServer"], "doc_head": "// CitiesServiceServer is the server API for CitiesService service.\n// All implementations must embed UnimplementedCitiesServiceServer\n// for forward compatibility.\ntype CitiesServiceServer interface {\n\tSearch(context.Context, *SearchCitiesRequest) (*SearchCitiesResponse, error)\n\tGet(context.Context, *GetCityRequest) (*GetCityResponse, error)\n\tCreate(context.Context, *CreateCityRequest) (*CreateCityResponse, error)\n\tUpdate(context.Context, *UpdateCityRequest) (*UpdateCityResponse, error)\n\tmustEmbedUnimplementedCitiesServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CitiesServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CitiesServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["CitiesServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CitiesServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CitiesServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [21121], "all_end_bytes": [21490], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["CitiesServiceServer", "Context", "Create", "CreateCityRequest", "CreateCityResponse", "Get", "GetCityRequest", "GetCityResponse", "Search", "SearchCitiesRequest", "SearchCitiesResponse", "Update", "UpdateCityRequest", "UpdateCityResponse", "context.Context"], "header_context_minimal": "package v0\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#48", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#50"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#50", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 50, "start_line": 497, "end_line": 503, "text": "// UnimplementedCitiesServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedCitiesServiceServer struct{}\n", "n_tokens": 52, "primary_symbol": "UnimplementedCitiesServiceServer", "primary_kind": "type", "primary_span": [497, 503], "def_symbols": [], "symbols": ["UnimplementedCitiesServiceServer", "must", "embedded", "have", "forward", "compatible", "implementations", "NOTE", "this", "should", "value", "instead", "pointer", "avoid", "nil", "dereference", "when", "methods", "are", "called", "type", "struct"], "doc_head": "// UnimplementedCitiesServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedCitiesServiceServer struct{}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnimplementedCitiesServiceServer (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnimplementedCitiesServiceServer", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UnimplementedCitiesServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnimplementedCitiesServiceServer (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnimplementedCitiesServiceServer"], "all_type_kinds": ["struct"], "all_start_bytes": [21724], "all_end_bytes": [21765], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedCitiesServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#49", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#51"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#51", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 51, "start_line": 504, "end_line": 506, "text": "func (UnimplementedCitiesServiceServer) Search(context.Context, *SearchCitiesRequest) (*SearchCitiesResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "n_tokens": 42, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [504, 506], "def_symbols": [], "symbols": ["Search", "func", "UnimplementedCitiesServiceServer", "context", "Context", "SearchCitiesRequest", "SearchCitiesResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedCitiesServiceServer) Search(context.Context, *SearchCitiesRequest) (*SearchCitiesResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Search/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCitiesServiceServer", "function_name": "", "method_name": "Search", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Search/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCitiesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [21767], "all_end_bytes": [21968], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCitiesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Search", "SearchCitiesRequest", "SearchCitiesResponse", "Unimplemented", "UnimplementedCitiesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedCitiesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#50", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#52"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#52", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 52, "start_line": 507, "end_line": 509, "text": "func (UnimplementedCitiesServiceServer) Get(context.Context, *GetCityRequest) (*GetCityResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "n_tokens": 42, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [507, 509], "def_symbols": [], "symbols": ["Get", "func", "UnimplementedCitiesServiceServer", "context", "Context", "GetCityRequest", "GetCityResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedCitiesServiceServer) Get(context.Context, *GetCityRequest) (*GetCityResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Get/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCitiesServiceServer", "function_name": "", "method_name": "Get", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Get/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCitiesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [21969], "all_end_bytes": [22154], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCitiesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Get", "GetCityRequest", "GetCityResponse", "Unimplemented", "UnimplementedCitiesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedCitiesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#51", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#53"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#53", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 53, "start_line": 510, "end_line": 512, "text": "func (UnimplementedCitiesServiceServer) Create(context.Context, *CreateCityRequest) (*CreateCityResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "n_tokens": 42, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [510, 512], "def_symbols": [], "symbols": ["Create", "func", "UnimplementedCitiesServiceServer", "context", "Context", "CreateCityRequest", "CreateCityResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedCitiesServiceServer) Create(context.Context, *CreateCityRequest) (*CreateCityResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Create/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCitiesServiceServer", "function_name": "", "method_name": "Create", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Create/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCitiesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [22155], "all_end_bytes": [22352], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCitiesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Create", "CreateCityRequest", "CreateCityResponse", "Errorf", "Unimplemented", "UnimplementedCitiesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedCitiesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#52", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#54"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#54", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 54, "start_line": 513, "end_line": 515, "text": "func (UnimplementedCitiesServiceServer) Update(context.Context, *UpdateCityRequest) (*UpdateCityResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "n_tokens": 42, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [513, 515], "def_symbols": [], "symbols": ["Update", "func", "UnimplementedCitiesServiceServer", "context", "Context", "UpdateCityRequest", "UpdateCityResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedCitiesServiceServer) Update(context.Context, *UpdateCityRequest) (*UpdateCityResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Update/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCitiesServiceServer", "function_name": "", "method_name": "Update", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Update/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCitiesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [22353], "all_end_bytes": [22550], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCitiesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Unimplemented", "UnimplementedCitiesServiceServer", "Update", "UpdateCityRequest", "UpdateCityResponse", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedCitiesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#53", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#55"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#55", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 55, "start_line": 516, "end_line": 516, "text": "func (UnimplementedCitiesServiceServer) mustEmbedUnimplementedCitiesServiceServer() {}", "n_tokens": 17, "primary_symbol": "mustEmbedUnimplementedCitiesServiceServer", "primary_kind": "method", "primary_span": [516, 516], "def_symbols": [], "symbols": ["mustEmbedUnimplementedCitiesServiceServer", "func", "UnimplementedCitiesServiceServer"], "doc_head": "func (UnimplementedCitiesServiceServer) mustEmbedUnimplementedCitiesServiceServer() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).mustEmbedUnimplementedCitiesServiceServer/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCitiesServiceServer", "function_name": "", "method_name": "mustEmbedUnimplementedCitiesServiceServer", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["mustEmbedUnimplementedCitiesServiceServer"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).mustEmbedUnimplementedCitiesServiceServer/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCitiesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [22551], "all_end_bytes": [22637], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCitiesServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedCitiesServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedCitiesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#54", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#56"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#56", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 56, "start_line": 517, "end_line": 518, "text": "func (UnimplementedCitiesServiceServer) testEmbeddedByValue()                       {}\n", "n_tokens": 15, "primary_symbol": "testEmbeddedByValue", "primary_kind": "method", "primary_span": [517, 518], "def_symbols": [], "symbols": ["testEmbeddedByValue", "func", "UnimplementedCitiesServiceServer"], "doc_head": "func (UnimplementedCitiesServiceServer) testEmbeddedByValue()                       {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).testEmbeddedByValue/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCitiesServiceServer", "function_name": "", "method_name": "testEmbeddedByValue", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["testEmbeddedByValue"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).testEmbeddedByValue/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCitiesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [22638], "all_end_bytes": [22724], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCitiesServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedCitiesServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedCitiesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#55", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#57"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#57", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 57, "start_line": 519, "end_line": 525, "text": "// UnsafeCitiesServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to CitiesServiceServer will\n// result in compilation errors.\ntype UnsafeCitiesServiceServer interface {\n\tmustEmbedUnimplementedCitiesServiceServer()\n}\n", "n_tokens": 59, "primary_symbol": "UnsafeCitiesServiceServer", "primary_kind": "type", "primary_span": [519, 525], "def_symbols": [], "symbols": ["UnsafeCitiesServiceServer", "may", "embedded", "opt", "out", "forward", "compatibility", "for", "this", "service", "Use", "interface", "not", "recommended", "added", "methods", "CitiesServiceServer", "will", "result", "compilation", "errors", "type", "mustEmbedUnimplementedCitiesServiceServer"], "doc_head": "// UnsafeCitiesServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to CitiesServiceServer will\n// result in compilation errors.\ntype UnsafeCitiesServiceServer interface {\n\tmustEmbedUnimplementedCitiesServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnsafeCitiesServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnsafeCitiesServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["UnsafeCitiesServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnsafeCitiesServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnsafeCitiesServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [22953], "all_end_bytes": [23037], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnsafeCitiesServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#56", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#58"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#58", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 58, "start_line": 526, "end_line": 536, "text": "func RegisterCitiesServiceServer(s grpc.ServiceRegistrar, srv CitiesServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedCitiesServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&CitiesService_ServiceDesc, srv)\n}\n", "n_tokens": 122, "primary_symbol": "RegisterCitiesServiceServer", "primary_kind": "function", "primary_span": [526, 536], "def_symbols": [], "symbols": ["RegisterCitiesServiceServer", "func", "grpc", "ServiceRegistrar", "srv", "CitiesServiceServer", "the", "following", "call", "pancis", "indicates", "UnimplementedCitiesServiceServer", "was", "embedded", "pointer", "and", "nil", "This", "will", "cause", "panics", "unimplemented", "method", "ever", "invoked", "test", "this", "initialization", "time", "prevent", "from", "happening", "runtime", "later", "due", "interface", "testEmbeddedByValue", "RegisterService", "CitiesService_ServiceDesc"], "doc_head": "func RegisterCitiesServiceServer(s grpc.ServiceRegistrar, srv CitiesServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedCitiesServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&CitiesService_ServiceDesc, srv)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:RegisterCitiesServiceServer/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "RegisterCitiesServiceServer", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["RegisterCitiesServiceServer"], "all_kinds": ["function"], "all_ast_paths": ["go:function:RegisterCitiesServiceServer/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [23039], "all_end_bytes": [23559], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["CitiesServiceServer", "CitiesService_ServiceDesc", "RegisterCitiesServiceServer", "RegisterService", "ServiceRegistrar", "grpc.ServiceRegistrar", "s.RegisterService", "t.testEmbeddedByValue"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#57", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#59"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#59", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 59, "start_line": 537, "end_line": 554, "text": "func _CitiesService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchCitiesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CitiesServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CitiesService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CitiesServiceServer).Search(ctx, req.(*SearchCitiesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 153, "primary_symbol": "_CitiesService_Search_Handler", "primary_kind": "function", "primary_span": [537, 554], "def_symbols": [], "symbols": ["_CitiesService_Search_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "SearchCitiesRequest", "err", "nil", "return", "CitiesServiceServer", "Search", "info", "UnaryServerInfo", "Server", "FullMethod", "CitiesService_Search_FullMethodName", "handler", "req"], "doc_head": "func _CitiesService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchCitiesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CitiesServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CitiesService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CitiesServiceServer).Search(ctx, req.(*SearchCitiesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_CitiesService_Search_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_CitiesService_Search_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_CitiesService_Search_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_CitiesService_Search_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [23561], "all_end_bytes": [24198], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CitiesServiceServer", "CitiesService_Search_FullMethodName", "Context", "FullMethod", "Search", "SearchCitiesRequest", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#58", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#60"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#60", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 60, "start_line": 555, "end_line": 572, "text": "func _CitiesService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetCityRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CitiesServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CitiesService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CitiesServiceServer).Get(ctx, req.(*GetCityRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 153, "primary_symbol": "_CitiesService_Get_Handler", "primary_kind": "function", "primary_span": [555, 572], "def_symbols": [], "symbols": ["_CitiesService_Get_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "GetCityRequest", "err", "nil", "return", "CitiesServiceServer", "Get", "info", "UnaryServerInfo", "Server", "FullMethod", "CitiesService_Get_FullMethodName", "handler", "req"], "doc_head": "func _CitiesService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetCityRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CitiesServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CitiesService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CitiesServiceServer).Get(ctx, req.(*GetCityRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_CitiesService_Get_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_CitiesService_Get_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_CitiesService_Get_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_CitiesService_Get_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [24200], "all_end_bytes": [24815], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CitiesServiceServer", "CitiesService_Get_FullMethodName", "Context", "FullMethod", "Get", "GetCityRequest", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#59", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#61"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#61", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 61, "start_line": 573, "end_line": 590, "text": "func _CitiesService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateCityRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CitiesServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CitiesService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CitiesServiceServer).Create(ctx, req.(*CreateCityRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 153, "primary_symbol": "_CitiesService_Create_Handler", "primary_kind": "function", "primary_span": [573, 590], "def_symbols": [], "symbols": ["_CitiesService_Create_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "CreateCityRequest", "err", "nil", "return", "CitiesServiceServer", "Create", "info", "UnaryServerInfo", "Server", "FullMethod", "CitiesService_Create_FullMethodName", "handler", "req"], "doc_head": "func _CitiesService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateCityRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CitiesServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CitiesService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CitiesServiceServer).Create(ctx, req.(*CreateCityRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_CitiesService_Create_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_CitiesService_Create_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_CitiesService_Create_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_CitiesService_Create_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [24817], "all_end_bytes": [25450], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CitiesServiceServer", "CitiesService_Create_FullMethodName", "Context", "Create", "CreateCityRequest", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#60", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#62"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#62", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 62, "start_line": 591, "end_line": 643, "text": "func _CitiesService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateCityRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CitiesServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CitiesService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CitiesServiceServer).Update(ctx, req.(*UpdateCityRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\n// CitiesService_ServiceDesc is the grpc.ServiceDesc for CitiesService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar CitiesService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airports.v0.CitiesService\",\n\tHandlerType: (*CitiesServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Search\",\n\t\t\tHandler:    _CitiesService_Search_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _CitiesService_Get_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Create\",\n\t\t\tHandler:    _CitiesService_Create_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Update\",\n\t\t\tHandler:    _CitiesService_Update_Handler,\n\t\t},\n\t},\n\tStreams:  []grpc.StreamDesc{},\n\tMetadata: \"airports.proto\",\n}\n\nconst (\n\tCountriesService_Search_FullMethodName = \"/aviation.airports.v0.CountriesService/Search\"\n\tCountriesService_Get_FullMethodName    = \"/aviation.airports.v0.CountriesService/Get\"\n\tCountriesService_Create_FullMethodName = \"/aviation.airports.v0.CountriesService/Create\"\n\tCountriesService_Update_FullMethodName = \"/aviation.airports.v0.CountriesService/Update\"\n)\n", "n_tokens": 442, "primary_symbol": "_CitiesService_Update_Handler", "primary_kind": "function", "primary_span": [591, 643], "def_symbols": [], "symbols": ["_CitiesService_Update_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "UpdateCityRequest", "err", "nil", "return", "CitiesServiceServer", "Update", "info", "UnaryServerInfo", "Server", "FullMethod", "CitiesService_Update_FullMethodName", "handler", "req", "CitiesService_ServiceDesc", "the", "ServiceDesc", "for", "CitiesService", "service", "only", "intended", "direct", "use", "with", "RegisterService", "and", "not", "introspected", "modified", "even", "copy", "var", "ServiceName", "aviation", "airports", "HandlerType", "Methods", "MethodDesc", "MethodName", "Search", "Handler", "_CitiesService_Search_Handler", "Get", "_CitiesService_Get_Handler", "Create", "_CitiesService_Create_Handler", "Streams", "StreamDesc", "Metadata", "proto", "const", "CountriesService_Search_FullMethodName", "CountriesService", "CountriesService_Get_FullMethodName", "CountriesService_Create_FullMethodName", "CountriesService_Update_FullMethodName"], "doc_head": "func _CitiesService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateCityRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CitiesServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CitiesService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CitiesServiceServer).Update(ctx, req.(*UpdateCityRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n// CitiesService_ServiceDesc is the grpc.ServiceDesc for CitiesService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar CitiesService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airports.v0.CitiesService\",\n\tHandlerType: (*CitiesServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Search\",\n\t\t\tHandler:    _CitiesService_Search_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _CitiesService_Get_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Create\",", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_CitiesService_Update_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_CitiesService_Update_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_CitiesService_Update_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_CitiesService_Update_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [25452], "all_end_bytes": [26085], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CitiesServiceServer", "CitiesService_ServiceDesc", "CitiesService_Update_FullMethodName", "Context", "CountriesService_Create_FullMethodName", "CountriesService_Get_FullMethodName", "CountriesService_Search_FullMethodName", "CountriesService_Update_FullMethodName", "FullMethod", "Handler", "HandlerType", "Metadata", "MethodDesc", "MethodName", "Methods", "Server", "ServiceDesc", "ServiceName", "StreamDesc", "Streams", "UnaryServerInfo", "UnaryServerInterceptor", "Update", "UpdateCityRequest", "context.Context", "grpc.MethodDesc", "grpc.ServiceDesc", "grpc.StreamDesc", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#61", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#63"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#63", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 63, "start_line": 644, "end_line": 653, "text": "// CountriesServiceClient is the client API for CountriesService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype CountriesServiceClient interface {\n\tSearch(ctx context.Context, in *SearchCountriesRequest, opts ...grpc.CallOption) (*SearchCountriesResponse, error)\n\tGet(ctx context.Context, in *GetCountryRequest, opts ...grpc.CallOption) (*GetCountryResponse, error)\n\tCreate(ctx context.Context, in *CreateCountryRequest, opts ...grpc.CallOption) (*CreateCountryResponse, error)\n\tUpdate(ctx context.Context, in *UpdateCountryRequest, opts ...grpc.CallOption) (*UpdateCountryResponse, error)\n}\n", "n_tokens": 155, "primary_symbol": "CountriesServiceClient", "primary_kind": "type", "primary_span": [644, 653], "def_symbols": [], "symbols": ["CountriesServiceClient", "the", "client", "API", "for", "CountriesService", "service", "For", "semantics", "around", "ctx", "use", "and", "closing", "ending", "streaming", "RPCs", "please", "refer", "https", "pkg", "dev", "google", "golang", "org", "grpc", "tab", "doc", "ClientConn", "NewStream", "type", "interface", "Search", "context", "Context", "SearchCountriesRequest", "opts", "CallOption", "SearchCountriesResponse", "error", "Get", "GetCountryRequest", "GetCountryResponse", "Create", "CreateCountryRequest", "CreateCountryResponse", "Update", "UpdateCountryRequest", "UpdateCountryResponse"], "doc_head": "// CountriesServiceClient is the client API for CountriesService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype CountriesServiceClient interface {\n\tSearch(ctx context.Context, in *SearchCountriesRequest, opts ...grpc.CallOption) (*SearchCountriesResponse, error)\n\tGet(ctx context.Context, in *GetCountryRequest, opts ...grpc.CallOption) (*GetCountryResponse, error)\n\tCreate(ctx context.Context, in *CreateCountryRequest, opts ...grpc.CallOption) (*CreateCountryResponse, error)\n\tUpdate(ctx context.Context, in *UpdateCountryRequest, opts ...grpc.CallOption) (*UpdateCountryResponse, error)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CountriesServiceClient (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CountriesServiceClient", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["CountriesServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CountriesServiceClient (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CountriesServiceClient"], "all_type_kinds": ["interface"], "all_start_bytes": [27452], "all_end_bytes": [27931], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "CountriesServiceClient", "Create", "CreateCountryRequest", "CreateCountryResponse", "Get", "GetCountryRequest", "GetCountryResponse", "Search", "SearchCountriesRequest", "SearchCountriesResponse", "Update", "UpdateCountryRequest", "UpdateCountryResponse", "context.Context", "grpc.CallOption"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#62", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#64"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#64", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 64, "start_line": 654, "end_line": 657, "text": "type countriesServiceClient struct {\n\tcc grpc.ClientConnInterface\n}\n", "n_tokens": 13, "primary_symbol": "countriesServiceClient", "primary_kind": "type", "primary_span": [654, 657], "def_symbols": [], "symbols": ["type", "countriesServiceClient", "struct", "grpc", "ClientConnInterface"], "doc_head": "type countriesServiceClient struct {\n\tcc grpc.ClientConnInterface\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:countriesServiceClient (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "countriesServiceClient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["countriesServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:countriesServiceClient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["countriesServiceClient"], "all_type_kinds": ["struct"], "all_start_bytes": [27938], "all_end_bytes": [28000], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["ClientConnInterface", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#63", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#65"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#65", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 65, "start_line": 658, "end_line": 661, "text": "func NewCountriesServiceClient(cc grpc.ClientConnInterface) CountriesServiceClient {\n\treturn &countriesServiceClient{cc}\n}\n", "n_tokens": 24, "primary_symbol": "NewCountriesServiceClient", "primary_kind": "function", "primary_span": [658, 661], "def_symbols": [], "symbols": ["NewCountriesServiceClient", "func", "grpc", "ClientConnInterface", "CountriesServiceClient", "return", "countriesServiceClient"], "doc_head": "func NewCountriesServiceClient(cc grpc.ClientConnInterface) CountriesServiceClient {\n\treturn &countriesServiceClient{cc}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewCountriesServiceClient/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "NewCountriesServiceClient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewCountriesServiceClient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewCountriesServiceClient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [28002], "all_end_bytes": [28124], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["ClientConnInterface", "CountriesServiceClient", "NewCountriesServiceClient", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#64", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#66"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#66", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 66, "start_line": 662, "end_line": 671, "text": "func (c *countriesServiceClient) Search(ctx context.Context, in *SearchCountriesRequest, opts ...grpc.CallOption) (*SearchCountriesResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchCountriesResponse)\n\terr := c.cc.Invoke(ctx, CountriesService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 95, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [662, 671], "def_symbols": [], "symbols": ["Search", "func", "countriesServiceClient", "ctx", "context", "Context", "SearchCountriesRequest", "opts", "grpc", "CallOption", "SearchCountriesResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "CountriesService_Search_FullMethodName", "nil", "return"], "doc_head": "func (c *countriesServiceClient) Search(ctx context.Context, in *SearchCountriesRequest, opts ...grpc.CallOption) (*SearchCountriesResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchCountriesResponse)\n\terr := c.cc.Invoke(ctx, CountriesService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*countriesServiceClient).Search/complete", "package": "v0", "node_kind": "method", "receiver": "c *countriesServiceClient", "function_name": "", "method_name": "Search", "type_name": "countriesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*countriesServiceClient).Search/complete"], "all_roles": ["complete"], "all_receivers": ["c *countriesServiceClient"], "all_type_names": ["countriesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [28126], "all_end_bytes": [28519], "primary_index": 0, "all_receivers_normalized": ["(*countriesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "CountriesService_Search_FullMethodName", "Invoke", "Search", "SearchCountriesRequest", "SearchCountriesResponse", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *countriesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#65", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#67"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#67", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 67, "start_line": 672, "end_line": 681, "text": "func (c *countriesServiceClient) Get(ctx context.Context, in *GetCountryRequest, opts ...grpc.CallOption) (*GetCountryResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetCountryResponse)\n\terr := c.cc.Invoke(ctx, CountriesService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 95, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [672, 681], "def_symbols": [], "symbols": ["Get", "func", "countriesServiceClient", "ctx", "context", "Context", "GetCountryRequest", "opts", "grpc", "CallOption", "GetCountryResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "CountriesService_Get_FullMethodName", "nil", "return"], "doc_head": "func (c *countriesServiceClient) Get(ctx context.Context, in *GetCountryRequest, opts ...grpc.CallOption) (*GetCountryResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetCountryResponse)\n\terr := c.cc.Invoke(ctx, CountriesService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*countriesServiceClient).Get/complete", "package": "v0", "node_kind": "method", "receiver": "c *countriesServiceClient", "function_name": "", "method_name": "Get", "type_name": "countriesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*countriesServiceClient).Get/complete"], "all_roles": ["complete"], "all_receivers": ["c *countriesServiceClient"], "all_type_names": ["countriesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [28521], "all_end_bytes": [28893], "primary_index": 0, "all_receivers_normalized": ["(*countriesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "CountriesService_Get_FullMethodName", "Get", "GetCountryRequest", "GetCountryResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *countriesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#66", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#68"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#68", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 68, "start_line": 682, "end_line": 691, "text": "func (c *countriesServiceClient) Create(ctx context.Context, in *CreateCountryRequest, opts ...grpc.CallOption) (*CreateCountryResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateCountryResponse)\n\terr := c.cc.Invoke(ctx, CountriesService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 95, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [682, 691], "def_symbols": [], "symbols": ["Create", "func", "countriesServiceClient", "ctx", "context", "Context", "CreateCountryRequest", "opts", "grpc", "CallOption", "CreateCountryResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "CountriesService_Create_FullMethodName", "nil", "return"], "doc_head": "func (c *countriesServiceClient) Create(ctx context.Context, in *CreateCountryRequest, opts ...grpc.CallOption) (*CreateCountryResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateCountryResponse)\n\terr := c.cc.Invoke(ctx, CountriesService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*countriesServiceClient).Create/complete", "package": "v0", "node_kind": "method", "receiver": "c *countriesServiceClient", "function_name": "", "method_name": "Create", "type_name": "countriesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*countriesServiceClient).Create/complete"], "all_roles": ["complete"], "all_receivers": ["c *countriesServiceClient"], "all_type_names": ["countriesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [28895], "all_end_bytes": [29282], "primary_index": 0, "all_receivers_normalized": ["(*countriesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "CountriesService_Create_FullMethodName", "Create", "CreateCountryRequest", "CreateCountryResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *countriesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#67", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#69"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#69", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 69, "start_line": 692, "end_line": 701, "text": "func (c *countriesServiceClient) Update(ctx context.Context, in *UpdateCountryRequest, opts ...grpc.CallOption) (*UpdateCountryResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateCountryResponse)\n\terr := c.cc.Invoke(ctx, CountriesService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 96, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [692, 701], "def_symbols": [], "symbols": ["Update", "func", "countriesServiceClient", "ctx", "context", "Context", "UpdateCountryRequest", "opts", "grpc", "CallOption", "UpdateCountryResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "CountriesService_Update_FullMethodName", "nil", "return"], "doc_head": "func (c *countriesServiceClient) Update(ctx context.Context, in *UpdateCountryRequest, opts ...grpc.CallOption) (*UpdateCountryResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateCountryResponse)\n\terr := c.cc.Invoke(ctx, CountriesService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*countriesServiceClient).Update/complete", "package": "v0", "node_kind": "method", "receiver": "c *countriesServiceClient", "function_name": "", "method_name": "Update", "type_name": "countriesServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*countriesServiceClient).Update/complete"], "all_roles": ["complete"], "all_receivers": ["c *countriesServiceClient"], "all_type_names": ["countriesServiceClient"], "all_type_kinds": [null], "all_start_bytes": [29284], "all_end_bytes": [29671], "primary_index": 0, "all_receivers_normalized": ["(*countriesServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "CountriesService_Update_FullMethodName", "Invoke", "StaticMethod", "Update", "UpdateCountryRequest", "UpdateCountryResponse", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *countriesServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#68", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#70"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#70", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 70, "start_line": 702, "end_line": 712, "text": "// CountriesServiceServer is the server API for CountriesService service.\n// All implementations must embed UnimplementedCountriesServiceServer\n// for forward compatibility.\ntype CountriesServiceServer interface {\n\tSearch(context.Context, *SearchCountriesRequest) (*SearchCountriesResponse, error)\n\tGet(context.Context, *GetCountryRequest) (*GetCountryResponse, error)\n\tCreate(context.Context, *CreateCountryRequest) (*CreateCountryResponse, error)\n\tUpdate(context.Context, *UpdateCountryRequest) (*UpdateCountryResponse, error)\n\tmustEmbedUnimplementedCountriesServiceServer()\n}\n", "n_tokens": 110, "primary_symbol": "CountriesServiceServer", "primary_kind": "type", "primary_span": [702, 712], "def_symbols": [], "symbols": ["CountriesServiceServer", "the", "server", "API", "for", "CountriesService", "service", "All", "implementations", "must", "embed", "UnimplementedCountriesServiceServer", "forward", "compatibility", "type", "interface", "Search", "context", "Context", "SearchCountriesRequest", "SearchCountriesResponse", "error", "Get", "GetCountryRequest", "GetCountryResponse", "Create", "CreateCountryRequest", "CreateCountryResponse", "Update", "UpdateCountryRequest", "UpdateCountryResponse", "mustEmbedUnimplementedCountriesServiceServer"], "doc_head": "// CountriesServiceServer is the server API for CountriesService service.\n// All implementations must embed UnimplementedCountriesServiceServer\n// for forward compatibility.\ntype CountriesServiceServer interface {\n\tSearch(context.Context, *SearchCountriesRequest) (*SearchCountriesResponse, error)\n\tGet(context.Context, *GetCountryRequest) (*GetCountryResponse, error)\n\tCreate(context.Context, *CreateCountryRequest) (*CreateCountryResponse, error)\n\tUpdate(context.Context, *UpdateCountryRequest) (*UpdateCountryResponse, error)\n\tmustEmbedUnimplementedCountriesServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CountriesServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CountriesServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["CountriesServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CountriesServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CountriesServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [29852], "all_end_bytes": [30251], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "CountriesServiceServer", "Create", "CreateCountryRequest", "CreateCountryResponse", "Get", "GetCountryRequest", "GetCountryResponse", "Search", "SearchCountriesRequest", "SearchCountriesResponse", "Update", "UpdateCountryRequest", "UpdateCountryResponse", "context.Context"], "header_context_minimal": "package v0\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#69", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#71"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#71", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 71, "start_line": 713, "end_line": 719, "text": "// UnimplementedCountriesServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedCountriesServiceServer struct{}\n", "n_tokens": 52, "primary_symbol": "UnimplementedCountriesServiceServer", "primary_kind": "type", "primary_span": [713, 719], "def_symbols": [], "symbols": ["UnimplementedCountriesServiceServer", "must", "embedded", "have", "forward", "compatible", "implementations", "NOTE", "this", "should", "value", "instead", "pointer", "avoid", "nil", "dereference", "when", "methods", "are", "called", "type", "struct"], "doc_head": "// UnimplementedCountriesServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedCountriesServiceServer struct{}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnimplementedCountriesServiceServer (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnimplementedCountriesServiceServer", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UnimplementedCountriesServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnimplementedCountriesServiceServer (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnimplementedCountriesServiceServer"], "all_type_kinds": ["struct"], "all_start_bytes": [30488], "all_end_bytes": [30532], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedCountriesServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#70", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#72"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#72", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 72, "start_line": 720, "end_line": 722, "text": "func (UnimplementedCountriesServiceServer) Search(context.Context, *SearchCountriesRequest) (*SearchCountriesResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "n_tokens": 42, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [720, 722], "def_symbols": [], "symbols": ["Search", "func", "UnimplementedCountriesServiceServer", "context", "Context", "SearchCountriesRequest", "SearchCountriesResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedCountriesServiceServer) Search(context.Context, *SearchCountriesRequest) (*SearchCountriesResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Search/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCountriesServiceServer", "function_name": "", "method_name": "Search", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Search/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCountriesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [30534], "all_end_bytes": [30744], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCountriesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Search", "SearchCountriesRequest", "SearchCountriesResponse", "Unimplemented", "UnimplementedCountriesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedCountriesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#71", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#73"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#73", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 73, "start_line": 723, "end_line": 725, "text": "func (UnimplementedCountriesServiceServer) Get(context.Context, *GetCountryRequest) (*GetCountryResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "n_tokens": 42, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [723, 725], "def_symbols": [], "symbols": ["Get", "func", "UnimplementedCountriesServiceServer", "context", "Context", "GetCountryRequest", "GetCountryResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedCountriesServiceServer) Get(context.Context, *GetCountryRequest) (*GetCountryResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Get/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCountriesServiceServer", "function_name": "", "method_name": "Get", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Get/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCountriesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [30745], "all_end_bytes": [30939], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCountriesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Get", "GetCountryRequest", "GetCountryResponse", "Unimplemented", "UnimplementedCountriesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedCountriesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#72", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#74"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#74", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 74, "start_line": 726, "end_line": 728, "text": "func (UnimplementedCountriesServiceServer) Create(context.Context, *CreateCountryRequest) (*CreateCountryResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "n_tokens": 42, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [726, 728], "def_symbols": [], "symbols": ["Create", "func", "UnimplementedCountriesServiceServer", "context", "Context", "CreateCountryRequest", "CreateCountryResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedCountriesServiceServer) Create(context.Context, *CreateCountryRequest) (*CreateCountryResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Create/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCountriesServiceServer", "function_name": "", "method_name": "Create", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Create/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCountriesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [30940], "all_end_bytes": [31146], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCountriesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Create", "CreateCountryRequest", "CreateCountryResponse", "Errorf", "Unimplemented", "UnimplementedCountriesServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedCountriesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#73", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#75"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#75", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 75, "start_line": 729, "end_line": 731, "text": "func (UnimplementedCountriesServiceServer) Update(context.Context, *UpdateCountryRequest) (*UpdateCountryResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "n_tokens": 42, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [729, 731], "def_symbols": [], "symbols": ["Update", "func", "UnimplementedCountriesServiceServer", "context", "Context", "UpdateCountryRequest", "UpdateCountryResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedCountriesServiceServer) Update(context.Context, *UpdateCountryRequest) (*UpdateCountryResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Update/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCountriesServiceServer", "function_name": "", "method_name": "Update", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Update/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCountriesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [31147], "all_end_bytes": [31353], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCountriesServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Unimplemented", "UnimplementedCountriesServiceServer", "Update", "UpdateCountryRequest", "UpdateCountryResponse", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedCountriesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#74", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#76"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#76", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 76, "start_line": 732, "end_line": 732, "text": "func (UnimplementedCountriesServiceServer) mustEmbedUnimplementedCountriesServiceServer() {}", "n_tokens": 17, "primary_symbol": "mustEmbedUnimplementedCountriesServiceServer", "primary_kind": "method", "primary_span": [732, 732], "def_symbols": [], "symbols": ["mustEmbedUnimplementedCountriesServiceServer", "func", "UnimplementedCountriesServiceServer"], "doc_head": "func (UnimplementedCountriesServiceServer) mustEmbedUnimplementedCountriesServiceServer() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).mustEmbedUnimplementedCountriesServiceServer/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCountriesServiceServer", "function_name": "", "method_name": "mustEmbedUnimplementedCountriesServiceServer", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["mustEmbedUnimplementedCountriesServiceServer"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).mustEmbedUnimplementedCountriesServiceServer/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCountriesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [31354], "all_end_bytes": [31446], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCountriesServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedCountriesServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedCountriesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#75", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#77"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#77", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 77, "start_line": 733, "end_line": 734, "text": "func (UnimplementedCountriesServiceServer) testEmbeddedByValue()                          {}\n", "n_tokens": 15, "primary_symbol": "testEmbeddedByValue", "primary_kind": "method", "primary_span": [733, 734], "def_symbols": [], "symbols": ["testEmbeddedByValue", "func", "UnimplementedCountriesServiceServer"], "doc_head": "func (UnimplementedCountriesServiceServer) testEmbeddedByValue()                          {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).testEmbeddedByValue/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedCountriesServiceServer", "function_name": "", "method_name": "testEmbeddedByValue", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["testEmbeddedByValue"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).testEmbeddedByValue/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedCountriesServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [31447], "all_end_bytes": [31539], "primary_index": 0, "all_receivers_normalized": ["UnimplementedCountriesServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedCountriesServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedCountriesServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#76", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#78"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#78", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 78, "start_line": 735, "end_line": 741, "text": "// UnsafeCountriesServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to CountriesServiceServer will\n// result in compilation errors.\ntype UnsafeCountriesServiceServer interface {\n\tmustEmbedUnimplementedCountriesServiceServer()\n}\n", "n_tokens": 59, "primary_symbol": "UnsafeCountriesServiceServer", "primary_kind": "type", "primary_span": [735, 741], "def_symbols": [], "symbols": ["UnsafeCountriesServiceServer", "may", "embedded", "opt", "out", "forward", "compatibility", "for", "this", "service", "Use", "interface", "not", "recommended", "added", "methods", "CountriesServiceServer", "will", "result", "compilation", "errors", "type", "mustEmbedUnimplementedCountriesServiceServer"], "doc_head": "// UnsafeCountriesServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to CountriesServiceServer will\n// result in compilation errors.\ntype UnsafeCountriesServiceServer interface {\n\tmustEmbedUnimplementedCountriesServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnsafeCountriesServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnsafeCountriesServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["UnsafeCountriesServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnsafeCountriesServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnsafeCountriesServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [31774], "all_end_bytes": [31864], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnsafeCountriesServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#77", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#79"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#79", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 79, "start_line": 742, "end_line": 752, "text": "func RegisterCountriesServiceServer(s grpc.ServiceRegistrar, srv CountriesServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedCountriesServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&CountriesService_ServiceDesc, srv)\n}\n", "n_tokens": 122, "primary_symbol": "RegisterCountriesServiceServer", "primary_kind": "function", "primary_span": [742, 752], "def_symbols": [], "symbols": ["RegisterCountriesServiceServer", "func", "grpc", "ServiceRegistrar", "srv", "CountriesServiceServer", "the", "following", "call", "pancis", "indicates", "UnimplementedCountriesServiceServer", "was", "embedded", "pointer", "and", "nil", "This", "will", "cause", "panics", "unimplemented", "method", "ever", "invoked", "test", "this", "initialization", "time", "prevent", "from", "happening", "runtime", "later", "due", "interface", "testEmbeddedByValue", "RegisterService", "CountriesService_ServiceDesc"], "doc_head": "func RegisterCountriesServiceServer(s grpc.ServiceRegistrar, srv CountriesServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedCountriesServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&CountriesService_ServiceDesc, srv)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:RegisterCountriesServiceServer/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "RegisterCountriesServiceServer", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["RegisterCountriesServiceServer"], "all_kinds": ["function"], "all_ast_paths": ["go:function:RegisterCountriesServiceServer/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [31866], "all_end_bytes": [32398], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["CountriesServiceServer", "CountriesService_ServiceDesc", "RegisterCountriesServiceServer", "RegisterService", "ServiceRegistrar", "grpc.ServiceRegistrar", "s.RegisterService", "t.testEmbeddedByValue"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#78", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#80"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#80", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 80, "start_line": 753, "end_line": 770, "text": "func _CountriesService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchCountriesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CountriesServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CountriesService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CountriesServiceServer).Search(ctx, req.(*SearchCountriesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 153, "primary_symbol": "_CountriesService_Search_Handler", "primary_kind": "function", "primary_span": [753, 770], "def_symbols": [], "symbols": ["_CountriesService_Search_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "SearchCountriesRequest", "err", "nil", "return", "CountriesServiceServer", "Search", "info", "UnaryServerInfo", "Server", "FullMethod", "CountriesService_Search_FullMethodName", "handler", "req"], "doc_head": "func _CountriesService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchCountriesRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CountriesServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CountriesService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CountriesServiceServer).Search(ctx, req.(*SearchCountriesRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_CountriesService_Search_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_CountriesService_Search_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_CountriesService_Search_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_CountriesService_Search_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [32400], "all_end_bytes": [33055], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "CountriesServiceServer", "CountriesService_Search_FullMethodName", "FullMethod", "Search", "SearchCountriesRequest", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#79", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#81"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#81", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 81, "start_line": 771, "end_line": 788, "text": "func _CountriesService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetCountryRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CountriesServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CountriesService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CountriesServiceServer).Get(ctx, req.(*GetCountryRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 153, "primary_symbol": "_CountriesService_Get_Handler", "primary_kind": "function", "primary_span": [771, 788], "def_symbols": [], "symbols": ["_CountriesService_Get_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "GetCountryRequest", "err", "nil", "return", "CountriesServiceServer", "Get", "info", "UnaryServerInfo", "Server", "FullMethod", "CountriesService_Get_FullMethodName", "handler", "req"], "doc_head": "func _CountriesService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetCountryRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CountriesServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CountriesService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CountriesServiceServer).Get(ctx, req.(*GetCountryRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_CountriesService_Get_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_CountriesService_Get_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_CountriesService_Get_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_CountriesService_Get_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [33057], "all_end_bytes": [33690], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "CountriesServiceServer", "CountriesService_Get_FullMethodName", "FullMethod", "Get", "GetCountryRequest", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#80", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#82"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#82", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 82, "start_line": 789, "end_line": 806, "text": "func _CountriesService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateCountryRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CountriesServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CountriesService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CountriesServiceServer).Create(ctx, req.(*CreateCountryRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 153, "primary_symbol": "_CountriesService_Create_Handler", "primary_kind": "function", "primary_span": [789, 806], "def_symbols": [], "symbols": ["_CountriesService_Create_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "CreateCountryRequest", "err", "nil", "return", "CountriesServiceServer", "Create", "info", "UnaryServerInfo", "Server", "FullMethod", "CountriesService_Create_FullMethodName", "handler", "req"], "doc_head": "func _CountriesService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateCountryRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CountriesServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CountriesService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CountriesServiceServer).Create(ctx, req.(*CreateCountryRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_CountriesService_Create_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_CountriesService_Create_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_CountriesService_Create_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_CountriesService_Create_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [33692], "all_end_bytes": [34343], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "CountriesServiceServer", "CountriesService_Create_FullMethodName", "Create", "CreateCountryRequest", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#81", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#83"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#83", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 83, "start_line": 807, "end_line": 859, "text": "func _CountriesService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateCountryRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CountriesServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CountriesService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CountriesServiceServer).Update(ctx, req.(*UpdateCountryRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\n// CountriesService_ServiceDesc is the grpc.ServiceDesc for CountriesService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar CountriesService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airports.v0.CountriesService\",\n\tHandlerType: (*CountriesServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Search\",\n\t\t\tHandler:    _CountriesService_Search_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _CountriesService_Get_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Create\",\n\t\t\tHandler:    _CountriesService_Create_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Update\",\n\t\t\tHandler:    _CountriesService_Update_Handler,\n\t\t},\n\t},\n\tStreams:  []grpc.StreamDesc{},\n\tMetadata: \"airports.proto\",\n}\n\nconst (\n\tDesignatorsService_Create_FullMethodName = \"/aviation.airports.v0.DesignatorsService/Create\"\n\tDesignatorsService_Get_FullMethodName    = \"/aviation.airports.v0.DesignatorsService/Get\"\n\tDesignatorsService_Update_FullMethodName = \"/aviation.airports.v0.DesignatorsService/Update\"\n\tDesignatorsService_Search_FullMethodName = \"/aviation.airports.v0.DesignatorsService/Search\"\n)\n", "n_tokens": 446, "primary_symbol": "_CountriesService_Update_Handler", "primary_kind": "function", "primary_span": [807, 859], "def_symbols": [], "symbols": ["_CountriesService_Update_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "UpdateCountryRequest", "err", "nil", "return", "CountriesServiceServer", "Update", "info", "UnaryServerInfo", "Server", "FullMethod", "CountriesService_Update_FullMethodName", "handler", "req", "CountriesService_ServiceDesc", "the", "ServiceDesc", "for", "CountriesService", "service", "only", "intended", "direct", "use", "with", "RegisterService", "and", "not", "introspected", "modified", "even", "copy", "var", "ServiceName", "aviation", "airports", "HandlerType", "Methods", "MethodDesc", "MethodName", "Search", "Handler", "_CountriesService_Search_Handler", "Get", "_CountriesService_Get_Handler", "Create", "_CountriesService_Create_Handler", "Streams", "StreamDesc", "Metadata", "proto", "const", "DesignatorsService_Create_FullMethodName", "DesignatorsService", "DesignatorsService_Get_FullMethodName", "DesignatorsService_Update_FullMethodName", "DesignatorsService_Search_FullMethodName"], "doc_head": "func _CountriesService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateCountryRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(CountriesServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: CountriesService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(CountriesServiceServer).Update(ctx, req.(*UpdateCountryRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n// CountriesService_ServiceDesc is the grpc.ServiceDesc for CountriesService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar CountriesService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airports.v0.CountriesService\",\n\tHandlerType: (*CountriesServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Search\",\n\t\t\tHandler:    _CountriesService_Search_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _CountriesService_Get_Handler,", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_CountriesService_Update_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_CountriesService_Update_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_CountriesService_Update_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_CountriesService_Update_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [34345], "all_end_bytes": [34996], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "CountriesServiceServer", "CountriesService_ServiceDesc", "CountriesService_Update_FullMethodName", "DesignatorsService_Create_FullMethodName", "DesignatorsService_Get_FullMethodName", "DesignatorsService_Search_FullMethodName", "DesignatorsService_Update_FullMethodName", "FullMethod", "Handler", "HandlerType", "Metadata", "MethodDesc", "MethodName", "Methods", "Server", "ServiceDesc", "ServiceName", "StreamDesc", "Streams", "UnaryServerInfo", "UnaryServerInterceptor", "Update", "UpdateCountryRequest", "context.Context", "grpc.MethodDesc", "grpc.ServiceDesc", "grpc.StreamDesc", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#82", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#84"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#84", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 84, "start_line": 860, "end_line": 869, "text": "// DesignatorsServiceClient is the client API for DesignatorsService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype DesignatorsServiceClient interface {\n\tCreate(ctx context.Context, in *CreateDesignatorRequest, opts ...grpc.CallOption) (*CreateDesignatorResponse, error)\n\tGet(ctx context.Context, in *GetDesignatorRequest, opts ...grpc.CallOption) (*GetDesignatorResponse, error)\n\tUpdate(ctx context.Context, in *UpdateDesignatorRequest, opts ...grpc.CallOption) (*UpdateDesignatorResponse, error)\n\tSearch(ctx context.Context, in *SearchDesignatorsRequest, opts ...grpc.CallOption) (*SearchDesignatorsResponse, error)\n}\n", "n_tokens": 166, "primary_symbol": "DesignatorsServiceClient", "primary_kind": "type", "primary_span": [860, 869], "def_symbols": [], "symbols": ["DesignatorsServiceClient", "the", "client", "API", "for", "DesignatorsService", "service", "For", "semantics", "around", "ctx", "use", "and", "closing", "ending", "streaming", "RPCs", "please", "refer", "https", "pkg", "dev", "google", "golang", "org", "grpc", "tab", "doc", "ClientConn", "NewStream", "type", "interface", "Create", "context", "Context", "CreateDesignatorRequest", "opts", "CallOption", "CreateDesignatorResponse", "error", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse"], "doc_head": "// DesignatorsServiceClient is the client API for DesignatorsService service.\n//\n// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.\ntype DesignatorsServiceClient interface {\n\tCreate(ctx context.Context, in *CreateDesignatorRequest, opts ...grpc.CallOption) (*CreateDesignatorResponse, error)\n\tGet(ctx context.Context, in *GetDesignatorRequest, opts ...grpc.CallOption) (*GetDesignatorResponse, error)\n\tUpdate(ctx context.Context, in *UpdateDesignatorRequest, opts ...grpc.CallOption) (*UpdateDesignatorResponse, error)\n\tSearch(ctx context.Context, in *SearchDesignatorsRequest, opts ...grpc.CallOption) (*SearchDesignatorsResponse, error)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:DesignatorsServiceClient (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "DesignatorsServiceClient", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["DesignatorsServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:DesignatorsServiceClient (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["DesignatorsServiceClient"], "all_type_kinds": ["interface"], "all_start_bytes": [36410], "all_end_bytes": [36913], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "Create", "CreateDesignatorRequest", "CreateDesignatorResponse", "DesignatorsServiceClient", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "context.Context", "grpc.CallOption"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#83", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#85"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#85", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 85, "start_line": 870, "end_line": 873, "text": "type designatorsServiceClient struct {\n\tcc grpc.ClientConnInterface\n}\n", "n_tokens": 14, "primary_symbol": "designatorsServiceClient", "primary_kind": "type", "primary_span": [870, 873], "def_symbols": [], "symbols": ["type", "designatorsServiceClient", "struct", "grpc", "ClientConnInterface"], "doc_head": "type designatorsServiceClient struct {\n\tcc grpc.ClientConnInterface\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:designatorsServiceClient (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "designatorsServiceClient", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["designatorsServiceClient"], "all_kinds": ["type"], "all_ast_paths": ["go:type:designatorsServiceClient (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": ["struct"], "all_start_bytes": [36920], "all_end_bytes": [36984], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["ClientConnInterface", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#84", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#86"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#86", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 86, "start_line": 874, "end_line": 877, "text": "func NewDesignatorsServiceClient(cc grpc.ClientConnInterface) DesignatorsServiceClient {\n\treturn &designatorsServiceClient{cc}\n}\n", "n_tokens": 27, "primary_symbol": "NewDesignatorsServiceClient", "primary_kind": "function", "primary_span": [874, 877], "def_symbols": [], "symbols": ["NewDesignatorsServiceClient", "func", "grpc", "ClientConnInterface", "DesignatorsServiceClient", "return", "designatorsServiceClient"], "doc_head": "func NewDesignatorsServiceClient(cc grpc.ClientConnInterface) DesignatorsServiceClient {\n\treturn &designatorsServiceClient{cc}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:NewDesignatorsServiceClient/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "NewDesignatorsServiceClient", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewDesignatorsServiceClient"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewDesignatorsServiceClient/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [36986], "all_end_bytes": [37114], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["ClientConnInterface", "DesignatorsServiceClient", "NewDesignatorsServiceClient", "grpc.ClientConnInterface"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#85", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#87"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#87", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 87, "start_line": 878, "end_line": 887, "text": "func (c *designatorsServiceClient) Create(ctx context.Context, in *CreateDesignatorRequest, opts ...grpc.CallOption) (*CreateDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [878, 887], "def_symbols": [], "symbols": ["Create", "func", "designatorsServiceClient", "ctx", "context", "Context", "CreateDesignatorRequest", "opts", "grpc", "CallOption", "CreateDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "DesignatorsService_Create_FullMethodName", "nil", "return"], "doc_head": "func (c *designatorsServiceClient) Create(ctx context.Context, in *CreateDesignatorRequest, opts ...grpc.CallOption) (*CreateDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(CreateDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Create_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*designatorsServiceClient).Create/complete", "package": "v0", "node_kind": "method", "receiver": "c *designatorsServiceClient", "function_name": "", "method_name": "Create", "type_name": "designatorsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*designatorsServiceClient).Create/complete"], "all_roles": ["complete"], "all_receivers": ["c *designatorsServiceClient"], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [37116], "all_end_bytes": [37516], "primary_index": 0, "all_receivers_normalized": ["(*designatorsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "Create", "CreateDesignatorRequest", "CreateDesignatorResponse", "DesignatorsService_Create_FullMethodName", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *designatorsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#86", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#88"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#88", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 88, "start_line": 888, "end_line": 897, "text": "func (c *designatorsServiceClient) Get(ctx context.Context, in *GetDesignatorRequest, opts ...grpc.CallOption) (*GetDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [888, 897], "def_symbols": [], "symbols": ["Get", "func", "designatorsServiceClient", "ctx", "context", "Context", "GetDesignatorRequest", "opts", "grpc", "CallOption", "GetDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "DesignatorsService_Get_FullMethodName", "nil", "return"], "doc_head": "func (c *designatorsServiceClient) Get(ctx context.Context, in *GetDesignatorRequest, opts ...grpc.CallOption) (*GetDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(GetDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Get_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*designatorsServiceClient).Get/complete", "package": "v0", "node_kind": "method", "receiver": "c *designatorsServiceClient", "function_name": "", "method_name": "Get", "type_name": "designatorsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*designatorsServiceClient).Get/complete"], "all_roles": ["complete"], "all_receivers": ["c *designatorsServiceClient"], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [37518], "all_end_bytes": [37903], "primary_index": 0, "all_receivers_normalized": ["(*designatorsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "DesignatorsService_Get_FullMethodName", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Invoke", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *designatorsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#87", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#89"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#89", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 89, "start_line": 898, "end_line": 907, "text": "func (c *designatorsServiceClient) Update(ctx context.Context, in *UpdateDesignatorRequest, opts ...grpc.CallOption) (*UpdateDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 101, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [898, 907], "def_symbols": [], "symbols": ["Update", "func", "designatorsServiceClient", "ctx", "context", "Context", "UpdateDesignatorRequest", "opts", "grpc", "CallOption", "UpdateDesignatorResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "DesignatorsService_Update_FullMethodName", "nil", "return"], "doc_head": "func (c *designatorsServiceClient) Update(ctx context.Context, in *UpdateDesignatorRequest, opts ...grpc.CallOption) (*UpdateDesignatorResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(UpdateDesignatorResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Update_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*designatorsServiceClient).Update/complete", "package": "v0", "node_kind": "method", "receiver": "c *designatorsServiceClient", "function_name": "", "method_name": "Update", "type_name": "designatorsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*designatorsServiceClient).Update/complete"], "all_roles": ["complete"], "all_receivers": ["c *designatorsServiceClient"], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [37905], "all_end_bytes": [38305], "primary_index": 0, "all_receivers_normalized": ["(*designatorsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "DesignatorsService_Update_FullMethodName", "Invoke", "StaticMethod", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *designatorsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#88", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#90"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#90", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 90, "start_line": 908, "end_line": 917, "text": "func (c *designatorsServiceClient) Search(ctx context.Context, in *SearchDesignatorsRequest, opts ...grpc.CallOption) (*SearchDesignatorsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchDesignatorsResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}\n", "n_tokens": 100, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [908, 917], "def_symbols": [], "symbols": ["Search", "func", "designatorsServiceClient", "ctx", "context", "Context", "SearchDesignatorsRequest", "opts", "grpc", "CallOption", "SearchDesignatorsResponse", "error", "cOpts", "append", "StaticMethod", "out", "new", "err", "Invoke", "DesignatorsService_Search_FullMethodName", "nil", "return"], "doc_head": "func (c *designatorsServiceClient) Search(ctx context.Context, in *SearchDesignatorsRequest, opts ...grpc.CallOption) (*SearchDesignatorsResponse, error) {\n\tcOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)\n\tout := new(SearchDesignatorsResponse)\n\terr := c.cc.Invoke(ctx, DesignatorsService_Search_FullMethodName, in, out, cOpts...)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn out, nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*designatorsServiceClient).Search/complete", "package": "v0", "node_kind": "method", "receiver": "c *designatorsServiceClient", "function_name": "", "method_name": "Search", "type_name": "designatorsServiceClient", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*designatorsServiceClient).Search/complete"], "all_roles": ["complete"], "all_receivers": ["c *designatorsServiceClient"], "all_type_names": ["designatorsServiceClient"], "all_type_kinds": [null], "all_start_bytes": [38307], "all_end_bytes": [38710], "primary_index": 0, "all_receivers_normalized": ["(*designatorsServiceClient)"], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["CallOption", "Context", "DesignatorsService_Search_FullMethodName", "Invoke", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "StaticMethod", "c.cc", "context.Context", "grpc.CallOption", "grpc.StaticMethod"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)\n// receiver: c *designatorsServiceClient", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#89", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#91"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#91", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 91, "start_line": 918, "end_line": 928, "text": "// DesignatorsServiceServer is the server API for DesignatorsService service.\n// All implementations must embed UnimplementedDesignatorsServiceServer\n// for forward compatibility.\ntype DesignatorsServiceServer interface {\n\tCreate(context.Context, *CreateDesignatorRequest) (*CreateDesignatorResponse, error)\n\tGet(context.Context, *GetDesignatorRequest) (*GetDesignatorResponse, error)\n\tUpdate(context.Context, *UpdateDesignatorRequest) (*UpdateDesignatorResponse, error)\n\tSearch(context.Context, *SearchDesignatorsRequest) (*SearchDesignatorsResponse, error)\n\tmustEmbedUnimplementedDesignatorsServiceServer()\n}\n", "n_tokens": 123, "primary_symbol": "DesignatorsServiceServer", "primary_kind": "type", "primary_span": [918, 928], "def_symbols": [], "symbols": ["DesignatorsServiceServer", "the", "server", "API", "for", "DesignatorsService", "service", "All", "implementations", "must", "embed", "UnimplementedDesignatorsServiceServer", "forward", "compatibility", "type", "interface", "Create", "context", "Context", "CreateDesignatorRequest", "CreateDesignatorResponse", "error", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "mustEmbedUnimplementedDesignatorsServiceServer"], "doc_head": "// DesignatorsServiceServer is the server API for DesignatorsService service.\n// All implementations must embed UnimplementedDesignatorsServiceServer\n// for forward compatibility.\ntype DesignatorsServiceServer interface {\n\tCreate(context.Context, *CreateDesignatorRequest) (*CreateDesignatorResponse, error)\n\tGet(context.Context, *GetDesignatorRequest) (*GetDesignatorResponse, error)\n\tUpdate(context.Context, *UpdateDesignatorRequest) (*UpdateDesignatorResponse, error)\n\tSearch(context.Context, *SearchDesignatorsRequest) (*SearchDesignatorsResponse, error)\n\tmustEmbedUnimplementedDesignatorsServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:DesignatorsServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "DesignatorsServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["DesignatorsServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:DesignatorsServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["DesignatorsServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [38897], "all_end_bytes": [39322], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context"], "symbols_referenced_strict": ["Context", "Create", "CreateDesignatorRequest", "CreateDesignatorResponse", "DesignatorsServiceServer", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "context.Context"], "header_context_minimal": "package v0\nimport \"context\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#90", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#92"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#92", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 92, "start_line": 929, "end_line": 935, "text": "// UnimplementedDesignatorsServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedDesignatorsServiceServer struct{}\n", "n_tokens": 54, "primary_symbol": "UnimplementedDesignatorsServiceServer", "primary_kind": "type", "primary_span": [929, 935], "def_symbols": [], "symbols": ["UnimplementedDesignatorsServiceServer", "must", "embedded", "have", "forward", "compatible", "implementations", "NOTE", "this", "should", "value", "instead", "pointer", "avoid", "nil", "dereference", "when", "methods", "are", "called", "type", "struct"], "doc_head": "// UnimplementedDesignatorsServiceServer must be embedded to have\n// forward compatible implementations.\n//\n// NOTE: this should be embedded by value instead of pointer to avoid a nil\n// pointer dereference when methods are called.\ntype UnimplementedDesignatorsServiceServer struct{}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnimplementedDesignatorsServiceServer (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnimplementedDesignatorsServiceServer", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UnimplementedDesignatorsServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnimplementedDesignatorsServiceServer (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnimplementedDesignatorsServiceServer"], "all_type_kinds": ["struct"], "all_start_bytes": [39561], "all_end_bytes": [39607], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedDesignatorsServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#91", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#93"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#93", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 93, "start_line": 936, "end_line": 938, "text": "func (UnimplementedDesignatorsServiceServer) Create(context.Context, *CreateDesignatorRequest) (*CreateDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Create", "primary_kind": "method", "primary_span": [936, 938], "def_symbols": [], "symbols": ["Create", "func", "UnimplementedDesignatorsServiceServer", "context", "Context", "CreateDesignatorRequest", "CreateDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedDesignatorsServiceServer) Create(context.Context, *CreateDesignatorRequest) (*CreateDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Create not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Create/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "Create", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Create"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Create/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [39609], "all_end_bytes": [39823], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Create", "CreateDesignatorRequest", "CreateDesignatorResponse", "Errorf", "Unimplemented", "UnimplementedDesignatorsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#92", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#94"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#94", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 94, "start_line": 939, "end_line": 941, "text": "func (UnimplementedDesignatorsServiceServer) Get(context.Context, *GetDesignatorRequest) (*GetDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Get", "primary_kind": "method", "primary_span": [939, 941], "def_symbols": [], "symbols": ["Get", "func", "UnimplementedDesignatorsServiceServer", "context", "Context", "GetDesignatorRequest", "GetDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedDesignatorsServiceServer) Get(context.Context, *GetDesignatorRequest) (*GetDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Get not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Get/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "Get", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Get"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Get/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [39824], "all_end_bytes": [40026], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Get", "GetDesignatorRequest", "GetDesignatorResponse", "Unimplemented", "UnimplementedDesignatorsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#93", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#95"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#95", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 95, "start_line": 942, "end_line": 944, "text": "func (UnimplementedDesignatorsServiceServer) Update(context.Context, *UpdateDesignatorRequest) (*UpdateDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Update", "primary_kind": "method", "primary_span": [942, 944], "def_symbols": [], "symbols": ["Update", "func", "UnimplementedDesignatorsServiceServer", "context", "Context", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedDesignatorsServiceServer) Update(context.Context, *UpdateDesignatorRequest) (*UpdateDesignatorResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Update not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Update/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "Update", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Update"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Update/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [40027], "all_end_bytes": [40241], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Unimplemented", "UnimplementedDesignatorsServiceServer", "Update", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#94", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#96"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#96", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 96, "start_line": 945, "end_line": 947, "text": "func (UnimplementedDesignatorsServiceServer) Search(context.Context, *SearchDesignatorsRequest) (*SearchDesignatorsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "n_tokens": 45, "primary_symbol": "Search", "primary_kind": "method", "primary_span": [945, 947], "def_symbols": [], "symbols": ["Search", "func", "UnimplementedDesignatorsServiceServer", "context", "Context", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "error", "return", "nil", "status", "Errorf", "codes", "Unimplemented", "method", "not", "implemented"], "doc_head": "func (UnimplementedDesignatorsServiceServer) Search(context.Context, *SearchDesignatorsRequest) (*SearchDesignatorsResponse, error) {\n\treturn nil, status.Errorf(codes.Unimplemented, \"method Search not implemented\")\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Search/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "Search", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Search"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Search/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [40242], "all_end_bytes": [40458], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": ["context", "google.golang.org/grpc/codes", "google.golang.org/grpc/status"], "symbols_referenced_strict": ["Context", "Errorf", "Search", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "Unimplemented", "UnimplementedDesignatorsServiceServer", "codes.Unimplemented", "context.Context", "status.Errorf"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc/codes\"\n    \"google.golang.org/grpc/status\"\n)\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#95", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#97"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#97", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 97, "start_line": 948, "end_line": 948, "text": "func (UnimplementedDesignatorsServiceServer) mustEmbedUnimplementedDesignatorsServiceServer() {}", "n_tokens": 19, "primary_symbol": "mustEmbedUnimplementedDesignatorsServiceServer", "primary_kind": "method", "primary_span": [948, 948], "def_symbols": [], "symbols": ["mustEmbedUnimplementedDesignatorsServiceServer", "func", "UnimplementedDesignatorsServiceServer"], "doc_head": "func (UnimplementedDesignatorsServiceServer) mustEmbedUnimplementedDesignatorsServiceServer() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).mustEmbedUnimplementedDesignatorsServiceServer/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "mustEmbedUnimplementedDesignatorsServiceServer", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["mustEmbedUnimplementedDesignatorsServiceServer"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).mustEmbedUnimplementedDesignatorsServiceServer/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [40459], "all_end_bytes": [40555], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedDesignatorsServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#96", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#98"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#98", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 98, "start_line": 949, "end_line": 950, "text": "func (UnimplementedDesignatorsServiceServer) testEmbeddedByValue()                            {}\n", "n_tokens": 16, "primary_symbol": "testEmbeddedByValue", "primary_kind": "method", "primary_span": [949, 950], "def_symbols": [], "symbols": ["testEmbeddedByValue", "func", "UnimplementedDesignatorsServiceServer"], "doc_head": "func (UnimplementedDesignatorsServiceServer) testEmbeddedByValue()                            {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).testEmbeddedByValue/complete", "package": "v0", "node_kind": "method", "receiver": "UnimplementedDesignatorsServiceServer", "function_name": "", "method_name": "testEmbeddedByValue", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["testEmbeddedByValue"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).testEmbeddedByValue/complete"], "all_roles": ["complete"], "all_receivers": ["UnimplementedDesignatorsServiceServer"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [40556], "all_end_bytes": [40652], "primary_index": 0, "all_receivers_normalized": ["UnimplementedDesignatorsServiceServer"], "imports_used_minimal": [], "symbols_referenced_strict": ["UnimplementedDesignatorsServiceServer"], "header_context_minimal": "package v0\n// receiver: UnimplementedDesignatorsServiceServer", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#97", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#99"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#99", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 99, "start_line": 951, "end_line": 957, "text": "// UnsafeDesignatorsServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to DesignatorsServiceServer will\n// result in compilation errors.\ntype UnsafeDesignatorsServiceServer interface {\n\tmustEmbedUnimplementedDesignatorsServiceServer()\n}\n", "n_tokens": 63, "primary_symbol": "UnsafeDesignatorsServiceServer", "primary_kind": "type", "primary_span": [951, 957], "def_symbols": [], "symbols": ["UnsafeDesignatorsServiceServer", "may", "embedded", "opt", "out", "forward", "compatibility", "for", "this", "service", "Use", "interface", "not", "recommended", "added", "methods", "DesignatorsServiceServer", "will", "result", "compilation", "errors", "type", "mustEmbedUnimplementedDesignatorsServiceServer"], "doc_head": "// UnsafeDesignatorsServiceServer may be embedded to opt out of forward compatibility for this service.\n// Use of this interface is not recommended, as added methods to DesignatorsServiceServer will\n// result in compilation errors.\ntype UnsafeDesignatorsServiceServer interface {\n\tmustEmbedUnimplementedDesignatorsServiceServer()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UnsafeDesignatorsServiceServer (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UnsafeDesignatorsServiceServer", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["UnsafeDesignatorsServiceServer"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UnsafeDesignatorsServiceServer (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UnsafeDesignatorsServiceServer"], "all_type_kinds": ["interface"], "all_start_bytes": [40891], "all_end_bytes": [40985], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UnsafeDesignatorsServiceServer"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#98", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#100"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#100", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 100, "start_line": 958, "end_line": 968, "text": "func RegisterDesignatorsServiceServer(s grpc.ServiceRegistrar, srv DesignatorsServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedDesignatorsServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&DesignatorsService_ServiceDesc, srv)\n}\n", "n_tokens": 126, "primary_symbol": "RegisterDesignatorsServiceServer", "primary_kind": "function", "primary_span": [958, 968], "def_symbols": [], "symbols": ["RegisterDesignatorsServiceServer", "func", "grpc", "ServiceRegistrar", "srv", "DesignatorsServiceServer", "the", "following", "call", "pancis", "indicates", "UnimplementedDesignatorsServiceServer", "was", "embedded", "pointer", "and", "nil", "This", "will", "cause", "panics", "unimplemented", "method", "ever", "invoked", "test", "this", "initialization", "time", "prevent", "from", "happening", "runtime", "later", "due", "interface", "testEmbeddedByValue", "RegisterService", "DesignatorsService_ServiceDesc"], "doc_head": "func RegisterDesignatorsServiceServer(s grpc.ServiceRegistrar, srv DesignatorsServiceServer) {\n\t// If the following call pancis, it indicates UnimplementedDesignatorsServiceServer was\n\t// embedded by pointer and is nil.  This will cause panics if an\n\t// unimplemented method is ever invoked, so we test this at initialization\n\t// time to prevent it from happening at runtime later due to I/O.\n\tif t, ok := srv.(interface{ testEmbeddedByValue() }); ok {\n\t\tt.testEmbeddedByValue()\n\t}\n\ts.RegisterService(&DesignatorsService_ServiceDesc, srv)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:RegisterDesignatorsServiceServer/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "RegisterDesignatorsServiceServer", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["RegisterDesignatorsServiceServer"], "all_kinds": ["function"], "all_ast_paths": ["go:function:RegisterDesignatorsServiceServer/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [40987], "all_end_bytes": [41527], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc"], "symbols_referenced_strict": ["DesignatorsServiceServer", "DesignatorsService_ServiceDesc", "RegisterDesignatorsServiceServer", "RegisterService", "ServiceRegistrar", "grpc.ServiceRegistrar", "s.RegisterService", "t.testEmbeddedByValue"], "header_context_minimal": "package v0\nimport \"google.golang.org/grpc\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#99", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#101"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#101", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 101, "start_line": 969, "end_line": 986, "text": "func _DesignatorsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Create(ctx, req.(*CreateDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 159, "primary_symbol": "_DesignatorsService_Create_Handler", "primary_kind": "function", "primary_span": [969, 986], "def_symbols": [], "symbols": ["_DesignatorsService_Create_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "CreateDesignatorRequest", "err", "nil", "return", "DesignatorsServiceServer", "Create", "info", "UnaryServerInfo", "Server", "FullMethod", "DesignatorsService_Create_FullMethodName", "handler", "req"], "doc_head": "func _DesignatorsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(CreateDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Create(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Create_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Create(ctx, req.(*CreateDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_DesignatorsService_Create_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_DesignatorsService_Create_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_DesignatorsService_Create_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_DesignatorsService_Create_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [41529], "all_end_bytes": [42194], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "Create", "CreateDesignatorRequest", "DesignatorsServiceServer", "DesignatorsService_Create_FullMethodName", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#100", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#102"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#102", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 102, "start_line": 987, "end_line": 1004, "text": "func _DesignatorsService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Get(ctx, req.(*GetDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 159, "primary_symbol": "_DesignatorsService_Get_Handler", "primary_kind": "function", "primary_span": [987, 1004], "def_symbols": [], "symbols": ["_DesignatorsService_Get_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "GetDesignatorRequest", "err", "nil", "return", "DesignatorsServiceServer", "Get", "info", "UnaryServerInfo", "Server", "FullMethod", "DesignatorsService_Get_FullMethodName", "handler", "req"], "doc_head": "func _DesignatorsService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(GetDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Get(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Get_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Get(ctx, req.(*GetDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_DesignatorsService_Get_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_DesignatorsService_Get_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_DesignatorsService_Get_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_DesignatorsService_Get_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [42196], "all_end_bytes": [42843], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "DesignatorsServiceServer", "DesignatorsService_Get_FullMethodName", "FullMethod", "Get", "GetDesignatorRequest", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#101", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#103"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#103", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 103, "start_line": 1005, "end_line": 1022, "text": "func _DesignatorsService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Update(ctx, req.(*UpdateDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n", "n_tokens": 160, "primary_symbol": "_DesignatorsService_Update_Handler", "primary_kind": "function", "primary_span": [1005, 1022], "def_symbols": [], "symbols": ["_DesignatorsService_Update_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "UpdateDesignatorRequest", "err", "nil", "return", "DesignatorsServiceServer", "Update", "info", "UnaryServerInfo", "Server", "FullMethod", "DesignatorsService_Update_FullMethodName", "handler", "req"], "doc_head": "func _DesignatorsService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(UpdateDesignatorRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Update(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Update_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Update(ctx, req.(*UpdateDesignatorRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_DesignatorsService_Update_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_DesignatorsService_Update_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_DesignatorsService_Update_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_DesignatorsService_Update_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [42845], "all_end_bytes": [43510], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "DesignatorsServiceServer", "DesignatorsService_Update_FullMethodName", "FullMethod", "Server", "UnaryServerInfo", "UnaryServerInterceptor", "Update", "UpdateDesignatorRequest", "context.Context", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#102", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#104"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#104", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go", "rel_path": "pkg/grpc/airports/v0/airports_grpc.pb.go", "ext": "go", "language": "go", "chunk_number": 104, "start_line": 1023, "end_line": 1068, "text": "func _DesignatorsService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchDesignatorsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Search(ctx, req.(*SearchDesignatorsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n\n// DesignatorsService_ServiceDesc is the grpc.ServiceDesc for DesignatorsService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar DesignatorsService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airports.v0.DesignatorsService\",\n\tHandlerType: (*DesignatorsServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Create\",\n\t\t\tHandler:    _DesignatorsService_Create_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Get\",\n\t\t\tHandler:    _DesignatorsService_Get_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Update\",\n\t\t\tHandler:    _DesignatorsService_Update_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Search\",\n\t\t\tHandler:    _DesignatorsService_Search_Handler,\n\t\t},\n\t},\n\tStreams:  []grpc.StreamDesc{},\n\tMetadata: \"airports.proto\",\n}\n", "n_tokens": 369, "primary_symbol": "_DesignatorsService_Search_Handler", "primary_kind": "function", "primary_span": [1023, 1068], "def_symbols": [], "symbols": ["_DesignatorsService_Search_Handler", "func", "srv", "interface", "ctx", "context", "Context", "dec", "error", "interceptor", "grpc", "UnaryServerInterceptor", "new", "SearchDesignatorsRequest", "err", "nil", "return", "DesignatorsServiceServer", "Search", "info", "UnaryServerInfo", "Server", "FullMethod", "DesignatorsService_Search_FullMethodName", "handler", "req", "DesignatorsService_ServiceDesc", "the", "ServiceDesc", "for", "DesignatorsService", "service", "only", "intended", "direct", "use", "with", "RegisterService", "and", "not", "introspected", "modified", "even", "copy", "var", "ServiceName", "aviation", "airports", "HandlerType", "Methods", "MethodDesc", "MethodName", "Create", "Handler", "_DesignatorsService_Create_Handler", "Get", "_DesignatorsService_Get_Handler", "Update", "_DesignatorsService_Update_Handler", "Streams", "StreamDesc", "Metadata", "proto"], "doc_head": "func _DesignatorsService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {\n\tin := new(SearchDesignatorsRequest)\n\tif err := dec(in); err != nil {\n\t\treturn nil, err\n\t}\n\tif interceptor == nil {\n\t\treturn srv.(DesignatorsServiceServer).Search(ctx, in)\n\t}\n\tinfo := &grpc.UnaryServerInfo{\n\t\tServer:     srv,\n\t\tFullMethod: DesignatorsService_Search_FullMethodName,\n\t}\n\thandler := func(ctx context.Context, req interface{}) (interface{}, error) {\n\t\treturn srv.(DesignatorsServiceServer).Search(ctx, req.(*SearchDesignatorsRequest))\n\t}\n\treturn interceptor(ctx, in, info, handler)\n}\n// DesignatorsService_ServiceDesc is the grpc.ServiceDesc for DesignatorsService service.\n// It's only intended for direct use with grpc.RegisterService,\n// and not to be introspected or modified (even as a copy)\nvar DesignatorsService_ServiceDesc = grpc.ServiceDesc{\n\tServiceName: \"aviation.airports.v0.DesignatorsService\",\n\tHandlerType: (*DesignatorsServiceServer)(nil),\n\tMethods: []grpc.MethodDesc{\n\t\t{\n\t\t\tMethodName: \"Create\",\n\t\t\tHandler:    _DesignatorsService_Create_Handler,\n\t\t},\n\t\t{\n\t\t\tMethodName: \"Get\",", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:_DesignatorsService_Search_Handler/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "_DesignatorsService_Search_Handler", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["_DesignatorsService_Search_Handler"], "all_kinds": ["function"], "all_ast_paths": ["go:function:_DesignatorsService_Search_Handler/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [43512], "all_end_bytes": [44179], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "google.golang.org/grpc"], "symbols_referenced_strict": ["Context", "DesignatorsServiceServer", "DesignatorsService_Search_FullMethodName", "DesignatorsService_ServiceDesc", "FullMethod", "Handler", "HandlerType", "Metadata", "MethodDesc", "MethodName", "Methods", "Search", "SearchDesignatorsRequest", "Server", "ServiceDesc", "ServiceName", "StreamDesc", "Streams", "UnaryServerInfo", "UnaryServerInterceptor", "context.Context", "grpc.MethodDesc", "grpc.ServiceDesc", "grpc.StreamDesc", "grpc.UnaryServerInfo", "grpc.UnaryServerInterceptor"], "header_context_minimal": "package v0\nimport (\n    \"context\"\n    \"google.golang.org/grpc\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports_grpc.pb.go#103"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 6, "text": "// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.36.6\n// \tprotoc        v3.21.12\n// source: airports.proto\n", "n_tokens": 49, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 6], "def_symbols": [], "symbols": ["Code", "generated", "protoc", "gen", "NOT", "EDIT", "versions", "source", "airports", "proto"], "doc_head": "// Code generated by protoc-gen-go. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-go v1.36.6\n// \tprotoc        v3.21.12\n// source: airports.proto", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 7, "end_line": 8, "text": "package v0\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [7, 8], "def_symbols": [], "symbols": ["package"], "doc_head": "package v0", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 9, "end_line": 24, "text": "import (\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\ttimestamppb \"google.golang.org/protobuf/types/known/timestamppb\"\n\treflect \"reflect\"\n\tsync \"sync\"\n\tunsafe \"unsafe\"\n)\n\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)\n", "n_tokens": 130, "primary_symbol": "", "primary_kind": "header", "primary_span": [9, 24], "def_symbols": [], "symbols": ["import", "protoreflect", "google", "golang", "org", "protobuf", "reflect", "protoimpl", "runtime", "timestamppb", "types", "known", "sync", "unsafe", "const", "Verify", "that", "this", "generated", "code", "sufficiently", "date", "EnforceVersion", "MinVersion", "MaxVersion"], "doc_head": "import (\n\tprotoreflect \"google.golang.org/protobuf/reflect/protoreflect\"\n\tprotoimpl \"google.golang.org/protobuf/runtime/protoimpl\"\n\ttimestamppb \"google.golang.org/protobuf/types/known/timestamppb\"\n\treflect \"reflect\"\n\tsync \"sync\"\n\tunsafe \"unsafe\"\n)\nconst (\n\t// Verify that this generated code is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)\n\t// Verify that runtime/protoimpl is sufficiently up-to-date.\n\t_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:file_header", "package": "v0", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["EnforceVersion", "MaxVersion", "MinVersion", "protoimpl.EnforceVersion", "protoimpl.MaxVersion", "protoimpl.MinVersion"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 25, "end_line": 43, "text": "type Include int32\n\nconst (\n\tInclude_UNKNOWN       Include = 0\n\tInclude_TERMINAL_MAPS Include = 1\n)\n\n// Enum value maps for Include.\nvar (\n\tInclude_name = map[int32]string{\n\t\t0: \"UNKNOWN\",\n\t\t1: \"TERMINAL_MAPS\",\n\t}\n\tInclude_value = map[string]int32{\n\t\t\"UNKNOWN\":       0,\n\t\t\"TERMINAL_MAPS\": 1,\n\t}\n)\n", "n_tokens": 99, "primary_symbol": "Include", "primary_kind": "type", "primary_span": [25, 43], "def_symbols": [], "symbols": ["type", "Include", "int32", "const", "Include_UNKNOWN", "Include_TERMINAL_MAPS", "Enum", "value", "maps", "for", "var", "Include_name", "map", "string", "UNKNOWN", "TERMINAL_MAPS", "Include_value"], "doc_head": "type Include int32\nconst (\n\tInclude_UNKNOWN       Include = 0\n\tInclude_TERMINAL_MAPS Include = 1\n)\n// Enum value maps for Include.\nvar (\n\tInclude_name = map[int32]string{\n\t\t0: \"UNKNOWN\",\n\t\t1: \"TERMINAL_MAPS\",\n\t}\n\tInclude_value = map[string]int32{\n\t\t\"UNKNOWN\":       0,\n\t\t\"TERMINAL_MAPS\": 1,\n\t}\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Include (alias)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Include", "type_kind": "alias", "is_multi_declaration": false, "all_symbols": ["Include"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Include (alias)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Include"], "all_type_kinds": ["alias"], "all_start_bytes": [659], "all_end_bytes": [672], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Include", "Include_TERMINAL_MAPS", "Include_UNKNOWN", "Include_name", "Include_value"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 44, "end_line": 49, "text": "func (x Include) Enum() *Include {\n\tp := new(Include)\n\t*p = x\n\treturn p\n}\n", "n_tokens": 25, "primary_symbol": "Enum", "primary_kind": "method", "primary_span": [44, 49], "def_symbols": [], "symbols": ["Enum", "func", "Include", "new", "return"], "doc_head": "func (x Include) Enum() *Include {\n\tp := new(Include)\n\t*p = x\n\treturn p\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(Include).Enum/complete", "package": "v0", "node_kind": "method", "receiver": "x Include", "function_name": "", "method_name": "Enum", "type_name": "Include", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Enum"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(Include).Enum/complete"], "all_roles": ["complete"], "all_receivers": ["x Include"], "all_type_names": ["Include"], "all_type_kinds": [null], "all_start_bytes": [953], "all_end_bytes": [1026], "primary_index": 0, "all_receivers_normalized": ["(Include)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Enum", "Include"], "header_context_minimal": "package v0\n// receiver: x Include", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 50, "end_line": 53, "text": "func (x Include) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n", "n_tokens": 28, "primary_symbol": "String", "primary_kind": "method", "primary_span": [50, 53], "def_symbols": [], "symbols": ["String", "func", "Include", "string", "return", "protoimpl", "EnumStringOf", "Descriptor", "protoreflect", "EnumNumber"], "doc_head": "func (x Include) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(Include).String/complete", "package": "v0", "node_kind": "method", "receiver": "x Include", "function_name": "", "method_name": "String", "type_name": "Include", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(Include).String/complete"], "all_roles": ["complete"], "all_receivers": ["x Include"], "all_type_names": ["Include"], "all_type_kinds": [null], "all_start_bytes": [1028], "all_end_bytes": [1141], "primary_index": 0, "all_receivers_normalized": ["(Include)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Descriptor", "EnumNumber", "EnumStringOf", "Include", "String", "protoimpl.X", "protoreflect.EnumNumber", "x.Descriptor"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x Include", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 54, "end_line": 57, "text": "func (Include) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_airports_proto_enumTypes[0].Descriptor()\n}\n", "n_tokens": 25, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [54, 57], "def_symbols": [], "symbols": ["Descriptor", "func", "Include", "protoreflect", "EnumDescriptor", "return", "file_airports_proto_enumTypes"], "doc_head": "func (Include) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_airports_proto_enumTypes[0].Descriptor()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "Include", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["Include"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1143], "all_end_bytes": [1256], "primary_index": 0, "all_receivers_normalized": ["Include"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect"], "symbols_referenced_strict": ["Descriptor", "EnumDescriptor", "Include", "protoreflect.EnumDescriptor"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/reflect/protoreflect\"\n// receiver: Include", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 58, "end_line": 61, "text": "func (Include) Type() protoreflect.EnumType {\n\treturn &file_airports_proto_enumTypes[0]\n}\n", "n_tokens": 24, "primary_symbol": "Type", "primary_kind": "method", "primary_span": [58, 61], "def_symbols": [], "symbols": ["Type", "func", "Include", "protoreflect", "EnumType", "return", "file_airports_proto_enumTypes"], "doc_head": "func (Include) Type() protoreflect.EnumType {\n\treturn &file_airports_proto_enumTypes[0]\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Type/complete", "package": "v0", "node_kind": "method", "receiver": "Include", "function_name": "", "method_name": "Type", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Type"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Type/complete"], "all_roles": ["complete"], "all_receivers": ["Include"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1258], "all_end_bytes": [1347], "primary_index": 0, "all_receivers_normalized": ["Include"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect"], "symbols_referenced_strict": ["EnumType", "Include", "Type", "protoreflect.EnumType"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/reflect/protoreflect\"\n// receiver: Include", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 62, "end_line": 65, "text": "func (x Include) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n", "n_tokens": 22, "primary_symbol": "Number", "primary_kind": "method", "primary_span": [62, 65], "def_symbols": [], "symbols": ["Number", "func", "Include", "protoreflect", "EnumNumber", "return"], "doc_head": "func (x Include) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(Include).Number/complete", "package": "v0", "node_kind": "method", "receiver": "x Include", "function_name": "", "method_name": "Number", "type_name": "Include", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Number"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(Include).Number/complete"], "all_roles": ["complete"], "all_receivers": ["x Include"], "all_type_names": ["Include"], "all_type_kinds": [null], "all_start_bytes": [1349], "all_end_bytes": [1437], "primary_index": 0, "all_receivers_normalized": ["(Include)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect"], "symbols_referenced_strict": ["EnumNumber", "Include", "Number", "protoreflect.EnumNumber"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/reflect/protoreflect\"\n// receiver: x Include", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 66, "end_line": 70, "text": "// Deprecated: Use Include.Descriptor instead.\nfunc (Include) EnumDescriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{0}\n}\n", "n_tokens": 39, "primary_symbol": "EnumDescriptor", "primary_kind": "method", "primary_span": [67, 70], "def_symbols": [], "symbols": ["EnumDescriptor", "Deprecated", "Use", "Include", "Descriptor", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Include.Descriptor instead.\nfunc (Include) EnumDescriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{0}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).EnumDescriptor/complete", "package": "v0", "node_kind": "method", "receiver": "Include", "function_name": "", "method_name": "EnumDescriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EnumDescriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).EnumDescriptor/complete"], "all_roles": ["complete"], "all_receivers": ["Include"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1486], "all_end_bytes": [1589], "primary_index": 0, "all_receivers_normalized": ["Include"], "imports_used_minimal": [], "symbols_referenced_strict": ["EnumDescriptor", "Include"], "header_context_minimal": "package v0\n// receiver: Include", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 71, "end_line": 89, "text": "type UploadImageRequest_ImageType int32\n\nconst (\n\tUploadImageRequest_UNKNOWN  UploadImageRequest_ImageType = 0\n\tUploadImageRequest_OVERVIEW UploadImageRequest_ImageType = 1\n)\n\n// Enum value maps for UploadImageRequest_ImageType.\nvar (\n\tUploadImageRequest_ImageType_name = map[int32]string{\n\t\t0: \"UNKNOWN\",\n\t\t1: \"OVERVIEW\",\n\t}\n\tUploadImageRequest_ImageType_value = map[string]int32{\n\t\t\"UNKNOWN\":  0,\n\t\t\"OVERVIEW\": 1,\n\t}\n)\n", "n_tokens": 119, "primary_symbol": "UploadImageRequest_ImageType", "primary_kind": "type", "primary_span": [71, 89], "def_symbols": [], "symbols": ["type", "UploadImageRequest_ImageType", "int32", "const", "UploadImageRequest_UNKNOWN", "UploadImageRequest_OVERVIEW", "Enum", "value", "maps", "for", "var", "UploadImageRequest_ImageType_name", "map", "string", "UNKNOWN", "OVERVIEW", "UploadImageRequest_ImageType_value"], "doc_head": "type UploadImageRequest_ImageType int32\nconst (\n\tUploadImageRequest_UNKNOWN  UploadImageRequest_ImageType = 0\n\tUploadImageRequest_OVERVIEW UploadImageRequest_ImageType = 1\n)\n// Enum value maps for UploadImageRequest_ImageType.\nvar (\n\tUploadImageRequest_ImageType_name = map[int32]string{\n\t\t0: \"UNKNOWN\",\n\t\t1: \"OVERVIEW\",\n\t}\n\tUploadImageRequest_ImageType_value = map[string]int32{\n\t\t\"UNKNOWN\":  0,\n\t\t\"OVERVIEW\": 1,\n\t}\n)", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UploadImageRequest_ImageType (alias)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UploadImageRequest_ImageType", "type_kind": "alias", "is_multi_declaration": false, "all_symbols": ["UploadImageRequest_ImageType"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UploadImageRequest_ImageType (alias)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UploadImageRequest_ImageType"], "all_type_kinds": ["alias"], "all_start_bytes": [1596], "all_end_bytes": [1630], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["UploadImageRequest_ImageType", "UploadImageRequest_ImageType_name", "UploadImageRequest_ImageType_value", "UploadImageRequest_OVERVIEW", "UploadImageRequest_UNKNOWN"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#10", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#12"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#12", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 12, "start_line": 90, "end_line": 95, "text": "func (x UploadImageRequest_ImageType) Enum() *UploadImageRequest_ImageType {\n\tp := new(UploadImageRequest_ImageType)\n\t*p = x\n\treturn p\n}\n", "n_tokens": 37, "primary_symbol": "Enum", "primary_kind": "method", "primary_span": [90, 95], "def_symbols": [], "symbols": ["Enum", "func", "UploadImageRequest_ImageType", "new", "return"], "doc_head": "func (x UploadImageRequest_ImageType) Enum() *UploadImageRequest_ImageType {\n\tp := new(UploadImageRequest_ImageType)\n\t*p = x\n\treturn p\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(UploadImageRequest_ImageType).Enum/complete", "package": "v0", "node_kind": "method", "receiver": "x UploadImageRequest_ImageType", "function_name": "", "method_name": "Enum", "type_name": "UploadImageRequest_ImageType", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Enum"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(UploadImageRequest_ImageType).Enum/complete"], "all_roles": ["complete"], "all_receivers": ["x UploadImageRequest_ImageType"], "all_type_names": ["UploadImageRequest_ImageType"], "all_type_kinds": [null], "all_start_bytes": [2013], "all_end_bytes": [2149], "primary_index": 0, "all_receivers_normalized": ["(UploadImageRequest_ImageType)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Enum", "UploadImageRequest_ImageType"], "header_context_minimal": "package v0\n// receiver: x UploadImageRequest_ImageType", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#11", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#13"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#13", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 13, "start_line": 96, "end_line": 99, "text": "func (x UploadImageRequest_ImageType) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n", "n_tokens": 32, "primary_symbol": "String", "primary_kind": "method", "primary_span": [96, 99], "def_symbols": [], "symbols": ["String", "func", "UploadImageRequest_ImageType", "string", "return", "protoimpl", "EnumStringOf", "Descriptor", "protoreflect", "EnumNumber"], "doc_head": "func (x UploadImageRequest_ImageType) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(UploadImageRequest_ImageType).String/complete", "package": "v0", "node_kind": "method", "receiver": "x UploadImageRequest_ImageType", "function_name": "", "method_name": "String", "type_name": "UploadImageRequest_ImageType", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(UploadImageRequest_ImageType).String/complete"], "all_roles": ["complete"], "all_receivers": ["x UploadImageRequest_ImageType"], "all_type_names": ["UploadImageRequest_ImageType"], "all_type_kinds": [null], "all_start_bytes": [2151], "all_end_bytes": [2285], "primary_index": 0, "all_receivers_normalized": ["(UploadImageRequest_ImageType)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Descriptor", "EnumNumber", "EnumStringOf", "String", "UploadImageRequest_ImageType", "protoimpl.X", "protoreflect.EnumNumber", "x.Descriptor"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x UploadImageRequest_ImageType", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#12", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#14"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#14", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 14, "start_line": 100, "end_line": 103, "text": "func (UploadImageRequest_ImageType) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_airports_proto_enumTypes[1].Descriptor()\n}\n", "n_tokens": 29, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [100, 103], "def_symbols": [], "symbols": ["Descriptor", "func", "UploadImageRequest_ImageType", "protoreflect", "EnumDescriptor", "return", "file_airports_proto_enumTypes"], "doc_head": "func (UploadImageRequest_ImageType) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_airports_proto_enumTypes[1].Descriptor()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "UploadImageRequest_ImageType", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["UploadImageRequest_ImageType"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2287], "all_end_bytes": [2421], "primary_index": 0, "all_receivers_normalized": ["UploadImageRequest_ImageType"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect"], "symbols_referenced_strict": ["Descriptor", "EnumDescriptor", "UploadImageRequest_ImageType", "protoreflect.EnumDescriptor"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/reflect/protoreflect\"\n// receiver: UploadImageRequest_ImageType", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#13", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#15"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#15", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 15, "start_line": 104, "end_line": 107, "text": "func (UploadImageRequest_ImageType) Type() protoreflect.EnumType {\n\treturn &file_airports_proto_enumTypes[1]\n}\n", "n_tokens": 28, "primary_symbol": "Type", "primary_kind": "method", "primary_span": [104, 107], "def_symbols": [], "symbols": ["Type", "func", "UploadImageRequest_ImageType", "protoreflect", "EnumType", "return", "file_airports_proto_enumTypes"], "doc_head": "func (UploadImageRequest_ImageType) Type() protoreflect.EnumType {\n\treturn &file_airports_proto_enumTypes[1]\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).Type/complete", "package": "v0", "node_kind": "method", "receiver": "UploadImageRequest_ImageType", "function_name": "", "method_name": "Type", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Type"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).Type/complete"], "all_roles": ["complete"], "all_receivers": ["UploadImageRequest_ImageType"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2423], "all_end_bytes": [2533], "primary_index": 0, "all_receivers_normalized": ["UploadImageRequest_ImageType"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect"], "symbols_referenced_strict": ["EnumType", "Type", "UploadImageRequest_ImageType", "protoreflect.EnumType"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/reflect/protoreflect\"\n// receiver: UploadImageRequest_ImageType", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#14", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#16"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#16", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 16, "start_line": 108, "end_line": 111, "text": "func (x UploadImageRequest_ImageType) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n", "n_tokens": 26, "primary_symbol": "Number", "primary_kind": "method", "primary_span": [108, 111], "def_symbols": [], "symbols": ["Number", "func", "UploadImageRequest_ImageType", "protoreflect", "EnumNumber", "return"], "doc_head": "func (x UploadImageRequest_ImageType) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(UploadImageRequest_ImageType).Number/complete", "package": "v0", "node_kind": "method", "receiver": "x UploadImageRequest_ImageType", "function_name": "", "method_name": "Number", "type_name": "UploadImageRequest_ImageType", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Number"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(UploadImageRequest_ImageType).Number/complete"], "all_roles": ["complete"], "all_receivers": ["x UploadImageRequest_ImageType"], "all_type_names": ["UploadImageRequest_ImageType"], "all_type_kinds": [null], "all_start_bytes": [2535], "all_end_bytes": [2644], "primary_index": 0, "all_receivers_normalized": ["(UploadImageRequest_ImageType)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect"], "symbols_referenced_strict": ["EnumNumber", "Number", "UploadImageRequest_ImageType", "protoreflect.EnumNumber"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/reflect/protoreflect\"\n// receiver: x UploadImageRequest_ImageType", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#15", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#17"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#17", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 17, "start_line": 112, "end_line": 116, "text": "// Deprecated: Use UploadImageRequest_ImageType.Descriptor instead.\nfunc (UploadImageRequest_ImageType) EnumDescriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{10, 0}\n}\n", "n_tokens": 50, "primary_symbol": "EnumDescriptor", "primary_kind": "method", "primary_span": [113, 116], "def_symbols": [], "symbols": ["EnumDescriptor", "Deprecated", "Use", "UploadImageRequest_ImageType", "Descriptor", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UploadImageRequest_ImageType.Descriptor instead.\nfunc (UploadImageRequest_ImageType) EnumDescriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{10, 0}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(None).EnumDescriptor/complete", "package": "v0", "node_kind": "method", "receiver": "UploadImageRequest_ImageType", "function_name": "", "method_name": "EnumDescriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["EnumDescriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(None).EnumDescriptor/complete"], "all_roles": ["complete"], "all_receivers": ["UploadImageRequest_ImageType"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [2714], "all_end_bytes": [2842], "primary_index": 0, "all_receivers_normalized": ["UploadImageRequest_ImageType"], "imports_used_minimal": [], "symbols_referenced_strict": ["EnumDescriptor", "UploadImageRequest_ImageType"], "header_context_minimal": "package v0\n// receiver: UploadImageRequest_ImageType", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#16", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#18"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#18", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 18, "start_line": 117, "end_line": 139, "text": "type UpdateAirportRequest struct {\n\tstate           protoimpl.MessageState `protogen:\"open.v1\"`\n\tId              string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata            *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao            *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification  int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName            map[string]string      `protobuf:\"bytes,5,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tShortName       map[string]string      `protobuf:\"bytes,6,rep,name=shortName,proto3\" json:\"shortName,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tCityId          int64                  `protobuf:\"varint,7,opt,name=cityId,proto3\" json:\"cityId,omitempty\"`\n\tDescription     map[string]string      `protobuf:\"bytes,8,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tLatitude        float32                `protobuf:\"fixed32,9,opt,name=latitude,proto3\" json:\"latitude,omitempty\"`\n\tLongitude       float32                `protobuf:\"fixed32,10,opt,name=longitude,proto3\" json:\"longitude,omitempty\"`\n\tElevation       int32                  `protobuf:\"varint,11,opt,name=elevation,proto3\" json:\"elevation,omitempty\"`\n\tNumberOfRunways int32                  `protobuf:\"varint,12,opt,name=numberOfRunways,proto3\" json:\"numberOfRunways,omitempty\"`\n\tWebsiteUrl      *string                `protobuf:\"bytes,13,opt,name=websiteUrl,proto3,oneof\" json:\"websiteUrl,omitempty\"`\n\tWikipediaUrl    map[string]string      `protobuf:\"bytes,14,rep,name=wikipediaUrl,proto3\" json:\"wikipediaUrl,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tFacebookUrl     *string                `protobuf:\"bytes,15,opt,name=facebookUrl,proto3,oneof\" json:\"facebookUrl,omitempty\"`\n\tTwitterUrl      *string                `protobuf:\"bytes,16,opt,name=twitterUrl,proto3,oneof\" json:\"twitterUrl,omitempty\"`\n\tFaa             *string                `protobuf:\"bytes,17,opt,name=faa,proto3,oneof\" json:\"faa,omitempty\"`\n\tunknownFields   protoimpl.UnknownFields\n\tsizeCache       protoimpl.SizeCache\n}\n", "n_tokens": 580, "primary_symbol": "UpdateAirportRequest", "primary_kind": "type", "primary_span": [117, 139], "def_symbols": [], "symbols": ["type", "UpdateAirportRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Iata", "iata", "oneof", "Icao", "icao", "Classification", "int64", "varint", "classification", "Name", "map", "rep", "protobuf_key", "key", "protobuf_val", "value", "ShortName", "shortName", "CityId", "cityId", "Description", "description", "Latitude", "float32", "fixed32", "latitude", "Longitude", "longitude", "Elevation", "int32", "elevation", "NumberOfRunways", "numberOfRunways", "WebsiteUrl", "websiteUrl", "WikipediaUrl", "wikipediaUrl", "FacebookUrl", "facebookUrl", "TwitterUrl", "twitterUrl", "Faa", "faa", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateAirportRequest struct {\n\tstate           protoimpl.MessageState `protogen:\"open.v1\"`\n\tId              string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata            *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao            *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification  int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName            map[string]string      `protobuf:\"bytes,5,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tShortName       map[string]string      `protobuf:\"bytes,6,rep,name=shortName,proto3\" json:\"shortName,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tCityId          int64                  `protobuf:\"varint,7,opt,name=cityId,proto3\" json:\"cityId,omitempty\"`", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateAirportRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateAirportRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateAirportRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateAirportRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [2849], "all_end_bytes": [5281], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CityId", "Classification", "Description", "Elevation", "Faa", "FacebookUrl", "Iata", "Icao", "Latitude", "Longitude", "MessageState", "Name", "NumberOfRunways", "ShortName", "SizeCache", "TwitterUrl", "UnknownFields", "UpdateAirportRequest", "WebsiteUrl", "WikipediaUrl", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#17", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#19"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#19", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 19, "start_line": 140, "end_line": 146, "text": "func (x *UpdateAirportRequest) Reset() {\n\t*x = UpdateAirportRequest{}\n\tmi := &file_airports_proto_msgTypes[0]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [140, 146], "def_symbols": [], "symbols": ["Reset", "func", "UpdateAirportRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateAirportRequest) Reset() {\n\t*x = UpdateAirportRequest{}\n\tmi := &file_airports_proto_msgTypes[0]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "Reset", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [5283], "all_end_bytes": [5475], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateAirportRequest", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#18", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#20"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#20", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 20, "start_line": 147, "end_line": 150, "text": "func (x *UpdateAirportRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [147, 150], "def_symbols": [], "symbols": ["String", "func", "UpdateAirportRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateAirportRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "String", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [5477], "all_end_bytes": [5566], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateAirportRequest", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#19", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#21"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#21", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 21, "start_line": 151, "end_line": 152, "text": "func (*UpdateAirportRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [151, 152], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateAirportRequest"], "doc_head": "func (*UpdateAirportRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateAirportRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateAirportRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [5568], "all_end_bytes": [5614], "primary_index": 0, "all_receivers_normalized": ["*UpdateAirportRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateAirportRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#20", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#22"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#22", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 22, "start_line": 153, "end_line": 164, "text": "func (x *UpdateAirportRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[0]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [153, 164], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateAirportRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateAirportRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[0]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [5616], "all_end_bytes": [5903], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateAirportRequest", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#21", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#23"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#23", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 23, "start_line": 165, "end_line": 169, "text": "// Deprecated: Use UpdateAirportRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateAirportRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{0}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [166, 169], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateAirportRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateAirportRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateAirportRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{0}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateAirportRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateAirportRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [5978], "all_end_bytes": [6091], "primary_index": 0, "all_receivers_normalized": ["*UpdateAirportRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateAirportRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#22", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#24"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#24", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 24, "start_line": 170, "end_line": 176, "text": "func (x *UpdateAirportRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [170, 176], "def_symbols": [], "symbols": ["GetId", "func", "UpdateAirportRequest", "string", "nil", "return"], "doc_head": "func (x *UpdateAirportRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetId", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [6093], "all_end_bytes": [6185], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetId", "UpdateAirportRequest", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#23", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#25"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#25", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 25, "start_line": 177, "end_line": 183, "text": "func (x *UpdateAirportRequest) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetIata", "primary_kind": "method", "primary_span": [177, 183], "def_symbols": [], "symbols": ["GetIata", "func", "UpdateAirportRequest", "string", "nil", "Iata", "return"], "doc_head": "func (x *UpdateAirportRequest) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetIata/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetIata", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIata"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetIata/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [6187], "all_end_bytes": [6301], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetIata", "Iata", "UpdateAirportRequest", "x.Iata"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#24", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#26"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#26", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 26, "start_line": 184, "end_line": 190, "text": "func (x *UpdateAirportRequest) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetIcao", "primary_kind": "method", "primary_span": [184, 190], "def_symbols": [], "symbols": ["GetIcao", "func", "UpdateAirportRequest", "string", "nil", "Icao", "return"], "doc_head": "func (x *UpdateAirportRequest) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetIcao/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetIcao", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIcao"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetIcao/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [6303], "all_end_bytes": [6417], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetIcao", "Icao", "UpdateAirportRequest", "x.Icao"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#25", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#27"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#27", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 27, "start_line": 191, "end_line": 197, "text": "func (x *UpdateAirportRequest) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetClassification", "primary_kind": "method", "primary_span": [191, 197], "def_symbols": [], "symbols": ["GetClassification", "func", "UpdateAirportRequest", "int64", "nil", "return", "Classification"], "doc_head": "func (x *UpdateAirportRequest) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetClassification/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetClassification", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetClassification"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetClassification/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [6419], "all_end_bytes": [6533], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Classification", "GetClassification", "UpdateAirportRequest", "x.Classification"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#26", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#28"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#28", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 28, "start_line": 198, "end_line": 204, "text": "func (x *UpdateAirportRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [198, 204], "def_symbols": [], "symbols": ["GetName", "func", "UpdateAirportRequest", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *UpdateAirportRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetName", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [6535], "all_end_bytes": [6643], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetName", "Name", "UpdateAirportRequest", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#27", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#29"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#29", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 29, "start_line": 205, "end_line": 211, "text": "func (x *UpdateAirportRequest) GetShortName() map[string]string {\n\tif x != nil {\n\t\treturn x.ShortName\n\t}\n\treturn nil\n}\n", "n_tokens": 33, "primary_symbol": "GetShortName", "primary_kind": "method", "primary_span": [205, 211], "def_symbols": [], "symbols": ["GetShortName", "func", "UpdateAirportRequest", "map", "string", "nil", "return", "ShortName"], "doc_head": "func (x *UpdateAirportRequest) GetShortName() map[string]string {\n\tif x != nil {\n\t\treturn x.ShortName\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetShortName/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetShortName", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetShortName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetShortName/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [6645], "all_end_bytes": [6763], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetShortName", "ShortName", "UpdateAirportRequest", "x.ShortName"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#28", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#30"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#30", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 30, "start_line": 212, "end_line": 218, "text": "func (x *UpdateAirportRequest) GetCityId() int64 {\n\tif x != nil {\n\t\treturn x.CityId\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetCityId", "primary_kind": "method", "primary_span": [212, 218], "def_symbols": [], "symbols": ["GetCityId", "func", "UpdateAirportRequest", "int64", "nil", "return", "CityId"], "doc_head": "func (x *UpdateAirportRequest) GetCityId() int64 {\n\tif x != nil {\n\t\treturn x.CityId\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetCityId/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetCityId", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCityId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetCityId/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [6765], "all_end_bytes": [6863], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CityId", "GetCityId", "UpdateAirportRequest", "x.CityId"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#29", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#31"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#31", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 31, "start_line": 219, "end_line": 225, "text": "func (x *UpdateAirportRequest) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}\n", "n_tokens": 31, "primary_symbol": "GetDescription", "primary_kind": "method", "primary_span": [219, 225], "def_symbols": [], "symbols": ["GetDescription", "func", "UpdateAirportRequest", "map", "string", "nil", "return", "Description"], "doc_head": "func (x *UpdateAirportRequest) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetDescription/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetDescription", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDescription"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetDescription/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [6865], "all_end_bytes": [6987], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Description", "GetDescription", "UpdateAirportRequest", "x.Description"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#30", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#32"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#32", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 32, "start_line": 226, "end_line": 232, "text": "func (x *UpdateAirportRequest) GetLatitude() float32 {\n\tif x != nil {\n\t\treturn x.Latitude\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetLatitude", "primary_kind": "method", "primary_span": [226, 232], "def_symbols": [], "symbols": ["GetLatitude", "func", "UpdateAirportRequest", "float32", "nil", "return", "Latitude"], "doc_head": "func (x *UpdateAirportRequest) GetLatitude() float32 {\n\tif x != nil {\n\t\treturn x.Latitude\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetLatitude/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetLatitude", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLatitude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetLatitude/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [6989], "all_end_bytes": [7093], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetLatitude", "Latitude", "UpdateAirportRequest", "x.Latitude"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#31", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#33"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#33", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 33, "start_line": 233, "end_line": 239, "text": "func (x *UpdateAirportRequest) GetLongitude() float32 {\n\tif x != nil {\n\t\treturn x.Longitude\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetLongitude", "primary_kind": "method", "primary_span": [233, 239], "def_symbols": [], "symbols": ["GetLongitude", "func", "UpdateAirportRequest", "float32", "nil", "return", "Longitude"], "doc_head": "func (x *UpdateAirportRequest) GetLongitude() float32 {\n\tif x != nil {\n\t\treturn x.Longitude\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetLongitude/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetLongitude", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLongitude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetLongitude/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [7095], "all_end_bytes": [7201], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetLongitude", "Longitude", "UpdateAirportRequest", "x.Longitude"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#32", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#34"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#34", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 34, "start_line": 240, "end_line": 246, "text": "func (x *UpdateAirportRequest) GetElevation() int32 {\n\tif x != nil {\n\t\treturn x.Elevation\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetElevation", "primary_kind": "method", "primary_span": [240, 246], "def_symbols": [], "symbols": ["GetElevation", "func", "UpdateAirportRequest", "int32", "nil", "return", "Elevation"], "doc_head": "func (x *UpdateAirportRequest) GetElevation() int32 {\n\tif x != nil {\n\t\treturn x.Elevation\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetElevation/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetElevation", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetElevation"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetElevation/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [7203], "all_end_bytes": [7307], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Elevation", "GetElevation", "UpdateAirportRequest", "x.Elevation"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#33", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#35"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#35", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 35, "start_line": 247, "end_line": 253, "text": "func (x *UpdateAirportRequest) GetNumberOfRunways() int32 {\n\tif x != nil {\n\t\treturn x.NumberOfRunways\n\t}\n\treturn 0\n}\n", "n_tokens": 36, "primary_symbol": "GetNumberOfRunways", "primary_kind": "method", "primary_span": [247, 253], "def_symbols": [], "symbols": ["GetNumberOfRunways", "func", "UpdateAirportRequest", "int32", "nil", "return", "NumberOfRunways"], "doc_head": "func (x *UpdateAirportRequest) GetNumberOfRunways() int32 {\n\tif x != nil {\n\t\treturn x.NumberOfRunways\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetNumberOfRunways/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetNumberOfRunways", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetNumberOfRunways"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetNumberOfRunways/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [7309], "all_end_bytes": [7425], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetNumberOfRunways", "NumberOfRunways", "UpdateAirportRequest", "x.NumberOfRunways"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#34", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#36"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#36", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 36, "start_line": 254, "end_line": 260, "text": "func (x *UpdateAirportRequest) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 39, "primary_symbol": "GetWebsiteUrl", "primary_kind": "method", "primary_span": [254, 260], "def_symbols": [], "symbols": ["GetWebsiteUrl", "func", "UpdateAirportRequest", "string", "nil", "WebsiteUrl", "return"], "doc_head": "func (x *UpdateAirportRequest) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetWebsiteUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetWebsiteUrl", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWebsiteUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetWebsiteUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [7427], "all_end_bytes": [7559], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetWebsiteUrl", "UpdateAirportRequest", "WebsiteUrl", "x.WebsiteUrl"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#35", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#37"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#37", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 37, "start_line": 261, "end_line": 267, "text": "func (x *UpdateAirportRequest) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetWikipediaUrl", "primary_kind": "method", "primary_span": [261, 267], "def_symbols": [], "symbols": ["GetWikipediaUrl", "func", "UpdateAirportRequest", "map", "string", "nil", "return", "WikipediaUrl"], "doc_head": "func (x *UpdateAirportRequest) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetWikipediaUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetWikipediaUrl", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWikipediaUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetWikipediaUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [7561], "all_end_bytes": [7685], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetWikipediaUrl", "UpdateAirportRequest", "WikipediaUrl", "x.WikipediaUrl"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#36", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#38"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#38", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 38, "start_line": 268, "end_line": 274, "text": "func (x *UpdateAirportRequest) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 39, "primary_symbol": "GetFacebookUrl", "primary_kind": "method", "primary_span": [268, 274], "def_symbols": [], "symbols": ["GetFacebookUrl", "func", "UpdateAirportRequest", "string", "nil", "FacebookUrl", "return"], "doc_head": "func (x *UpdateAirportRequest) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetFacebookUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetFacebookUrl", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFacebookUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetFacebookUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [7687], "all_end_bytes": [7822], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["FacebookUrl", "GetFacebookUrl", "UpdateAirportRequest", "x.FacebookUrl"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#37", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#39"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#39", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 39, "start_line": 275, "end_line": 281, "text": "func (x *UpdateAirportRequest) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 39, "primary_symbol": "GetTwitterUrl", "primary_kind": "method", "primary_span": [275, 281], "def_symbols": [], "symbols": ["GetTwitterUrl", "func", "UpdateAirportRequest", "string", "nil", "TwitterUrl", "return"], "doc_head": "func (x *UpdateAirportRequest) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetTwitterUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetTwitterUrl", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTwitterUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetTwitterUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [7824], "all_end_bytes": [7956], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetTwitterUrl", "TwitterUrl", "UpdateAirportRequest", "x.TwitterUrl"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#38", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#40"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#40", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 40, "start_line": 282, "end_line": 288, "text": "func (x *UpdateAirportRequest) GetFaa() string {\n\tif x != nil && x.Faa != nil {\n\t\treturn *x.Faa\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetFaa", "primary_kind": "method", "primary_span": [282, 288], "def_symbols": [], "symbols": ["GetFaa", "func", "UpdateAirportRequest", "string", "nil", "Faa", "return"], "doc_head": "func (x *UpdateAirportRequest) GetFaa() string {\n\tif x != nil && x.Faa != nil {\n\t\treturn *x.Faa\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportRequest).GetFaa/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportRequest", "function_name": "", "method_name": "GetFaa", "type_name": "UpdateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFaa"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportRequest).GetFaa/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportRequest"], "all_type_names": ["UpdateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [7958], "all_end_bytes": [8069], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Faa", "GetFaa", "UpdateAirportRequest", "x.Faa"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#39", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#41"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#41", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 41, "start_line": 289, "end_line": 295, "text": "type UpdateAirportResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirport       *Airport               `protobuf:\"bytes,1,opt,name=airport,proto3\" json:\"airport,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 62, "primary_symbol": "UpdateAirportResponse", "primary_kind": "type", "primary_span": [289, 295], "def_symbols": [], "symbols": ["type", "UpdateAirportResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airport", "protobuf", "bytes", "opt", "name", "airport", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateAirportResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirport       *Airport               `protobuf:\"bytes,1,opt,name=airport,proto3\" json:\"airport,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateAirportResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateAirportResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateAirportResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateAirportResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateAirportResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [8076], "all_end_bytes": [8349], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "MessageState", "SizeCache", "UnknownFields", "UpdateAirportResponse", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#40", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#42"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#42", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 42, "start_line": 296, "end_line": 302, "text": "func (x *UpdateAirportResponse) Reset() {\n\t*x = UpdateAirportResponse{}\n\tmi := &file_airports_proto_msgTypes[1]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [296, 302], "def_symbols": [], "symbols": ["Reset", "func", "UpdateAirportResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateAirportResponse) Reset() {\n\t*x = UpdateAirportResponse{}\n\tmi := &file_airports_proto_msgTypes[1]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportResponse", "function_name": "", "method_name": "Reset", "type_name": "UpdateAirportResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportResponse"], "all_type_names": ["UpdateAirportResponse"], "all_type_kinds": [null], "all_start_bytes": [8351], "all_end_bytes": [8545], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateAirportResponse", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#41", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#43"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#43", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 43, "start_line": 303, "end_line": 306, "text": "func (x *UpdateAirportResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [303, 306], "def_symbols": [], "symbols": ["String", "func", "UpdateAirportResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateAirportResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportResponse", "function_name": "", "method_name": "String", "type_name": "UpdateAirportResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportResponse"], "all_type_names": ["UpdateAirportResponse"], "all_type_kinds": [null], "all_start_bytes": [8547], "all_end_bytes": [8637], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateAirportResponse", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#42", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#44"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#44", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 44, "start_line": 307, "end_line": 308, "text": "func (*UpdateAirportResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [307, 308], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateAirportResponse"], "doc_head": "func (*UpdateAirportResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateAirportResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateAirportResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [8639], "all_end_bytes": [8686], "primary_index": 0, "all_receivers_normalized": ["*UpdateAirportResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateAirportResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#43", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#45"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#45", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 45, "start_line": 309, "end_line": 320, "text": "func (x *UpdateAirportResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[1]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [309, 320], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateAirportResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateAirportResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[1]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateAirportResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportResponse"], "all_type_names": ["UpdateAirportResponse"], "all_type_kinds": [null], "all_start_bytes": [8688], "all_end_bytes": [8976], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateAirportResponse", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#44", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#46"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#46", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 46, "start_line": 321, "end_line": 325, "text": "// Deprecated: Use UpdateAirportResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateAirportResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{1}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [322, 325], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateAirportResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateAirportResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateAirportResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{1}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateAirportResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateAirportResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [9052], "all_end_bytes": [9166], "primary_index": 0, "all_receivers_normalized": ["*UpdateAirportResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateAirportResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#45", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#47"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#47", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 47, "start_line": 326, "end_line": 332, "text": "func (x *UpdateAirportResponse) GetAirport() *Airport {\n\tif x != nil {\n\t\treturn x.Airport\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetAirport", "primary_kind": "method", "primary_span": [326, 332], "def_symbols": [], "symbols": ["GetAirport", "func", "UpdateAirportResponse", "Airport", "nil", "return"], "doc_head": "func (x *UpdateAirportResponse) GetAirport() *Airport {\n\tif x != nil {\n\t\treturn x.Airport\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateAirportResponse).GetAirport/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateAirportResponse", "function_name": "", "method_name": "GetAirport", "type_name": "UpdateAirportResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirport"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateAirportResponse).GetAirport/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateAirportResponse"], "all_type_names": ["UpdateAirportResponse"], "all_type_kinds": [null], "all_start_bytes": [9168], "all_end_bytes": [9274], "primary_index": 0, "all_receivers_normalized": ["(*UpdateAirportResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetAirport", "UpdateAirportResponse", "x.Airport"], "header_context_minimal": "package v0\n// receiver: x *UpdateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#46", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#48"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#48", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 48, "start_line": 333, "end_line": 354, "text": "type CreateAirportRequest struct {\n\tstate           protoimpl.MessageState `protogen:\"open.v1\"`\n\tIata            *string                `protobuf:\"bytes,1,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao            *string                `protobuf:\"bytes,2,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification  int64                  `protobuf:\"varint,3,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName            map[string]string      `protobuf:\"bytes,4,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tShortName       map[string]string      `protobuf:\"bytes,5,rep,name=shortName,proto3\" json:\"shortName,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tCityId          int64                  `protobuf:\"varint,6,opt,name=cityId,proto3\" json:\"cityId,omitempty\"`\n\tDescription     map[string]string      `protobuf:\"bytes,7,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tLatitude        float32                `protobuf:\"fixed32,8,opt,name=latitude,proto3\" json:\"latitude,omitempty\"`\n\tLongitude       float32                `protobuf:\"fixed32,9,opt,name=longitude,proto3\" json:\"longitude,omitempty\"`\n\tElevation       int32                  `protobuf:\"varint,10,opt,name=elevation,proto3\" json:\"elevation,omitempty\"`\n\tNumberOfRunways int32                  `protobuf:\"varint,11,opt,name=numberOfRunways,proto3\" json:\"numberOfRunways,omitempty\"`\n\tWebsiteUrl      *string                `protobuf:\"bytes,12,opt,name=websiteUrl,proto3,oneof\" json:\"websiteUrl,omitempty\"`\n\tWikipediaUrl    map[string]string      `protobuf:\"bytes,13,rep,name=wikipediaUrl,proto3\" json:\"wikipediaUrl,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tFacebookUrl     *string                `protobuf:\"bytes,14,opt,name=facebookUrl,proto3,oneof\" json:\"facebookUrl,omitempty\"`\n\tTwitterUrl      *string                `protobuf:\"bytes,15,opt,name=twitterUrl,proto3,oneof\" json:\"twitterUrl,omitempty\"`\n\tFaa             *string                `protobuf:\"bytes,16,opt,name=faa,proto3,oneof\" json:\"faa,omitempty\"`\n\tunknownFields   protoimpl.UnknownFields\n\tsizeCache       protoimpl.SizeCache\n}\n", "n_tokens": 559, "primary_symbol": "CreateAirportRequest", "primary_kind": "type", "primary_span": [333, 354], "def_symbols": [], "symbols": ["type", "CreateAirportRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Iata", "string", "protobuf", "bytes", "opt", "name", "iata", "proto3", "oneof", "json", "omitempty", "Icao", "icao", "Classification", "int64", "varint", "classification", "Name", "map", "rep", "protobuf_key", "key", "protobuf_val", "value", "ShortName", "shortName", "CityId", "cityId", "Description", "description", "Latitude", "float32", "fixed32", "latitude", "Longitude", "longitude", "Elevation", "int32", "elevation", "NumberOfRunways", "numberOfRunways", "WebsiteUrl", "websiteUrl", "WikipediaUrl", "wikipediaUrl", "FacebookUrl", "facebookUrl", "TwitterUrl", "twitterUrl", "Faa", "faa", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateAirportRequest struct {\n\tstate           protoimpl.MessageState `protogen:\"open.v1\"`\n\tIata            *string                `protobuf:\"bytes,1,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao            *string                `protobuf:\"bytes,2,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification  int64                  `protobuf:\"varint,3,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName            map[string]string      `protobuf:\"bytes,4,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tShortName       map[string]string      `protobuf:\"bytes,5,rep,name=shortName,proto3\" json:\"shortName,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tCityId          int64                  `protobuf:\"varint,6,opt,name=cityId,proto3\" json:\"cityId,omitempty\"`\n\tDescription     map[string]string      `protobuf:\"bytes,7,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateAirportRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateAirportRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateAirportRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateAirportRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [9281], "all_end_bytes": [11612], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CityId", "Classification", "CreateAirportRequest", "Description", "Elevation", "Faa", "FacebookUrl", "Iata", "Icao", "Latitude", "Longitude", "MessageState", "Name", "NumberOfRunways", "ShortName", "SizeCache", "TwitterUrl", "UnknownFields", "WebsiteUrl", "WikipediaUrl", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#47", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#49"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#49", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 49, "start_line": 355, "end_line": 361, "text": "func (x *CreateAirportRequest) Reset() {\n\t*x = CreateAirportRequest{}\n\tmi := &file_airports_proto_msgTypes[2]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [355, 361], "def_symbols": [], "symbols": ["Reset", "func", "CreateAirportRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateAirportRequest) Reset() {\n\t*x = CreateAirportRequest{}\n\tmi := &file_airports_proto_msgTypes[2]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "Reset", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [11614], "all_end_bytes": [11806], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirportRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#48", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#50"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#50", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 50, "start_line": 362, "end_line": 365, "text": "func (x *CreateAirportRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [362, 365], "def_symbols": [], "symbols": ["String", "func", "CreateAirportRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateAirportRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "String", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [11808], "all_end_bytes": [11897], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirportRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#49", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#51"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#51", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 51, "start_line": 366, "end_line": 367, "text": "func (*CreateAirportRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [366, 367], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateAirportRequest"], "doc_head": "func (*CreateAirportRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateAirportRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateAirportRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [11899], "all_end_bytes": [11945], "primary_index": 0, "all_receivers_normalized": ["*CreateAirportRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#50", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#52"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#52", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 52, "start_line": 368, "end_line": 379, "text": "func (x *CreateAirportRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[2]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [368, 379], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateAirportRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateAirportRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[2]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [11947], "all_end_bytes": [12234], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirportRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#51", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#53"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#53", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 53, "start_line": 380, "end_line": 384, "text": "// Deprecated: Use CreateAirportRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateAirportRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{2}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [381, 384], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateAirportRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateAirportRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateAirportRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{2}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateAirportRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateAirportRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [12309], "all_end_bytes": [12422], "primary_index": 0, "all_receivers_normalized": ["*CreateAirportRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#52", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#54"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#54", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 54, "start_line": 385, "end_line": 391, "text": "func (x *CreateAirportRequest) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetIata", "primary_kind": "method", "primary_span": [385, 391], "def_symbols": [], "symbols": ["GetIata", "func", "CreateAirportRequest", "string", "nil", "Iata", "return"], "doc_head": "func (x *CreateAirportRequest) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetIata/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetIata", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIata"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetIata/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [12424], "all_end_bytes": [12538], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetIata", "Iata", "x.Iata"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#53", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#55"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#55", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 55, "start_line": 392, "end_line": 398, "text": "func (x *CreateAirportRequest) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetIcao", "primary_kind": "method", "primary_span": [392, 398], "def_symbols": [], "symbols": ["GetIcao", "func", "CreateAirportRequest", "string", "nil", "Icao", "return"], "doc_head": "func (x *CreateAirportRequest) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetIcao/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetIcao", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIcao"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetIcao/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [12540], "all_end_bytes": [12654], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetIcao", "Icao", "x.Icao"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#54", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#56"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#56", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 56, "start_line": 399, "end_line": 405, "text": "func (x *CreateAirportRequest) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetClassification", "primary_kind": "method", "primary_span": [399, 405], "def_symbols": [], "symbols": ["GetClassification", "func", "CreateAirportRequest", "int64", "nil", "return", "Classification"], "doc_head": "func (x *CreateAirportRequest) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetClassification/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetClassification", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetClassification"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetClassification/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [12656], "all_end_bytes": [12770], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Classification", "CreateAirportRequest", "GetClassification", "x.Classification"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#55", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#57"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#57", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 57, "start_line": 406, "end_line": 412, "text": "func (x *CreateAirportRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [406, 412], "def_symbols": [], "symbols": ["GetName", "func", "CreateAirportRequest", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *CreateAirportRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetName", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [12772], "all_end_bytes": [12880], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#56", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#58"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#58", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 58, "start_line": 413, "end_line": 419, "text": "func (x *CreateAirportRequest) GetShortName() map[string]string {\n\tif x != nil {\n\t\treturn x.ShortName\n\t}\n\treturn nil\n}\n", "n_tokens": 33, "primary_symbol": "GetShortName", "primary_kind": "method", "primary_span": [413, 419], "def_symbols": [], "symbols": ["GetShortName", "func", "CreateAirportRequest", "map", "string", "nil", "return", "ShortName"], "doc_head": "func (x *CreateAirportRequest) GetShortName() map[string]string {\n\tif x != nil {\n\t\treturn x.ShortName\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetShortName/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetShortName", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetShortName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetShortName/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [12882], "all_end_bytes": [13000], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetShortName", "ShortName", "x.ShortName"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#57", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#59"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#59", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 59, "start_line": 420, "end_line": 426, "text": "func (x *CreateAirportRequest) GetCityId() int64 {\n\tif x != nil {\n\t\treturn x.CityId\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetCityId", "primary_kind": "method", "primary_span": [420, 426], "def_symbols": [], "symbols": ["GetCityId", "func", "CreateAirportRequest", "int64", "nil", "return", "CityId"], "doc_head": "func (x *CreateAirportRequest) GetCityId() int64 {\n\tif x != nil {\n\t\treturn x.CityId\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetCityId/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetCityId", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCityId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetCityId/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [13002], "all_end_bytes": [13100], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CityId", "CreateAirportRequest", "GetCityId", "x.CityId"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#58", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#60"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#60", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 60, "start_line": 427, "end_line": 433, "text": "func (x *CreateAirportRequest) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}\n", "n_tokens": 31, "primary_symbol": "GetDescription", "primary_kind": "method", "primary_span": [427, 433], "def_symbols": [], "symbols": ["GetDescription", "func", "CreateAirportRequest", "map", "string", "nil", "return", "Description"], "doc_head": "func (x *CreateAirportRequest) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetDescription/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetDescription", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDescription"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetDescription/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [13102], "all_end_bytes": [13224], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "Description", "GetDescription", "x.Description"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#59", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#61"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#61", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 61, "start_line": 434, "end_line": 440, "text": "func (x *CreateAirportRequest) GetLatitude() float32 {\n\tif x != nil {\n\t\treturn x.Latitude\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetLatitude", "primary_kind": "method", "primary_span": [434, 440], "def_symbols": [], "symbols": ["GetLatitude", "func", "CreateAirportRequest", "float32", "nil", "return", "Latitude"], "doc_head": "func (x *CreateAirportRequest) GetLatitude() float32 {\n\tif x != nil {\n\t\treturn x.Latitude\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetLatitude/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetLatitude", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLatitude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetLatitude/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [13226], "all_end_bytes": [13330], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetLatitude", "Latitude", "x.Latitude"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#60", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#62"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#62", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 62, "start_line": 441, "end_line": 447, "text": "func (x *CreateAirportRequest) GetLongitude() float32 {\n\tif x != nil {\n\t\treturn x.Longitude\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetLongitude", "primary_kind": "method", "primary_span": [441, 447], "def_symbols": [], "symbols": ["GetLongitude", "func", "CreateAirportRequest", "float32", "nil", "return", "Longitude"], "doc_head": "func (x *CreateAirportRequest) GetLongitude() float32 {\n\tif x != nil {\n\t\treturn x.Longitude\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetLongitude/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetLongitude", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLongitude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetLongitude/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [13332], "all_end_bytes": [13438], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetLongitude", "Longitude", "x.Longitude"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#61", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#63"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#63", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 63, "start_line": 448, "end_line": 454, "text": "func (x *CreateAirportRequest) GetElevation() int32 {\n\tif x != nil {\n\t\treturn x.Elevation\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetElevation", "primary_kind": "method", "primary_span": [448, 454], "def_symbols": [], "symbols": ["GetElevation", "func", "CreateAirportRequest", "int32", "nil", "return", "Elevation"], "doc_head": "func (x *CreateAirportRequest) GetElevation() int32 {\n\tif x != nil {\n\t\treturn x.Elevation\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetElevation/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetElevation", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetElevation"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetElevation/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [13440], "all_end_bytes": [13544], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "Elevation", "GetElevation", "x.Elevation"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#62", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#64"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#64", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 64, "start_line": 455, "end_line": 461, "text": "func (x *CreateAirportRequest) GetNumberOfRunways() int32 {\n\tif x != nil {\n\t\treturn x.NumberOfRunways\n\t}\n\treturn 0\n}\n", "n_tokens": 36, "primary_symbol": "GetNumberOfRunways", "primary_kind": "method", "primary_span": [455, 461], "def_symbols": [], "symbols": ["GetNumberOfRunways", "func", "CreateAirportRequest", "int32", "nil", "return", "NumberOfRunways"], "doc_head": "func (x *CreateAirportRequest) GetNumberOfRunways() int32 {\n\tif x != nil {\n\t\treturn x.NumberOfRunways\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetNumberOfRunways/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetNumberOfRunways", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetNumberOfRunways"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetNumberOfRunways/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [13546], "all_end_bytes": [13662], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetNumberOfRunways", "NumberOfRunways", "x.NumberOfRunways"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#63", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#65"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#65", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 65, "start_line": 462, "end_line": 468, "text": "func (x *CreateAirportRequest) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 39, "primary_symbol": "GetWebsiteUrl", "primary_kind": "method", "primary_span": [462, 468], "def_symbols": [], "symbols": ["GetWebsiteUrl", "func", "CreateAirportRequest", "string", "nil", "WebsiteUrl", "return"], "doc_head": "func (x *CreateAirportRequest) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetWebsiteUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetWebsiteUrl", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWebsiteUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetWebsiteUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [13664], "all_end_bytes": [13796], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetWebsiteUrl", "WebsiteUrl", "x.WebsiteUrl"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#64", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#66"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#66", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 66, "start_line": 469, "end_line": 475, "text": "func (x *CreateAirportRequest) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetWikipediaUrl", "primary_kind": "method", "primary_span": [469, 475], "def_symbols": [], "symbols": ["GetWikipediaUrl", "func", "CreateAirportRequest", "map", "string", "nil", "return", "WikipediaUrl"], "doc_head": "func (x *CreateAirportRequest) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetWikipediaUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetWikipediaUrl", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWikipediaUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetWikipediaUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [13798], "all_end_bytes": [13922], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetWikipediaUrl", "WikipediaUrl", "x.WikipediaUrl"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#65", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#67"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#67", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 67, "start_line": 476, "end_line": 482, "text": "func (x *CreateAirportRequest) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 39, "primary_symbol": "GetFacebookUrl", "primary_kind": "method", "primary_span": [476, 482], "def_symbols": [], "symbols": ["GetFacebookUrl", "func", "CreateAirportRequest", "string", "nil", "FacebookUrl", "return"], "doc_head": "func (x *CreateAirportRequest) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetFacebookUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetFacebookUrl", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFacebookUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetFacebookUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [13924], "all_end_bytes": [14059], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "FacebookUrl", "GetFacebookUrl", "x.FacebookUrl"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#66", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#68"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#68", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 68, "start_line": 483, "end_line": 489, "text": "func (x *CreateAirportRequest) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 39, "primary_symbol": "GetTwitterUrl", "primary_kind": "method", "primary_span": [483, 489], "def_symbols": [], "symbols": ["GetTwitterUrl", "func", "CreateAirportRequest", "string", "nil", "TwitterUrl", "return"], "doc_head": "func (x *CreateAirportRequest) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetTwitterUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetTwitterUrl", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTwitterUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetTwitterUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [14061], "all_end_bytes": [14193], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "GetTwitterUrl", "TwitterUrl", "x.TwitterUrl"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#67", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#69"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#69", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 69, "start_line": 490, "end_line": 496, "text": "func (x *CreateAirportRequest) GetFaa() string {\n\tif x != nil && x.Faa != nil {\n\t\treturn *x.Faa\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetFaa", "primary_kind": "method", "primary_span": [490, 496], "def_symbols": [], "symbols": ["GetFaa", "func", "CreateAirportRequest", "string", "nil", "Faa", "return"], "doc_head": "func (x *CreateAirportRequest) GetFaa() string {\n\tif x != nil && x.Faa != nil {\n\t\treturn *x.Faa\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportRequest).GetFaa/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportRequest", "function_name": "", "method_name": "GetFaa", "type_name": "CreateAirportRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFaa"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportRequest).GetFaa/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportRequest"], "all_type_names": ["CreateAirportRequest"], "all_type_kinds": [null], "all_start_bytes": [14195], "all_end_bytes": [14306], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportRequest", "Faa", "GetFaa", "x.Faa"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#68", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#70"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#70", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 70, "start_line": 497, "end_line": 503, "text": "type CreateAirportResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirport       *Airport               `protobuf:\"bytes,1,opt,name=airport,proto3\" json:\"airport,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 62, "primary_symbol": "CreateAirportResponse", "primary_kind": "type", "primary_span": [497, 503], "def_symbols": [], "symbols": ["type", "CreateAirportResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airport", "protobuf", "bytes", "opt", "name", "airport", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateAirportResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirport       *Airport               `protobuf:\"bytes,1,opt,name=airport,proto3\" json:\"airport,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateAirportResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateAirportResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateAirportResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateAirportResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateAirportResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [14313], "all_end_bytes": [14586], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "CreateAirportResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#69", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#71"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#71", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 71, "start_line": 504, "end_line": 510, "text": "func (x *CreateAirportResponse) Reset() {\n\t*x = CreateAirportResponse{}\n\tmi := &file_airports_proto_msgTypes[3]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [504, 510], "def_symbols": [], "symbols": ["Reset", "func", "CreateAirportResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateAirportResponse) Reset() {\n\t*x = CreateAirportResponse{}\n\tmi := &file_airports_proto_msgTypes[3]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportResponse", "function_name": "", "method_name": "Reset", "type_name": "CreateAirportResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportResponse"], "all_type_names": ["CreateAirportResponse"], "all_type_kinds": [null], "all_start_bytes": [14588], "all_end_bytes": [14782], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirportResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#70", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#72"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#72", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 72, "start_line": 511, "end_line": 514, "text": "func (x *CreateAirportResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [511, 514], "def_symbols": [], "symbols": ["String", "func", "CreateAirportResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateAirportResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportResponse", "function_name": "", "method_name": "String", "type_name": "CreateAirportResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportResponse"], "all_type_names": ["CreateAirportResponse"], "all_type_kinds": [null], "all_start_bytes": [14784], "all_end_bytes": [14874], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirportResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#71", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#73"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#73", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 73, "start_line": 515, "end_line": 516, "text": "func (*CreateAirportResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [515, 516], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateAirportResponse"], "doc_head": "func (*CreateAirportResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateAirportResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateAirportResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [14876], "all_end_bytes": [14923], "primary_index": 0, "all_receivers_normalized": ["*CreateAirportResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#72", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#74"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#74", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 74, "start_line": 517, "end_line": 528, "text": "func (x *CreateAirportResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[3]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [517, 528], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateAirportResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateAirportResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[3]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateAirportResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportResponse"], "all_type_names": ["CreateAirportResponse"], "all_type_kinds": [null], "all_start_bytes": [14925], "all_end_bytes": [15213], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateAirportResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#73", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#75"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#75", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 75, "start_line": 529, "end_line": 533, "text": "// Deprecated: Use CreateAirportResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateAirportResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{3}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [530, 533], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateAirportResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateAirportResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateAirportResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{3}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateAirportResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateAirportResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [15289], "all_end_bytes": [15403], "primary_index": 0, "all_receivers_normalized": ["*CreateAirportResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateAirportResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#74", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#76"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#76", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 76, "start_line": 534, "end_line": 540, "text": "func (x *CreateAirportResponse) GetAirport() *Airport {\n\tif x != nil {\n\t\treturn x.Airport\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetAirport", "primary_kind": "method", "primary_span": [534, 540], "def_symbols": [], "symbols": ["GetAirport", "func", "CreateAirportResponse", "Airport", "nil", "return"], "doc_head": "func (x *CreateAirportResponse) GetAirport() *Airport {\n\tif x != nil {\n\t\treturn x.Airport\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateAirportResponse).GetAirport/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateAirportResponse", "function_name": "", "method_name": "GetAirport", "type_name": "CreateAirportResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirport"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateAirportResponse).GetAirport/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateAirportResponse"], "all_type_names": ["CreateAirportResponse"], "all_type_kinds": [null], "all_start_bytes": [15405], "all_end_bytes": [15511], "primary_index": 0, "all_receivers_normalized": ["(*CreateAirportResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "CreateAirportResponse", "GetAirport", "x.Airport"], "header_context_minimal": "package v0\n// receiver: x *CreateAirportResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#75", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#77"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#77", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 77, "start_line": 541, "end_line": 548, "text": "type AirportDetailsRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tInclude       []Include              `protobuf:\"varint,2,rep,packed,name=include,proto3,enum=aviation.airports.v0.Include\" json:\"include,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 96, "primary_symbol": "AirportDetailsRequest", "primary_kind": "type", "primary_span": [541, 548], "def_symbols": [], "symbols": ["type", "AirportDetailsRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Include", "varint", "rep", "packed", "include", "enum", "aviation", "airports", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type AirportDetailsRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tInclude       []Include              `protobuf:\"varint,2,rep,packed,name=include,proto3,enum=aviation.airports.v0.Include\" json:\"include,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:AirportDetailsRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirportDetailsRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["AirportDetailsRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirportDetailsRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirportDetailsRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [15518], "all_end_bytes": [15931], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportDetailsRequest", "Include", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#76", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#78"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#78", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 78, "start_line": 549, "end_line": 555, "text": "func (x *AirportDetailsRequest) Reset() {\n\t*x = AirportDetailsRequest{}\n\tmi := &file_airports_proto_msgTypes[4]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [549, 555], "def_symbols": [], "symbols": ["Reset", "func", "AirportDetailsRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *AirportDetailsRequest) Reset() {\n\t*x = AirportDetailsRequest{}\n\tmi := &file_airports_proto_msgTypes[4]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportDetailsRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportDetailsRequest", "function_name": "", "method_name": "Reset", "type_name": "AirportDetailsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportDetailsRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportDetailsRequest"], "all_type_names": ["AirportDetailsRequest"], "all_type_kinds": [null], "all_start_bytes": [15933], "all_end_bytes": [16127], "primary_index": 0, "all_receivers_normalized": ["(*AirportDetailsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportDetailsRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirportDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#77", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#79"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#79", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 79, "start_line": 556, "end_line": 559, "text": "func (x *AirportDetailsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [556, 559], "def_symbols": [], "symbols": ["String", "func", "AirportDetailsRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *AirportDetailsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportDetailsRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportDetailsRequest", "function_name": "", "method_name": "String", "type_name": "AirportDetailsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportDetailsRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportDetailsRequest"], "all_type_names": ["AirportDetailsRequest"], "all_type_kinds": [null], "all_start_bytes": [16129], "all_end_bytes": [16219], "primary_index": 0, "all_receivers_normalized": ["(*AirportDetailsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportDetailsRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirportDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#78", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#80"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#80", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 80, "start_line": 560, "end_line": 561, "text": "func (*AirportDetailsRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [560, 561], "def_symbols": [], "symbols": ["ProtoMessage", "func", "AirportDetailsRequest"], "doc_head": "func (*AirportDetailsRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*AirportDetailsRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*AirportDetailsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [16221], "all_end_bytes": [16268], "primary_index": 0, "all_receivers_normalized": ["*AirportDetailsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportDetailsRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *AirportDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#79", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#81"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#81", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 81, "start_line": 562, "end_line": 573, "text": "func (x *AirportDetailsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[4]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [562, 573], "def_symbols": [], "symbols": ["ProtoReflect", "func", "AirportDetailsRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *AirportDetailsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[4]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportDetailsRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportDetailsRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "AirportDetailsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportDetailsRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportDetailsRequest"], "all_type_names": ["AirportDetailsRequest"], "all_type_kinds": [null], "all_start_bytes": [16270], "all_end_bytes": [16558], "primary_index": 0, "all_receivers_normalized": ["(*AirportDetailsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportDetailsRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *AirportDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#80", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#82"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#82", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 82, "start_line": 574, "end_line": 578, "text": "// Deprecated: Use AirportDetailsRequest.ProtoReflect.Descriptor instead.\nfunc (*AirportDetailsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{4}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [575, 578], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "AirportDetailsRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use AirportDetailsRequest.ProtoReflect.Descriptor instead.\nfunc (*AirportDetailsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{4}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*AirportDetailsRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*AirportDetailsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [16634], "all_end_bytes": [16748], "primary_index": 0, "all_receivers_normalized": ["*AirportDetailsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportDetailsRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *AirportDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#81", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#83"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#83", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 83, "start_line": 579, "end_line": 585, "text": "func (x *AirportDetailsRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [579, 585], "def_symbols": [], "symbols": ["GetId", "func", "AirportDetailsRequest", "string", "nil", "return"], "doc_head": "func (x *AirportDetailsRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportDetailsRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportDetailsRequest", "function_name": "", "method_name": "GetId", "type_name": "AirportDetailsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportDetailsRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportDetailsRequest"], "all_type_names": ["AirportDetailsRequest"], "all_type_kinds": [null], "all_start_bytes": [16750], "all_end_bytes": [16843], "primary_index": 0, "all_receivers_normalized": ["(*AirportDetailsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportDetailsRequest", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *AirportDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#82", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#84"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#84", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 84, "start_line": 586, "end_line": 592, "text": "func (x *AirportDetailsRequest) GetInclude() []Include {\n\tif x != nil {\n\t\treturn x.Include\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetInclude", "primary_kind": "method", "primary_span": [586, 592], "def_symbols": [], "symbols": ["GetInclude", "func", "AirportDetailsRequest", "Include", "nil", "return"], "doc_head": "func (x *AirportDetailsRequest) GetInclude() []Include {\n\tif x != nil {\n\t\treturn x.Include\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportDetailsRequest).GetInclude/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportDetailsRequest", "function_name": "", "method_name": "GetInclude", "type_name": "AirportDetailsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetInclude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportDetailsRequest).GetInclude/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportDetailsRequest"], "all_type_names": ["AirportDetailsRequest"], "all_type_kinds": [null], "all_start_bytes": [16845], "all_end_bytes": [16952], "primary_index": 0, "all_receivers_normalized": ["(*AirportDetailsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportDetailsRequest", "GetInclude", "Include", "x.Include"], "header_context_minimal": "package v0\n// receiver: x *AirportDetailsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#83", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#85"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#85", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 85, "start_line": 593, "end_line": 599, "text": "type AirportDetailsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirport       *Airport               `protobuf:\"bytes,1,opt,name=airport,proto3\" json:\"airport,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 62, "primary_symbol": "AirportDetailsResponse", "primary_kind": "type", "primary_span": [593, 599], "def_symbols": [], "symbols": ["type", "AirportDetailsResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airport", "protobuf", "bytes", "opt", "name", "airport", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type AirportDetailsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirport       *Airport               `protobuf:\"bytes,1,opt,name=airport,proto3\" json:\"airport,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:AirportDetailsResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirportDetailsResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["AirportDetailsResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirportDetailsResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirportDetailsResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [16959], "all_end_bytes": [17233], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "AirportDetailsResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#84", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#86"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#86", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 86, "start_line": 600, "end_line": 606, "text": "func (x *AirportDetailsResponse) Reset() {\n\t*x = AirportDetailsResponse{}\n\tmi := &file_airports_proto_msgTypes[5]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [600, 606], "def_symbols": [], "symbols": ["Reset", "func", "AirportDetailsResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *AirportDetailsResponse) Reset() {\n\t*x = AirportDetailsResponse{}\n\tmi := &file_airports_proto_msgTypes[5]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportDetailsResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportDetailsResponse", "function_name": "", "method_name": "Reset", "type_name": "AirportDetailsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportDetailsResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportDetailsResponse"], "all_type_names": ["AirportDetailsResponse"], "all_type_kinds": [null], "all_start_bytes": [17235], "all_end_bytes": [17431], "primary_index": 0, "all_receivers_normalized": ["(*AirportDetailsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportDetailsResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirportDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#85", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#87"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#87", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 87, "start_line": 607, "end_line": 610, "text": "func (x *AirportDetailsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [607, 610], "def_symbols": [], "symbols": ["String", "func", "AirportDetailsResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *AirportDetailsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportDetailsResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportDetailsResponse", "function_name": "", "method_name": "String", "type_name": "AirportDetailsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportDetailsResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportDetailsResponse"], "all_type_names": ["AirportDetailsResponse"], "all_type_kinds": [null], "all_start_bytes": [17433], "all_end_bytes": [17524], "primary_index": 0, "all_receivers_normalized": ["(*AirportDetailsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportDetailsResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirportDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#86", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#88"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#88", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 88, "start_line": 611, "end_line": 612, "text": "func (*AirportDetailsResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [611, 612], "def_symbols": [], "symbols": ["ProtoMessage", "func", "AirportDetailsResponse"], "doc_head": "func (*AirportDetailsResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*AirportDetailsResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*AirportDetailsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [17526], "all_end_bytes": [17574], "primary_index": 0, "all_receivers_normalized": ["*AirportDetailsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportDetailsResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *AirportDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#87", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#89"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#89", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 89, "start_line": 613, "end_line": 624, "text": "func (x *AirportDetailsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[5]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [613, 624], "def_symbols": [], "symbols": ["ProtoReflect", "func", "AirportDetailsResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *AirportDetailsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[5]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportDetailsResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportDetailsResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "AirportDetailsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportDetailsResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportDetailsResponse"], "all_type_names": ["AirportDetailsResponse"], "all_type_kinds": [null], "all_start_bytes": [17576], "all_end_bytes": [17865], "primary_index": 0, "all_receivers_normalized": ["(*AirportDetailsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportDetailsResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *AirportDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#88", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#90"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#90", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 90, "start_line": 625, "end_line": 629, "text": "// Deprecated: Use AirportDetailsResponse.ProtoReflect.Descriptor instead.\nfunc (*AirportDetailsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{5}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [626, 629], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "AirportDetailsResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use AirportDetailsResponse.ProtoReflect.Descriptor instead.\nfunc (*AirportDetailsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{5}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*AirportDetailsResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*AirportDetailsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [17942], "all_end_bytes": [18057], "primary_index": 0, "all_receivers_normalized": ["*AirportDetailsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportDetailsResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *AirportDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#89", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#91"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#91", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 91, "start_line": 630, "end_line": 636, "text": "func (x *AirportDetailsResponse) GetAirport() *Airport {\n\tif x != nil {\n\t\treturn x.Airport\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetAirport", "primary_kind": "method", "primary_span": [630, 636], "def_symbols": [], "symbols": ["GetAirport", "func", "AirportDetailsResponse", "Airport", "nil", "return"], "doc_head": "func (x *AirportDetailsResponse) GetAirport() *Airport {\n\tif x != nil {\n\t\treturn x.Airport\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportDetailsResponse).GetAirport/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportDetailsResponse", "function_name": "", "method_name": "GetAirport", "type_name": "AirportDetailsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirport"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportDetailsResponse).GetAirport/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportDetailsResponse"], "all_type_names": ["AirportDetailsResponse"], "all_type_kinds": [null], "all_start_bytes": [18059], "all_end_bytes": [18166], "primary_index": 0, "all_receivers_normalized": ["(*AirportDetailsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "AirportDetailsResponse", "GetAirport", "x.Airport"], "header_context_minimal": "package v0\n// receiver: x *AirportDetailsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#90", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#92"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#92", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 92, "start_line": 637, "end_line": 644, "text": "type BatchGetRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tIds           []string               `protobuf:\"bytes,1,rep,name=ids,proto3\" json:\"ids,omitempty\"`\n\tInclude       []Include              `protobuf:\"varint,2,rep,packed,name=include,proto3,enum=aviation.airports.v0.Include\" json:\"include,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 100, "primary_symbol": "BatchGetRequest", "primary_kind": "type", "primary_span": [637, 644], "def_symbols": [], "symbols": ["type", "BatchGetRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Ids", "string", "protobuf", "bytes", "rep", "name", "ids", "proto3", "json", "omitempty", "Include", "varint", "packed", "include", "enum", "aviation", "airports", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type BatchGetRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tIds           []string               `protobuf:\"bytes,1,rep,name=ids,proto3\" json:\"ids,omitempty\"`\n\tInclude       []Include              `protobuf:\"varint,2,rep,packed,name=include,proto3,enum=aviation.airports.v0.Include\" json:\"include,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:BatchGetRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "BatchGetRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["BatchGetRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:BatchGetRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["BatchGetRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [18173], "all_end_bytes": [18582], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetRequest", "Ids", "Include", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#91", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#93"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#93", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 93, "start_line": 645, "end_line": 651, "text": "func (x *BatchGetRequest) Reset() {\n\t*x = BatchGetRequest{}\n\tmi := &file_airports_proto_msgTypes[6]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [645, 651], "def_symbols": [], "symbols": ["Reset", "func", "BatchGetRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *BatchGetRequest) Reset() {\n\t*x = BatchGetRequest{}\n\tmi := &file_airports_proto_msgTypes[6]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetRequest", "function_name": "", "method_name": "Reset", "type_name": "BatchGetRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetRequest"], "all_type_names": ["BatchGetRequest"], "all_type_kinds": [null], "all_start_bytes": [18584], "all_end_bytes": [18766], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#92", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#94"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#94", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 94, "start_line": 652, "end_line": 655, "text": "func (x *BatchGetRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [652, 655], "def_symbols": [], "symbols": ["String", "func", "BatchGetRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *BatchGetRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetRequest", "function_name": "", "method_name": "String", "type_name": "BatchGetRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetRequest"], "all_type_names": ["BatchGetRequest"], "all_type_kinds": [null], "all_start_bytes": [18768], "all_end_bytes": [18852], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#93", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#95"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#95", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 95, "start_line": 656, "end_line": 657, "text": "func (*BatchGetRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [656, 657], "def_symbols": [], "symbols": ["ProtoMessage", "func", "BatchGetRequest"], "doc_head": "func (*BatchGetRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [18854], "all_end_bytes": [18895], "primary_index": 0, "all_receivers_normalized": ["*BatchGetRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#94", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#96"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#96", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 96, "start_line": 658, "end_line": 669, "text": "func (x *BatchGetRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[6]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [658, 669], "def_symbols": [], "symbols": ["ProtoReflect", "func", "BatchGetRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *BatchGetRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[6]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "BatchGetRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetRequest"], "all_type_names": ["BatchGetRequest"], "all_type_kinds": [null], "all_start_bytes": [18897], "all_end_bytes": [19179], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#95", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#97"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#97", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 97, "start_line": 670, "end_line": 674, "text": "// Deprecated: Use BatchGetRequest.ProtoReflect.Descriptor instead.\nfunc (*BatchGetRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{6}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [671, 674], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "BatchGetRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use BatchGetRequest.ProtoReflect.Descriptor instead.\nfunc (*BatchGetRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{6}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [19249], "all_end_bytes": [19357], "primary_index": 0, "all_receivers_normalized": ["*BatchGetRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#96", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#98"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#98", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 98, "start_line": 675, "end_line": 681, "text": "func (x *BatchGetRequest) GetIds() []string {\n\tif x != nil {\n\t\treturn x.Ids\n\t}\n\treturn nil\n}\n", "n_tokens": 31, "primary_symbol": "GetIds", "primary_kind": "method", "primary_span": [675, 681], "def_symbols": [], "symbols": ["GetIds", "func", "BatchGetRequest", "string", "nil", "return", "Ids"], "doc_head": "func (x *BatchGetRequest) GetIds() []string {\n\tif x != nil {\n\t\treturn x.Ids\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetRequest).GetIds/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetRequest", "function_name": "", "method_name": "GetIds", "type_name": "BatchGetRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIds"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetRequest).GetIds/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetRequest"], "all_type_names": ["BatchGetRequest"], "all_type_kinds": [null], "all_start_bytes": [19359], "all_end_bytes": [19451], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetRequest", "GetIds", "Ids", "x.Ids"], "header_context_minimal": "package v0\n// receiver: x *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#97", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#99"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#99", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 99, "start_line": 682, "end_line": 688, "text": "func (x *BatchGetRequest) GetInclude() []Include {\n\tif x != nil {\n\t\treturn x.Include\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetInclude", "primary_kind": "method", "primary_span": [682, 688], "def_symbols": [], "symbols": ["GetInclude", "func", "BatchGetRequest", "Include", "nil", "return"], "doc_head": "func (x *BatchGetRequest) GetInclude() []Include {\n\tif x != nil {\n\t\treturn x.Include\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetRequest).GetInclude/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetRequest", "function_name": "", "method_name": "GetInclude", "type_name": "BatchGetRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetInclude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetRequest).GetInclude/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetRequest"], "all_type_names": ["BatchGetRequest"], "all_type_kinds": [null], "all_start_bytes": [19453], "all_end_bytes": [19554], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetRequest", "GetInclude", "Include", "x.Include"], "header_context_minimal": "package v0\n// receiver: x *BatchGetRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#98", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#100"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#100", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 100, "start_line": 689, "end_line": 695, "text": "type BatchGetResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirports      []*Airport             `protobuf:\"bytes,1,rep,name=airports,proto3\" json:\"airports,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 65, "primary_symbol": "BatchGetResponse", "primary_kind": "type", "primary_span": [689, 695], "def_symbols": [], "symbols": ["type", "BatchGetResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airports", "Airport", "protobuf", "bytes", "rep", "name", "airports", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type BatchGetResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirports      []*Airport             `protobuf:\"bytes,1,rep,name=airports,proto3\" json:\"airports,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:BatchGetResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "BatchGetResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["BatchGetResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:BatchGetResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["BatchGetResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [19561], "all_end_bytes": [19831], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "Airports", "BatchGetResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#99", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#101"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#101", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 101, "start_line": 696, "end_line": 702, "text": "func (x *BatchGetResponse) Reset() {\n\t*x = BatchGetResponse{}\n\tmi := &file_airports_proto_msgTypes[7]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [696, 702], "def_symbols": [], "symbols": ["Reset", "func", "BatchGetResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *BatchGetResponse) Reset() {\n\t*x = BatchGetResponse{}\n\tmi := &file_airports_proto_msgTypes[7]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetResponse", "function_name": "", "method_name": "Reset", "type_name": "BatchGetResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetResponse"], "all_type_names": ["BatchGetResponse"], "all_type_kinds": [null], "all_start_bytes": [19833], "all_end_bytes": [20017], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#100", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#102"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#102", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 102, "start_line": 703, "end_line": 706, "text": "func (x *BatchGetResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [703, 706], "def_symbols": [], "symbols": ["String", "func", "BatchGetResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *BatchGetResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetResponse", "function_name": "", "method_name": "String", "type_name": "BatchGetResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetResponse"], "all_type_names": ["BatchGetResponse"], "all_type_kinds": [null], "all_start_bytes": [20019], "all_end_bytes": [20104], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#101", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#103"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#103", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 103, "start_line": 707, "end_line": 708, "text": "func (*BatchGetResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [707, 708], "def_symbols": [], "symbols": ["ProtoMessage", "func", "BatchGetResponse"], "doc_head": "func (*BatchGetResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [20106], "all_end_bytes": [20148], "primary_index": 0, "all_receivers_normalized": ["*BatchGetResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#102", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#104"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#104", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 104, "start_line": 709, "end_line": 720, "text": "func (x *BatchGetResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[7]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [709, 720], "def_symbols": [], "symbols": ["ProtoReflect", "func", "BatchGetResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *BatchGetResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[7]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "BatchGetResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetResponse"], "all_type_names": ["BatchGetResponse"], "all_type_kinds": [null], "all_start_bytes": [20150], "all_end_bytes": [20433], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#103", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#105"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#105", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 105, "start_line": 721, "end_line": 725, "text": "// Deprecated: Use BatchGetResponse.ProtoReflect.Descriptor instead.\nfunc (*BatchGetResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{7}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [722, 725], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "BatchGetResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use BatchGetResponse.ProtoReflect.Descriptor instead.\nfunc (*BatchGetResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{7}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [20504], "all_end_bytes": [20613], "primary_index": 0, "all_receivers_normalized": ["*BatchGetResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#104", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#106"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#106", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 106, "start_line": 726, "end_line": 732, "text": "func (x *BatchGetResponse) GetAirports() []*Airport {\n\tif x != nil {\n\t\treturn x.Airports\n\t}\n\treturn nil\n}\n", "n_tokens": 33, "primary_symbol": "GetAirports", "primary_kind": "method", "primary_span": [726, 732], "def_symbols": [], "symbols": ["GetAirports", "func", "BatchGetResponse", "Airport", "nil", "return", "Airports"], "doc_head": "func (x *BatchGetResponse) GetAirports() []*Airport {\n\tif x != nil {\n\t\treturn x.Airports\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetResponse).GetAirports/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetResponse", "function_name": "", "method_name": "GetAirports", "type_name": "BatchGetResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirports"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetResponse).GetAirports/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetResponse"], "all_type_names": ["BatchGetResponse"], "all_type_kinds": [null], "all_start_bytes": [20615], "all_end_bytes": [20720], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Airports", "BatchGetResponse", "GetAirports", "x.Airports"], "header_context_minimal": "package v0\n// receiver: x *BatchGetResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#105", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#107"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#107", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 107, "start_line": 733, "end_line": 739, "text": "type AirportByCityRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 61, "primary_symbol": "AirportByCityRequest", "primary_kind": "type", "primary_span": [733, 739], "def_symbols": [], "symbols": ["type", "AirportByCityRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "int64", "protobuf", "varint", "opt", "name", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type AirportByCityRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:AirportByCityRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "AirportByCityRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["AirportByCityRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:AirportByCityRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["AirportByCityRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [20727], "all_end_bytes": [20990], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportByCityRequest", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#106", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#108"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#108", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 108, "start_line": 740, "end_line": 746, "text": "func (x *AirportByCityRequest) Reset() {\n\t*x = AirportByCityRequest{}\n\tmi := &file_airports_proto_msgTypes[8]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [740, 746], "def_symbols": [], "symbols": ["Reset", "func", "AirportByCityRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *AirportByCityRequest) Reset() {\n\t*x = AirportByCityRequest{}\n\tmi := &file_airports_proto_msgTypes[8]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportByCityRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportByCityRequest", "function_name": "", "method_name": "Reset", "type_name": "AirportByCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportByCityRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportByCityRequest"], "all_type_names": ["AirportByCityRequest"], "all_type_kinds": [null], "all_start_bytes": [20992], "all_end_bytes": [21184], "primary_index": 0, "all_receivers_normalized": ["(*AirportByCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportByCityRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirportByCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#107", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#109"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#109", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 109, "start_line": 747, "end_line": 750, "text": "func (x *AirportByCityRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [747, 750], "def_symbols": [], "symbols": ["String", "func", "AirportByCityRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *AirportByCityRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportByCityRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportByCityRequest", "function_name": "", "method_name": "String", "type_name": "AirportByCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportByCityRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportByCityRequest"], "all_type_names": ["AirportByCityRequest"], "all_type_kinds": [null], "all_start_bytes": [21186], "all_end_bytes": [21275], "primary_index": 0, "all_receivers_normalized": ["(*AirportByCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportByCityRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *AirportByCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#108", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#110"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#110", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 110, "start_line": 751, "end_line": 752, "text": "func (*AirportByCityRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [751, 752], "def_symbols": [], "symbols": ["ProtoMessage", "func", "AirportByCityRequest"], "doc_head": "func (*AirportByCityRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*AirportByCityRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*AirportByCityRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [21277], "all_end_bytes": [21323], "primary_index": 0, "all_receivers_normalized": ["*AirportByCityRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportByCityRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *AirportByCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#109", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#111"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#111", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 111, "start_line": 753, "end_line": 764, "text": "func (x *AirportByCityRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[8]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [753, 764], "def_symbols": [], "symbols": ["ProtoReflect", "func", "AirportByCityRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *AirportByCityRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[8]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportByCityRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportByCityRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "AirportByCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportByCityRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportByCityRequest"], "all_type_names": ["AirportByCityRequest"], "all_type_kinds": [null], "all_start_bytes": [21325], "all_end_bytes": [21612], "primary_index": 0, "all_receivers_normalized": ["(*AirportByCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportByCityRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *AirportByCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#110", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#112"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#112", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 112, "start_line": 765, "end_line": 769, "text": "// Deprecated: Use AirportByCityRequest.ProtoReflect.Descriptor instead.\nfunc (*AirportByCityRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{8}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [766, 769], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "AirportByCityRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use AirportByCityRequest.ProtoReflect.Descriptor instead.\nfunc (*AirportByCityRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{8}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*AirportByCityRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*AirportByCityRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [21687], "all_end_bytes": [21800], "primary_index": 0, "all_receivers_normalized": ["*AirportByCityRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportByCityRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *AirportByCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#111", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#113"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#113", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 113, "start_line": 770, "end_line": 776, "text": "func (x *AirportByCityRequest) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [770, 776], "def_symbols": [], "symbols": ["GetId", "func", "AirportByCityRequest", "int64", "nil", "return"], "doc_head": "func (x *AirportByCityRequest) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*AirportByCityRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *AirportByCityRequest", "function_name": "", "method_name": "GetId", "type_name": "AirportByCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*AirportByCityRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *AirportByCityRequest"], "all_type_names": ["AirportByCityRequest"], "all_type_kinds": [null], "all_start_bytes": [21802], "all_end_bytes": [21892], "primary_index": 0, "all_receivers_normalized": ["(*AirportByCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportByCityRequest", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *AirportByCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#112", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#114"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#114", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 114, "start_line": 777, "end_line": 805, "text": "type Airport struct {\n\tstate           protoimpl.MessageState `protogen:\"open.v1\"`\n\tId              string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata            *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao            *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification  int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName            map[string]string      `protobuf:\"bytes,5,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tShortName       map[string]string      `protobuf:\"bytes,6,rep,name=shortName,proto3\" json:\"shortName,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tCity            *Airport_City          `protobuf:\"bytes,7,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tDescription     map[string]string      `protobuf:\"bytes,8,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tLatitude        float32                `protobuf:\"fixed32,9,opt,name=latitude,proto3\" json:\"latitude,omitempty\"`\n\tLongitude       float32                `protobuf:\"fixed32,10,opt,name=longitude,proto3\" json:\"longitude,omitempty\"`\n\tElevation       int32                  `protobuf:\"varint,11,opt,name=elevation,proto3\" json:\"elevation,omitempty\"`\n\tNumberOfRunways int32                  `protobuf:\"varint,12,opt,name=numberOfRunways,proto3\" json:\"numberOfRunways,omitempty\"`\n\tWebsiteUrl      *string                `protobuf:\"bytes,13,opt,name=websiteUrl,proto3,oneof\" json:\"websiteUrl,omitempty\"`\n\tWikipediaUrl    map[string]string      `protobuf:\"bytes,14,rep,name=wikipediaUrl,proto3\" json:\"wikipediaUrl,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tFacebookUrl     *string                `protobuf:\"bytes,15,opt,name=facebookUrl,proto3,oneof\" json:\"facebookUrl,omitempty\"`\n\tTwitterUrl      *string                `protobuf:\"bytes,16,opt,name=twitterUrl,proto3,oneof\" json:\"twitterUrl,omitempty\"`\n\tImages          map[string]string      `protobuf:\"bytes,17,rep,name=images,proto3\" json:\"images,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tTerminalMaps    []*Airport_TerminalMap `protobuf:\"bytes,18,rep,name=terminalMaps,proto3\" json:\"terminalMaps,omitempty\"`\n\tCreatedAt       *timestamppb.Timestamp `protobuf:\"bytes,19,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt       *timestamppb.Timestamp `protobuf:\"bytes,20,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tDesignator      *string                `protobuf:\"bytes,21,opt,name=designator,proto3,oneof\" json:\"designator,omitempty\"`\n\tPristine        bool                   `protobuf:\"varint,22,opt,name=pristine,proto3\" json:\"pristine,omitempty\"`\n\tFaa             *string                `protobuf:\"bytes,23,opt,name=faa,proto3,oneof\" json:\"faa,omitempty\"`\n\tunknownFields   protoimpl.UnknownFields\n\tsizeCache       protoimpl.SizeCache\n}\n", "n_tokens": 765, "primary_symbol": "Airport", "primary_kind": "type", "primary_span": [777, 805], "def_symbols": [], "symbols": ["type", "Airport", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Iata", "iata", "oneof", "Icao", "icao", "Classification", "int64", "varint", "classification", "Name", "map", "rep", "protobuf_key", "key", "protobuf_val", "value", "ShortName", "shortName", "City", "Airport_City", "city", "Description", "description", "Latitude", "float32", "fixed32", "latitude", "Longitude", "longitude", "Elevation", "int32", "elevation", "NumberOfRunways", "numberOfRunways", "WebsiteUrl", "websiteUrl", "WikipediaUrl", "wikipediaUrl", "FacebookUrl", "facebookUrl", "TwitterUrl", "twitterUrl", "Images", "images", "TerminalMaps", "Airport_TerminalMap", "terminalMaps", "CreatedAt", "timestamppb", "Timestamp", "createdAt", "UpdatedAt", "updatedAt", "Designator", "designator", "Pristine", "bool", "pristine", "Faa", "faa", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Airport struct {\n\tstate           protoimpl.MessageState `protogen:\"open.v1\"`\n\tId              string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tIata            *string                `protobuf:\"bytes,2,opt,name=iata,proto3,oneof\" json:\"iata,omitempty\"`\n\tIcao            *string                `protobuf:\"bytes,3,opt,name=icao,proto3,oneof\" json:\"icao,omitempty\"`\n\tClassification  int64                  `protobuf:\"varint,4,opt,name=classification,proto3\" json:\"classification,omitempty\"`\n\tName            map[string]string      `protobuf:\"bytes,5,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tShortName       map[string]string      `protobuf:\"bytes,6,rep,name=shortName,proto3\" json:\"shortName,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tCity            *Airport_City          `protobuf:\"bytes,7,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tDescription     map[string]string      `protobuf:\"bytes,8,rep,name=description,proto3\" json:\"description,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Airport (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airport", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airport"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airport (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airport"], "all_type_kinds": ["struct"], "all_start_bytes": [21899], "all_end_bytes": [25084], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Airport", "Airport_City", "Airport_TerminalMap", "City", "Classification", "CreatedAt", "Description", "Designator", "Elevation", "Faa", "FacebookUrl", "Iata", "Icao", "Images", "Latitude", "Longitude", "MessageState", "Name", "NumberOfRunways", "Pristine", "ShortName", "SizeCache", "TerminalMaps", "Timestamp", "TwitterUrl", "UnknownFields", "UpdatedAt", "WebsiteUrl", "WikipediaUrl", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#113", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#115"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#115", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 115, "start_line": 806, "end_line": 812, "text": "func (x *Airport) Reset() {\n\t*x = Airport{}\n\tmi := &file_airports_proto_msgTypes[9]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 47, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [806, 812], "def_symbols": [], "symbols": ["Reset", "func", "Airport", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Airport) Reset() {\n\t*x = Airport{}\n\tmi := &file_airports_proto_msgTypes[9]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "Reset", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [25086], "all_end_bytes": [25252], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#114", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#116"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#116", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 116, "start_line": 813, "end_line": 816, "text": "func (x *Airport) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 20, "primary_symbol": "String", "primary_kind": "method", "primary_span": [813, 816], "def_symbols": [], "symbols": ["String", "func", "Airport", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Airport) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "String", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [25254], "all_end_bytes": [25330], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#115", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#117"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#117", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 117, "start_line": 817, "end_line": 818, "text": "func (*Airport) ProtoMessage() {}\n", "n_tokens": 8, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [817, 818], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Airport"], "doc_head": "func (*Airport) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Airport", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Airport"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [25332], "all_end_bytes": [25365], "primary_index": 0, "all_receivers_normalized": ["*Airport"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#116", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#118"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#118", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 118, "start_line": 819, "end_line": 830, "text": "func (x *Airport) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[9]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 79, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [819, 830], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Airport", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Airport) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[9]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "ProtoReflect", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [25367], "all_end_bytes": [25641], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#117", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#119"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#119", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 119, "start_line": 831, "end_line": 835, "text": "// Deprecated: Use Airport.ProtoReflect.Descriptor instead.\nfunc (*Airport) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{9}\n}\n", "n_tokens": 41, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [832, 835], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Airport", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Airport.ProtoReflect.Descriptor instead.\nfunc (*Airport) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{9}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Airport", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Airport"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [25703], "all_end_bytes": [25803], "primary_index": 0, "all_receivers_normalized": ["*Airport"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#118", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#120"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#120", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 120, "start_line": 836, "end_line": 842, "text": "func (x *Airport) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 26, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [836, 842], "def_symbols": [], "symbols": ["GetId", "func", "Airport", "string", "nil", "return"], "doc_head": "func (x *Airport) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetId", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [25805], "all_end_bytes": [25884], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#119", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#121"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#121", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 121, "start_line": 843, "end_line": 849, "text": "func (x *Airport) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetIata", "primary_kind": "method", "primary_span": [843, 849], "def_symbols": [], "symbols": ["GetIata", "func", "Airport", "string", "nil", "Iata", "return"], "doc_head": "func (x *Airport) GetIata() string {\n\tif x != nil && x.Iata != nil {\n\t\treturn *x.Iata\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetIata/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetIata", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIata"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetIata/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [25886], "all_end_bytes": [25987], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetIata", "Iata", "x.Iata"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#120", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#122"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#122", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 122, "start_line": 850, "end_line": 856, "text": "func (x *Airport) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetIcao", "primary_kind": "method", "primary_span": [850, 856], "def_symbols": [], "symbols": ["GetIcao", "func", "Airport", "string", "nil", "Icao", "return"], "doc_head": "func (x *Airport) GetIcao() string {\n\tif x != nil && x.Icao != nil {\n\t\treturn *x.Icao\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetIcao/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetIcao", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIcao"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetIcao/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [25989], "all_end_bytes": [26090], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetIcao", "Icao", "x.Icao"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#121", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#123"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#123", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 123, "start_line": 857, "end_line": 863, "text": "func (x *Airport) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}\n", "n_tokens": 30, "primary_symbol": "GetClassification", "primary_kind": "method", "primary_span": [857, 863], "def_symbols": [], "symbols": ["GetClassification", "func", "Airport", "int64", "nil", "return", "Classification"], "doc_head": "func (x *Airport) GetClassification() int64 {\n\tif x != nil {\n\t\treturn x.Classification\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetClassification/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetClassification", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetClassification"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetClassification/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26092], "all_end_bytes": [26193], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Classification", "GetClassification", "x.Classification"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#122", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#124"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#124", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 124, "start_line": 864, "end_line": 870, "text": "func (x *Airport) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 28, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [864, 870], "def_symbols": [], "symbols": ["GetName", "func", "Airport", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *Airport) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetName", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26195], "all_end_bytes": [26290], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#123", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#125"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#125", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 125, "start_line": 871, "end_line": 877, "text": "func (x *Airport) GetShortName() map[string]string {\n\tif x != nil {\n\t\treturn x.ShortName\n\t}\n\treturn nil\n}\n", "n_tokens": 31, "primary_symbol": "GetShortName", "primary_kind": "method", "primary_span": [871, 877], "def_symbols": [], "symbols": ["GetShortName", "func", "Airport", "map", "string", "nil", "return", "ShortName"], "doc_head": "func (x *Airport) GetShortName() map[string]string {\n\tif x != nil {\n\t\treturn x.ShortName\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetShortName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetShortName", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetShortName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetShortName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26292], "all_end_bytes": [26397], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetShortName", "ShortName", "x.ShortName"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#124", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#126"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#126", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 126, "start_line": 878, "end_line": 884, "text": "func (x *Airport) GetCity() *Airport_City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetCity", "primary_kind": "method", "primary_span": [878, 884], "def_symbols": [], "symbols": ["GetCity", "func", "Airport", "Airport_City", "nil", "return", "City"], "doc_head": "func (x *Airport) GetCity() *Airport_City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetCity/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetCity", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCity"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetCity/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26399], "all_end_bytes": [26490], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Airport_City", "City", "GetCity", "x.City"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#125", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#127"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#127", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 127, "start_line": 885, "end_line": 891, "text": "func (x *Airport) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}\n", "n_tokens": 29, "primary_symbol": "GetDescription", "primary_kind": "method", "primary_span": [885, 891], "def_symbols": [], "symbols": ["GetDescription", "func", "Airport", "map", "string", "nil", "return", "Description"], "doc_head": "func (x *Airport) GetDescription() map[string]string {\n\tif x != nil {\n\t\treturn x.Description\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetDescription/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetDescription", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDescription"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetDescription/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26492], "all_end_bytes": [26601], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Description", "GetDescription", "x.Description"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#126", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#128"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#128", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 128, "start_line": 892, "end_line": 898, "text": "func (x *Airport) GetLatitude() float32 {\n\tif x != nil {\n\t\treturn x.Latitude\n\t}\n\treturn 0\n}\n", "n_tokens": 30, "primary_symbol": "GetLatitude", "primary_kind": "method", "primary_span": [892, 898], "def_symbols": [], "symbols": ["GetLatitude", "func", "Airport", "float32", "nil", "return", "Latitude"], "doc_head": "func (x *Airport) GetLatitude() float32 {\n\tif x != nil {\n\t\treturn x.Latitude\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetLatitude/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetLatitude", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLatitude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetLatitude/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26603], "all_end_bytes": [26694], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetLatitude", "Latitude", "x.Latitude"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#127", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#129"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#129", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 129, "start_line": 899, "end_line": 905, "text": "func (x *Airport) GetLongitude() float32 {\n\tif x != nil {\n\t\treturn x.Longitude\n\t}\n\treturn 0\n}\n", "n_tokens": 30, "primary_symbol": "GetLongitude", "primary_kind": "method", "primary_span": [899, 905], "def_symbols": [], "symbols": ["GetLongitude", "func", "Airport", "float32", "nil", "return", "Longitude"], "doc_head": "func (x *Airport) GetLongitude() float32 {\n\tif x != nil {\n\t\treturn x.Longitude\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetLongitude/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetLongitude", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLongitude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetLongitude/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26696], "all_end_bytes": [26789], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetLongitude", "Longitude", "x.Longitude"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#128", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#130"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#130", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 130, "start_line": 906, "end_line": 912, "text": "func (x *Airport) GetElevation() int32 {\n\tif x != nil {\n\t\treturn x.Elevation\n\t}\n\treturn 0\n}\n", "n_tokens": 31, "primary_symbol": "GetElevation", "primary_kind": "method", "primary_span": [906, 912], "def_symbols": [], "symbols": ["GetElevation", "func", "Airport", "int32", "nil", "return", "Elevation"], "doc_head": "func (x *Airport) GetElevation() int32 {\n\tif x != nil {\n\t\treturn x.Elevation\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetElevation/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetElevation", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetElevation"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetElevation/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26791], "all_end_bytes": [26882], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Elevation", "GetElevation", "x.Elevation"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#129", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#131"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#131", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 131, "start_line": 913, "end_line": 919, "text": "func (x *Airport) GetNumberOfRunways() int32 {\n\tif x != nil {\n\t\treturn x.NumberOfRunways\n\t}\n\treturn 0\n}\n", "n_tokens": 34, "primary_symbol": "GetNumberOfRunways", "primary_kind": "method", "primary_span": [913, 919], "def_symbols": [], "symbols": ["GetNumberOfRunways", "func", "Airport", "int32", "nil", "return", "NumberOfRunways"], "doc_head": "func (x *Airport) GetNumberOfRunways() int32 {\n\tif x != nil {\n\t\treturn x.NumberOfRunways\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetNumberOfRunways/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetNumberOfRunways", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetNumberOfRunways"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetNumberOfRunways/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26884], "all_end_bytes": [26987], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetNumberOfRunways", "NumberOfRunways", "x.NumberOfRunways"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#130", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#132"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#132", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 132, "start_line": 920, "end_line": 926, "text": "func (x *Airport) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetWebsiteUrl", "primary_kind": "method", "primary_span": [920, 926], "def_symbols": [], "symbols": ["GetWebsiteUrl", "func", "Airport", "string", "nil", "WebsiteUrl", "return"], "doc_head": "func (x *Airport) GetWebsiteUrl() string {\n\tif x != nil && x.WebsiteUrl != nil {\n\t\treturn *x.WebsiteUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetWebsiteUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetWebsiteUrl", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWebsiteUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetWebsiteUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [26989], "all_end_bytes": [27108], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetWebsiteUrl", "WebsiteUrl", "x.WebsiteUrl"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#131", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#133"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#133", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 133, "start_line": 927, "end_line": 933, "text": "func (x *Airport) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}\n", "n_tokens": 33, "primary_symbol": "GetWikipediaUrl", "primary_kind": "method", "primary_span": [927, 933], "def_symbols": [], "symbols": ["GetWikipediaUrl", "func", "Airport", "map", "string", "nil", "return", "WikipediaUrl"], "doc_head": "func (x *Airport) GetWikipediaUrl() map[string]string {\n\tif x != nil {\n\t\treturn x.WikipediaUrl\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetWikipediaUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetWikipediaUrl", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetWikipediaUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetWikipediaUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [27110], "all_end_bytes": [27221], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetWikipediaUrl", "WikipediaUrl", "x.WikipediaUrl"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#132", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#134"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#134", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 134, "start_line": 934, "end_line": 940, "text": "func (x *Airport) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetFacebookUrl", "primary_kind": "method", "primary_span": [934, 940], "def_symbols": [], "symbols": ["GetFacebookUrl", "func", "Airport", "string", "nil", "FacebookUrl", "return"], "doc_head": "func (x *Airport) GetFacebookUrl() string {\n\tif x != nil && x.FacebookUrl != nil {\n\t\treturn *x.FacebookUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetFacebookUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetFacebookUrl", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFacebookUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetFacebookUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [27223], "all_end_bytes": [27345], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "FacebookUrl", "GetFacebookUrl", "x.FacebookUrl"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#133", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#135"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#135", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 135, "start_line": 941, "end_line": 947, "text": "func (x *Airport) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetTwitterUrl", "primary_kind": "method", "primary_span": [941, 947], "def_symbols": [], "symbols": ["GetTwitterUrl", "func", "Airport", "string", "nil", "TwitterUrl", "return"], "doc_head": "func (x *Airport) GetTwitterUrl() string {\n\tif x != nil && x.TwitterUrl != nil {\n\t\treturn *x.TwitterUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetTwitterUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetTwitterUrl", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTwitterUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetTwitterUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [27347], "all_end_bytes": [27466], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetTwitterUrl", "TwitterUrl", "x.TwitterUrl"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#134", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#136"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#136", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 136, "start_line": 948, "end_line": 954, "text": "func (x *Airport) GetImages() map[string]string {\n\tif x != nil {\n\t\treturn x.Images\n\t}\n\treturn nil\n}\n", "n_tokens": 29, "primary_symbol": "GetImages", "primary_kind": "method", "primary_span": [948, 954], "def_symbols": [], "symbols": ["GetImages", "func", "Airport", "map", "string", "nil", "return", "Images"], "doc_head": "func (x *Airport) GetImages() map[string]string {\n\tif x != nil {\n\t\treturn x.Images\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetImages/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetImages", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetImages"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetImages/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [27468], "all_end_bytes": [27567], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetImages", "Images", "x.Images"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#135", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#137"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#137", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 137, "start_line": 955, "end_line": 961, "text": "func (x *Airport) GetTerminalMaps() []*Airport_TerminalMap {\n\tif x != nil {\n\t\treturn x.TerminalMaps\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetTerminalMaps", "primary_kind": "method", "primary_span": [955, 961], "def_symbols": [], "symbols": ["GetTerminalMaps", "func", "Airport", "Airport_TerminalMap", "nil", "return", "TerminalMaps"], "doc_head": "func (x *Airport) GetTerminalMaps() []*Airport_TerminalMap {\n\tif x != nil {\n\t\treturn x.TerminalMaps\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetTerminalMaps/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetTerminalMaps", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTerminalMaps"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetTerminalMaps/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [27569], "all_end_bytes": [27685], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Airport_TerminalMap", "GetTerminalMaps", "TerminalMaps", "x.TerminalMaps"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#136", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#138"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#138", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 138, "start_line": 962, "end_line": 968, "text": "func (x *Airport) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 33, "primary_symbol": "GetCreatedAt", "primary_kind": "method", "primary_span": [962, 968], "def_symbols": [], "symbols": ["GetCreatedAt", "func", "Airport", "timestamppb", "Timestamp", "nil", "return", "CreatedAt"], "doc_head": "func (x *Airport) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetCreatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetCreatedAt", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCreatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetCreatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [27687], "all_end_bytes": [27797], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Airport", "CreatedAt", "GetCreatedAt", "Timestamp", "timestamppb.Timestamp", "x.CreatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#137", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#139"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#139", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 139, "start_line": 969, "end_line": 975, "text": "func (x *Airport) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 33, "primary_symbol": "GetUpdatedAt", "primary_kind": "method", "primary_span": [969, 975], "def_symbols": [], "symbols": ["GetUpdatedAt", "func", "Airport", "timestamppb", "Timestamp", "nil", "return", "UpdatedAt"], "doc_head": "func (x *Airport) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetUpdatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetUpdatedAt", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUpdatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetUpdatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [27799], "all_end_bytes": [27909], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Airport", "GetUpdatedAt", "Timestamp", "UpdatedAt", "timestamppb.Timestamp", "x.UpdatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#138", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#140"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#140", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 140, "start_line": 976, "end_line": 982, "text": "func (x *Airport) GetDesignator() string {\n\tif x != nil && x.Designator != nil {\n\t\treturn *x.Designator\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [976, 982], "def_symbols": [], "symbols": ["GetDesignator", "func", "Airport", "string", "nil", "Designator", "return"], "doc_head": "func (x *Airport) GetDesignator() string {\n\tif x != nil && x.Designator != nil {\n\t\treturn *x.Designator\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetDesignator", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [27911], "all_end_bytes": [28030], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Designator", "GetDesignator", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#139", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#141"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#141", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 141, "start_line": 983, "end_line": 989, "text": "func (x *Airport) GetPristine() bool {\n\tif x != nil {\n\t\treturn x.Pristine\n\t}\n\treturn false\n}\n", "n_tokens": 31, "primary_symbol": "GetPristine", "primary_kind": "method", "primary_span": [983, 989], "def_symbols": [], "symbols": ["GetPristine", "func", "Airport", "bool", "nil", "return", "Pristine", "false"], "doc_head": "func (x *Airport) GetPristine() bool {\n\tif x != nil {\n\t\treturn x.Pristine\n\t}\n\treturn false\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetPristine/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetPristine", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetPristine"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetPristine/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [28032], "all_end_bytes": [28124], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetPristine", "Pristine", "x.Pristine"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#140", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#142"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#142", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 142, "start_line": 990, "end_line": 996, "text": "func (x *Airport) GetFaa() string {\n\tif x != nil && x.Faa != nil {\n\t\treturn *x.Faa\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetFaa", "primary_kind": "method", "primary_span": [990, 996], "def_symbols": [], "symbols": ["GetFaa", "func", "Airport", "string", "nil", "Faa", "return"], "doc_head": "func (x *Airport) GetFaa() string {\n\tif x != nil && x.Faa != nil {\n\t\treturn *x.Faa\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport).GetFaa/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport", "function_name": "", "method_name": "GetFaa", "type_name": "Airport", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFaa"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport).GetFaa/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport"], "all_type_names": ["Airport"], "all_type_kinds": [null], "all_start_bytes": [28126], "all_end_bytes": [28224], "primary_index": 0, "all_receivers_normalized": ["(*Airport)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Faa", "GetFaa", "x.Faa"], "header_context_minimal": "package v0\n// receiver: x *Airport", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#141", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#143"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#143", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 143, "start_line": 997, "end_line": 1007, "text": "type UploadImageRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Types that are valid to be assigned to Data:\n\t//\n\t//\t*UploadImageRequest_Metadata_\n\t//\t*UploadImageRequest_Chunk\n\tData          isUploadImageRequest_Data `protobuf_oneof:\"data\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 83, "primary_symbol": "UploadImageRequest", "primary_kind": "type", "primary_span": [997, 1007], "def_symbols": [], "symbols": ["type", "UploadImageRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Types", "that", "are", "valid", "assigned", "Data", "UploadImageRequest_Metadata_", "UploadImageRequest_Chunk", "isUploadImageRequest_Data", "protobuf_oneof", "data", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UploadImageRequest struct {\n\tstate protoimpl.MessageState `protogen:\"open.v1\"`\n\t// Types that are valid to be assigned to Data:\n\t//\n\t//\t*UploadImageRequest_Metadata_\n\t//\t*UploadImageRequest_Chunk\n\tData          isUploadImageRequest_Data `protobuf_oneof:\"data\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UploadImageRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UploadImageRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UploadImageRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UploadImageRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UploadImageRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [28231], "all_end_bytes": [28567], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Data", "MessageState", "SizeCache", "UnknownFields", "UploadImageRequest", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#142", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#144"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#144", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 144, "start_line": 1008, "end_line": 1014, "text": "func (x *UploadImageRequest) Reset() {\n\t*x = UploadImageRequest{}\n\tmi := &file_airports_proto_msgTypes[10]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1008, 1014], "def_symbols": [], "symbols": ["Reset", "func", "UploadImageRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UploadImageRequest) Reset() {\n\t*x = UploadImageRequest{}\n\tmi := &file_airports_proto_msgTypes[10]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest", "function_name": "", "method_name": "Reset", "type_name": "UploadImageRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest"], "all_type_names": ["UploadImageRequest"], "all_type_kinds": [null], "all_start_bytes": [28569], "all_end_bytes": [28758], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UploadImageRequest", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UploadImageRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#143", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#145"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#145", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 145, "start_line": 1015, "end_line": 1018, "text": "func (x *UploadImageRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1015, 1018], "def_symbols": [], "symbols": ["String", "func", "UploadImageRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UploadImageRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest", "function_name": "", "method_name": "String", "type_name": "UploadImageRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest"], "all_type_names": ["UploadImageRequest"], "all_type_kinds": [null], "all_start_bytes": [28760], "all_end_bytes": [28847], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UploadImageRequest", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UploadImageRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#144", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#146"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#146", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 146, "start_line": 1019, "end_line": 1020, "text": "func (*UploadImageRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1019, 1020], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UploadImageRequest"], "doc_head": "func (*UploadImageRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UploadImageRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UploadImageRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [28849], "all_end_bytes": [28893], "primary_index": 0, "all_receivers_normalized": ["*UploadImageRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UploadImageRequest"], "header_context_minimal": "package v0\n// receiver: *UploadImageRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#145", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#147"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#147", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 147, "start_line": 1021, "end_line": 1032, "text": "func (x *UploadImageRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[10]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1021, 1032], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UploadImageRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UploadImageRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[10]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "UploadImageRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest"], "all_type_names": ["UploadImageRequest"], "all_type_kinds": [null], "all_start_bytes": [28895], "all_end_bytes": [29181], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UploadImageRequest", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UploadImageRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#146", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#148"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#148", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 148, "start_line": 1033, "end_line": 1037, "text": "// Deprecated: Use UploadImageRequest.ProtoReflect.Descriptor instead.\nfunc (*UploadImageRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{10}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1034, 1037], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UploadImageRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UploadImageRequest.ProtoReflect.Descriptor instead.\nfunc (*UploadImageRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{10}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UploadImageRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UploadImageRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [29254], "all_end_bytes": [29366], "primary_index": 0, "all_receivers_normalized": ["*UploadImageRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UploadImageRequest"], "header_context_minimal": "package v0\n// receiver: *UploadImageRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#147", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#149"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#149", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 149, "start_line": 1038, "end_line": 1044, "text": "func (x *UploadImageRequest) GetData() isUploadImageRequest_Data {\n\tif x != nil {\n\t\treturn x.Data\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetData", "primary_kind": "method", "primary_span": [1038, 1044], "def_symbols": [], "symbols": ["GetData", "func", "UploadImageRequest", "isUploadImageRequest_Data", "nil", "return", "Data"], "doc_head": "func (x *UploadImageRequest) GetData() isUploadImageRequest_Data {\n\tif x != nil {\n\t\treturn x.Data\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest).GetData/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest", "function_name": "", "method_name": "GetData", "type_name": "UploadImageRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetData"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest).GetData/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest"], "all_type_names": ["UploadImageRequest"], "all_type_kinds": [null], "all_start_bytes": [29368], "all_end_bytes": [29482], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Data", "GetData", "UploadImageRequest", "x.Data"], "header_context_minimal": "package v0\n// receiver: x *UploadImageRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#148", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#150"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#150", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 150, "start_line": 1045, "end_line": 1053, "text": "func (x *UploadImageRequest) GetMetadata() *UploadImageRequest_Metadata {\n\tif x != nil {\n\t\tif x, ok := x.Data.(*UploadImageRequest_Metadata_); ok {\n\t\t\treturn x.Metadata\n\t\t}\n\t}\n\treturn nil\n}\n", "n_tokens": 53, "primary_symbol": "GetMetadata", "primary_kind": "method", "primary_span": [1045, 1053], "def_symbols": [], "symbols": ["GetMetadata", "func", "UploadImageRequest", "UploadImageRequest_Metadata", "nil", "Data", "UploadImageRequest_Metadata_", "return", "Metadata"], "doc_head": "func (x *UploadImageRequest) GetMetadata() *UploadImageRequest_Metadata {\n\tif x != nil {\n\t\tif x, ok := x.Data.(*UploadImageRequest_Metadata_); ok {\n\t\t\treturn x.Metadata\n\t\t}\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest).GetMetadata/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest", "function_name": "", "method_name": "GetMetadata", "type_name": "UploadImageRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetMetadata"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest).GetMetadata/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest"], "all_type_names": ["UploadImageRequest"], "all_type_kinds": [null], "all_start_bytes": [29484], "all_end_bytes": [29673], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Data", "GetMetadata", "Metadata", "UploadImageRequest", "UploadImageRequest_Metadata", "UploadImageRequest_Metadata_", "x.Data", "x.Metadata"], "header_context_minimal": "package v0\n// receiver: x *UploadImageRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#149", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#151"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#151", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 151, "start_line": 1054, "end_line": 1062, "text": "func (x *UploadImageRequest) GetChunk() []byte {\n\tif x != nil {\n\t\tif x, ok := x.Data.(*UploadImageRequest_Chunk); ok {\n\t\t\treturn x.Chunk\n\t\t}\n\t}\n\treturn nil\n}\n", "n_tokens": 51, "primary_symbol": "GetChunk", "primary_kind": "method", "primary_span": [1054, 1062], "def_symbols": [], "symbols": ["GetChunk", "func", "UploadImageRequest", "byte", "nil", "Data", "UploadImageRequest_Chunk", "return", "Chunk"], "doc_head": "func (x *UploadImageRequest) GetChunk() []byte {\n\tif x != nil {\n\t\tif x, ok := x.Data.(*UploadImageRequest_Chunk); ok {\n\t\t\treturn x.Chunk\n\t\t}\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest).GetChunk/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest", "function_name": "", "method_name": "GetChunk", "type_name": "UploadImageRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetChunk"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest).GetChunk/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest"], "all_type_names": ["UploadImageRequest"], "all_type_kinds": [null], "all_start_bytes": [29675], "all_end_bytes": [29832], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Chunk", "Data", "GetChunk", "UploadImageRequest", "UploadImageRequest_Chunk", "x.Chunk", "x.Data"], "header_context_minimal": "package v0\n// receiver: x *UploadImageRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#150", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#152"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#152", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 152, "start_line": 1063, "end_line": 1066, "text": "type isUploadImageRequest_Data interface {\n\tisUploadImageRequest_Data()\n}\n", "n_tokens": 15, "primary_symbol": "isUploadImageRequest_Data", "primary_kind": "type", "primary_span": [1063, 1066], "def_symbols": [], "symbols": ["type", "isUploadImageRequest_Data", "interface"], "doc_head": "type isUploadImageRequest_Data interface {\n\tisUploadImageRequest_Data()\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:isUploadImageRequest_Data (interface)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "isUploadImageRequest_Data", "type_kind": "interface", "is_multi_declaration": false, "all_symbols": ["isUploadImageRequest_Data"], "all_kinds": ["type"], "all_ast_paths": ["go:type:isUploadImageRequest_Data (interface)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["isUploadImageRequest_Data"], "all_type_kinds": ["interface"], "all_start_bytes": [29839], "all_end_bytes": [29907], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#151", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#153"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#153", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 153, "start_line": 1067, "end_line": 1070, "text": "type UploadImageRequest_Metadata_ struct {\n\tMetadata *UploadImageRequest_Metadata `protobuf:\"bytes,1,opt,name=metadata,proto3,oneof\"`\n}\n", "n_tokens": 32, "primary_symbol": "UploadImageRequest_Metadata_", "primary_kind": "type", "primary_span": [1067, 1070], "def_symbols": [], "symbols": ["type", "UploadImageRequest_Metadata_", "struct", "Metadata", "UploadImageRequest_Metadata", "protobuf", "bytes", "opt", "name", "metadata", "proto3", "oneof"], "doc_head": "type UploadImageRequest_Metadata_ struct {\n\tMetadata *UploadImageRequest_Metadata `protobuf:\"bytes,1,opt,name=metadata,proto3,oneof\"`\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UploadImageRequest_Metadata_ (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UploadImageRequest_Metadata_", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UploadImageRequest_Metadata_"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UploadImageRequest_Metadata_ (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UploadImageRequest_Metadata_"], "all_type_kinds": ["struct"], "all_start_bytes": [29914], "all_end_bytes": [30044], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Metadata", "UploadImageRequest_Metadata", "UploadImageRequest_Metadata_"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#152", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#154"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#154", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 154, "start_line": 1071, "end_line": 1074, "text": "type UploadImageRequest_Chunk struct {\n\tChunk []byte `protobuf:\"bytes,2,opt,name=chunk,proto3,oneof\"`\n}\n", "n_tokens": 29, "primary_symbol": "UploadImageRequest_Chunk", "primary_kind": "type", "primary_span": [1071, 1074], "def_symbols": [], "symbols": ["type", "UploadImageRequest_Chunk", "struct", "Chunk", "byte", "protobuf", "bytes", "opt", "name", "chunk", "proto3", "oneof"], "doc_head": "type UploadImageRequest_Chunk struct {\n\tChunk []byte `protobuf:\"bytes,2,opt,name=chunk,proto3,oneof\"`\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UploadImageRequest_Chunk (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UploadImageRequest_Chunk", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UploadImageRequest_Chunk"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UploadImageRequest_Chunk (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UploadImageRequest_Chunk"], "all_type_kinds": ["struct"], "all_start_bytes": [30051], "all_end_bytes": [30149], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Chunk", "UploadImageRequest_Chunk"], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#153", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#155"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#155", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 155, "start_line": 1075, "end_line": 1076, "text": "func (*UploadImageRequest_Metadata_) isUploadImageRequest_Data() {}\n", "n_tokens": 14, "primary_symbol": "isUploadImageRequest_Data", "primary_kind": "method", "primary_span": [1075, 1076], "def_symbols": [], "symbols": ["isUploadImageRequest_Data", "func", "UploadImageRequest_Metadata_"], "doc_head": "func (*UploadImageRequest_Metadata_) isUploadImageRequest_Data() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).isUploadImageRequest_Data/complete", "package": "v0", "node_kind": "method", "receiver": "*UploadImageRequest_Metadata_", "function_name": "", "method_name": "isUploadImageRequest_Data", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["isUploadImageRequest_Data"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).isUploadImageRequest_Data/complete"], "all_roles": ["complete"], "all_receivers": ["*UploadImageRequest_Metadata_"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [30151], "all_end_bytes": [30218], "primary_index": 0, "all_receivers_normalized": ["*UploadImageRequest_Metadata_"], "imports_used_minimal": [], "symbols_referenced_strict": ["UploadImageRequest_Metadata_"], "header_context_minimal": "package v0\n// receiver: *UploadImageRequest_Metadata_", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#154", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#156"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#156", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 156, "start_line": 1077, "end_line": 1078, "text": "func (*UploadImageRequest_Chunk) isUploadImageRequest_Data() {}\n", "n_tokens": 15, "primary_symbol": "isUploadImageRequest_Data", "primary_kind": "method", "primary_span": [1077, 1078], "def_symbols": [], "symbols": ["isUploadImageRequest_Data", "func", "UploadImageRequest_Chunk"], "doc_head": "func (*UploadImageRequest_Chunk) isUploadImageRequest_Data() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).isUploadImageRequest_Data/complete", "package": "v0", "node_kind": "method", "receiver": "*UploadImageRequest_Chunk", "function_name": "", "method_name": "isUploadImageRequest_Data", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["isUploadImageRequest_Data"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).isUploadImageRequest_Data/complete"], "all_roles": ["complete"], "all_receivers": ["*UploadImageRequest_Chunk"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [30220], "all_end_bytes": [30283], "primary_index": 0, "all_receivers_normalized": ["*UploadImageRequest_Chunk"], "imports_used_minimal": [], "symbols_referenced_strict": ["UploadImageRequest_Chunk"], "header_context_minimal": "package v0\n// receiver: *UploadImageRequest_Chunk", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#155", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#157"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#157", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 157, "start_line": 1079, "end_line": 1088, "text": "type SearchAirportsRequest struct {\n\tstate                    protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ                        string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit                    uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor                   *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tIncludeWithoutDesignator bool                   `protobuf:\"varint,4,opt,name=includeWithoutDesignator,proto3\" json:\"includeWithoutDesignator,omitempty\"`\n\tunknownFields            protoimpl.UnknownFields\n\tsizeCache                protoimpl.SizeCache\n}\n", "n_tokens": 144, "primary_symbol": "SearchAirportsRequest", "primary_kind": "type", "primary_span": [1079, 1088], "def_symbols": [], "symbols": ["type", "SearchAirportsRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Limit", "uint32", "varint", "limit", "Cursor", "cursor", "oneof", "IncludeWithoutDesignator", "bool", "includeWithoutDesignator", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchAirportsRequest struct {\n\tstate                    protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ                        string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit                    uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor                   *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tIncludeWithoutDesignator bool                   `protobuf:\"varint,4,opt,name=includeWithoutDesignator,proto3\" json:\"includeWithoutDesignator,omitempty\"`\n\tunknownFields            protoimpl.UnknownFields\n\tsizeCache                protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchAirportsRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchAirportsRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchAirportsRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchAirportsRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchAirportsRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [30290], "all_end_bytes": [30988], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Cursor", "IncludeWithoutDesignator", "Limit", "MessageState", "SearchAirportsRequest", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#156", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#158"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#158", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 158, "start_line": 1089, "end_line": 1095, "text": "func (x *SearchAirportsRequest) Reset() {\n\t*x = SearchAirportsRequest{}\n\tmi := &file_airports_proto_msgTypes[11]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1089, 1095], "def_symbols": [], "symbols": ["Reset", "func", "SearchAirportsRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchAirportsRequest) Reset() {\n\t*x = SearchAirportsRequest{}\n\tmi := &file_airports_proto_msgTypes[11]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsRequest", "function_name": "", "method_name": "Reset", "type_name": "SearchAirportsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsRequest"], "all_type_names": ["SearchAirportsRequest"], "all_type_kinds": [null], "all_start_bytes": [30990], "all_end_bytes": [31185], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchAirportsRequest", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchAirportsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#157", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#159"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#159", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 159, "start_line": 1096, "end_line": 1099, "text": "func (x *SearchAirportsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1096, 1099], "def_symbols": [], "symbols": ["String", "func", "SearchAirportsRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchAirportsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsRequest", "function_name": "", "method_name": "String", "type_name": "SearchAirportsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsRequest"], "all_type_names": ["SearchAirportsRequest"], "all_type_kinds": [null], "all_start_bytes": [31187], "all_end_bytes": [31277], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchAirportsRequest", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchAirportsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#158", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#160"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#160", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 160, "start_line": 1100, "end_line": 1101, "text": "func (*SearchAirportsRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1100, 1101], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchAirportsRequest"], "doc_head": "func (*SearchAirportsRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchAirportsRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchAirportsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [31279], "all_end_bytes": [31326], "primary_index": 0, "all_receivers_normalized": ["*SearchAirportsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchAirportsRequest"], "header_context_minimal": "package v0\n// receiver: *SearchAirportsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#159", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#161"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#161", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 161, "start_line": 1102, "end_line": 1113, "text": "func (x *SearchAirportsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[11]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1102, 1113], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchAirportsRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchAirportsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[11]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchAirportsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsRequest"], "all_type_names": ["SearchAirportsRequest"], "all_type_kinds": [null], "all_start_bytes": [31328], "all_end_bytes": [31617], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchAirportsRequest", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchAirportsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#160", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#162"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#162", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 162, "start_line": 1114, "end_line": 1118, "text": "// Deprecated: Use SearchAirportsRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchAirportsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{11}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1115, 1118], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchAirportsRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchAirportsRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchAirportsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{11}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchAirportsRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchAirportsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [31693], "all_end_bytes": [31808], "primary_index": 0, "all_receivers_normalized": ["*SearchAirportsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchAirportsRequest"], "header_context_minimal": "package v0\n// receiver: *SearchAirportsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#161", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#163"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#163", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 163, "start_line": 1119, "end_line": 1125, "text": "func (x *SearchAirportsRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}\n", "n_tokens": 29, "primary_symbol": "GetQ", "primary_kind": "method", "primary_span": [1119, 1125], "def_symbols": [], "symbols": ["GetQ", "func", "SearchAirportsRequest", "string", "nil", "return"], "doc_head": "func (x *SearchAirportsRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsRequest).GetQ/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsRequest", "function_name": "", "method_name": "GetQ", "type_name": "SearchAirportsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetQ"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsRequest).GetQ/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsRequest"], "all_type_names": ["SearchAirportsRequest"], "all_type_kinds": [null], "all_start_bytes": [31810], "all_end_bytes": [31901], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetQ", "SearchAirportsRequest", "x.Q"], "header_context_minimal": "package v0\n// receiver: x *SearchAirportsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#162", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#164"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#164", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 164, "start_line": 1126, "end_line": 1132, "text": "func (x *SearchAirportsRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetLimit", "primary_kind": "method", "primary_span": [1126, 1132], "def_symbols": [], "symbols": ["GetLimit", "func", "SearchAirportsRequest", "uint32", "nil", "return", "Limit"], "doc_head": "func (x *SearchAirportsRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsRequest).GetLimit/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsRequest", "function_name": "", "method_name": "GetLimit", "type_name": "SearchAirportsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLimit"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsRequest).GetLimit/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsRequest"], "all_type_names": ["SearchAirportsRequest"], "all_type_kinds": [null], "all_start_bytes": [31903], "all_end_bytes": [32001], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetLimit", "Limit", "SearchAirportsRequest", "x.Limit"], "header_context_minimal": "package v0\n// receiver: x *SearchAirportsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#163", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#165"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#165", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 165, "start_line": 1133, "end_line": 1139, "text": "func (x *SearchAirportsRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetCursor", "primary_kind": "method", "primary_span": [1133, 1139], "def_symbols": [], "symbols": ["GetCursor", "func", "SearchAirportsRequest", "string", "nil", "Cursor", "return"], "doc_head": "func (x *SearchAirportsRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsRequest).GetCursor/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsRequest", "function_name": "", "method_name": "GetCursor", "type_name": "SearchAirportsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCursor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsRequest).GetCursor/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsRequest"], "all_type_names": ["SearchAirportsRequest"], "all_type_kinds": [null], "all_start_bytes": [32003], "all_end_bytes": [32124], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Cursor", "GetCursor", "SearchAirportsRequest", "x.Cursor"], "header_context_minimal": "package v0\n// receiver: x *SearchAirportsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#164", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#166"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#166", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 166, "start_line": 1140, "end_line": 1146, "text": "func (x *SearchAirportsRequest) GetIncludeWithoutDesignator() bool {\n\tif x != nil {\n\t\treturn x.IncludeWithoutDesignator\n\t}\n\treturn false\n}\n", "n_tokens": 36, "primary_symbol": "GetIncludeWithoutDesignator", "primary_kind": "method", "primary_span": [1140, 1146], "def_symbols": [], "symbols": ["GetIncludeWithoutDesignator", "func", "SearchAirportsRequest", "bool", "nil", "return", "IncludeWithoutDesignator", "false"], "doc_head": "func (x *SearchAirportsRequest) GetIncludeWithoutDesignator() bool {\n\tif x != nil {\n\t\treturn x.IncludeWithoutDesignator\n\t}\n\treturn false\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsRequest).GetIncludeWithoutDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsRequest", "function_name": "", "method_name": "GetIncludeWithoutDesignator", "type_name": "SearchAirportsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetIncludeWithoutDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsRequest).GetIncludeWithoutDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsRequest"], "all_type_names": ["SearchAirportsRequest"], "all_type_kinds": [null], "all_start_bytes": [32126], "all_end_bytes": [32264], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetIncludeWithoutDesignator", "IncludeWithoutDesignator", "SearchAirportsRequest", "x.IncludeWithoutDesignator"], "header_context_minimal": "package v0\n// receiver: x *SearchAirportsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#165", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#167"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#167", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 167, "start_line": 1147, "end_line": 1156, "text": "type SearchAirportsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*Airport             `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,2,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,3,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tTotalCount    uint32                 `protobuf:\"varint,4,opt,name=totalCount,proto3\" json:\"totalCount,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 141, "primary_symbol": "SearchAirportsResponse", "primary_kind": "type", "primary_span": [1147, 1156], "def_symbols": [], "symbols": ["type", "SearchAirportsResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Result", "Airport", "protobuf", "bytes", "rep", "name", "result", "proto3", "json", "omitempty", "Next", "string", "opt", "next", "oneof", "Previous", "previous", "TotalCount", "uint32", "varint", "totalCount", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchAirportsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*Airport             `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,2,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,3,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tTotalCount    uint32                 `protobuf:\"varint,4,opt,name=totalCount,proto3\" json:\"totalCount,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchAirportsResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchAirportsResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchAirportsResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchAirportsResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchAirportsResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [32271], "all_end_bytes": [32882], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "MessageState", "Next", "Previous", "Result", "SearchAirportsResponse", "SizeCache", "TotalCount", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#166", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#168"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#168", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 168, "start_line": 1157, "end_line": 1163, "text": "func (x *SearchAirportsResponse) Reset() {\n\t*x = SearchAirportsResponse{}\n\tmi := &file_airports_proto_msgTypes[12]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1157, 1163], "def_symbols": [], "symbols": ["Reset", "func", "SearchAirportsResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchAirportsResponse) Reset() {\n\t*x = SearchAirportsResponse{}\n\tmi := &file_airports_proto_msgTypes[12]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsResponse", "function_name": "", "method_name": "Reset", "type_name": "SearchAirportsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsResponse"], "all_type_names": ["SearchAirportsResponse"], "all_type_kinds": [null], "all_start_bytes": [32884], "all_end_bytes": [33081], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchAirportsResponse", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchAirportsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#167", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#169"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#169", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 169, "start_line": 1164, "end_line": 1167, "text": "func (x *SearchAirportsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1164, 1167], "def_symbols": [], "symbols": ["String", "func", "SearchAirportsResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchAirportsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsResponse", "function_name": "", "method_name": "String", "type_name": "SearchAirportsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsResponse"], "all_type_names": ["SearchAirportsResponse"], "all_type_kinds": [null], "all_start_bytes": [33083], "all_end_bytes": [33174], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchAirportsResponse", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchAirportsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#168", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#170"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#170", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 170, "start_line": 1168, "end_line": 1169, "text": "func (*SearchAirportsResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1168, 1169], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchAirportsResponse"], "doc_head": "func (*SearchAirportsResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchAirportsResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchAirportsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [33176], "all_end_bytes": [33224], "primary_index": 0, "all_receivers_normalized": ["*SearchAirportsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchAirportsResponse"], "header_context_minimal": "package v0\n// receiver: *SearchAirportsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#169", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#171"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#171", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 171, "start_line": 1170, "end_line": 1181, "text": "func (x *SearchAirportsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[12]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1170, 1181], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchAirportsResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchAirportsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[12]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchAirportsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsResponse"], "all_type_names": ["SearchAirportsResponse"], "all_type_kinds": [null], "all_start_bytes": [33226], "all_end_bytes": [33516], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchAirportsResponse", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchAirportsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#170", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#172"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#172", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 172, "start_line": 1182, "end_line": 1186, "text": "// Deprecated: Use SearchAirportsResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchAirportsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{12}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1183, 1186], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchAirportsResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchAirportsResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchAirportsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{12}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchAirportsResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchAirportsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [33593], "all_end_bytes": [33709], "primary_index": 0, "all_receivers_normalized": ["*SearchAirportsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchAirportsResponse"], "header_context_minimal": "package v0\n// receiver: *SearchAirportsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#171", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#173"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#173", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 173, "start_line": 1187, "end_line": 1193, "text": "func (x *SearchAirportsResponse) GetResult() []*Airport {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}\n", "n_tokens": 31, "primary_symbol": "GetResult", "primary_kind": "method", "primary_span": [1187, 1193], "def_symbols": [], "symbols": ["GetResult", "func", "SearchAirportsResponse", "Airport", "nil", "return", "Result"], "doc_head": "func (x *SearchAirportsResponse) GetResult() []*Airport {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsResponse).GetResult/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsResponse", "function_name": "", "method_name": "GetResult", "type_name": "SearchAirportsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetResult"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsResponse).GetResult/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsResponse"], "all_type_names": ["SearchAirportsResponse"], "all_type_kinds": [null], "all_start_bytes": [33711], "all_end_bytes": [33818], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetResult", "Result", "SearchAirportsResponse", "x.Result"], "header_context_minimal": "package v0\n// receiver: x *SearchAirportsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#172", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#174"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#174", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 174, "start_line": 1194, "end_line": 1200, "text": "func (x *SearchAirportsResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetNext", "primary_kind": "method", "primary_span": [1194, 1200], "def_symbols": [], "symbols": ["GetNext", "func", "SearchAirportsResponse", "string", "nil", "Next", "return"], "doc_head": "func (x *SearchAirportsResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsResponse).GetNext/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsResponse", "function_name": "", "method_name": "GetNext", "type_name": "SearchAirportsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetNext"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsResponse).GetNext/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsResponse"], "all_type_names": ["SearchAirportsResponse"], "all_type_kinds": [null], "all_start_bytes": [33820], "all_end_bytes": [33936], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetNext", "Next", "SearchAirportsResponse", "x.Next"], "header_context_minimal": "package v0\n// receiver: x *SearchAirportsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#173", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#175"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#175", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 175, "start_line": 1201, "end_line": 1207, "text": "func (x *SearchAirportsResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetPrevious", "primary_kind": "method", "primary_span": [1201, 1207], "def_symbols": [], "symbols": ["GetPrevious", "func", "SearchAirportsResponse", "string", "nil", "Previous", "return"], "doc_head": "func (x *SearchAirportsResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsResponse).GetPrevious/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsResponse", "function_name": "", "method_name": "GetPrevious", "type_name": "SearchAirportsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetPrevious"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsResponse).GetPrevious/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsResponse"], "all_type_names": ["SearchAirportsResponse"], "all_type_kinds": [null], "all_start_bytes": [33938], "all_end_bytes": [34066], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetPrevious", "Previous", "SearchAirportsResponse", "x.Previous"], "header_context_minimal": "package v0\n// receiver: x *SearchAirportsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#174", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#176"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#176", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 176, "start_line": 1208, "end_line": 1214, "text": "func (x *SearchAirportsResponse) GetTotalCount() uint32 {\n\tif x != nil {\n\t\treturn x.TotalCount\n\t}\n\treturn 0\n}\n", "n_tokens": 34, "primary_symbol": "GetTotalCount", "primary_kind": "method", "primary_span": [1208, 1214], "def_symbols": [], "symbols": ["GetTotalCount", "func", "SearchAirportsResponse", "uint32", "nil", "return", "TotalCount"], "doc_head": "func (x *SearchAirportsResponse) GetTotalCount() uint32 {\n\tif x != nil {\n\t\treturn x.TotalCount\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchAirportsResponse).GetTotalCount/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchAirportsResponse", "function_name": "", "method_name": "GetTotalCount", "type_name": "SearchAirportsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTotalCount"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchAirportsResponse).GetTotalCount/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchAirportsResponse"], "all_type_names": ["SearchAirportsResponse"], "all_type_kinds": [null], "all_start_bytes": [34068], "all_end_bytes": [34177], "primary_index": 0, "all_receivers_normalized": ["(*SearchAirportsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetTotalCount", "SearchAirportsResponse", "TotalCount", "x.TotalCount"], "header_context_minimal": "package v0\n// receiver: x *SearchAirportsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#175", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#177"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#177", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 177, "start_line": 1215, "end_line": 1223, "text": "type SearchCitiesRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 110, "primary_symbol": "SearchCitiesRequest", "primary_kind": "type", "primary_span": [1215, 1223], "def_symbols": [], "symbols": ["type", "SearchCitiesRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Limit", "uint32", "varint", "limit", "Cursor", "cursor", "oneof", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchCitiesRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchCitiesRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchCitiesRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchCitiesRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchCitiesRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchCitiesRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [34184], "all_end_bytes": [34660], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Cursor", "Limit", "MessageState", "SearchCitiesRequest", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#176", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#178"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#178", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 178, "start_line": 1224, "end_line": 1230, "text": "func (x *SearchCitiesRequest) Reset() {\n\t*x = SearchCitiesRequest{}\n\tmi := &file_airports_proto_msgTypes[13]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1224, 1230], "def_symbols": [], "symbols": ["Reset", "func", "SearchCitiesRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchCitiesRequest) Reset() {\n\t*x = SearchCitiesRequest{}\n\tmi := &file_airports_proto_msgTypes[13]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesRequest", "function_name": "", "method_name": "Reset", "type_name": "SearchCitiesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesRequest"], "all_type_names": ["SearchCitiesRequest"], "all_type_kinds": [null], "all_start_bytes": [34662], "all_end_bytes": [34853], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchCitiesRequest", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchCitiesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#177", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#179"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#179", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 179, "start_line": 1231, "end_line": 1234, "text": "func (x *SearchCitiesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1231, 1234], "def_symbols": [], "symbols": ["String", "func", "SearchCitiesRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchCitiesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesRequest", "function_name": "", "method_name": "String", "type_name": "SearchCitiesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesRequest"], "all_type_names": ["SearchCitiesRequest"], "all_type_kinds": [null], "all_start_bytes": [34855], "all_end_bytes": [34943], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchCitiesRequest", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchCitiesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#178", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#180"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#180", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 180, "start_line": 1235, "end_line": 1236, "text": "func (*SearchCitiesRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1235, 1236], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchCitiesRequest"], "doc_head": "func (*SearchCitiesRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchCitiesRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchCitiesRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [34945], "all_end_bytes": [34990], "primary_index": 0, "all_receivers_normalized": ["*SearchCitiesRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchCitiesRequest"], "header_context_minimal": "package v0\n// receiver: *SearchCitiesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#179", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#181"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#181", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 181, "start_line": 1237, "end_line": 1248, "text": "func (x *SearchCitiesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[13]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1237, 1248], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchCitiesRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchCitiesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[13]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchCitiesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesRequest"], "all_type_names": ["SearchCitiesRequest"], "all_type_kinds": [null], "all_start_bytes": [34992], "all_end_bytes": [35279], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchCitiesRequest", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchCitiesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#180", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#182"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#182", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 182, "start_line": 1249, "end_line": 1253, "text": "// Deprecated: Use SearchCitiesRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchCitiesRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{13}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1250, 1253], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchCitiesRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchCitiesRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchCitiesRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{13}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchCitiesRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchCitiesRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [35353], "all_end_bytes": [35466], "primary_index": 0, "all_receivers_normalized": ["*SearchCitiesRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchCitiesRequest"], "header_context_minimal": "package v0\n// receiver: *SearchCitiesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#181", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#183"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#183", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 183, "start_line": 1254, "end_line": 1260, "text": "func (x *SearchCitiesRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetQ", "primary_kind": "method", "primary_span": [1254, 1260], "def_symbols": [], "symbols": ["GetQ", "func", "SearchCitiesRequest", "string", "nil", "return"], "doc_head": "func (x *SearchCitiesRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesRequest).GetQ/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesRequest", "function_name": "", "method_name": "GetQ", "type_name": "SearchCitiesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetQ"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesRequest).GetQ/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesRequest"], "all_type_names": ["SearchCitiesRequest"], "all_type_kinds": [null], "all_start_bytes": [35468], "all_end_bytes": [35557], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetQ", "SearchCitiesRequest", "x.Q"], "header_context_minimal": "package v0\n// receiver: x *SearchCitiesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#182", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#184"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#184", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 184, "start_line": 1261, "end_line": 1267, "text": "func (x *SearchCitiesRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetLimit", "primary_kind": "method", "primary_span": [1261, 1267], "def_symbols": [], "symbols": ["GetLimit", "func", "SearchCitiesRequest", "uint32", "nil", "return", "Limit"], "doc_head": "func (x *SearchCitiesRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesRequest).GetLimit/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesRequest", "function_name": "", "method_name": "GetLimit", "type_name": "SearchCitiesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLimit"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesRequest).GetLimit/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesRequest"], "all_type_names": ["SearchCitiesRequest"], "all_type_kinds": [null], "all_start_bytes": [35559], "all_end_bytes": [35655], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetLimit", "Limit", "SearchCitiesRequest", "x.Limit"], "header_context_minimal": "package v0\n// receiver: x *SearchCitiesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#183", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#185"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#185", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 185, "start_line": 1268, "end_line": 1274, "text": "func (x *SearchCitiesRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetCursor", "primary_kind": "method", "primary_span": [1268, 1274], "def_symbols": [], "symbols": ["GetCursor", "func", "SearchCitiesRequest", "string", "nil", "Cursor", "return"], "doc_head": "func (x *SearchCitiesRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesRequest).GetCursor/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesRequest", "function_name": "", "method_name": "GetCursor", "type_name": "SearchCitiesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCursor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesRequest).GetCursor/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesRequest"], "all_type_names": ["SearchCitiesRequest"], "all_type_kinds": [null], "all_start_bytes": [35657], "all_end_bytes": [35776], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Cursor", "GetCursor", "SearchCitiesRequest", "x.Cursor"], "header_context_minimal": "package v0\n// receiver: x *SearchCitiesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#184", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#186"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#186", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 186, "start_line": 1275, "end_line": 1283, "text": "type SearchCitiesResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*City                `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,2,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,3,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 114, "primary_symbol": "SearchCitiesResponse", "primary_kind": "type", "primary_span": [1275, 1283], "def_symbols": [], "symbols": ["type", "SearchCitiesResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Result", "City", "protobuf", "bytes", "rep", "name", "result", "proto3", "json", "omitempty", "Next", "string", "opt", "next", "oneof", "Previous", "previous", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchCitiesResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*City                `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,2,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,3,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchCitiesResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchCitiesResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchCitiesResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchCitiesResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchCitiesResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [35783], "all_end_bytes": [36277], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["City", "MessageState", "Next", "Previous", "Result", "SearchCitiesResponse", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#185", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#187"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#187", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 187, "start_line": 1284, "end_line": 1290, "text": "func (x *SearchCitiesResponse) Reset() {\n\t*x = SearchCitiesResponse{}\n\tmi := &file_airports_proto_msgTypes[14]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1284, 1290], "def_symbols": [], "symbols": ["Reset", "func", "SearchCitiesResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchCitiesResponse) Reset() {\n\t*x = SearchCitiesResponse{}\n\tmi := &file_airports_proto_msgTypes[14]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesResponse", "function_name": "", "method_name": "Reset", "type_name": "SearchCitiesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesResponse"], "all_type_names": ["SearchCitiesResponse"], "all_type_kinds": [null], "all_start_bytes": [36279], "all_end_bytes": [36472], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchCitiesResponse", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchCitiesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#186", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#188"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#188", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 188, "start_line": 1291, "end_line": 1294, "text": "func (x *SearchCitiesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1291, 1294], "def_symbols": [], "symbols": ["String", "func", "SearchCitiesResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchCitiesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesResponse", "function_name": "", "method_name": "String", "type_name": "SearchCitiesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesResponse"], "all_type_names": ["SearchCitiesResponse"], "all_type_kinds": [null], "all_start_bytes": [36474], "all_end_bytes": [36563], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchCitiesResponse", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchCitiesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#187", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#189"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#189", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 189, "start_line": 1295, "end_line": 1296, "text": "func (*SearchCitiesResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1295, 1296], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchCitiesResponse"], "doc_head": "func (*SearchCitiesResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchCitiesResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchCitiesResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [36565], "all_end_bytes": [36611], "primary_index": 0, "all_receivers_normalized": ["*SearchCitiesResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchCitiesResponse"], "header_context_minimal": "package v0\n// receiver: *SearchCitiesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#188", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#190"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#190", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 190, "start_line": 1297, "end_line": 1308, "text": "func (x *SearchCitiesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[14]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1297, 1308], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchCitiesResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchCitiesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[14]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchCitiesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesResponse"], "all_type_names": ["SearchCitiesResponse"], "all_type_kinds": [null], "all_start_bytes": [36613], "all_end_bytes": [36901], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchCitiesResponse", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchCitiesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#189", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#191"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#191", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 191, "start_line": 1309, "end_line": 1313, "text": "// Deprecated: Use SearchCitiesResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchCitiesResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{14}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1310, 1313], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchCitiesResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchCitiesResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchCitiesResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{14}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchCitiesResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchCitiesResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [36976], "all_end_bytes": [37090], "primary_index": 0, "all_receivers_normalized": ["*SearchCitiesResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchCitiesResponse"], "header_context_minimal": "package v0\n// receiver: *SearchCitiesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#190", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#192"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#192", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 192, "start_line": 1314, "end_line": 1320, "text": "func (x *SearchCitiesResponse) GetResult() []*City {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetResult", "primary_kind": "method", "primary_span": [1314, 1320], "def_symbols": [], "symbols": ["GetResult", "func", "SearchCitiesResponse", "City", "nil", "return", "Result"], "doc_head": "func (x *SearchCitiesResponse) GetResult() []*City {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesResponse).GetResult/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesResponse", "function_name": "", "method_name": "GetResult", "type_name": "SearchCitiesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetResult"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesResponse).GetResult/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesResponse"], "all_type_names": ["SearchCitiesResponse"], "all_type_kinds": [null], "all_start_bytes": [37092], "all_end_bytes": [37194], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "GetResult", "Result", "SearchCitiesResponse", "x.Result"], "header_context_minimal": "package v0\n// receiver: x *SearchCitiesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#191", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#193"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#193", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 193, "start_line": 1321, "end_line": 1327, "text": "func (x *SearchCitiesResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetNext", "primary_kind": "method", "primary_span": [1321, 1327], "def_symbols": [], "symbols": ["GetNext", "func", "SearchCitiesResponse", "string", "nil", "Next", "return"], "doc_head": "func (x *SearchCitiesResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesResponse).GetNext/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesResponse", "function_name": "", "method_name": "GetNext", "type_name": "SearchCitiesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetNext"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesResponse).GetNext/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesResponse"], "all_type_names": ["SearchCitiesResponse"], "all_type_kinds": [null], "all_start_bytes": [37196], "all_end_bytes": [37310], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetNext", "Next", "SearchCitiesResponse", "x.Next"], "header_context_minimal": "package v0\n// receiver: x *SearchCitiesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#192", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#194"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#194", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 194, "start_line": 1328, "end_line": 1334, "text": "func (x *SearchCitiesResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}\n", "n_tokens": 36, "primary_symbol": "GetPrevious", "primary_kind": "method", "primary_span": [1328, 1334], "def_symbols": [], "symbols": ["GetPrevious", "func", "SearchCitiesResponse", "string", "nil", "Previous", "return"], "doc_head": "func (x *SearchCitiesResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCitiesResponse).GetPrevious/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCitiesResponse", "function_name": "", "method_name": "GetPrevious", "type_name": "SearchCitiesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetPrevious"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCitiesResponse).GetPrevious/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCitiesResponse"], "all_type_names": ["SearchCitiesResponse"], "all_type_kinds": [null], "all_start_bytes": [37312], "all_end_bytes": [37438], "primary_index": 0, "all_receivers_normalized": ["(*SearchCitiesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetPrevious", "Previous", "SearchCitiesResponse", "x.Previous"], "header_context_minimal": "package v0\n// receiver: x *SearchCitiesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#193", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#195"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#195", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 195, "start_line": 1335, "end_line": 1341, "text": "type GetCityRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 60, "primary_symbol": "GetCityRequest", "primary_kind": "type", "primary_span": [1335, 1341], "def_symbols": [], "symbols": ["type", "GetCityRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "int64", "protobuf", "varint", "opt", "name", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetCityRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetCityRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetCityRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetCityRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetCityRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetCityRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [37445], "all_end_bytes": [37702], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCityRequest", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#194", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#196"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#196", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 196, "start_line": 1342, "end_line": 1348, "text": "func (x *GetCityRequest) Reset() {\n\t*x = GetCityRequest{}\n\tmi := &file_airports_proto_msgTypes[15]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1342, 1348], "def_symbols": [], "symbols": ["Reset", "func", "GetCityRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetCityRequest) Reset() {\n\t*x = GetCityRequest{}\n\tmi := &file_airports_proto_msgTypes[15]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCityRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCityRequest", "function_name": "", "method_name": "Reset", "type_name": "GetCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCityRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCityRequest"], "all_type_names": ["GetCityRequest"], "all_type_kinds": [null], "all_start_bytes": [37704], "all_end_bytes": [37885], "primary_index": 0, "all_receivers_normalized": ["(*GetCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCityRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#195", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#197"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#197", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 197, "start_line": 1349, "end_line": 1352, "text": "func (x *GetCityRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1349, 1352], "def_symbols": [], "symbols": ["String", "func", "GetCityRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetCityRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCityRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCityRequest", "function_name": "", "method_name": "String", "type_name": "GetCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCityRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCityRequest"], "all_type_names": ["GetCityRequest"], "all_type_kinds": [null], "all_start_bytes": [37887], "all_end_bytes": [37970], "primary_index": 0, "all_receivers_normalized": ["(*GetCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCityRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#196", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#198"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#198", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 198, "start_line": 1353, "end_line": 1354, "text": "func (*GetCityRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1353, 1354], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetCityRequest"], "doc_head": "func (*GetCityRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetCityRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetCityRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [37972], "all_end_bytes": [38012], "primary_index": 0, "all_receivers_normalized": ["*GetCityRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetCityRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#197", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#199"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#199", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 199, "start_line": 1355, "end_line": 1366, "text": "func (x *GetCityRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[15]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1355, 1366], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetCityRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetCityRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[15]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCityRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCityRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCityRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCityRequest"], "all_type_names": ["GetCityRequest"], "all_type_kinds": [null], "all_start_bytes": [38014], "all_end_bytes": [38296], "primary_index": 0, "all_receivers_normalized": ["(*GetCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCityRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#198", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#200"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#200", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 200, "start_line": 1367, "end_line": 1371, "text": "// Deprecated: Use GetCityRequest.ProtoReflect.Descriptor instead.\nfunc (*GetCityRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{15}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1368, 1371], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetCityRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetCityRequest.ProtoReflect.Descriptor instead.\nfunc (*GetCityRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{15}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetCityRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetCityRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [38365], "all_end_bytes": [38473], "primary_index": 0, "all_receivers_normalized": ["*GetCityRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetCityRequest"], "header_context_minimal": "package v0\n// receiver: *GetCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#199", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#201"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#201", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 201, "start_line": 1372, "end_line": 1378, "text": "func (x *GetCityRequest) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}\n", "n_tokens": 31, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [1372, 1378], "def_symbols": [], "symbols": ["GetId", "func", "GetCityRequest", "int64", "nil", "return"], "doc_head": "func (x *GetCityRequest) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCityRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCityRequest", "function_name": "", "method_name": "GetId", "type_name": "GetCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCityRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCityRequest"], "all_type_names": ["GetCityRequest"], "all_type_kinds": [null], "all_start_bytes": [38475], "all_end_bytes": [38559], "primary_index": 0, "all_receivers_normalized": ["(*GetCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetCityRequest", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *GetCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#200", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#202"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#202", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 202, "start_line": 1379, "end_line": 1385, "text": "type GetCityResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCity          *City                  `protobuf:\"bytes,1,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 61, "primary_symbol": "GetCityResponse", "primary_kind": "type", "primary_span": [1379, 1385], "def_symbols": [], "symbols": ["type", "GetCityResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "City", "protobuf", "bytes", "opt", "name", "city", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetCityResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCity          *City                  `protobuf:\"bytes,1,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetCityResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetCityResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetCityResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetCityResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetCityResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [38566], "all_end_bytes": [38827], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["City", "GetCityResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#201", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#203"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#203", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 203, "start_line": 1386, "end_line": 1392, "text": "func (x *GetCityResponse) Reset() {\n\t*x = GetCityResponse{}\n\tmi := &file_airports_proto_msgTypes[16]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1386, 1392], "def_symbols": [], "symbols": ["Reset", "func", "GetCityResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetCityResponse) Reset() {\n\t*x = GetCityResponse{}\n\tmi := &file_airports_proto_msgTypes[16]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCityResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCityResponse", "function_name": "", "method_name": "Reset", "type_name": "GetCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCityResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCityResponse"], "all_type_names": ["GetCityResponse"], "all_type_kinds": [null], "all_start_bytes": [38829], "all_end_bytes": [39012], "primary_index": 0, "all_receivers_normalized": ["(*GetCityResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCityResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#202", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#204"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#204", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 204, "start_line": 1393, "end_line": 1396, "text": "func (x *GetCityResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1393, 1396], "def_symbols": [], "symbols": ["String", "func", "GetCityResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetCityResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCityResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCityResponse", "function_name": "", "method_name": "String", "type_name": "GetCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCityResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCityResponse"], "all_type_names": ["GetCityResponse"], "all_type_kinds": [null], "all_start_bytes": [39014], "all_end_bytes": [39098], "primary_index": 0, "all_receivers_normalized": ["(*GetCityResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCityResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#203", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#205"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#205", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 205, "start_line": 1397, "end_line": 1398, "text": "func (*GetCityResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1397, 1398], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetCityResponse"], "doc_head": "func (*GetCityResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetCityResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetCityResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [39100], "all_end_bytes": [39141], "primary_index": 0, "all_receivers_normalized": ["*GetCityResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetCityResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#204", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#206"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#206", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 206, "start_line": 1399, "end_line": 1410, "text": "func (x *GetCityResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[16]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1399, 1410], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetCityResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetCityResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[16]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCityResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCityResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCityResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCityResponse"], "all_type_names": ["GetCityResponse"], "all_type_kinds": [null], "all_start_bytes": [39143], "all_end_bytes": [39426], "primary_index": 0, "all_receivers_normalized": ["(*GetCityResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCityResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#205", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#207"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#207", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 207, "start_line": 1411, "end_line": 1415, "text": "// Deprecated: Use GetCityResponse.ProtoReflect.Descriptor instead.\nfunc (*GetCityResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{16}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1412, 1415], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetCityResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetCityResponse.ProtoReflect.Descriptor instead.\nfunc (*GetCityResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{16}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetCityResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetCityResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [39496], "all_end_bytes": [39605], "primary_index": 0, "all_receivers_normalized": ["*GetCityResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetCityResponse"], "header_context_minimal": "package v0\n// receiver: *GetCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#206", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#208"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#208", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 208, "start_line": 1416, "end_line": 1422, "text": "func (x *GetCityResponse) GetCity() *City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetCity", "primary_kind": "method", "primary_span": [1416, 1422], "def_symbols": [], "symbols": ["GetCity", "func", "GetCityResponse", "City", "nil", "return"], "doc_head": "func (x *GetCityResponse) GetCity() *City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCityResponse).GetCity/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCityResponse", "function_name": "", "method_name": "GetCity", "type_name": "GetCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCity"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCityResponse).GetCity/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCityResponse"], "all_type_names": ["GetCityResponse"], "all_type_kinds": [null], "all_start_bytes": [39607], "all_end_bytes": [39698], "primary_index": 0, "all_receivers_normalized": ["(*GetCityResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "GetCity", "GetCityResponse", "x.City"], "header_context_minimal": "package v0\n// receiver: x *GetCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#207", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#209"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#209", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 209, "start_line": 1423, "end_line": 1432, "text": "type CreateCityRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tName          map[string]string      `protobuf:\"bytes,1,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tState         *string                `protobuf:\"bytes,2,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tTimezone      string                 `protobuf:\"bytes,3,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tCountryId     string                 `protobuf:\"bytes,4,opt,name=countryId,proto3\" json:\"countryId,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 156, "primary_symbol": "CreateCityRequest", "primary_kind": "type", "primary_span": [1423, 1432], "def_symbols": [], "symbols": ["type", "CreateCityRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Name", "map", "string", "protobuf", "bytes", "rep", "name", "proto3", "json", "omitempty", "protobuf_key", "opt", "key", "protobuf_val", "value", "State", "oneof", "Timezone", "timezone", "CountryId", "countryId", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateCityRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tName          map[string]string      `protobuf:\"bytes,1,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tState         *string                `protobuf:\"bytes,2,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tTimezone      string                 `protobuf:\"bytes,3,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tCountryId     string                 `protobuf:\"bytes,4,opt,name=countryId,proto3\" json:\"countryId,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateCityRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateCityRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateCityRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateCityRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateCityRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [39705], "all_end_bytes": [40374], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CountryId", "CreateCityRequest", "MessageState", "Name", "SizeCache", "State", "Timezone", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#208", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#210"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#210", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 210, "start_line": 1433, "end_line": 1439, "text": "func (x *CreateCityRequest) Reset() {\n\t*x = CreateCityRequest{}\n\tmi := &file_airports_proto_msgTypes[17]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1433, 1439], "def_symbols": [], "symbols": ["Reset", "func", "CreateCityRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateCityRequest) Reset() {\n\t*x = CreateCityRequest{}\n\tmi := &file_airports_proto_msgTypes[17]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityRequest", "function_name": "", "method_name": "Reset", "type_name": "CreateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityRequest"], "all_type_names": ["CreateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [40376], "all_end_bytes": [40563], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCityRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#209", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#211"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#211", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 211, "start_line": 1440, "end_line": 1443, "text": "func (x *CreateCityRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1440, 1443], "def_symbols": [], "symbols": ["String", "func", "CreateCityRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateCityRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityRequest", "function_name": "", "method_name": "String", "type_name": "CreateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityRequest"], "all_type_names": ["CreateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [40565], "all_end_bytes": [40651], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCityRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#210", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#212"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#212", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 212, "start_line": 1444, "end_line": 1445, "text": "func (*CreateCityRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1444, 1445], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateCityRequest"], "doc_head": "func (*CreateCityRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateCityRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateCityRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [40653], "all_end_bytes": [40696], "primary_index": 0, "all_receivers_normalized": ["*CreateCityRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCityRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#211", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#213"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#213", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 213, "start_line": 1446, "end_line": 1457, "text": "func (x *CreateCityRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[17]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1446, 1457], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateCityRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateCityRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[17]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityRequest"], "all_type_names": ["CreateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [40698], "all_end_bytes": [40983], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCityRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#212", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#214"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#214", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 214, "start_line": 1458, "end_line": 1462, "text": "// Deprecated: Use CreateCityRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateCityRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{17}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1459, 1462], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateCityRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateCityRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateCityRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{17}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateCityRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateCityRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [41055], "all_end_bytes": [41166], "primary_index": 0, "all_receivers_normalized": ["*CreateCityRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCityRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#213", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#215"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#215", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 215, "start_line": 1463, "end_line": 1469, "text": "func (x *CreateCityRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [1463, 1469], "def_symbols": [], "symbols": ["GetName", "func", "CreateCityRequest", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *CreateCityRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityRequest).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityRequest", "function_name": "", "method_name": "GetName", "type_name": "CreateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityRequest).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityRequest"], "all_type_names": ["CreateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [41168], "all_end_bytes": [41273], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCityRequest", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *CreateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#214", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#216"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#216", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 216, "start_line": 1470, "end_line": 1476, "text": "func (x *CreateCityRequest) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetState", "primary_kind": "method", "primary_span": [1470, 1476], "def_symbols": [], "symbols": ["GetState", "func", "CreateCityRequest", "string", "nil", "State", "return"], "doc_head": "func (x *CreateCityRequest) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityRequest).GetState/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityRequest", "function_name": "", "method_name": "GetState", "type_name": "CreateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetState"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityRequest).GetState/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityRequest"], "all_type_names": ["CreateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [41275], "all_end_bytes": [41389], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCityRequest", "GetState", "State", "x.State"], "header_context_minimal": "package v0\n// receiver: x *CreateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#215", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#217"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#217", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 217, "start_line": 1477, "end_line": 1483, "text": "func (x *CreateCityRequest) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}\n", "n_tokens": 30, "primary_symbol": "GetTimezone", "primary_kind": "method", "primary_span": [1477, 1483], "def_symbols": [], "symbols": ["GetTimezone", "func", "CreateCityRequest", "string", "nil", "return", "Timezone"], "doc_head": "func (x *CreateCityRequest) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityRequest).GetTimezone/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityRequest", "function_name": "", "method_name": "GetTimezone", "type_name": "CreateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTimezone"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityRequest).GetTimezone/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityRequest"], "all_type_names": ["CreateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [41391], "all_end_bytes": [41492], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCityRequest", "GetTimezone", "Timezone", "x.Timezone"], "header_context_minimal": "package v0\n// receiver: x *CreateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#216", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#218"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#218", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 218, "start_line": 1484, "end_line": 1490, "text": "func (x *CreateCityRequest) GetCountryId() string {\n\tif x != nil {\n\t\treturn x.CountryId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 30, "primary_symbol": "GetCountryId", "primary_kind": "method", "primary_span": [1484, 1490], "def_symbols": [], "symbols": ["GetCountryId", "func", "CreateCityRequest", "string", "nil", "return", "CountryId"], "doc_head": "func (x *CreateCityRequest) GetCountryId() string {\n\tif x != nil {\n\t\treturn x.CountryId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityRequest).GetCountryId/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityRequest", "function_name": "", "method_name": "GetCountryId", "type_name": "CreateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCountryId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityRequest).GetCountryId/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityRequest"], "all_type_names": ["CreateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [41494], "all_end_bytes": [41597], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CountryId", "CreateCityRequest", "GetCountryId", "x.CountryId"], "header_context_minimal": "package v0\n// receiver: x *CreateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#217", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#219"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#219", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 219, "start_line": 1491, "end_line": 1497, "text": "type CreateCityResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCity          *City                  `protobuf:\"bytes,1,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 61, "primary_symbol": "CreateCityResponse", "primary_kind": "type", "primary_span": [1491, 1497], "def_symbols": [], "symbols": ["type", "CreateCityResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "City", "protobuf", "bytes", "opt", "name", "city", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateCityResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCity          *City                  `protobuf:\"bytes,1,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateCityResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateCityResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateCityResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateCityResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateCityResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [41604], "all_end_bytes": [41868], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["City", "CreateCityResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#218", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#220"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#220", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 220, "start_line": 1498, "end_line": 1504, "text": "func (x *CreateCityResponse) Reset() {\n\t*x = CreateCityResponse{}\n\tmi := &file_airports_proto_msgTypes[18]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1498, 1504], "def_symbols": [], "symbols": ["Reset", "func", "CreateCityResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateCityResponse) Reset() {\n\t*x = CreateCityResponse{}\n\tmi := &file_airports_proto_msgTypes[18]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityResponse", "function_name": "", "method_name": "Reset", "type_name": "CreateCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityResponse"], "all_type_names": ["CreateCityResponse"], "all_type_kinds": [null], "all_start_bytes": [41870], "all_end_bytes": [42059], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCityResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#219", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#221"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#221", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 221, "start_line": 1505, "end_line": 1508, "text": "func (x *CreateCityResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1505, 1508], "def_symbols": [], "symbols": ["String", "func", "CreateCityResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateCityResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityResponse", "function_name": "", "method_name": "String", "type_name": "CreateCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityResponse"], "all_type_names": ["CreateCityResponse"], "all_type_kinds": [null], "all_start_bytes": [42061], "all_end_bytes": [42148], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCityResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#220", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#222"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#222", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 222, "start_line": 1509, "end_line": 1510, "text": "func (*CreateCityResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1509, 1510], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateCityResponse"], "doc_head": "func (*CreateCityResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateCityResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateCityResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [42150], "all_end_bytes": [42194], "primary_index": 0, "all_receivers_normalized": ["*CreateCityResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCityResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#221", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#223"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#223", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 223, "start_line": 1511, "end_line": 1522, "text": "func (x *CreateCityResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[18]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1511, 1522], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateCityResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateCityResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[18]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityResponse"], "all_type_names": ["CreateCityResponse"], "all_type_kinds": [null], "all_start_bytes": [42196], "all_end_bytes": [42482], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCityResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#222", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#224"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#224", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 224, "start_line": 1523, "end_line": 1527, "text": "// Deprecated: Use CreateCityResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateCityResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{18}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1524, 1527], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateCityResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateCityResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateCityResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{18}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateCityResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateCityResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [42555], "all_end_bytes": [42667], "primary_index": 0, "all_receivers_normalized": ["*CreateCityResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCityResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#223", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#225"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#225", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 225, "start_line": 1528, "end_line": 1534, "text": "func (x *CreateCityResponse) GetCity() *City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetCity", "primary_kind": "method", "primary_span": [1528, 1534], "def_symbols": [], "symbols": ["GetCity", "func", "CreateCityResponse", "City", "nil", "return"], "doc_head": "func (x *CreateCityResponse) GetCity() *City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCityResponse).GetCity/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCityResponse", "function_name": "", "method_name": "GetCity", "type_name": "CreateCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCity"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCityResponse).GetCity/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCityResponse"], "all_type_names": ["CreateCityResponse"], "all_type_kinds": [null], "all_start_bytes": [42669], "all_end_bytes": [42763], "primary_index": 0, "all_receivers_normalized": ["(*CreateCityResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "CreateCityResponse", "GetCity", "x.City"], "header_context_minimal": "package v0\n// receiver: x *CreateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#224", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#226"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#226", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 226, "start_line": 1535, "end_line": 1545, "text": "type UpdateCityRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tState         *string                `protobuf:\"bytes,3,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tTimezone      string                 `protobuf:\"bytes,4,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tCountryId     string                 `protobuf:\"bytes,5,opt,name=countryId,proto3\" json:\"countryId,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 179, "primary_symbol": "UpdateCityRequest", "primary_kind": "type", "primary_span": [1535, 1545], "def_symbols": [], "symbols": ["type", "UpdateCityRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "int64", "protobuf", "varint", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "string", "bytes", "rep", "protobuf_key", "key", "protobuf_val", "value", "State", "oneof", "Timezone", "timezone", "CountryId", "countryId", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateCityRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tState         *string                `protobuf:\"bytes,3,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tTimezone      string                 `protobuf:\"bytes,4,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tCountryId     string                 `protobuf:\"bytes,5,opt,name=countryId,proto3\" json:\"countryId,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateCityRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateCityRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateCityRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateCityRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateCityRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [42770], "all_end_bytes": [43538], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CountryId", "MessageState", "Name", "SizeCache", "State", "Timezone", "UnknownFields", "UpdateCityRequest", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#225", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#227"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#227", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 227, "start_line": 1546, "end_line": 1552, "text": "func (x *UpdateCityRequest) Reset() {\n\t*x = UpdateCityRequest{}\n\tmi := &file_airports_proto_msgTypes[19]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1546, 1552], "def_symbols": [], "symbols": ["Reset", "func", "UpdateCityRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateCityRequest) Reset() {\n\t*x = UpdateCityRequest{}\n\tmi := &file_airports_proto_msgTypes[19]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityRequest", "function_name": "", "method_name": "Reset", "type_name": "UpdateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityRequest"], "all_type_names": ["UpdateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [43540], "all_end_bytes": [43727], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateCityRequest", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#226", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#228"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#228", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 228, "start_line": 1553, "end_line": 1556, "text": "func (x *UpdateCityRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1553, 1556], "def_symbols": [], "symbols": ["String", "func", "UpdateCityRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateCityRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityRequest", "function_name": "", "method_name": "String", "type_name": "UpdateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityRequest"], "all_type_names": ["UpdateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [43729], "all_end_bytes": [43815], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateCityRequest", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#227", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#229"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#229", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 229, "start_line": 1557, "end_line": 1558, "text": "func (*UpdateCityRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1557, 1558], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateCityRequest"], "doc_head": "func (*UpdateCityRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateCityRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateCityRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [43817], "all_end_bytes": [43860], "primary_index": 0, "all_receivers_normalized": ["*UpdateCityRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateCityRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#228", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#230"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#230", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 230, "start_line": 1559, "end_line": 1570, "text": "func (x *UpdateCityRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[19]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1559, 1570], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateCityRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateCityRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[19]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityRequest"], "all_type_names": ["UpdateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [43862], "all_end_bytes": [44147], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateCityRequest", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#229", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#231"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#231", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 231, "start_line": 1571, "end_line": 1575, "text": "// Deprecated: Use UpdateCityRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateCityRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{19}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1572, 1575], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateCityRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateCityRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateCityRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{19}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateCityRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateCityRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [44219], "all_end_bytes": [44330], "primary_index": 0, "all_receivers_normalized": ["*UpdateCityRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateCityRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#230", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#232"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#232", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 232, "start_line": 1576, "end_line": 1582, "text": "func (x *UpdateCityRequest) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}\n", "n_tokens": 31, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [1576, 1582], "def_symbols": [], "symbols": ["GetId", "func", "UpdateCityRequest", "int64", "nil", "return"], "doc_head": "func (x *UpdateCityRequest) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityRequest", "function_name": "", "method_name": "GetId", "type_name": "UpdateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityRequest"], "all_type_names": ["UpdateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [44332], "all_end_bytes": [44419], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetId", "UpdateCityRequest", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#231", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#233"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#233", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 233, "start_line": 1583, "end_line": 1589, "text": "func (x *UpdateCityRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [1583, 1589], "def_symbols": [], "symbols": ["GetName", "func", "UpdateCityRequest", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *UpdateCityRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityRequest).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityRequest", "function_name": "", "method_name": "GetName", "type_name": "UpdateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityRequest).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityRequest"], "all_type_names": ["UpdateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [44421], "all_end_bytes": [44526], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetName", "Name", "UpdateCityRequest", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#232", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#234"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#234", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 234, "start_line": 1590, "end_line": 1596, "text": "func (x *UpdateCityRequest) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetState", "primary_kind": "method", "primary_span": [1590, 1596], "def_symbols": [], "symbols": ["GetState", "func", "UpdateCityRequest", "string", "nil", "State", "return"], "doc_head": "func (x *UpdateCityRequest) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityRequest).GetState/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityRequest", "function_name": "", "method_name": "GetState", "type_name": "UpdateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetState"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityRequest).GetState/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityRequest"], "all_type_names": ["UpdateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [44528], "all_end_bytes": [44642], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetState", "State", "UpdateCityRequest", "x.State"], "header_context_minimal": "package v0\n// receiver: x *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#233", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#235"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#235", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 235, "start_line": 1597, "end_line": 1603, "text": "func (x *UpdateCityRequest) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}\n", "n_tokens": 30, "primary_symbol": "GetTimezone", "primary_kind": "method", "primary_span": [1597, 1603], "def_symbols": [], "symbols": ["GetTimezone", "func", "UpdateCityRequest", "string", "nil", "return", "Timezone"], "doc_head": "func (x *UpdateCityRequest) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityRequest).GetTimezone/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityRequest", "function_name": "", "method_name": "GetTimezone", "type_name": "UpdateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTimezone"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityRequest).GetTimezone/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityRequest"], "all_type_names": ["UpdateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [44644], "all_end_bytes": [44745], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetTimezone", "Timezone", "UpdateCityRequest", "x.Timezone"], "header_context_minimal": "package v0\n// receiver: x *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#234", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#236"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#236", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 236, "start_line": 1604, "end_line": 1610, "text": "func (x *UpdateCityRequest) GetCountryId() string {\n\tif x != nil {\n\t\treturn x.CountryId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 30, "primary_symbol": "GetCountryId", "primary_kind": "method", "primary_span": [1604, 1610], "def_symbols": [], "symbols": ["GetCountryId", "func", "UpdateCityRequest", "string", "nil", "return", "CountryId"], "doc_head": "func (x *UpdateCityRequest) GetCountryId() string {\n\tif x != nil {\n\t\treturn x.CountryId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityRequest).GetCountryId/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityRequest", "function_name": "", "method_name": "GetCountryId", "type_name": "UpdateCityRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCountryId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityRequest).GetCountryId/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityRequest"], "all_type_names": ["UpdateCityRequest"], "all_type_kinds": [null], "all_start_bytes": [44747], "all_end_bytes": [44850], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CountryId", "GetCountryId", "UpdateCityRequest", "x.CountryId"], "header_context_minimal": "package v0\n// receiver: x *UpdateCityRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#235", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#237"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#237", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 237, "start_line": 1611, "end_line": 1617, "text": "type UpdateCityResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCity          *City                  `protobuf:\"bytes,1,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 61, "primary_symbol": "UpdateCityResponse", "primary_kind": "type", "primary_span": [1611, 1617], "def_symbols": [], "symbols": ["type", "UpdateCityResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "City", "protobuf", "bytes", "opt", "name", "city", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateCityResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCity          *City                  `protobuf:\"bytes,1,opt,name=city,proto3\" json:\"city,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateCityResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateCityResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateCityResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateCityResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateCityResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [44857], "all_end_bytes": [45121], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["City", "MessageState", "SizeCache", "UnknownFields", "UpdateCityResponse", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#236", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#238"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#238", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 238, "start_line": 1618, "end_line": 1624, "text": "func (x *UpdateCityResponse) Reset() {\n\t*x = UpdateCityResponse{}\n\tmi := &file_airports_proto_msgTypes[20]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1618, 1624], "def_symbols": [], "symbols": ["Reset", "func", "UpdateCityResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateCityResponse) Reset() {\n\t*x = UpdateCityResponse{}\n\tmi := &file_airports_proto_msgTypes[20]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityResponse", "function_name": "", "method_name": "Reset", "type_name": "UpdateCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityResponse"], "all_type_names": ["UpdateCityResponse"], "all_type_kinds": [null], "all_start_bytes": [45123], "all_end_bytes": [45312], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateCityResponse", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#237", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#239"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#239", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 239, "start_line": 1625, "end_line": 1628, "text": "func (x *UpdateCityResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1625, 1628], "def_symbols": [], "symbols": ["String", "func", "UpdateCityResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateCityResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityResponse", "function_name": "", "method_name": "String", "type_name": "UpdateCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityResponse"], "all_type_names": ["UpdateCityResponse"], "all_type_kinds": [null], "all_start_bytes": [45314], "all_end_bytes": [45401], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateCityResponse", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#238", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#240"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#240", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 240, "start_line": 1629, "end_line": 1630, "text": "func (*UpdateCityResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1629, 1630], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateCityResponse"], "doc_head": "func (*UpdateCityResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateCityResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateCityResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [45403], "all_end_bytes": [45447], "primary_index": 0, "all_receivers_normalized": ["*UpdateCityResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateCityResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#239", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#241"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#241", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 241, "start_line": 1631, "end_line": 1642, "text": "func (x *UpdateCityResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[20]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1631, 1642], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateCityResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateCityResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[20]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityResponse"], "all_type_names": ["UpdateCityResponse"], "all_type_kinds": [null], "all_start_bytes": [45449], "all_end_bytes": [45735], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateCityResponse", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#240", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#242"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#242", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 242, "start_line": 1643, "end_line": 1647, "text": "// Deprecated: Use UpdateCityResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateCityResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{20}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1644, 1647], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateCityResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateCityResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateCityResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{20}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateCityResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateCityResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [45808], "all_end_bytes": [45920], "primary_index": 0, "all_receivers_normalized": ["*UpdateCityResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateCityResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#241", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#243"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#243", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 243, "start_line": 1648, "end_line": 1654, "text": "func (x *UpdateCityResponse) GetCity() *City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetCity", "primary_kind": "method", "primary_span": [1648, 1654], "def_symbols": [], "symbols": ["GetCity", "func", "UpdateCityResponse", "City", "nil", "return"], "doc_head": "func (x *UpdateCityResponse) GetCity() *City {\n\tif x != nil {\n\t\treturn x.City\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCityResponse).GetCity/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCityResponse", "function_name": "", "method_name": "GetCity", "type_name": "UpdateCityResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCity"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCityResponse).GetCity/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCityResponse"], "all_type_names": ["UpdateCityResponse"], "all_type_kinds": [null], "all_start_bytes": [45922], "all_end_bytes": [46016], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCityResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "GetCity", "UpdateCityResponse", "x.City"], "header_context_minimal": "package v0\n// receiver: x *UpdateCityResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#242", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#244"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#244", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 244, "start_line": 1655, "end_line": 1663, "text": "type SearchCountriesRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 110, "primary_symbol": "SearchCountriesRequest", "primary_kind": "type", "primary_span": [1655, 1663], "def_symbols": [], "symbols": ["type", "SearchCountriesRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Limit", "uint32", "varint", "limit", "Cursor", "cursor", "oneof", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchCountriesRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchCountriesRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchCountriesRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchCountriesRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchCountriesRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchCountriesRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [46023], "all_end_bytes": [46502], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Cursor", "Limit", "MessageState", "SearchCountriesRequest", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#243", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#245"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#245", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 245, "start_line": 1664, "end_line": 1670, "text": "func (x *SearchCountriesRequest) Reset() {\n\t*x = SearchCountriesRequest{}\n\tmi := &file_airports_proto_msgTypes[21]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1664, 1670], "def_symbols": [], "symbols": ["Reset", "func", "SearchCountriesRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchCountriesRequest) Reset() {\n\t*x = SearchCountriesRequest{}\n\tmi := &file_airports_proto_msgTypes[21]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesRequest", "function_name": "", "method_name": "Reset", "type_name": "SearchCountriesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesRequest"], "all_type_names": ["SearchCountriesRequest"], "all_type_kinds": [null], "all_start_bytes": [46504], "all_end_bytes": [46701], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchCountriesRequest", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchCountriesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#244", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#246"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#246", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 246, "start_line": 1671, "end_line": 1674, "text": "func (x *SearchCountriesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1671, 1674], "def_symbols": [], "symbols": ["String", "func", "SearchCountriesRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchCountriesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesRequest", "function_name": "", "method_name": "String", "type_name": "SearchCountriesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesRequest"], "all_type_names": ["SearchCountriesRequest"], "all_type_kinds": [null], "all_start_bytes": [46703], "all_end_bytes": [46794], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchCountriesRequest", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchCountriesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#245", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#247"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#247", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 247, "start_line": 1675, "end_line": 1676, "text": "func (*SearchCountriesRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1675, 1676], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchCountriesRequest"], "doc_head": "func (*SearchCountriesRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchCountriesRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchCountriesRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [46796], "all_end_bytes": [46844], "primary_index": 0, "all_receivers_normalized": ["*SearchCountriesRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchCountriesRequest"], "header_context_minimal": "package v0\n// receiver: *SearchCountriesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#246", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#248"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#248", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 248, "start_line": 1677, "end_line": 1688, "text": "func (x *SearchCountriesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[21]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1677, 1688], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchCountriesRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchCountriesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[21]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchCountriesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesRequest"], "all_type_names": ["SearchCountriesRequest"], "all_type_kinds": [null], "all_start_bytes": [46846], "all_end_bytes": [47136], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchCountriesRequest", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchCountriesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#247", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#249"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#249", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 249, "start_line": 1689, "end_line": 1693, "text": "// Deprecated: Use SearchCountriesRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchCountriesRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{21}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1690, 1693], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchCountriesRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchCountriesRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchCountriesRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{21}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchCountriesRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchCountriesRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [47213], "all_end_bytes": [47329], "primary_index": 0, "all_receivers_normalized": ["*SearchCountriesRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchCountriesRequest"], "header_context_minimal": "package v0\n// receiver: *SearchCountriesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#248", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#250"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#250", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 250, "start_line": 1694, "end_line": 1700, "text": "func (x *SearchCountriesRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetQ", "primary_kind": "method", "primary_span": [1694, 1700], "def_symbols": [], "symbols": ["GetQ", "func", "SearchCountriesRequest", "string", "nil", "return"], "doc_head": "func (x *SearchCountriesRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesRequest).GetQ/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesRequest", "function_name": "", "method_name": "GetQ", "type_name": "SearchCountriesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetQ"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesRequest).GetQ/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesRequest"], "all_type_names": ["SearchCountriesRequest"], "all_type_kinds": [null], "all_start_bytes": [47331], "all_end_bytes": [47423], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetQ", "SearchCountriesRequest", "x.Q"], "header_context_minimal": "package v0\n// receiver: x *SearchCountriesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#249", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#251"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#251", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 251, "start_line": 1701, "end_line": 1707, "text": "func (x *SearchCountriesRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}\n", "n_tokens": 32, "primary_symbol": "GetLimit", "primary_kind": "method", "primary_span": [1701, 1707], "def_symbols": [], "symbols": ["GetLimit", "func", "SearchCountriesRequest", "uint32", "nil", "return", "Limit"], "doc_head": "func (x *SearchCountriesRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesRequest).GetLimit/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesRequest", "function_name": "", "method_name": "GetLimit", "type_name": "SearchCountriesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLimit"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesRequest).GetLimit/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesRequest"], "all_type_names": ["SearchCountriesRequest"], "all_type_kinds": [null], "all_start_bytes": [47425], "all_end_bytes": [47524], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetLimit", "Limit", "SearchCountriesRequest", "x.Limit"], "header_context_minimal": "package v0\n// receiver: x *SearchCountriesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#250", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#252"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#252", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 252, "start_line": 1708, "end_line": 1714, "text": "func (x *SearchCountriesRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetCursor", "primary_kind": "method", "primary_span": [1708, 1714], "def_symbols": [], "symbols": ["GetCursor", "func", "SearchCountriesRequest", "string", "nil", "Cursor", "return"], "doc_head": "func (x *SearchCountriesRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesRequest).GetCursor/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesRequest", "function_name": "", "method_name": "GetCursor", "type_name": "SearchCountriesRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCursor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesRequest).GetCursor/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesRequest"], "all_type_names": ["SearchCountriesRequest"], "all_type_kinds": [null], "all_start_bytes": [47526], "all_end_bytes": [47648], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Cursor", "GetCursor", "SearchCountriesRequest", "x.Cursor"], "header_context_minimal": "package v0\n// receiver: x *SearchCountriesRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#251", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#253"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#253", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 253, "start_line": 1715, "end_line": 1723, "text": "type SearchCountriesResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*Country             `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,2,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,3,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 114, "primary_symbol": "SearchCountriesResponse", "primary_kind": "type", "primary_span": [1715, 1723], "def_symbols": [], "symbols": ["type", "SearchCountriesResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Result", "Country", "protobuf", "bytes", "rep", "name", "result", "proto3", "json", "omitempty", "Next", "string", "opt", "next", "oneof", "Previous", "previous", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchCountriesResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*Country             `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,2,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,3,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchCountriesResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchCountriesResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchCountriesResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchCountriesResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchCountriesResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [47655], "all_end_bytes": [48152], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Country", "MessageState", "Next", "Previous", "Result", "SearchCountriesResponse", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#252", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#254"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#254", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 254, "start_line": 1724, "end_line": 1730, "text": "func (x *SearchCountriesResponse) Reset() {\n\t*x = SearchCountriesResponse{}\n\tmi := &file_airports_proto_msgTypes[22]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1724, 1730], "def_symbols": [], "symbols": ["Reset", "func", "SearchCountriesResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchCountriesResponse) Reset() {\n\t*x = SearchCountriesResponse{}\n\tmi := &file_airports_proto_msgTypes[22]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesResponse", "function_name": "", "method_name": "Reset", "type_name": "SearchCountriesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesResponse"], "all_type_names": ["SearchCountriesResponse"], "all_type_kinds": [null], "all_start_bytes": [48154], "all_end_bytes": [48353], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchCountriesResponse", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchCountriesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#253", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#255"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#255", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 255, "start_line": 1731, "end_line": 1734, "text": "func (x *SearchCountriesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1731, 1734], "def_symbols": [], "symbols": ["String", "func", "SearchCountriesResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchCountriesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesResponse", "function_name": "", "method_name": "String", "type_name": "SearchCountriesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesResponse"], "all_type_names": ["SearchCountriesResponse"], "all_type_kinds": [null], "all_start_bytes": [48355], "all_end_bytes": [48447], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchCountriesResponse", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchCountriesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#254", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#256"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#256", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 256, "start_line": 1735, "end_line": 1736, "text": "func (*SearchCountriesResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1735, 1736], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchCountriesResponse"], "doc_head": "func (*SearchCountriesResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchCountriesResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchCountriesResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [48449], "all_end_bytes": [48498], "primary_index": 0, "all_receivers_normalized": ["*SearchCountriesResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchCountriesResponse"], "header_context_minimal": "package v0\n// receiver: *SearchCountriesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#255", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#257"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#257", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 257, "start_line": 1737, "end_line": 1748, "text": "func (x *SearchCountriesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[22]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1737, 1748], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchCountriesResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchCountriesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[22]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchCountriesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesResponse"], "all_type_names": ["SearchCountriesResponse"], "all_type_kinds": [null], "all_start_bytes": [48500], "all_end_bytes": [48791], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchCountriesResponse", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchCountriesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#256", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#258"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#258", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 258, "start_line": 1749, "end_line": 1753, "text": "// Deprecated: Use SearchCountriesResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchCountriesResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{22}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1750, 1753], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchCountriesResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchCountriesResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchCountriesResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{22}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchCountriesResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchCountriesResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [48869], "all_end_bytes": [48986], "primary_index": 0, "all_receivers_normalized": ["*SearchCountriesResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchCountriesResponse"], "header_context_minimal": "package v0\n// receiver: *SearchCountriesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#257", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#259"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#259", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 259, "start_line": 1754, "end_line": 1760, "text": "func (x *SearchCountriesResponse) GetResult() []*Country {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetResult", "primary_kind": "method", "primary_span": [1754, 1760], "def_symbols": [], "symbols": ["GetResult", "func", "SearchCountriesResponse", "Country", "nil", "return", "Result"], "doc_head": "func (x *SearchCountriesResponse) GetResult() []*Country {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesResponse).GetResult/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesResponse", "function_name": "", "method_name": "GetResult", "type_name": "SearchCountriesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetResult"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesResponse).GetResult/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesResponse"], "all_type_names": ["SearchCountriesResponse"], "all_type_kinds": [null], "all_start_bytes": [48988], "all_end_bytes": [49096], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Country", "GetResult", "Result", "SearchCountriesResponse", "x.Result"], "header_context_minimal": "package v0\n// receiver: x *SearchCountriesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#258", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#260"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#260", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 260, "start_line": 1761, "end_line": 1767, "text": "func (x *SearchCountriesResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetNext", "primary_kind": "method", "primary_span": [1761, 1767], "def_symbols": [], "symbols": ["GetNext", "func", "SearchCountriesResponse", "string", "nil", "Next", "return"], "doc_head": "func (x *SearchCountriesResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesResponse).GetNext/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesResponse", "function_name": "", "method_name": "GetNext", "type_name": "SearchCountriesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetNext"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesResponse).GetNext/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesResponse"], "all_type_names": ["SearchCountriesResponse"], "all_type_kinds": [null], "all_start_bytes": [49098], "all_end_bytes": [49215], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetNext", "Next", "SearchCountriesResponse", "x.Next"], "header_context_minimal": "package v0\n// receiver: x *SearchCountriesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#259", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#261"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#261", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 261, "start_line": 1768, "end_line": 1774, "text": "func (x *SearchCountriesResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}\n", "n_tokens": 36, "primary_symbol": "GetPrevious", "primary_kind": "method", "primary_span": [1768, 1774], "def_symbols": [], "symbols": ["GetPrevious", "func", "SearchCountriesResponse", "string", "nil", "Previous", "return"], "doc_head": "func (x *SearchCountriesResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchCountriesResponse).GetPrevious/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchCountriesResponse", "function_name": "", "method_name": "GetPrevious", "type_name": "SearchCountriesResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetPrevious"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchCountriesResponse).GetPrevious/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchCountriesResponse"], "all_type_names": ["SearchCountriesResponse"], "all_type_kinds": [null], "all_start_bytes": [49217], "all_end_bytes": [49346], "primary_index": 0, "all_receivers_normalized": ["(*SearchCountriesResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetPrevious", "Previous", "SearchCountriesResponse", "x.Previous"], "header_context_minimal": "package v0\n// receiver: x *SearchCountriesResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#260", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#262"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#262", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 262, "start_line": 1775, "end_line": 1781, "text": "type GetCountryRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 58, "primary_symbol": "GetCountryRequest", "primary_kind": "type", "primary_span": [1775, 1781], "def_symbols": [], "symbols": ["type", "GetCountryRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetCountryRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetCountryRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetCountryRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetCountryRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetCountryRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetCountryRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [49353], "all_end_bytes": [49612], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCountryRequest", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#261", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#263"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#263", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 263, "start_line": 1782, "end_line": 1788, "text": "func (x *GetCountryRequest) Reset() {\n\t*x = GetCountryRequest{}\n\tmi := &file_airports_proto_msgTypes[23]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1782, 1788], "def_symbols": [], "symbols": ["Reset", "func", "GetCountryRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetCountryRequest) Reset() {\n\t*x = GetCountryRequest{}\n\tmi := &file_airports_proto_msgTypes[23]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCountryRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCountryRequest", "function_name": "", "method_name": "Reset", "type_name": "GetCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCountryRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCountryRequest"], "all_type_names": ["GetCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [49614], "all_end_bytes": [49801], "primary_index": 0, "all_receivers_normalized": ["(*GetCountryRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCountryRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#262", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#264"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#264", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 264, "start_line": 1789, "end_line": 1792, "text": "func (x *GetCountryRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1789, 1792], "def_symbols": [], "symbols": ["String", "func", "GetCountryRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetCountryRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCountryRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCountryRequest", "function_name": "", "method_name": "String", "type_name": "GetCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCountryRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCountryRequest"], "all_type_names": ["GetCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [49803], "all_end_bytes": [49889], "primary_index": 0, "all_receivers_normalized": ["(*GetCountryRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCountryRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#263", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#265"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#265", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 265, "start_line": 1793, "end_line": 1794, "text": "func (*GetCountryRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1793, 1794], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetCountryRequest"], "doc_head": "func (*GetCountryRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetCountryRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetCountryRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [49891], "all_end_bytes": [49934], "primary_index": 0, "all_receivers_normalized": ["*GetCountryRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetCountryRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#264", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#266"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#266", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 266, "start_line": 1795, "end_line": 1806, "text": "func (x *GetCountryRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[23]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1795, 1806], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetCountryRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetCountryRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[23]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCountryRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCountryRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCountryRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCountryRequest"], "all_type_names": ["GetCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [49936], "all_end_bytes": [50221], "primary_index": 0, "all_receivers_normalized": ["(*GetCountryRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCountryRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#265", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#267"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#267", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 267, "start_line": 1807, "end_line": 1811, "text": "// Deprecated: Use GetCountryRequest.ProtoReflect.Descriptor instead.\nfunc (*GetCountryRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{23}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1808, 1811], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetCountryRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetCountryRequest.ProtoReflect.Descriptor instead.\nfunc (*GetCountryRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{23}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetCountryRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetCountryRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [50293], "all_end_bytes": [50404], "primary_index": 0, "all_receivers_normalized": ["*GetCountryRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetCountryRequest"], "header_context_minimal": "package v0\n// receiver: *GetCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#266", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#268"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#268", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 268, "start_line": 1812, "end_line": 1818, "text": "func (x *GetCountryRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [1812, 1818], "def_symbols": [], "symbols": ["GetId", "func", "GetCountryRequest", "string", "nil", "return"], "doc_head": "func (x *GetCountryRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCountryRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCountryRequest", "function_name": "", "method_name": "GetId", "type_name": "GetCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCountryRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCountryRequest"], "all_type_names": ["GetCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [50406], "all_end_bytes": [50495], "primary_index": 0, "all_receivers_normalized": ["(*GetCountryRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetCountryRequest", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *GetCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#267", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#269"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#269", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 269, "start_line": 1819, "end_line": 1825, "text": "type GetCountryResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCountry       *Country               `protobuf:\"bytes,1,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 61, "primary_symbol": "GetCountryResponse", "primary_kind": "type", "primary_span": [1819, 1825], "def_symbols": [], "symbols": ["type", "GetCountryResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Country", "protobuf", "bytes", "opt", "name", "country", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetCountryResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCountry       *Country               `protobuf:\"bytes,1,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetCountryResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetCountryResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetCountryResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetCountryResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetCountryResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [50502], "all_end_bytes": [50772], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Country", "GetCountryResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#268", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#270"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#270", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 270, "start_line": 1826, "end_line": 1832, "text": "func (x *GetCountryResponse) Reset() {\n\t*x = GetCountryResponse{}\n\tmi := &file_airports_proto_msgTypes[24]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1826, 1832], "def_symbols": [], "symbols": ["Reset", "func", "GetCountryResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetCountryResponse) Reset() {\n\t*x = GetCountryResponse{}\n\tmi := &file_airports_proto_msgTypes[24]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCountryResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCountryResponse", "function_name": "", "method_name": "Reset", "type_name": "GetCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCountryResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCountryResponse"], "all_type_names": ["GetCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [50774], "all_end_bytes": [50963], "primary_index": 0, "all_receivers_normalized": ["(*GetCountryResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCountryResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#269", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#271"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#271", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 271, "start_line": 1833, "end_line": 1836, "text": "func (x *GetCountryResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1833, 1836], "def_symbols": [], "symbols": ["String", "func", "GetCountryResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetCountryResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCountryResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCountryResponse", "function_name": "", "method_name": "String", "type_name": "GetCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCountryResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCountryResponse"], "all_type_names": ["GetCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [50965], "all_end_bytes": [51052], "primary_index": 0, "all_receivers_normalized": ["(*GetCountryResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCountryResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#270", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#272"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#272", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 272, "start_line": 1837, "end_line": 1838, "text": "func (*GetCountryResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1837, 1838], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetCountryResponse"], "doc_head": "func (*GetCountryResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetCountryResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetCountryResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [51054], "all_end_bytes": [51098], "primary_index": 0, "all_receivers_normalized": ["*GetCountryResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetCountryResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#271", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#273"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#273", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 273, "start_line": 1839, "end_line": 1850, "text": "func (x *GetCountryResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[24]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1839, 1850], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetCountryResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetCountryResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[24]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCountryResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCountryResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCountryResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCountryResponse"], "all_type_names": ["GetCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [51100], "all_end_bytes": [51386], "primary_index": 0, "all_receivers_normalized": ["(*GetCountryResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetCountryResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#272", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#274"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#274", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 274, "start_line": 1851, "end_line": 1855, "text": "// Deprecated: Use GetCountryResponse.ProtoReflect.Descriptor instead.\nfunc (*GetCountryResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{24}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1852, 1855], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetCountryResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetCountryResponse.ProtoReflect.Descriptor instead.\nfunc (*GetCountryResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{24}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetCountryResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetCountryResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [51459], "all_end_bytes": [51571], "primary_index": 0, "all_receivers_normalized": ["*GetCountryResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetCountryResponse"], "header_context_minimal": "package v0\n// receiver: *GetCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#273", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#275"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#275", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 275, "start_line": 1856, "end_line": 1862, "text": "func (x *GetCountryResponse) GetCountry() *Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetCountry", "primary_kind": "method", "primary_span": [1856, 1862], "def_symbols": [], "symbols": ["GetCountry", "func", "GetCountryResponse", "Country", "nil", "return"], "doc_head": "func (x *GetCountryResponse) GetCountry() *Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetCountryResponse).GetCountry/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetCountryResponse", "function_name": "", "method_name": "GetCountry", "type_name": "GetCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCountry"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetCountryResponse).GetCountry/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetCountryResponse"], "all_type_names": ["GetCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [51573], "all_end_bytes": [51676], "primary_index": 0, "all_receivers_normalized": ["(*GetCountryResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Country", "GetCountry", "GetCountryResponse", "x.Country"], "header_context_minimal": "package v0\n// receiver: x *GetCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#274", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#276"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#276", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 276, "start_line": 1863, "end_line": 1870, "text": "type CreateCountryRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 102, "primary_symbol": "CreateCountryRequest", "primary_kind": "type", "primary_span": [1863, 1870], "def_symbols": [], "symbols": ["type", "CreateCountryRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "rep", "protobuf_key", "key", "protobuf_val", "value", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateCountryRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateCountryRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateCountryRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateCountryRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateCountryRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateCountryRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [51683], "all_end_bytes": [52121], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCountryRequest", "MessageState", "Name", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#275", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#277"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#277", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 277, "start_line": 1871, "end_line": 1877, "text": "func (x *CreateCountryRequest) Reset() {\n\t*x = CreateCountryRequest{}\n\tmi := &file_airports_proto_msgTypes[25]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1871, 1877], "def_symbols": [], "symbols": ["Reset", "func", "CreateCountryRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateCountryRequest) Reset() {\n\t*x = CreateCountryRequest{}\n\tmi := &file_airports_proto_msgTypes[25]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCountryRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCountryRequest", "function_name": "", "method_name": "Reset", "type_name": "CreateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCountryRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCountryRequest"], "all_type_names": ["CreateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [52123], "all_end_bytes": [52316], "primary_index": 0, "all_receivers_normalized": ["(*CreateCountryRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCountryRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#276", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#278"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#278", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 278, "start_line": 1878, "end_line": 1881, "text": "func (x *CreateCountryRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1878, 1881], "def_symbols": [], "symbols": ["String", "func", "CreateCountryRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateCountryRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCountryRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCountryRequest", "function_name": "", "method_name": "String", "type_name": "CreateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCountryRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCountryRequest"], "all_type_names": ["CreateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [52318], "all_end_bytes": [52407], "primary_index": 0, "all_receivers_normalized": ["(*CreateCountryRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCountryRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#277", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#279"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#279", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 279, "start_line": 1882, "end_line": 1883, "text": "func (*CreateCountryRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1882, 1883], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateCountryRequest"], "doc_head": "func (*CreateCountryRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateCountryRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateCountryRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [52409], "all_end_bytes": [52455], "primary_index": 0, "all_receivers_normalized": ["*CreateCountryRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCountryRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#278", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#280"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#280", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 280, "start_line": 1884, "end_line": 1895, "text": "func (x *CreateCountryRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[25]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1884, 1895], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateCountryRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateCountryRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[25]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCountryRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCountryRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCountryRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCountryRequest"], "all_type_names": ["CreateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [52457], "all_end_bytes": [52745], "primary_index": 0, "all_receivers_normalized": ["(*CreateCountryRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCountryRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#279", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#281"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#281", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 281, "start_line": 1896, "end_line": 1900, "text": "// Deprecated: Use CreateCountryRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateCountryRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{25}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1897, 1900], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateCountryRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateCountryRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateCountryRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{25}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateCountryRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateCountryRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [52820], "all_end_bytes": [52934], "primary_index": 0, "all_receivers_normalized": ["*CreateCountryRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCountryRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#280", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#282"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#282", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 282, "start_line": 1901, "end_line": 1907, "text": "func (x *CreateCountryRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [1901, 1907], "def_symbols": [], "symbols": ["GetId", "func", "CreateCountryRequest", "string", "nil", "return"], "doc_head": "func (x *CreateCountryRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCountryRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCountryRequest", "function_name": "", "method_name": "GetId", "type_name": "CreateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCountryRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCountryRequest"], "all_type_names": ["CreateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [52936], "all_end_bytes": [53028], "primary_index": 0, "all_receivers_normalized": ["(*CreateCountryRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCountryRequest", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *CreateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#281", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#283"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#283", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 283, "start_line": 1908, "end_line": 1914, "text": "func (x *CreateCountryRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [1908, 1914], "def_symbols": [], "symbols": ["GetName", "func", "CreateCountryRequest", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *CreateCountryRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCountryRequest).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCountryRequest", "function_name": "", "method_name": "GetName", "type_name": "CreateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCountryRequest).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCountryRequest"], "all_type_names": ["CreateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [53030], "all_end_bytes": [53138], "primary_index": 0, "all_receivers_normalized": ["(*CreateCountryRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCountryRequest", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *CreateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#282", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#284"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#284", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 284, "start_line": 1915, "end_line": 1921, "text": "type CreateCountryResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCountry       *Country               `protobuf:\"bytes,1,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 61, "primary_symbol": "CreateCountryResponse", "primary_kind": "type", "primary_span": [1915, 1921], "def_symbols": [], "symbols": ["type", "CreateCountryResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Country", "protobuf", "bytes", "opt", "name", "country", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateCountryResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCountry       *Country               `protobuf:\"bytes,1,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateCountryResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateCountryResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateCountryResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateCountryResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateCountryResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [53145], "all_end_bytes": [53418], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Country", "CreateCountryResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#283", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#285"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#285", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 285, "start_line": 1922, "end_line": 1928, "text": "func (x *CreateCountryResponse) Reset() {\n\t*x = CreateCountryResponse{}\n\tmi := &file_airports_proto_msgTypes[26]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1922, 1928], "def_symbols": [], "symbols": ["Reset", "func", "CreateCountryResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateCountryResponse) Reset() {\n\t*x = CreateCountryResponse{}\n\tmi := &file_airports_proto_msgTypes[26]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCountryResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCountryResponse", "function_name": "", "method_name": "Reset", "type_name": "CreateCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCountryResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCountryResponse"], "all_type_names": ["CreateCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [53420], "all_end_bytes": [53615], "primary_index": 0, "all_receivers_normalized": ["(*CreateCountryResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCountryResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#284", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#286"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#286", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 286, "start_line": 1929, "end_line": 1932, "text": "func (x *CreateCountryResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1929, 1932], "def_symbols": [], "symbols": ["String", "func", "CreateCountryResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateCountryResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCountryResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCountryResponse", "function_name": "", "method_name": "String", "type_name": "CreateCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCountryResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCountryResponse"], "all_type_names": ["CreateCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [53617], "all_end_bytes": [53707], "primary_index": 0, "all_receivers_normalized": ["(*CreateCountryResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCountryResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#285", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#287"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#287", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 287, "start_line": 1933, "end_line": 1934, "text": "func (*CreateCountryResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1933, 1934], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateCountryResponse"], "doc_head": "func (*CreateCountryResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateCountryResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateCountryResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [53709], "all_end_bytes": [53756], "primary_index": 0, "all_receivers_normalized": ["*CreateCountryResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCountryResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#286", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#288"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#288", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 288, "start_line": 1935, "end_line": 1946, "text": "func (x *CreateCountryResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[26]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1935, 1946], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateCountryResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateCountryResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[26]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCountryResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCountryResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCountryResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCountryResponse"], "all_type_names": ["CreateCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [53758], "all_end_bytes": [54047], "primary_index": 0, "all_receivers_normalized": ["(*CreateCountryResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateCountryResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#287", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#289"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#289", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 289, "start_line": 1947, "end_line": 1951, "text": "// Deprecated: Use CreateCountryResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateCountryResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{26}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1948, 1951], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateCountryResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateCountryResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateCountryResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{26}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateCountryResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateCountryResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [54123], "all_end_bytes": [54238], "primary_index": 0, "all_receivers_normalized": ["*CreateCountryResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateCountryResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#288", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#290"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#290", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 290, "start_line": 1952, "end_line": 1958, "text": "func (x *CreateCountryResponse) GetCountry() *Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetCountry", "primary_kind": "method", "primary_span": [1952, 1958], "def_symbols": [], "symbols": ["GetCountry", "func", "CreateCountryResponse", "Country", "nil", "return"], "doc_head": "func (x *CreateCountryResponse) GetCountry() *Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateCountryResponse).GetCountry/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateCountryResponse", "function_name": "", "method_name": "GetCountry", "type_name": "CreateCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCountry"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateCountryResponse).GetCountry/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateCountryResponse"], "all_type_names": ["CreateCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [54240], "all_end_bytes": [54346], "primary_index": 0, "all_receivers_normalized": ["(*CreateCountryResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Country", "CreateCountryResponse", "GetCountry", "x.Country"], "header_context_minimal": "package v0\n// receiver: x *CreateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#289", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#291"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#291", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 291, "start_line": 1959, "end_line": 1966, "text": "type UpdateCountryRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 102, "primary_symbol": "UpdateCountryRequest", "primary_kind": "type", "primary_span": [1959, 1966], "def_symbols": [], "symbols": ["type", "UpdateCountryRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "rep", "protobuf_key", "key", "protobuf_val", "value", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateCountryRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateCountryRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateCountryRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateCountryRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateCountryRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateCountryRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [54353], "all_end_bytes": [54791], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageState", "Name", "SizeCache", "UnknownFields", "UpdateCountryRequest", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#290", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#292"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#292", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 292, "start_line": 1967, "end_line": 1973, "text": "func (x *UpdateCountryRequest) Reset() {\n\t*x = UpdateCountryRequest{}\n\tmi := &file_airports_proto_msgTypes[27]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [1967, 1973], "def_symbols": [], "symbols": ["Reset", "func", "UpdateCountryRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateCountryRequest) Reset() {\n\t*x = UpdateCountryRequest{}\n\tmi := &file_airports_proto_msgTypes[27]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCountryRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCountryRequest", "function_name": "", "method_name": "Reset", "type_name": "UpdateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCountryRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCountryRequest"], "all_type_names": ["UpdateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [54793], "all_end_bytes": [54986], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCountryRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateCountryRequest", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#291", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#293"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#293", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 293, "start_line": 1974, "end_line": 1977, "text": "func (x *UpdateCountryRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [1974, 1977], "def_symbols": [], "symbols": ["String", "func", "UpdateCountryRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateCountryRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCountryRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCountryRequest", "function_name": "", "method_name": "String", "type_name": "UpdateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCountryRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCountryRequest"], "all_type_names": ["UpdateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [54988], "all_end_bytes": [55077], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCountryRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateCountryRequest", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#292", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#294"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#294", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 294, "start_line": 1978, "end_line": 1979, "text": "func (*UpdateCountryRequest) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [1978, 1979], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateCountryRequest"], "doc_head": "func (*UpdateCountryRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateCountryRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateCountryRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [55079], "all_end_bytes": [55125], "primary_index": 0, "all_receivers_normalized": ["*UpdateCountryRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateCountryRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#293", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#295"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#295", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 295, "start_line": 1980, "end_line": 1991, "text": "func (x *UpdateCountryRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[27]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [1980, 1991], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateCountryRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateCountryRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[27]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCountryRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCountryRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCountryRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCountryRequest"], "all_type_names": ["UpdateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [55127], "all_end_bytes": [55415], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCountryRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateCountryRequest", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#294", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#296"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#296", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 296, "start_line": 1992, "end_line": 1996, "text": "// Deprecated: Use UpdateCountryRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateCountryRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{27}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [1993, 1996], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateCountryRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateCountryRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateCountryRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{27}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateCountryRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateCountryRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [55490], "all_end_bytes": [55604], "primary_index": 0, "all_receivers_normalized": ["*UpdateCountryRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateCountryRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#295", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#297"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#297", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 297, "start_line": 1997, "end_line": 2003, "text": "func (x *UpdateCountryRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [1997, 2003], "def_symbols": [], "symbols": ["GetId", "func", "UpdateCountryRequest", "string", "nil", "return"], "doc_head": "func (x *UpdateCountryRequest) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCountryRequest).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCountryRequest", "function_name": "", "method_name": "GetId", "type_name": "UpdateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCountryRequest).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCountryRequest"], "all_type_names": ["UpdateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [55606], "all_end_bytes": [55698], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCountryRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetId", "UpdateCountryRequest", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *UpdateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#296", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#298"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#298", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 298, "start_line": 2004, "end_line": 2010, "text": "func (x *UpdateCountryRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [2004, 2010], "def_symbols": [], "symbols": ["GetName", "func", "UpdateCountryRequest", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *UpdateCountryRequest) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCountryRequest).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCountryRequest", "function_name": "", "method_name": "GetName", "type_name": "UpdateCountryRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCountryRequest).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCountryRequest"], "all_type_names": ["UpdateCountryRequest"], "all_type_kinds": [null], "all_start_bytes": [55700], "all_end_bytes": [55808], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCountryRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetName", "Name", "UpdateCountryRequest", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *UpdateCountryRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#297", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#299"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#299", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 299, "start_line": 2011, "end_line": 2017, "text": "type UpdateCountryResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCountry       *Country               `protobuf:\"bytes,1,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 61, "primary_symbol": "UpdateCountryResponse", "primary_kind": "type", "primary_span": [2011, 2017], "def_symbols": [], "symbols": ["type", "UpdateCountryResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Country", "protobuf", "bytes", "opt", "name", "country", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateCountryResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCountry       *Country               `protobuf:\"bytes,1,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateCountryResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateCountryResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateCountryResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateCountryResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateCountryResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [55815], "all_end_bytes": [56088], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Country", "MessageState", "SizeCache", "UnknownFields", "UpdateCountryResponse", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#298", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#300"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#300", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 300, "start_line": 2018, "end_line": 2024, "text": "func (x *UpdateCountryResponse) Reset() {\n\t*x = UpdateCountryResponse{}\n\tmi := &file_airports_proto_msgTypes[28]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2018, 2024], "def_symbols": [], "symbols": ["Reset", "func", "UpdateCountryResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateCountryResponse) Reset() {\n\t*x = UpdateCountryResponse{}\n\tmi := &file_airports_proto_msgTypes[28]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCountryResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCountryResponse", "function_name": "", "method_name": "Reset", "type_name": "UpdateCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCountryResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCountryResponse"], "all_type_names": ["UpdateCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [56090], "all_end_bytes": [56285], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCountryResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateCountryResponse", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#299", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#301"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#301", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 301, "start_line": 2025, "end_line": 2028, "text": "func (x *UpdateCountryResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2025, 2028], "def_symbols": [], "symbols": ["String", "func", "UpdateCountryResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateCountryResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCountryResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCountryResponse", "function_name": "", "method_name": "String", "type_name": "UpdateCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCountryResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCountryResponse"], "all_type_names": ["UpdateCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [56287], "all_end_bytes": [56377], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCountryResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateCountryResponse", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#300", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#302"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#302", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 302, "start_line": 2029, "end_line": 2030, "text": "func (*UpdateCountryResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2029, 2030], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateCountryResponse"], "doc_head": "func (*UpdateCountryResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateCountryResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateCountryResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [56379], "all_end_bytes": [56426], "primary_index": 0, "all_receivers_normalized": ["*UpdateCountryResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateCountryResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#301", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#303"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#303", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 303, "start_line": 2031, "end_line": 2042, "text": "func (x *UpdateCountryResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[28]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2031, 2042], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateCountryResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateCountryResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[28]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCountryResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCountryResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCountryResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCountryResponse"], "all_type_names": ["UpdateCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [56428], "all_end_bytes": [56717], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCountryResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateCountryResponse", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#302", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#304"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#304", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 304, "start_line": 2043, "end_line": 2047, "text": "// Deprecated: Use UpdateCountryResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateCountryResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{28}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2044, 2047], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateCountryResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateCountryResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateCountryResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{28}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateCountryResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateCountryResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [56793], "all_end_bytes": [56908], "primary_index": 0, "all_receivers_normalized": ["*UpdateCountryResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateCountryResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#303", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#305"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#305", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 305, "start_line": 2048, "end_line": 2054, "text": "func (x *UpdateCountryResponse) GetCountry() *Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetCountry", "primary_kind": "method", "primary_span": [2048, 2054], "def_symbols": [], "symbols": ["GetCountry", "func", "UpdateCountryResponse", "Country", "nil", "return"], "doc_head": "func (x *UpdateCountryResponse) GetCountry() *Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateCountryResponse).GetCountry/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateCountryResponse", "function_name": "", "method_name": "GetCountry", "type_name": "UpdateCountryResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCountry"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateCountryResponse).GetCountry/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateCountryResponse"], "all_type_names": ["UpdateCountryResponse"], "all_type_kinds": [null], "all_start_bytes": [56910], "all_end_bytes": [57016], "primary_index": 0, "all_receivers_normalized": ["(*UpdateCountryResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Country", "GetCountry", "UpdateCountryResponse", "x.Country"], "header_context_minimal": "package v0\n// receiver: x *UpdateCountryResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#304", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#306"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#306", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 306, "start_line": 2055, "end_line": 2062, "text": "type UploadImageResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tImageUrl      string                 `protobuf:\"bytes,1,opt,name=imageUrl,proto3\" json:\"imageUrl,omitempty\"`\n\tSize          int64                  `protobuf:\"varint,2,opt,name=size,proto3\" json:\"size,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 83, "primary_symbol": "UploadImageResponse", "primary_kind": "type", "primary_span": [2055, 2062], "def_symbols": [], "symbols": ["type", "UploadImageResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "ImageUrl", "string", "protobuf", "bytes", "opt", "name", "imageUrl", "proto3", "json", "omitempty", "Size", "int64", "varint", "size", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UploadImageResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tImageUrl      string                 `protobuf:\"bytes,1,opt,name=imageUrl,proto3\" json:\"imageUrl,omitempty\"`\n\tSize          int64                  `protobuf:\"varint,2,opt,name=size,proto3\" json:\"size,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UploadImageResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UploadImageResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UploadImageResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UploadImageResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UploadImageResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [57023], "all_end_bytes": [57399], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["ImageUrl", "MessageState", "Size", "SizeCache", "UnknownFields", "UploadImageResponse", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#305", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#307"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#307", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 307, "start_line": 2063, "end_line": 2069, "text": "func (x *UploadImageResponse) Reset() {\n\t*x = UploadImageResponse{}\n\tmi := &file_airports_proto_msgTypes[29]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2063, 2069], "def_symbols": [], "symbols": ["Reset", "func", "UploadImageResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UploadImageResponse) Reset() {\n\t*x = UploadImageResponse{}\n\tmi := &file_airports_proto_msgTypes[29]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageResponse", "function_name": "", "method_name": "Reset", "type_name": "UploadImageResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageResponse"], "all_type_names": ["UploadImageResponse"], "all_type_kinds": [null], "all_start_bytes": [57401], "all_end_bytes": [57592], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UploadImageResponse", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UploadImageResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#306", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#308"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#308", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 308, "start_line": 2070, "end_line": 2073, "text": "func (x *UploadImageResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2070, 2073], "def_symbols": [], "symbols": ["String", "func", "UploadImageResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UploadImageResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageResponse", "function_name": "", "method_name": "String", "type_name": "UploadImageResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageResponse"], "all_type_names": ["UploadImageResponse"], "all_type_kinds": [null], "all_start_bytes": [57594], "all_end_bytes": [57682], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UploadImageResponse", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UploadImageResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#307", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#309"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#309", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 309, "start_line": 2074, "end_line": 2075, "text": "func (*UploadImageResponse) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2074, 2075], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UploadImageResponse"], "doc_head": "func (*UploadImageResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UploadImageResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UploadImageResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [57684], "all_end_bytes": [57729], "primary_index": 0, "all_receivers_normalized": ["*UploadImageResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UploadImageResponse"], "header_context_minimal": "package v0\n// receiver: *UploadImageResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#308", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#310"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#310", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 310, "start_line": 2076, "end_line": 2087, "text": "func (x *UploadImageResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[29]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2076, 2087], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UploadImageResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UploadImageResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[29]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "UploadImageResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageResponse"], "all_type_names": ["UploadImageResponse"], "all_type_kinds": [null], "all_start_bytes": [57731], "all_end_bytes": [58018], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UploadImageResponse", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UploadImageResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#309", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#311"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#311", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 311, "start_line": 2088, "end_line": 2092, "text": "// Deprecated: Use UploadImageResponse.ProtoReflect.Descriptor instead.\nfunc (*UploadImageResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{29}\n}\n", "n_tokens": 45, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2089, 2092], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UploadImageResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UploadImageResponse.ProtoReflect.Descriptor instead.\nfunc (*UploadImageResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{29}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UploadImageResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UploadImageResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [58092], "all_end_bytes": [58205], "primary_index": 0, "all_receivers_normalized": ["*UploadImageResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UploadImageResponse"], "header_context_minimal": "package v0\n// receiver: *UploadImageResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#310", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#312"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#312", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 312, "start_line": 2093, "end_line": 2099, "text": "func (x *UploadImageResponse) GetImageUrl() string {\n\tif x != nil {\n\t\treturn x.ImageUrl\n\t}\n\treturn \"\"\n}\n", "n_tokens": 29, "primary_symbol": "GetImageUrl", "primary_kind": "method", "primary_span": [2093, 2099], "def_symbols": [], "symbols": ["GetImageUrl", "func", "UploadImageResponse", "string", "nil", "return", "ImageUrl"], "doc_head": "func (x *UploadImageResponse) GetImageUrl() string {\n\tif x != nil {\n\t\treturn x.ImageUrl\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageResponse).GetImageUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageResponse", "function_name": "", "method_name": "GetImageUrl", "type_name": "UploadImageResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetImageUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageResponse).GetImageUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageResponse"], "all_type_names": ["UploadImageResponse"], "all_type_kinds": [null], "all_start_bytes": [58207], "all_end_bytes": [58310], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetImageUrl", "ImageUrl", "UploadImageResponse", "x.ImageUrl"], "header_context_minimal": "package v0\n// receiver: x *UploadImageResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#311", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#313"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#313", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 313, "start_line": 2100, "end_line": 2106, "text": "func (x *UploadImageResponse) GetSize() int64 {\n\tif x != nil {\n\t\treturn x.Size\n\t}\n\treturn 0\n}\n", "n_tokens": 31, "primary_symbol": "GetSize", "primary_kind": "method", "primary_span": [2100, 2106], "def_symbols": [], "symbols": ["GetSize", "func", "UploadImageResponse", "int64", "nil", "return", "Size"], "doc_head": "func (x *UploadImageResponse) GetSize() int64 {\n\tif x != nil {\n\t\treturn x.Size\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageResponse).GetSize/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageResponse", "function_name": "", "method_name": "GetSize", "type_name": "UploadImageResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetSize"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageResponse).GetSize/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageResponse"], "all_type_names": ["UploadImageResponse"], "all_type_kinds": [null], "all_start_bytes": [58312], "all_end_bytes": [58405], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetSize", "Size", "UploadImageResponse", "x.Size"], "header_context_minimal": "package v0\n// receiver: x *UploadImageResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#312", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#314"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#314", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 314, "start_line": 2107, "end_line": 2115, "text": "type BatchGetByDesignatorRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignators   []string               `protobuf:\"bytes,1,rep,name=designators,proto3\" json:\"designators,omitempty\"`\n\tForDate       *string                `protobuf:\"bytes,2,opt,name=forDate,proto3,oneof\" json:\"forDate,omitempty\"`\n\tInclude       []Include              `protobuf:\"varint,3,rep,packed,name=include,proto3,enum=aviation.airports.v0.Include\" json:\"include,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 136, "primary_symbol": "BatchGetByDesignatorRequest", "primary_kind": "type", "primary_span": [2107, 2115], "def_symbols": [], "symbols": ["type", "BatchGetByDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designators", "string", "protobuf", "bytes", "rep", "name", "designators", "proto3", "json", "omitempty", "ForDate", "opt", "forDate", "oneof", "Include", "varint", "packed", "include", "enum", "aviation", "airports", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type BatchGetByDesignatorRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignators   []string               `protobuf:\"bytes,1,rep,name=designators,proto3\" json:\"designators,omitempty\"`\n\tForDate       *string                `protobuf:\"bytes,2,opt,name=forDate,proto3,oneof\" json:\"forDate,omitempty\"`\n\tInclude       []Include              `protobuf:\"varint,3,rep,packed,name=include,proto3,enum=aviation.airports.v0.Include\" json:\"include,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:BatchGetByDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "BatchGetByDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["BatchGetByDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:BatchGetByDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [58412], "all_end_bytes": [58963], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "Designators", "ForDate", "Include", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#313", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#315"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#315", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 315, "start_line": 2116, "end_line": 2122, "text": "func (x *BatchGetByDesignatorRequest) Reset() {\n\t*x = BatchGetByDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[30]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 57, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2116, 2122], "def_symbols": [], "symbols": ["Reset", "func", "BatchGetByDesignatorRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *BatchGetByDesignatorRequest) Reset() {\n\t*x = BatchGetByDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[30]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [58965], "all_end_bytes": [59172], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#314", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#316"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#316", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 316, "start_line": 2123, "end_line": 2126, "text": "func (x *BatchGetByDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 25, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2123, 2126], "def_symbols": [], "symbols": ["String", "func", "BatchGetByDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *BatchGetByDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [59174], "all_end_bytes": [59270], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#315", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#317"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#317", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 317, "start_line": 2127, "end_line": 2128, "text": "func (*BatchGetByDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 13, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2127, 2128], "def_symbols": [], "symbols": ["ProtoMessage", "func", "BatchGetByDesignatorRequest"], "doc_head": "func (*BatchGetByDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetByDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetByDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [59272], "all_end_bytes": [59325], "primary_index": 0, "all_receivers_normalized": ["*BatchGetByDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#316", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#318"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#318", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 318, "start_line": 2129, "end_line": 2140, "text": "func (x *BatchGetByDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[30]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 84, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2129, 2140], "def_symbols": [], "symbols": ["ProtoReflect", "func", "BatchGetByDesignatorRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *BatchGetByDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[30]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [59327], "all_end_bytes": [59622], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#317", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#319"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#319", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 319, "start_line": 2141, "end_line": 2145, "text": "// Deprecated: Use BatchGetByDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*BatchGetByDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{30}\n}\n", "n_tokens": 51, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2142, 2145], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "BatchGetByDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use BatchGetByDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*BatchGetByDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{30}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetByDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetByDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [59704], "all_end_bytes": [59825], "primary_index": 0, "all_receivers_normalized": ["*BatchGetByDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#318", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#320"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#320", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 320, "start_line": 2146, "end_line": 2152, "text": "func (x *BatchGetByDesignatorRequest) GetDesignators() []string {\n\tif x != nil {\n\t\treturn x.Designators\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetDesignators", "primary_kind": "method", "primary_span": [2146, 2152], "def_symbols": [], "symbols": ["GetDesignators", "func", "BatchGetByDesignatorRequest", "string", "nil", "return", "Designators"], "doc_head": "func (x *BatchGetByDesignatorRequest) GetDesignators() []string {\n\tif x != nil {\n\t\treturn x.Designators\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).GetDesignators/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "GetDesignators", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignators"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).GetDesignators/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [59827], "all_end_bytes": [59947], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "Designators", "GetDesignators", "x.Designators"], "header_context_minimal": "package v0\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#319", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#321"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#321", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 321, "start_line": 2153, "end_line": 2159, "text": "func (x *BatchGetByDesignatorRequest) GetForDate() string {\n\tif x != nil && x.ForDate != nil {\n\t\treturn *x.ForDate\n\t}\n\treturn \"\"\n}\n", "n_tokens": 40, "primary_symbol": "GetForDate", "primary_kind": "method", "primary_span": [2153, 2159], "def_symbols": [], "symbols": ["GetForDate", "func", "BatchGetByDesignatorRequest", "string", "nil", "ForDate", "return"], "doc_head": "func (x *BatchGetByDesignatorRequest) GetForDate() string {\n\tif x != nil && x.ForDate != nil {\n\t\treturn *x.ForDate\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).GetForDate/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "GetForDate", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetForDate"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).GetForDate/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [59949], "all_end_bytes": [60079], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "ForDate", "GetForDate", "x.ForDate"], "header_context_minimal": "package v0\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#320", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#322"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#322", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 322, "start_line": 2160, "end_line": 2166, "text": "func (x *BatchGetByDesignatorRequest) GetInclude() []Include {\n\tif x != nil {\n\t\treturn x.Include\n\t}\n\treturn nil\n}\n", "n_tokens": 33, "primary_symbol": "GetInclude", "primary_kind": "method", "primary_span": [2160, 2166], "def_symbols": [], "symbols": ["GetInclude", "func", "BatchGetByDesignatorRequest", "Include", "nil", "return"], "doc_head": "func (x *BatchGetByDesignatorRequest) GetInclude() []Include {\n\tif x != nil {\n\t\treturn x.Include\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorRequest).GetInclude/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorRequest", "function_name": "", "method_name": "GetInclude", "type_name": "BatchGetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetInclude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorRequest).GetInclude/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorRequest"], "all_type_names": ["BatchGetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [60081], "all_end_bytes": [60194], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorRequest", "GetInclude", "Include", "x.Include"], "header_context_minimal": "package v0\n// receiver: x *BatchGetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#321", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#323"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#323", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 323, "start_line": 2167, "end_line": 2173, "text": "type BatchGetByDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirports      []*Airport             `protobuf:\"bytes,1,rep,name=airports,proto3\" json:\"airports,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 68, "primary_symbol": "BatchGetByDesignatorResponse", "primary_kind": "type", "primary_span": [2167, 2173], "def_symbols": [], "symbols": ["type", "BatchGetByDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airports", "Airport", "protobuf", "bytes", "rep", "name", "airports", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type BatchGetByDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirports      []*Airport             `protobuf:\"bytes,1,rep,name=airports,proto3\" json:\"airports,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:BatchGetByDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "BatchGetByDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["BatchGetByDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:BatchGetByDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [60201], "all_end_bytes": [60483], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "Airports", "BatchGetByDesignatorResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#322", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#324"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#324", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 324, "start_line": 2174, "end_line": 2180, "text": "func (x *BatchGetByDesignatorResponse) Reset() {\n\t*x = BatchGetByDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[31]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 57, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2174, 2180], "def_symbols": [], "symbols": ["Reset", "func", "BatchGetByDesignatorResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *BatchGetByDesignatorResponse) Reset() {\n\t*x = BatchGetByDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[31]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "BatchGetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorResponse"], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [60485], "all_end_bytes": [60694], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#323", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#325"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#325", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 325, "start_line": 2181, "end_line": 2184, "text": "func (x *BatchGetByDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 25, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2181, 2184], "def_symbols": [], "symbols": ["String", "func", "BatchGetByDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *BatchGetByDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "BatchGetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorResponse"], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [60696], "all_end_bytes": [60793], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#324", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#326"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#326", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 326, "start_line": 2185, "end_line": 2186, "text": "func (*BatchGetByDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 13, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2185, 2186], "def_symbols": [], "symbols": ["ProtoMessage", "func", "BatchGetByDesignatorResponse"], "doc_head": "func (*BatchGetByDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetByDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetByDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [60795], "all_end_bytes": [60849], "primary_index": 0, "all_receivers_normalized": ["*BatchGetByDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#325", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#327"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#327", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 327, "start_line": 2187, "end_line": 2198, "text": "func (x *BatchGetByDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[31]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 84, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2187, 2198], "def_symbols": [], "symbols": ["ProtoReflect", "func", "BatchGetByDesignatorResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *BatchGetByDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[31]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "BatchGetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorResponse"], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [60851], "all_end_bytes": [61147], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#326", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#328"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#328", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 328, "start_line": 2199, "end_line": 2203, "text": "// Deprecated: Use BatchGetByDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*BatchGetByDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{31}\n}\n", "n_tokens": 51, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2200, 2203], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "BatchGetByDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use BatchGetByDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*BatchGetByDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{31}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*BatchGetByDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*BatchGetByDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [61230], "all_end_bytes": [61352], "primary_index": 0, "all_receivers_normalized": ["*BatchGetByDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["BatchGetByDesignatorResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#327", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#329"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#329", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 329, "start_line": 2204, "end_line": 2210, "text": "func (x *BatchGetByDesignatorResponse) GetAirports() []*Airport {\n\tif x != nil {\n\t\treturn x.Airports\n\t}\n\treturn nil\n}\n", "n_tokens": 36, "primary_symbol": "GetAirports", "primary_kind": "method", "primary_span": [2204, 2210], "def_symbols": [], "symbols": ["GetAirports", "func", "BatchGetByDesignatorResponse", "Airport", "nil", "return", "Airports"], "doc_head": "func (x *BatchGetByDesignatorResponse) GetAirports() []*Airport {\n\tif x != nil {\n\t\treturn x.Airports\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*BatchGetByDesignatorResponse).GetAirports/complete", "package": "v0", "node_kind": "method", "receiver": "x *BatchGetByDesignatorResponse", "function_name": "", "method_name": "GetAirports", "type_name": "BatchGetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirports"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*BatchGetByDesignatorResponse).GetAirports/complete"], "all_roles": ["complete"], "all_receivers": ["x *BatchGetByDesignatorResponse"], "all_type_names": ["BatchGetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [61354], "all_end_bytes": [61471], "primary_index": 0, "all_receivers_normalized": ["(*BatchGetByDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "Airports", "BatchGetByDesignatorResponse", "GetAirports", "x.Airports"], "header_context_minimal": "package v0\n// receiver: x *BatchGetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#328", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#330"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#330", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 330, "start_line": 2211, "end_line": 2219, "text": "type GetByDesignatorRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    string                 `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tForDate       *string                `protobuf:\"bytes,2,opt,name=forDate,proto3,oneof\" json:\"forDate,omitempty\"`\n\tInclude       []Include              `protobuf:\"varint,3,rep,packed,name=include,proto3,enum=aviation.airports.v0.Include\" json:\"include,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 133, "primary_symbol": "GetByDesignatorRequest", "primary_kind": "type", "primary_span": [2211, 2219], "def_symbols": [], "symbols": ["type", "GetByDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designator", "string", "protobuf", "bytes", "opt", "name", "designator", "proto3", "json", "omitempty", "ForDate", "forDate", "oneof", "Include", "varint", "rep", "packed", "include", "enum", "aviation", "airports", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetByDesignatorRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    string                 `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tForDate       *string                `protobuf:\"bytes,2,opt,name=forDate,proto3,oneof\" json:\"forDate,omitempty\"`\n\tInclude       []Include              `protobuf:\"varint,3,rep,packed,name=include,proto3,enum=aviation.airports.v0.Include\" json:\"include,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetByDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetByDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetByDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetByDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [61478], "all_end_bytes": [62022], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "ForDate", "GetByDesignatorRequest", "Include", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#329", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#331"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#331", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 331, "start_line": 2220, "end_line": 2226, "text": "func (x *GetByDesignatorRequest) Reset() {\n\t*x = GetByDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[32]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 55, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2220, 2226], "def_symbols": [], "symbols": ["Reset", "func", "GetByDesignatorRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetByDesignatorRequest) Reset() {\n\t*x = GetByDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[32]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [62024], "all_end_bytes": [62221], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#330", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#332"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#332", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 332, "start_line": 2227, "end_line": 2230, "text": "func (x *GetByDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 24, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2227, 2230], "def_symbols": [], "symbols": ["String", "func", "GetByDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetByDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [62223], "all_end_bytes": [62314], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#331", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#333"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#333", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 333, "start_line": 2231, "end_line": 2232, "text": "func (*GetByDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 12, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2231, 2232], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetByDesignatorRequest"], "doc_head": "func (*GetByDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetByDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetByDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [62316], "all_end_bytes": [62364], "primary_index": 0, "all_receivers_normalized": ["*GetByDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetByDesignatorRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#332", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#334"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#334", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 334, "start_line": 2233, "end_line": 2244, "text": "func (x *GetByDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[32]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 83, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2233, 2244], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetByDesignatorRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetByDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[32]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [62366], "all_end_bytes": [62656], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#333", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#335"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#335", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 335, "start_line": 2245, "end_line": 2249, "text": "// Deprecated: Use GetByDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*GetByDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{32}\n}\n", "n_tokens": 49, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2246, 2249], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetByDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetByDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*GetByDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{32}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetByDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetByDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [62733], "all_end_bytes": [62849], "primary_index": 0, "all_receivers_normalized": ["*GetByDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetByDesignatorRequest"], "header_context_minimal": "package v0\n// receiver: *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#334", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#336"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#336", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 336, "start_line": 2250, "end_line": 2256, "text": "func (x *GetByDesignatorRequest) GetDesignator() string {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn \"\"\n}\n", "n_tokens": 32, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [2250, 2256], "def_symbols": [], "symbols": ["GetDesignator", "func", "GetByDesignatorRequest", "string", "nil", "return", "Designator"], "doc_head": "func (x *GetByDesignatorRequest) GetDesignator() string {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "GetDesignator", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [62851], "all_end_bytes": [62961], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetByDesignatorRequest", "GetDesignator", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#335", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#337"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#337", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 337, "start_line": 2257, "end_line": 2263, "text": "func (x *GetByDesignatorRequest) GetForDate() string {\n\tif x != nil && x.ForDate != nil {\n\t\treturn *x.ForDate\n\t}\n\treturn \"\"\n}\n", "n_tokens": 39, "primary_symbol": "GetForDate", "primary_kind": "method", "primary_span": [2257, 2263], "def_symbols": [], "symbols": ["GetForDate", "func", "GetByDesignatorRequest", "string", "nil", "ForDate", "return"], "doc_head": "func (x *GetByDesignatorRequest) GetForDate() string {\n\tif x != nil && x.ForDate != nil {\n\t\treturn *x.ForDate\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).GetForDate/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "GetForDate", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetForDate"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).GetForDate/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [62963], "all_end_bytes": [63088], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["ForDate", "GetByDesignatorRequest", "GetForDate", "x.ForDate"], "header_context_minimal": "package v0\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#336", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#338"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#338", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 338, "start_line": 2264, "end_line": 2270, "text": "func (x *GetByDesignatorRequest) GetInclude() []Include {\n\tif x != nil {\n\t\treturn x.Include\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetInclude", "primary_kind": "method", "primary_span": [2264, 2270], "def_symbols": [], "symbols": ["GetInclude", "func", "GetByDesignatorRequest", "Include", "nil", "return"], "doc_head": "func (x *GetByDesignatorRequest) GetInclude() []Include {\n\tif x != nil {\n\t\treturn x.Include\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorRequest).GetInclude/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorRequest", "function_name": "", "method_name": "GetInclude", "type_name": "GetByDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetInclude"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorRequest).GetInclude/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorRequest"], "all_type_names": ["GetByDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [63090], "all_end_bytes": [63198], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetByDesignatorRequest", "GetInclude", "Include", "x.Include"], "header_context_minimal": "package v0\n// receiver: x *GetByDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#337", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#339"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#339", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 339, "start_line": 2271, "end_line": 2277, "text": "type GetByDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirport       *Airport               `protobuf:\"bytes,1,opt,name=airport,proto3\" json:\"airport,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 64, "primary_symbol": "GetByDesignatorResponse", "primary_kind": "type", "primary_span": [2271, 2277], "def_symbols": [], "symbols": ["type", "GetByDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Airport", "protobuf", "bytes", "opt", "name", "airport", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetByDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tAirport       *Airport               `protobuf:\"bytes,1,opt,name=airport,proto3\" json:\"airport,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetByDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetByDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetByDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetByDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [63205], "all_end_bytes": [63480], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport", "GetByDesignatorResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#338", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#340"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#340", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 340, "start_line": 2278, "end_line": 2284, "text": "func (x *GetByDesignatorResponse) Reset() {\n\t*x = GetByDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[33]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 55, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2278, 2284], "def_symbols": [], "symbols": ["Reset", "func", "GetByDesignatorResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetByDesignatorResponse) Reset() {\n\t*x = GetByDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[33]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "GetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorResponse"], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [63482], "all_end_bytes": [63681], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#339", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#341"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#341", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 341, "start_line": 2285, "end_line": 2288, "text": "func (x *GetByDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 24, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2285, 2288], "def_symbols": [], "symbols": ["String", "func", "GetByDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetByDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "GetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorResponse"], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [63683], "all_end_bytes": [63775], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#340", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#342"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#342", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 342, "start_line": 2289, "end_line": 2290, "text": "func (*GetByDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 12, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2289, 2290], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetByDesignatorResponse"], "doc_head": "func (*GetByDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetByDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetByDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [63777], "all_end_bytes": [63826], "primary_index": 0, "all_receivers_normalized": ["*GetByDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetByDesignatorResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#341", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#343"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#343", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 343, "start_line": 2291, "end_line": 2302, "text": "func (x *GetByDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[33]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 83, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2291, 2302], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetByDesignatorResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetByDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[33]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorResponse"], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [63828], "all_end_bytes": [64119], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetByDesignatorResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#342", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#344"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#344", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 344, "start_line": 2303, "end_line": 2307, "text": "// Deprecated: Use GetByDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*GetByDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{33}\n}\n", "n_tokens": 49, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2304, 2307], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetByDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetByDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*GetByDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{33}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetByDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetByDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [64197], "all_end_bytes": [64314], "primary_index": 0, "all_receivers_normalized": ["*GetByDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetByDesignatorResponse"], "header_context_minimal": "package v0\n// receiver: *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#343", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#345"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#345", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 345, "start_line": 2308, "end_line": 2314, "text": "func (x *GetByDesignatorResponse) GetAirport() *Airport {\n\tif x != nil {\n\t\treturn x.Airport\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetAirport", "primary_kind": "method", "primary_span": [2308, 2314], "def_symbols": [], "symbols": ["GetAirport", "func", "GetByDesignatorResponse", "Airport", "nil", "return"], "doc_head": "func (x *GetByDesignatorResponse) GetAirport() *Airport {\n\tif x != nil {\n\t\treturn x.Airport\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetByDesignatorResponse).GetAirport/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetByDesignatorResponse", "function_name": "", "method_name": "GetAirport", "type_name": "GetByDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirport"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetByDesignatorResponse).GetAirport/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetByDesignatorResponse"], "all_type_names": ["GetByDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [64316], "all_end_bytes": [64424], "primary_index": 0, "all_receivers_normalized": ["(*GetByDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport", "GetAirport", "GetByDesignatorResponse", "x.Airport"], "header_context_minimal": "package v0\n// receiver: x *GetByDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#344", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#346"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#346", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 346, "start_line": 2315, "end_line": 2322, "text": "type Country struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 100, "primary_symbol": "Country", "primary_kind": "type", "primary_span": [2315, 2322], "def_symbols": [], "symbols": ["type", "Country", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "rep", "protobuf_key", "key", "protobuf_val", "value", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Country struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Country (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Country", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Country"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Country (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Country"], "all_type_kinds": ["struct"], "all_start_bytes": [64431], "all_end_bytes": [64856], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Country", "MessageState", "Name", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#345", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#347"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#347", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 347, "start_line": 2323, "end_line": 2329, "text": "func (x *Country) Reset() {\n\t*x = Country{}\n\tmi := &file_airports_proto_msgTypes[34]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 47, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2323, 2329], "def_symbols": [], "symbols": ["Reset", "func", "Country", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Country) Reset() {\n\t*x = Country{}\n\tmi := &file_airports_proto_msgTypes[34]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Country).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Country", "function_name": "", "method_name": "Reset", "type_name": "Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Country).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Country"], "all_type_names": ["Country"], "all_type_kinds": [null], "all_start_bytes": [64858], "all_end_bytes": [65025], "primary_index": 0, "all_receivers_normalized": ["(*Country)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Country", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#346", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#348"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#348", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 348, "start_line": 2330, "end_line": 2333, "text": "func (x *Country) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 20, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2330, 2333], "def_symbols": [], "symbols": ["String", "func", "Country", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Country) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Country).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Country", "function_name": "", "method_name": "String", "type_name": "Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Country).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Country"], "all_type_names": ["Country"], "all_type_kinds": [null], "all_start_bytes": [65027], "all_end_bytes": [65103], "primary_index": 0, "all_receivers_normalized": ["(*Country)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Country", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#347", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#349"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#349", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 349, "start_line": 2334, "end_line": 2335, "text": "func (*Country) ProtoMessage() {}\n", "n_tokens": 8, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2334, 2335], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Country"], "doc_head": "func (*Country) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Country", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Country"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [65105], "all_end_bytes": [65138], "primary_index": 0, "all_receivers_normalized": ["*Country"], "imports_used_minimal": [], "symbols_referenced_strict": ["Country", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#348", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#350"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#350", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 350, "start_line": 2336, "end_line": 2347, "text": "func (x *Country) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[34]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 79, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2336, 2347], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Country", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Country) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[34]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Country).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Country", "function_name": "", "method_name": "ProtoReflect", "type_name": "Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Country).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Country"], "all_type_names": ["Country"], "all_type_kinds": [null], "all_start_bytes": [65140], "all_end_bytes": [65415], "primary_index": 0, "all_receivers_normalized": ["(*Country)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Country", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#349", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#351"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#351", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 351, "start_line": 2348, "end_line": 2352, "text": "// Deprecated: Use Country.ProtoReflect.Descriptor instead.\nfunc (*Country) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{34}\n}\n", "n_tokens": 41, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2349, 2352], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Country", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Country.ProtoReflect.Descriptor instead.\nfunc (*Country) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{34}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Country", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Country"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [65477], "all_end_bytes": [65578], "primary_index": 0, "all_receivers_normalized": ["*Country"], "imports_used_minimal": [], "symbols_referenced_strict": ["Country", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#350", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#352"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#352", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 352, "start_line": 2353, "end_line": 2359, "text": "func (x *Country) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 26, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [2353, 2359], "def_symbols": [], "symbols": ["GetId", "func", "Country", "string", "nil", "return"], "doc_head": "func (x *Country) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Country).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Country", "function_name": "", "method_name": "GetId", "type_name": "Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Country).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Country"], "all_type_names": ["Country"], "all_type_kinds": [null], "all_start_bytes": [65580], "all_end_bytes": [65659], "primary_index": 0, "all_receivers_normalized": ["(*Country)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Country", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#351", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#353"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#353", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 353, "start_line": 2360, "end_line": 2366, "text": "func (x *Country) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 28, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [2360, 2366], "def_symbols": [], "symbols": ["GetName", "func", "Country", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *Country) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Country).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Country", "function_name": "", "method_name": "GetName", "type_name": "Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Country).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Country"], "all_type_names": ["Country"], "all_type_kinds": [null], "all_start_bytes": [65661], "all_end_bytes": [65756], "primary_index": 0, "all_receivers_normalized": ["(*Country)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Country", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#352", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#354"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#354", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 354, "start_line": 2367, "end_line": 2377, "text": "type City struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tState         *string                `protobuf:\"bytes,3,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tTimezone      string                 `protobuf:\"bytes,4,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tCountry       *Country               `protobuf:\"bytes,5,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 175, "primary_symbol": "City", "primary_kind": "type", "primary_span": [2367, 2377], "def_symbols": [], "symbols": ["type", "City", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "int64", "protobuf", "varint", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "string", "bytes", "rep", "protobuf_key", "key", "protobuf_val", "value", "State", "oneof", "Timezone", "timezone", "Country", "country", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type City struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tState         *string                `protobuf:\"bytes,3,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tTimezone      string                 `protobuf:\"bytes,4,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tCountry       *Country               `protobuf:\"bytes,5,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:City (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "City", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["City"], "all_kinds": ["type"], "all_ast_paths": ["go:type:City (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["City"], "all_type_kinds": ["struct"], "all_start_bytes": [65763], "all_end_bytes": [66514], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["City", "Country", "MessageState", "Name", "SizeCache", "State", "Timezone", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#353", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#355"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#355", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 355, "start_line": 2378, "end_line": 2384, "text": "func (x *City) Reset() {\n\t*x = City{}\n\tmi := &file_airports_proto_msgTypes[35]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 47, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2378, 2384], "def_symbols": [], "symbols": ["Reset", "func", "City", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *City) Reset() {\n\t*x = City{}\n\tmi := &file_airports_proto_msgTypes[35]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*City).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *City", "function_name": "", "method_name": "Reset", "type_name": "City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*City).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *City"], "all_type_names": ["City"], "all_type_kinds": [null], "all_start_bytes": [66516], "all_end_bytes": [66677], "primary_index": 0, "all_receivers_normalized": ["(*City)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["City", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#354", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#356"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#356", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 356, "start_line": 2385, "end_line": 2388, "text": "func (x *City) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 20, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2385, 2388], "def_symbols": [], "symbols": ["String", "func", "City", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *City) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*City).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *City", "function_name": "", "method_name": "String", "type_name": "City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*City).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *City"], "all_type_names": ["City"], "all_type_kinds": [null], "all_start_bytes": [66679], "all_end_bytes": [66752], "primary_index": 0, "all_receivers_normalized": ["(*City)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["City", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#355", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#357"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#357", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 357, "start_line": 2389, "end_line": 2390, "text": "func (*City) ProtoMessage() {}\n", "n_tokens": 8, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2389, 2390], "def_symbols": [], "symbols": ["ProtoMessage", "func", "City"], "doc_head": "func (*City) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*City", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*City"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [66754], "all_end_bytes": [66784], "primary_index": 0, "all_receivers_normalized": ["*City"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#356", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#358"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#358", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 358, "start_line": 2391, "end_line": 2402, "text": "func (x *City) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[35]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 79, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2391, 2402], "def_symbols": [], "symbols": ["ProtoReflect", "func", "City", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *City) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[35]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*City).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *City", "function_name": "", "method_name": "ProtoReflect", "type_name": "City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*City).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *City"], "all_type_names": ["City"], "all_type_kinds": [null], "all_start_bytes": [66786], "all_end_bytes": [67058], "primary_index": 0, "all_receivers_normalized": ["(*City)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["City", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#357", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#359"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#359", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 359, "start_line": 2403, "end_line": 2407, "text": "// Deprecated: Use City.ProtoReflect.Descriptor instead.\nfunc (*City) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{35}\n}\n", "n_tokens": 41, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2404, 2407], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "City", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use City.ProtoReflect.Descriptor instead.\nfunc (*City) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{35}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*City", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*City"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [67117], "all_end_bytes": [67215], "primary_index": 0, "all_receivers_normalized": ["*City"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#358", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#360"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#360", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 360, "start_line": 2408, "end_line": 2414, "text": "func (x *City) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}\n", "n_tokens": 29, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [2408, 2414], "def_symbols": [], "symbols": ["GetId", "func", "City", "int64", "nil", "return"], "doc_head": "func (x *City) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*City).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *City", "function_name": "", "method_name": "GetId", "type_name": "City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*City).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *City"], "all_type_names": ["City"], "all_type_kinds": [null], "all_start_bytes": [67217], "all_end_bytes": [67291], "primary_index": 0, "all_receivers_normalized": ["(*City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#359", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#361"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#361", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 361, "start_line": 2415, "end_line": 2421, "text": "func (x *City) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 28, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [2415, 2421], "def_symbols": [], "symbols": ["GetName", "func", "City", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *City) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*City).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *City", "function_name": "", "method_name": "GetName", "type_name": "City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*City).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *City"], "all_type_names": ["City"], "all_type_kinds": [null], "all_start_bytes": [67293], "all_end_bytes": [67385], "primary_index": 0, "all_receivers_normalized": ["(*City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#360", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#362"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#362", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 362, "start_line": 2422, "end_line": 2428, "text": "func (x *City) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}\n", "n_tokens": 32, "primary_symbol": "GetState", "primary_kind": "method", "primary_span": [2422, 2428], "def_symbols": [], "symbols": ["GetState", "func", "City", "string", "nil", "State", "return"], "doc_head": "func (x *City) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*City).GetState/complete", "package": "v0", "node_kind": "method", "receiver": "x *City", "function_name": "", "method_name": "GetState", "type_name": "City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetState"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*City).GetState/complete"], "all_roles": ["complete"], "all_receivers": ["x *City"], "all_type_names": ["City"], "all_type_kinds": [null], "all_start_bytes": [67387], "all_end_bytes": [67488], "primary_index": 0, "all_receivers_normalized": ["(*City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "GetState", "State", "x.State"], "header_context_minimal": "package v0\n// receiver: x *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#361", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#363"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#363", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 363, "start_line": 2429, "end_line": 2435, "text": "func (x *City) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetTimezone", "primary_kind": "method", "primary_span": [2429, 2435], "def_symbols": [], "symbols": ["GetTimezone", "func", "City", "string", "nil", "return", "Timezone"], "doc_head": "func (x *City) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*City).GetTimezone/complete", "package": "v0", "node_kind": "method", "receiver": "x *City", "function_name": "", "method_name": "GetTimezone", "type_name": "City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTimezone"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*City).GetTimezone/complete"], "all_roles": ["complete"], "all_receivers": ["x *City"], "all_type_names": ["City"], "all_type_kinds": [null], "all_start_bytes": [67490], "all_end_bytes": [67578], "primary_index": 0, "all_receivers_normalized": ["(*City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "GetTimezone", "Timezone", "x.Timezone"], "header_context_minimal": "package v0\n// receiver: x *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#362", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#364"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#364", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 364, "start_line": 2436, "end_line": 2442, "text": "func (x *City) GetCountry() *Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}\n", "n_tokens": 28, "primary_symbol": "GetCountry", "primary_kind": "method", "primary_span": [2436, 2442], "def_symbols": [], "symbols": ["GetCountry", "func", "City", "Country", "nil", "return"], "doc_head": "func (x *City) GetCountry() *Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*City).GetCountry/complete", "package": "v0", "node_kind": "method", "receiver": "x *City", "function_name": "", "method_name": "GetCountry", "type_name": "City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCountry"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*City).GetCountry/complete"], "all_roles": ["complete"], "all_receivers": ["x *City"], "all_type_names": ["City"], "all_type_kinds": [null], "all_start_bytes": [67580], "all_end_bytes": [67669], "primary_index": 0, "all_receivers_normalized": ["(*City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["City", "Country", "GetCountry", "x.Country"], "header_context_minimal": "package v0\n// receiver: x *City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#363", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#365"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#365", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 365, "start_line": 2443, "end_line": 2450, "text": "type Error struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCode          string                 `protobuf:\"bytes,1,opt,name=code,proto3\" json:\"code,omitempty\"`\n\tMessage       string                 `protobuf:\"bytes,2,opt,name=message,proto3\" json:\"message,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 78, "primary_symbol": "Error", "primary_kind": "type", "primary_span": [2443, 2450], "def_symbols": [], "symbols": ["type", "Error", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Code", "string", "protobuf", "bytes", "opt", "name", "code", "proto3", "json", "omitempty", "Message", "message", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Error struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tCode          string                 `protobuf:\"bytes,1,opt,name=code,proto3\" json:\"code,omitempty\"`\n\tMessage       string                 `protobuf:\"bytes,2,opt,name=message,proto3\" json:\"message,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Error (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Error", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Error"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Error (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Error"], "all_type_kinds": ["struct"], "all_start_bytes": [67676], "all_end_bytes": [68035], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Error", "Message", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#364", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#366"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#366", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 366, "start_line": 2451, "end_line": 2457, "text": "func (x *Error) Reset() {\n\t*x = Error{}\n\tmi := &file_airports_proto_msgTypes[36]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 47, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2451, 2457], "def_symbols": [], "symbols": ["Reset", "func", "Error", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Error) Reset() {\n\t*x = Error{}\n\tmi := &file_airports_proto_msgTypes[36]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "Reset", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [68037], "all_end_bytes": [68200], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Error", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#365", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#367"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#367", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 367, "start_line": 2458, "end_line": 2461, "text": "func (x *Error) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 20, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2458, 2461], "def_symbols": [], "symbols": ["String", "func", "Error", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Error) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "String", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [68202], "all_end_bytes": [68276], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Error", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#366", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#368"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#368", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 368, "start_line": 2462, "end_line": 2463, "text": "func (*Error) ProtoMessage() {}\n", "n_tokens": 8, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2462, 2463], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Error"], "doc_head": "func (*Error) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Error", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Error"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [68278], "all_end_bytes": [68309], "primary_index": 0, "all_receivers_normalized": ["*Error"], "imports_used_minimal": [], "symbols_referenced_strict": ["Error", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#367", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#369"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#369", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 369, "start_line": 2464, "end_line": 2475, "text": "func (x *Error) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[36]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 79, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2464, 2475], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Error", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Error) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[36]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "ProtoReflect", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [68311], "all_end_bytes": [68584], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Error", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#368", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#370"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#370", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 370, "start_line": 2476, "end_line": 2480, "text": "// Deprecated: Use Error.ProtoReflect.Descriptor instead.\nfunc (*Error) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{36}\n}\n", "n_tokens": 41, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2477, 2480], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Error", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Error.ProtoReflect.Descriptor instead.\nfunc (*Error) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{36}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Error", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Error"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [68644], "all_end_bytes": [68743], "primary_index": 0, "all_receivers_normalized": ["*Error"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "Error"], "header_context_minimal": "package v0\n// receiver: *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#369", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#371"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#371", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 371, "start_line": 2481, "end_line": 2487, "text": "func (x *Error) GetCode() string {\n\tif x != nil {\n\t\treturn x.Code\n\t}\n\treturn \"\"\n}\n", "n_tokens": 26, "primary_symbol": "GetCode", "primary_kind": "method", "primary_span": [2481, 2487], "def_symbols": [], "symbols": ["GetCode", "func", "Error", "string", "nil", "return", "Code"], "doc_head": "func (x *Error) GetCode() string {\n\tif x != nil {\n\t\treturn x.Code\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).GetCode/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "GetCode", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCode"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).GetCode/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [68745], "all_end_bytes": [68826], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Error", "GetCode", "x.Code"], "header_context_minimal": "package v0\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#370", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#372"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#372", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 372, "start_line": 2488, "end_line": 2494, "text": "func (x *Error) GetMessage() string {\n\tif x != nil {\n\t\treturn x.Message\n\t}\n\treturn \"\"\n}\n", "n_tokens": 25, "primary_symbol": "GetMessage", "primary_kind": "method", "primary_span": [2488, 2494], "def_symbols": [], "symbols": ["GetMessage", "func", "Error", "string", "nil", "return", "Message"], "doc_head": "func (x *Error) GetMessage() string {\n\tif x != nil {\n\t\treturn x.Message\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Error).GetMessage/complete", "package": "v0", "node_kind": "method", "receiver": "x *Error", "function_name": "", "method_name": "GetMessage", "type_name": "Error", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Error).GetMessage/complete"], "all_roles": ["complete"], "all_receivers": ["x *Error"], "all_type_names": ["Error"], "all_type_kinds": [null], "all_start_bytes": [68828], "all_end_bytes": [68915], "primary_index": 0, "all_receivers_normalized": ["(*Error)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Error", "GetMessage", "Message", "x.Message"], "header_context_minimal": "package v0\n// receiver: x *Error", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#371", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#373"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#373", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 373, "start_line": 2495, "end_line": 2504, "text": "type CreateDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,1,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirportId      string                 `protobuf:\"bytes,2,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tValidFrom      *timestamppb.Timestamp `protobuf:\"bytes,3,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo        *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}\n", "n_tokens": 154, "primary_symbol": "CreateDesignatorRequest", "primary_kind": "type", "primary_span": [2495, 2504], "def_symbols": [], "symbols": ["type", "CreateDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "DesignatorCode", "string", "protobuf", "bytes", "opt", "name", "designatorCode", "proto3", "json", "omitempty", "AirportId", "airportId", "ValidFrom", "timestamppb", "Timestamp", "validFrom", "ValidTo", "validTo", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,1,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirportId      string                 `protobuf:\"bytes,2,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tValidFrom      *timestamppb.Timestamp `protobuf:\"bytes,3,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo        *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [68922], "all_end_bytes": [69550], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["AirportId", "CreateDesignatorRequest", "DesignatorCode", "MessageState", "SizeCache", "Timestamp", "UnknownFields", "ValidFrom", "ValidTo", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#372", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#374"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#374", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 374, "start_line": 2505, "end_line": 2511, "text": "func (x *CreateDesignatorRequest) Reset() {\n\t*x = CreateDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[37]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2505, 2511], "def_symbols": [], "symbols": ["Reset", "func", "CreateDesignatorRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateDesignatorRequest) Reset() {\n\t*x = CreateDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[37]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [69552], "all_end_bytes": [69751], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#373", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#375"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#375", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 375, "start_line": 2512, "end_line": 2515, "text": "func (x *CreateDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2512, 2515], "def_symbols": [], "symbols": ["String", "func", "CreateDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [69753], "all_end_bytes": [69845], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#374", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#376"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#376", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 376, "start_line": 2516, "end_line": 2517, "text": "func (*CreateDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2516, 2517], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateDesignatorRequest"], "doc_head": "func (*CreateDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [69847], "all_end_bytes": [69896], "primary_index": 0, "all_receivers_normalized": ["*CreateDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#375", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#377"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#377", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 377, "start_line": 2518, "end_line": 2529, "text": "func (x *CreateDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[37]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2518, 2529], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateDesignatorRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[37]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [69898], "all_end_bytes": [70189], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#376", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#378"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#378", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 378, "start_line": 2530, "end_line": 2534, "text": "// Deprecated: Use CreateDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{37}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2531, 2534], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*CreateDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{37}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [70267], "all_end_bytes": [70384], "primary_index": 0, "all_receivers_normalized": ["*CreateDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorRequest", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#377", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#379"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#379", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 379, "start_line": 2535, "end_line": 2541, "text": "func (x *CreateDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetDesignatorCode", "primary_kind": "method", "primary_span": [2535, 2541], "def_symbols": [], "symbols": ["GetDesignatorCode", "func", "CreateDesignatorRequest", "string", "nil", "return", "DesignatorCode"], "doc_head": "func (x *CreateDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).GetDesignatorCode/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "GetDesignatorCode", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignatorCode"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).GetDesignatorCode/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [70386], "all_end_bytes": [70505], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorRequest", "DesignatorCode", "GetDesignatorCode", "x.DesignatorCode"], "header_context_minimal": "package v0\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#378", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#380"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#380", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 380, "start_line": 2542, "end_line": 2548, "text": "func (x *CreateDesignatorRequest) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetAirportId", "primary_kind": "method", "primary_span": [2542, 2548], "def_symbols": [], "symbols": ["GetAirportId", "func", "CreateDesignatorRequest", "string", "nil", "return", "AirportId"], "doc_head": "func (x *CreateDesignatorRequest) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).GetAirportId/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "GetAirportId", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirportId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).GetAirportId/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [70507], "all_end_bytes": [70616], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportId", "CreateDesignatorRequest", "GetAirportId", "x.AirportId"], "header_context_minimal": "package v0\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#379", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#381"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#381", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 381, "start_line": 2549, "end_line": 2555, "text": "func (x *CreateDesignatorRequest) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetValidFrom", "primary_kind": "method", "primary_span": [2549, 2555], "def_symbols": [], "symbols": ["GetValidFrom", "func", "CreateDesignatorRequest", "timestamppb", "Timestamp", "nil", "return", "ValidFrom"], "doc_head": "func (x *CreateDesignatorRequest) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).GetValidFrom/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "GetValidFrom", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidFrom"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).GetValidFrom/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [70618], "all_end_bytes": [70744], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["CreateDesignatorRequest", "GetValidFrom", "Timestamp", "ValidFrom", "timestamppb.Timestamp", "x.ValidFrom"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#380", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#382"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#382", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 382, "start_line": 2556, "end_line": 2562, "text": "func (x *CreateDesignatorRequest) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetValidTo", "primary_kind": "method", "primary_span": [2556, 2562], "def_symbols": [], "symbols": ["GetValidTo", "func", "CreateDesignatorRequest", "timestamppb", "Timestamp", "nil", "return", "ValidTo"], "doc_head": "func (x *CreateDesignatorRequest) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorRequest).GetValidTo/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorRequest", "function_name": "", "method_name": "GetValidTo", "type_name": "CreateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidTo"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorRequest).GetValidTo/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorRequest"], "all_type_names": ["CreateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [70746], "all_end_bytes": [70868], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["CreateDesignatorRequest", "GetValidTo", "Timestamp", "ValidTo", "timestamppb.Timestamp", "x.ValidTo"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *CreateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#381", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#383"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#383", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 383, "start_line": 2563, "end_line": 2569, "text": "type CreateDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "CreateDesignatorResponse", "primary_kind": "type", "primary_span": [2563, 2569], "def_symbols": [], "symbols": ["type", "CreateDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designator", "protobuf", "bytes", "opt", "name", "designator", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type CreateDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:CreateDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "CreateDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["CreateDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:CreateDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [70875], "all_end_bytes": [71157], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorResponse", "Designator", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#382", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#384"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#384", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 384, "start_line": 2570, "end_line": 2576, "text": "func (x *CreateDesignatorResponse) Reset() {\n\t*x = CreateDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[38]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2570, 2576], "def_symbols": [], "symbols": ["Reset", "func", "CreateDesignatorResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *CreateDesignatorResponse) Reset() {\n\t*x = CreateDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[38]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "CreateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorResponse"], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [71159], "all_end_bytes": [71360], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#383", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#385"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#385", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 385, "start_line": 2577, "end_line": 2580, "text": "func (x *CreateDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2577, 2580], "def_symbols": [], "symbols": ["String", "func", "CreateDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *CreateDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "CreateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorResponse"], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [71362], "all_end_bytes": [71455], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#384", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#386"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#386", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 386, "start_line": 2581, "end_line": 2582, "text": "func (*CreateDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2581, 2582], "def_symbols": [], "symbols": ["ProtoMessage", "func", "CreateDesignatorResponse"], "doc_head": "func (*CreateDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [71457], "all_end_bytes": [71507], "primary_index": 0, "all_receivers_normalized": ["*CreateDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#385", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#387"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#387", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 387, "start_line": 2583, "end_line": 2594, "text": "func (x *CreateDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[38]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2583, 2594], "def_symbols": [], "symbols": ["ProtoReflect", "func", "CreateDesignatorResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *CreateDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[38]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "CreateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorResponse"], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [71509], "all_end_bytes": [71801], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["CreateDesignatorResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#386", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#388"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#388", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 388, "start_line": 2595, "end_line": 2599, "text": "// Deprecated: Use CreateDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{38}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2596, 2599], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "CreateDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use CreateDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*CreateDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{38}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*CreateDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*CreateDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [71880], "all_end_bytes": [71998], "primary_index": 0, "all_receivers_normalized": ["*CreateDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorResponse", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#387", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#389"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#389", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 389, "start_line": 2600, "end_line": 2606, "text": "func (x *CreateDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [2600, 2606], "def_symbols": [], "symbols": ["GetDesignator", "func", "CreateDesignatorResponse", "Designator", "nil", "return"], "doc_head": "func (x *CreateDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*CreateDesignatorResponse).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *CreateDesignatorResponse", "function_name": "", "method_name": "GetDesignator", "type_name": "CreateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*CreateDesignatorResponse).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *CreateDesignatorResponse"], "all_type_names": ["CreateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [72000], "all_end_bytes": [72118], "primary_index": 0, "all_receivers_normalized": ["(*CreateDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["CreateDesignatorResponse", "Designator", "GetDesignator", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *CreateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#388", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#390"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#390", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 390, "start_line": 2607, "end_line": 2616, "text": "type UpdateDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,2,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirportId      string                 `protobuf:\"bytes,3,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tValidFrom      *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo        *timestamppb.Timestamp `protobuf:\"bytes,5,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}\n", "n_tokens": 154, "primary_symbol": "UpdateDesignatorRequest", "primary_kind": "type", "primary_span": [2607, 2616], "def_symbols": [], "symbols": ["type", "UpdateDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "DesignatorCode", "string", "protobuf", "bytes", "opt", "name", "designatorCode", "proto3", "json", "omitempty", "AirportId", "airportId", "ValidFrom", "timestamppb", "Timestamp", "validFrom", "ValidTo", "validTo", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,2,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirportId      string                 `protobuf:\"bytes,3,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tValidFrom      *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo        *timestamppb.Timestamp `protobuf:\"bytes,5,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [72125], "all_end_bytes": [72753], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["AirportId", "DesignatorCode", "MessageState", "SizeCache", "Timestamp", "UnknownFields", "UpdateDesignatorRequest", "ValidFrom", "ValidTo", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#389", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#391"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#391", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 391, "start_line": 2617, "end_line": 2623, "text": "func (x *UpdateDesignatorRequest) Reset() {\n\t*x = UpdateDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[39]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2617, 2623], "def_symbols": [], "symbols": ["Reset", "func", "UpdateDesignatorRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateDesignatorRequest) Reset() {\n\t*x = UpdateDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[39]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [72755], "all_end_bytes": [72954], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateDesignatorRequest", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#390", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#392"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#392", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 392, "start_line": 2624, "end_line": 2627, "text": "func (x *UpdateDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2624, 2627], "def_symbols": [], "symbols": ["String", "func", "UpdateDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [72956], "all_end_bytes": [73048], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateDesignatorRequest", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#391", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#393"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#393", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 393, "start_line": 2628, "end_line": 2629, "text": "func (*UpdateDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2628, 2629], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateDesignatorRequest"], "doc_head": "func (*UpdateDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [73050], "all_end_bytes": [73099], "primary_index": 0, "all_receivers_normalized": ["*UpdateDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateDesignatorRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#392", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#394"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#394", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 394, "start_line": 2630, "end_line": 2641, "text": "func (x *UpdateDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[39]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2630, 2641], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateDesignatorRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[39]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [73101], "all_end_bytes": [73392], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateDesignatorRequest", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#393", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#395"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#395", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 395, "start_line": 2642, "end_line": 2646, "text": "// Deprecated: Use UpdateDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{39}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2643, 2646], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*UpdateDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{39}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [73470], "all_end_bytes": [73587], "primary_index": 0, "all_receivers_normalized": ["*UpdateDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateDesignatorRequest"], "header_context_minimal": "package v0\n// receiver: *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#394", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#396"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#396", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 396, "start_line": 2647, "end_line": 2653, "text": "func (x *UpdateDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetDesignatorCode", "primary_kind": "method", "primary_span": [2647, 2653], "def_symbols": [], "symbols": ["GetDesignatorCode", "func", "UpdateDesignatorRequest", "string", "nil", "return", "DesignatorCode"], "doc_head": "func (x *UpdateDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).GetDesignatorCode/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "GetDesignatorCode", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignatorCode"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).GetDesignatorCode/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [73589], "all_end_bytes": [73708], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["DesignatorCode", "GetDesignatorCode", "UpdateDesignatorRequest", "x.DesignatorCode"], "header_context_minimal": "package v0\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#395", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#397"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#397", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 397, "start_line": 2654, "end_line": 2660, "text": "func (x *UpdateDesignatorRequest) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetAirportId", "primary_kind": "method", "primary_span": [2654, 2660], "def_symbols": [], "symbols": ["GetAirportId", "func", "UpdateDesignatorRequest", "string", "nil", "return", "AirportId"], "doc_head": "func (x *UpdateDesignatorRequest) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).GetAirportId/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "GetAirportId", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirportId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).GetAirportId/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [73710], "all_end_bytes": [73819], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportId", "GetAirportId", "UpdateDesignatorRequest", "x.AirportId"], "header_context_minimal": "package v0\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#396", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#398"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#398", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 398, "start_line": 2661, "end_line": 2667, "text": "func (x *UpdateDesignatorRequest) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetValidFrom", "primary_kind": "method", "primary_span": [2661, 2667], "def_symbols": [], "symbols": ["GetValidFrom", "func", "UpdateDesignatorRequest", "timestamppb", "Timestamp", "nil", "return", "ValidFrom"], "doc_head": "func (x *UpdateDesignatorRequest) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).GetValidFrom/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "GetValidFrom", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidFrom"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).GetValidFrom/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [73821], "all_end_bytes": [73947], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["GetValidFrom", "Timestamp", "UpdateDesignatorRequest", "ValidFrom", "timestamppb.Timestamp", "x.ValidFrom"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#397", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#399"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#399", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 399, "start_line": 2668, "end_line": 2674, "text": "func (x *UpdateDesignatorRequest) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetValidTo", "primary_kind": "method", "primary_span": [2668, 2674], "def_symbols": [], "symbols": ["GetValidTo", "func", "UpdateDesignatorRequest", "timestamppb", "Timestamp", "nil", "return", "ValidTo"], "doc_head": "func (x *UpdateDesignatorRequest) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorRequest).GetValidTo/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorRequest", "function_name": "", "method_name": "GetValidTo", "type_name": "UpdateDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidTo"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorRequest).GetValidTo/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorRequest"], "all_type_names": ["UpdateDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [73949], "all_end_bytes": [74071], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["GetValidTo", "Timestamp", "UpdateDesignatorRequest", "ValidTo", "timestamppb.Timestamp", "x.ValidTo"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *UpdateDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#398", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#400"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#400", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 400, "start_line": 2675, "end_line": 2681, "text": "type UpdateDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "UpdateDesignatorResponse", "primary_kind": "type", "primary_span": [2675, 2681], "def_symbols": [], "symbols": ["type", "UpdateDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designator", "protobuf", "bytes", "opt", "name", "designator", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UpdateDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UpdateDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UpdateDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UpdateDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UpdateDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [74078], "all_end_bytes": [74360], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "MessageState", "SizeCache", "UnknownFields", "UpdateDesignatorResponse", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#399", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#401"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#401", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 401, "start_line": 2682, "end_line": 2688, "text": "func (x *UpdateDesignatorResponse) Reset() {\n\t*x = UpdateDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[40]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2682, 2688], "def_symbols": [], "symbols": ["Reset", "func", "UpdateDesignatorResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UpdateDesignatorResponse) Reset() {\n\t*x = UpdateDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[40]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "UpdateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorResponse"], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [74362], "all_end_bytes": [74563], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UpdateDesignatorResponse", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#400", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#402"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#402", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 402, "start_line": 2689, "end_line": 2692, "text": "func (x *UpdateDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2689, 2692], "def_symbols": [], "symbols": ["String", "func", "UpdateDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UpdateDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "UpdateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorResponse"], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [74565], "all_end_bytes": [74658], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UpdateDesignatorResponse", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#401", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#403"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#403", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 403, "start_line": 2693, "end_line": 2694, "text": "func (*UpdateDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2693, 2694], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UpdateDesignatorResponse"], "doc_head": "func (*UpdateDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [74660], "all_end_bytes": [74710], "primary_index": 0, "all_receivers_normalized": ["*UpdateDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UpdateDesignatorResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#402", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#404"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#404", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 404, "start_line": 2695, "end_line": 2706, "text": "func (x *UpdateDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[40]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2695, 2706], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UpdateDesignatorResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UpdateDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[40]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "UpdateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorResponse"], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [74712], "all_end_bytes": [75004], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UpdateDesignatorResponse", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#403", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#405"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#405", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 405, "start_line": 2707, "end_line": 2711, "text": "// Deprecated: Use UpdateDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{40}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2708, 2711], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UpdateDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UpdateDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*UpdateDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{40}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UpdateDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UpdateDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [75083], "all_end_bytes": [75201], "primary_index": 0, "all_receivers_normalized": ["*UpdateDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UpdateDesignatorResponse"], "header_context_minimal": "package v0\n// receiver: *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#404", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#406"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#406", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 406, "start_line": 2712, "end_line": 2718, "text": "func (x *UpdateDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [2712, 2718], "def_symbols": [], "symbols": ["GetDesignator", "func", "UpdateDesignatorResponse", "Designator", "nil", "return"], "doc_head": "func (x *UpdateDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UpdateDesignatorResponse).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *UpdateDesignatorResponse", "function_name": "", "method_name": "GetDesignator", "type_name": "UpdateDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UpdateDesignatorResponse).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *UpdateDesignatorResponse"], "all_type_names": ["UpdateDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [75203], "all_end_bytes": [75321], "primary_index": 0, "all_receivers_normalized": ["(*UpdateDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetDesignator", "UpdateDesignatorResponse", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *UpdateDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#405", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#407"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#407", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 407, "start_line": 2719, "end_line": 2731, "text": "type Designator struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tAirportId     string                 `protobuf:\"bytes,2,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tValidFrom     *timestamppb.Timestamp `protobuf:\"bytes,3,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo       *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tCreatedAt     *timestamppb.Timestamp `protobuf:\"bytes,5,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt     *timestamppb.Timestamp `protobuf:\"bytes,6,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tAirportName   string                 `protobuf:\"bytes,7,opt,name=airportName,proto3\" json:\"airportName,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 225, "primary_symbol": "Designator", "primary_kind": "type", "primary_span": [2719, 2731], "def_symbols": [], "symbols": ["type", "Designator", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "AirportId", "airportId", "ValidFrom", "timestamppb", "Timestamp", "validFrom", "ValidTo", "validTo", "CreatedAt", "createdAt", "UpdatedAt", "updatedAt", "AirportName", "airportName", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Designator struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tAirportId     string                 `protobuf:\"bytes,2,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tValidFrom     *timestamppb.Timestamp `protobuf:\"bytes,3,opt,name=validFrom,proto3\" json:\"validFrom,omitempty\"`\n\tValidTo       *timestamppb.Timestamp `protobuf:\"bytes,4,opt,name=validTo,proto3\" json:\"validTo,omitempty\"`\n\tCreatedAt     *timestamppb.Timestamp `protobuf:\"bytes,5,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt     *timestamppb.Timestamp `protobuf:\"bytes,6,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tAirportName   string                 `protobuf:\"bytes,7,opt,name=airportName,proto3\" json:\"airportName,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Designator (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Designator", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Designator"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Designator (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Designator"], "all_type_kinds": ["struct"], "all_start_bytes": [75328], "all_end_bytes": [76252], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["AirportId", "AirportName", "CreatedAt", "Designator", "MessageState", "SizeCache", "Timestamp", "UnknownFields", "UpdatedAt", "ValidFrom", "ValidTo", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#406", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#408"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#408", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 408, "start_line": 2732, "end_line": 2738, "text": "func (x *Designator) Reset() {\n\t*x = Designator{}\n\tmi := &file_airports_proto_msgTypes[41]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 49, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2732, 2738], "def_symbols": [], "symbols": ["Reset", "func", "Designator", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Designator) Reset() {\n\t*x = Designator{}\n\tmi := &file_airports_proto_msgTypes[41]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "Reset", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [76254], "all_end_bytes": [76427], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#407", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#409"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#409", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 409, "start_line": 2739, "end_line": 2742, "text": "func (x *Designator) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 21, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2739, 2742], "def_symbols": [], "symbols": ["String", "func", "Designator", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Designator) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "String", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [76429], "all_end_bytes": [76508], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#408", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#410"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#410", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 410, "start_line": 2743, "end_line": 2744, "text": "func (*Designator) ProtoMessage() {}\n", "n_tokens": 9, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2743, 2744], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Designator"], "doc_head": "func (*Designator) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Designator", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Designator"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [76510], "all_end_bytes": [76546], "primary_index": 0, "all_receivers_normalized": ["*Designator"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#409", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#411"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#411", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 411, "start_line": 2745, "end_line": 2756, "text": "func (x *Designator) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[41]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 80, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2745, 2756], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Designator", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Designator) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[41]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "ProtoReflect", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [76548], "all_end_bytes": [76826], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#410", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#412"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#412", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 412, "start_line": 2757, "end_line": 2761, "text": "// Deprecated: Use Designator.ProtoReflect.Descriptor instead.\nfunc (*Designator) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{41}\n}\n", "n_tokens": 43, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2758, 2761], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Designator", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Designator.ProtoReflect.Descriptor instead.\nfunc (*Designator) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{41}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Designator", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Designator"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [76891], "all_end_bytes": [76995], "primary_index": 0, "all_receivers_normalized": ["*Designator"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "Designator"], "header_context_minimal": "package v0\n// receiver: *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#411", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#413"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#413", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 413, "start_line": 2762, "end_line": 2768, "text": "func (x *Designator) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 27, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [2762, 2768], "def_symbols": [], "symbols": ["GetId", "func", "Designator", "string", "nil", "return"], "doc_head": "func (x *Designator) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetId", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [76997], "all_end_bytes": [77079], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#412", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#414"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#414", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 414, "start_line": 2769, "end_line": 2775, "text": "func (x *Designator) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 31, "primary_symbol": "GetAirportId", "primary_kind": "method", "primary_span": [2769, 2775], "def_symbols": [], "symbols": ["GetAirportId", "func", "Designator", "string", "nil", "return", "AirportId"], "doc_head": "func (x *Designator) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetAirportId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetAirportId", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirportId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetAirportId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [77081], "all_end_bytes": [77177], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportId", "Designator", "GetAirportId", "x.AirportId"], "header_context_minimal": "package v0\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#413", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#415"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#415", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 415, "start_line": 2776, "end_line": 2782, "text": "func (x *Designator) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetValidFrom", "primary_kind": "method", "primary_span": [2776, 2782], "def_symbols": [], "symbols": ["GetValidFrom", "func", "Designator", "timestamppb", "Timestamp", "nil", "return", "ValidFrom"], "doc_head": "func (x *Designator) GetValidFrom() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidFrom\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetValidFrom/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetValidFrom", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidFrom"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetValidFrom/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [77179], "all_end_bytes": [77292], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Designator", "GetValidFrom", "Timestamp", "ValidFrom", "timestamppb.Timestamp", "x.ValidFrom"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#414", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#416"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#416", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 416, "start_line": 2783, "end_line": 2789, "text": "func (x *Designator) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}\n", "n_tokens": 35, "primary_symbol": "GetValidTo", "primary_kind": "method", "primary_span": [2783, 2789], "def_symbols": [], "symbols": ["GetValidTo", "func", "Designator", "timestamppb", "Timestamp", "nil", "return", "ValidTo"], "doc_head": "func (x *Designator) GetValidTo() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.ValidTo\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetValidTo/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetValidTo", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetValidTo"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetValidTo/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [77294], "all_end_bytes": [77403], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Designator", "GetValidTo", "Timestamp", "ValidTo", "timestamppb.Timestamp", "x.ValidTo"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#415", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#417"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#417", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 417, "start_line": 2790, "end_line": 2796, "text": "func (x *Designator) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetCreatedAt", "primary_kind": "method", "primary_span": [2790, 2796], "def_symbols": [], "symbols": ["GetCreatedAt", "func", "Designator", "timestamppb", "Timestamp", "nil", "return", "CreatedAt"], "doc_head": "func (x *Designator) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetCreatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetCreatedAt", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCreatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetCreatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [77405], "all_end_bytes": [77518], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["CreatedAt", "Designator", "GetCreatedAt", "Timestamp", "timestamppb.Timestamp", "x.CreatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#416", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#418"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#418", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 418, "start_line": 2797, "end_line": 2803, "text": "func (x *Designator) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetUpdatedAt", "primary_kind": "method", "primary_span": [2797, 2803], "def_symbols": [], "symbols": ["GetUpdatedAt", "func", "Designator", "timestamppb", "Timestamp", "nil", "return", "UpdatedAt"], "doc_head": "func (x *Designator) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetUpdatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetUpdatedAt", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUpdatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetUpdatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [77520], "all_end_bytes": [77633], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Designator", "GetUpdatedAt", "Timestamp", "UpdatedAt", "timestamppb.Timestamp", "x.UpdatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#417", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#419"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#419", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 419, "start_line": 2804, "end_line": 2810, "text": "func (x *Designator) GetAirportName() string {\n\tif x != nil {\n\t\treturn x.AirportName\n\t}\n\treturn \"\"\n}\n", "n_tokens": 31, "primary_symbol": "GetAirportName", "primary_kind": "method", "primary_span": [2804, 2810], "def_symbols": [], "symbols": ["GetAirportName", "func", "Designator", "string", "nil", "return", "AirportName"], "doc_head": "func (x *Designator) GetAirportName() string {\n\tif x != nil {\n\t\treturn x.AirportName\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Designator).GetAirportName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Designator", "function_name": "", "method_name": "GetAirportName", "type_name": "Designator", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirportName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Designator).GetAirportName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Designator"], "all_type_names": ["Designator"], "all_type_kinds": [null], "all_start_bytes": [77635], "all_end_bytes": [77735], "primary_index": 0, "all_receivers_normalized": ["(*Designator)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportName", "Designator", "GetAirportName", "x.AirportName"], "header_context_minimal": "package v0\n// receiver: x *Designator", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#418", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#420"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#420", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 420, "start_line": 2811, "end_line": 2818, "text": "type GetDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,1,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirportId      string                 `protobuf:\"bytes,2,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}\n", "n_tokens": 94, "primary_symbol": "GetDesignatorRequest", "primary_kind": "type", "primary_span": [2811, 2818], "def_symbols": [], "symbols": ["type", "GetDesignatorRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "DesignatorCode", "string", "protobuf", "bytes", "opt", "name", "designatorCode", "proto3", "json", "omitempty", "AirportId", "airportId", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetDesignatorRequest struct {\n\tstate          protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignatorCode string                 `protobuf:\"bytes,1,opt,name=designatorCode,proto3\" json:\"designatorCode,omitempty\"`\n\tAirportId      string                 `protobuf:\"bytes,2,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tunknownFields  protoimpl.UnknownFields\n\tsizeCache      protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetDesignatorRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetDesignatorRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetDesignatorRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetDesignatorRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [77742], "all_end_bytes": [78145], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportId", "DesignatorCode", "GetDesignatorRequest", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#419", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#421"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#421", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 421, "start_line": 2819, "end_line": 2825, "text": "func (x *GetDesignatorRequest) Reset() {\n\t*x = GetDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[42]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2819, 2825], "def_symbols": [], "symbols": ["Reset", "func", "GetDesignatorRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetDesignatorRequest) Reset() {\n\t*x = GetDesignatorRequest{}\n\tmi := &file_airports_proto_msgTypes[42]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "Reset", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [78147], "all_end_bytes": [78340], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorRequest", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#420", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#422"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#422", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 422, "start_line": 2826, "end_line": 2829, "text": "func (x *GetDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2826, 2829], "def_symbols": [], "symbols": ["String", "func", "GetDesignatorRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetDesignatorRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "String", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [78342], "all_end_bytes": [78431], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorRequest", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#421", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#423"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#423", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 423, "start_line": 2830, "end_line": 2831, "text": "func (*GetDesignatorRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2830, 2831], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetDesignatorRequest"], "doc_head": "func (*GetDesignatorRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [78433], "all_end_bytes": [78479], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetDesignatorRequest", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#422", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#424"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#424", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 424, "start_line": 2832, "end_line": 2843, "text": "func (x *GetDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[42]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2832, 2843], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetDesignatorRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetDesignatorRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[42]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [78481], "all_end_bytes": [78769], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorRequest", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#423", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#425"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#425", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 425, "start_line": 2844, "end_line": 2848, "text": "// Deprecated: Use GetDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{42}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2845, 2848], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetDesignatorRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetDesignatorRequest.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{42}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [78844], "all_end_bytes": [78958], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetDesignatorRequest"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#424", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#426"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#426", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 426, "start_line": 2849, "end_line": 2855, "text": "func (x *GetDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetDesignatorCode", "primary_kind": "method", "primary_span": [2849, 2855], "def_symbols": [], "symbols": ["GetDesignatorCode", "func", "GetDesignatorRequest", "string", "nil", "return", "DesignatorCode"], "doc_head": "func (x *GetDesignatorRequest) GetDesignatorCode() string {\n\tif x != nil {\n\t\treturn x.DesignatorCode\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).GetDesignatorCode/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "GetDesignatorCode", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignatorCode"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).GetDesignatorCode/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [78960], "all_end_bytes": [79076], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["DesignatorCode", "GetDesignatorCode", "GetDesignatorRequest", "x.DesignatorCode"], "header_context_minimal": "package v0\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#425", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#427"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#427", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 427, "start_line": 2856, "end_line": 2862, "text": "func (x *GetDesignatorRequest) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetAirportId", "primary_kind": "method", "primary_span": [2856, 2862], "def_symbols": [], "symbols": ["GetAirportId", "func", "GetDesignatorRequest", "string", "nil", "return", "AirportId"], "doc_head": "func (x *GetDesignatorRequest) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorRequest).GetAirportId/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorRequest", "function_name": "", "method_name": "GetAirportId", "type_name": "GetDesignatorRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirportId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorRequest).GetAirportId/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorRequest"], "all_type_names": ["GetDesignatorRequest"], "all_type_kinds": [null], "all_start_bytes": [79078], "all_end_bytes": [79184], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportId", "GetAirportId", "GetDesignatorRequest", "x.AirportId"], "header_context_minimal": "package v0\n// receiver: x *GetDesignatorRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#426", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#428"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#428", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 428, "start_line": 2863, "end_line": 2869, "text": "type GetDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 66, "primary_symbol": "GetDesignatorResponse", "primary_kind": "type", "primary_span": [2863, 2869], "def_symbols": [], "symbols": ["type", "GetDesignatorResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Designator", "protobuf", "bytes", "opt", "name", "designator", "proto3", "json", "omitempty", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type GetDesignatorResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tDesignator    *Designator            `protobuf:\"bytes,1,opt,name=designator,proto3\" json:\"designator,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:GetDesignatorResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "GetDesignatorResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["GetDesignatorResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:GetDesignatorResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [79191], "all_end_bytes": [79470], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "GetDesignatorResponse", "MessageState", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#427", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#429"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#429", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 429, "start_line": 2870, "end_line": 2876, "text": "func (x *GetDesignatorResponse) Reset() {\n\t*x = GetDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[43]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2870, 2876], "def_symbols": [], "symbols": ["Reset", "func", "GetDesignatorResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *GetDesignatorResponse) Reset() {\n\t*x = GetDesignatorResponse{}\n\tmi := &file_airports_proto_msgTypes[43]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorResponse", "function_name": "", "method_name": "Reset", "type_name": "GetDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorResponse"], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [79472], "all_end_bytes": [79667], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorResponse", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#428", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#430"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#430", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 430, "start_line": 2877, "end_line": 2880, "text": "func (x *GetDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2877, 2880], "def_symbols": [], "symbols": ["String", "func", "GetDesignatorResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *GetDesignatorResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorResponse", "function_name": "", "method_name": "String", "type_name": "GetDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorResponse"], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [79669], "all_end_bytes": [79759], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorResponse", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#429", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#431"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#431", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 431, "start_line": 2881, "end_line": 2882, "text": "func (*GetDesignatorResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2881, 2882], "def_symbols": [], "symbols": ["ProtoMessage", "func", "GetDesignatorResponse"], "doc_head": "func (*GetDesignatorResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [79761], "all_end_bytes": [79808], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetDesignatorResponse", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#430", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#432"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#432", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 432, "start_line": 2883, "end_line": 2894, "text": "func (x *GetDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[43]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2883, 2894], "def_symbols": [], "symbols": ["ProtoReflect", "func", "GetDesignatorResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *GetDesignatorResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[43]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "GetDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorResponse"], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [79810], "all_end_bytes": [80099], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["GetDesignatorResponse", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#431", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#433"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#433", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 433, "start_line": 2895, "end_line": 2899, "text": "// Deprecated: Use GetDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{43}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2896, 2899], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "GetDesignatorResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use GetDesignatorResponse.ProtoReflect.Descriptor instead.\nfunc (*GetDesignatorResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{43}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*GetDesignatorResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*GetDesignatorResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [80175], "all_end_bytes": [80290], "primary_index": 0, "all_receivers_normalized": ["*GetDesignatorResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "GetDesignatorResponse"], "header_context_minimal": "package v0\n// receiver: *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#432", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#434"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#434", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 434, "start_line": 2900, "end_line": 2906, "text": "func (x *GetDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}\n", "n_tokens": 34, "primary_symbol": "GetDesignator", "primary_kind": "method", "primary_span": [2900, 2906], "def_symbols": [], "symbols": ["GetDesignator", "func", "GetDesignatorResponse", "Designator", "nil", "return"], "doc_head": "func (x *GetDesignatorResponse) GetDesignator() *Designator {\n\tif x != nil {\n\t\treturn x.Designator\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*GetDesignatorResponse).GetDesignator/complete", "package": "v0", "node_kind": "method", "receiver": "x *GetDesignatorResponse", "function_name": "", "method_name": "GetDesignator", "type_name": "GetDesignatorResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetDesignator"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*GetDesignatorResponse).GetDesignator/complete"], "all_roles": ["complete"], "all_receivers": ["x *GetDesignatorResponse"], "all_type_names": ["GetDesignatorResponse"], "all_type_kinds": [null], "all_start_bytes": [80292], "all_end_bytes": [80407], "primary_index": 0, "all_receivers_normalized": ["(*GetDesignatorResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetDesignator", "GetDesignatorResponse", "x.Designator"], "header_context_minimal": "package v0\n// receiver: x *GetDesignatorResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#433", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#435"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#435", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 435, "start_line": 2907, "end_line": 2915, "text": "type SearchDesignatorsRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 111, "primary_symbol": "SearchDesignatorsRequest", "primary_kind": "type", "primary_span": [2907, 2915], "def_symbols": [], "symbols": ["type", "SearchDesignatorsRequest", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Limit", "uint32", "varint", "limit", "Cursor", "cursor", "oneof", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchDesignatorsRequest struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tQ             string                 `protobuf:\"bytes,1,opt,name=q,proto3\" json:\"q,omitempty\"`\n\tLimit         uint32                 `protobuf:\"varint,2,opt,name=limit,proto3\" json:\"limit,omitempty\"`\n\tCursor        *string                `protobuf:\"bytes,3,opt,name=cursor,proto3,oneof\" json:\"cursor,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchDesignatorsRequest (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchDesignatorsRequest", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchDesignatorsRequest"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchDesignatorsRequest (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": ["struct"], "all_start_bytes": [80414], "all_end_bytes": [80895], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Cursor", "Limit", "MessageState", "SearchDesignatorsRequest", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#434", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#436"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#436", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 436, "start_line": 2916, "end_line": 2922, "text": "func (x *SearchDesignatorsRequest) Reset() {\n\t*x = SearchDesignatorsRequest{}\n\tmi := &file_airports_proto_msgTypes[44]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2916, 2922], "def_symbols": [], "symbols": ["Reset", "func", "SearchDesignatorsRequest", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchDesignatorsRequest) Reset() {\n\t*x = SearchDesignatorsRequest{}\n\tmi := &file_airports_proto_msgTypes[44]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "Reset", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [80897], "all_end_bytes": [81098], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchDesignatorsRequest", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#435", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#437"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#437", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 437, "start_line": 2923, "end_line": 2926, "text": "func (x *SearchDesignatorsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2923, 2926], "def_symbols": [], "symbols": ["String", "func", "SearchDesignatorsRequest", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchDesignatorsRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "String", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [81100], "all_end_bytes": [81193], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchDesignatorsRequest", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#436", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#438"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#438", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 438, "start_line": 2927, "end_line": 2928, "text": "func (*SearchDesignatorsRequest) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2927, 2928], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchDesignatorsRequest"], "doc_head": "func (*SearchDesignatorsRequest) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchDesignatorsRequest", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchDesignatorsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [81195], "all_end_bytes": [81245], "primary_index": 0, "all_receivers_normalized": ["*SearchDesignatorsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchDesignatorsRequest"], "header_context_minimal": "package v0\n// receiver: *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#437", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#439"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#439", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 439, "start_line": 2929, "end_line": 2940, "text": "func (x *SearchDesignatorsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[44]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2929, 2940], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchDesignatorsRequest", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchDesignatorsRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[44]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [81247], "all_end_bytes": [81539], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchDesignatorsRequest", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#438", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#440"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#440", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 440, "start_line": 2941, "end_line": 2945, "text": "// Deprecated: Use SearchDesignatorsRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchDesignatorsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{44}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [2942, 2945], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchDesignatorsRequest", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchDesignatorsRequest.ProtoReflect.Descriptor instead.\nfunc (*SearchDesignatorsRequest) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{44}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchDesignatorsRequest", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchDesignatorsRequest"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [81618], "all_end_bytes": [81736], "primary_index": 0, "all_receivers_normalized": ["*SearchDesignatorsRequest"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchDesignatorsRequest"], "header_context_minimal": "package v0\n// receiver: *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#439", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#441"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#441", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 441, "start_line": 2946, "end_line": 2952, "text": "func (x *SearchDesignatorsRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}\n", "n_tokens": 29, "primary_symbol": "GetQ", "primary_kind": "method", "primary_span": [2946, 2952], "def_symbols": [], "symbols": ["GetQ", "func", "SearchDesignatorsRequest", "string", "nil", "return"], "doc_head": "func (x *SearchDesignatorsRequest) GetQ() string {\n\tif x != nil {\n\t\treturn x.Q\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).GetQ/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "GetQ", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetQ"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).GetQ/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [81738], "all_end_bytes": [81832], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetQ", "SearchDesignatorsRequest", "x.Q"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#440", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#442"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#442", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 442, "start_line": 2953, "end_line": 2959, "text": "func (x *SearchDesignatorsRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetLimit", "primary_kind": "method", "primary_span": [2953, 2959], "def_symbols": [], "symbols": ["GetLimit", "func", "SearchDesignatorsRequest", "uint32", "nil", "return", "Limit"], "doc_head": "func (x *SearchDesignatorsRequest) GetLimit() uint32 {\n\tif x != nil {\n\t\treturn x.Limit\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).GetLimit/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "GetLimit", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLimit"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).GetLimit/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [81834], "all_end_bytes": [81935], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetLimit", "Limit", "SearchDesignatorsRequest", "x.Limit"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#441", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#443"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#443", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 443, "start_line": 2960, "end_line": 2966, "text": "func (x *SearchDesignatorsRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetCursor", "primary_kind": "method", "primary_span": [2960, 2966], "def_symbols": [], "symbols": ["GetCursor", "func", "SearchDesignatorsRequest", "string", "nil", "Cursor", "return"], "doc_head": "func (x *SearchDesignatorsRequest) GetCursor() string {\n\tif x != nil && x.Cursor != nil {\n\t\treturn *x.Cursor\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsRequest).GetCursor/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsRequest", "function_name": "", "method_name": "GetCursor", "type_name": "SearchDesignatorsRequest", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCursor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsRequest).GetCursor/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsRequest"], "all_type_names": ["SearchDesignatorsRequest"], "all_type_kinds": [null], "all_start_bytes": [81937], "all_end_bytes": [82061], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsRequest)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Cursor", "GetCursor", "SearchDesignatorsRequest", "x.Cursor"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsRequest", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#442", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#444"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#444", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 444, "start_line": 2967, "end_line": 2976, "text": "type SearchDesignatorsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*Designator          `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tTotalCount    uint32                 `protobuf:\"varint,2,opt,name=totalCount,proto3\" json:\"totalCount,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,3,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,4,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 142, "primary_symbol": "SearchDesignatorsResponse", "primary_kind": "type", "primary_span": [2967, 2976], "def_symbols": [], "symbols": ["type", "SearchDesignatorsResponse", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "Result", "Designator", "protobuf", "bytes", "rep", "name", "result", "proto3", "json", "omitempty", "TotalCount", "uint32", "varint", "opt", "totalCount", "Next", "string", "next", "oneof", "Previous", "previous", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type SearchDesignatorsResponse struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tResult        []*Designator          `protobuf:\"bytes,1,rep,name=result,proto3\" json:\"result,omitempty\"`\n\tTotalCount    uint32                 `protobuf:\"varint,2,opt,name=totalCount,proto3\" json:\"totalCount,omitempty\"`\n\tNext          *string                `protobuf:\"bytes,3,opt,name=next,proto3,oneof\" json:\"next,omitempty\"`\n\tPrevious      *string                `protobuf:\"bytes,4,opt,name=previous,proto3,oneof\" json:\"previous,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:SearchDesignatorsResponse (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "SearchDesignatorsResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["SearchDesignatorsResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:SearchDesignatorsResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [82068], "all_end_bytes": [82682], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Designator", "MessageState", "Next", "Previous", "Result", "SearchDesignatorsResponse", "SizeCache", "TotalCount", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#443", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#445"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#445", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 445, "start_line": 2977, "end_line": 2983, "text": "func (x *SearchDesignatorsResponse) Reset() {\n\t*x = SearchDesignatorsResponse{}\n\tmi := &file_airports_proto_msgTypes[45]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [2977, 2983], "def_symbols": [], "symbols": ["Reset", "func", "SearchDesignatorsResponse", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *SearchDesignatorsResponse) Reset() {\n\t*x = SearchDesignatorsResponse{}\n\tmi := &file_airports_proto_msgTypes[45]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "Reset", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [82684], "all_end_bytes": [82887], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "SearchDesignatorsResponse", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#444", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#446"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#446", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 446, "start_line": 2984, "end_line": 2987, "text": "func (x *SearchDesignatorsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [2984, 2987], "def_symbols": [], "symbols": ["String", "func", "SearchDesignatorsResponse", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *SearchDesignatorsResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "String", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [82889], "all_end_bytes": [82983], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "SearchDesignatorsResponse", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#445", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#447"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#447", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 447, "start_line": 2988, "end_line": 2989, "text": "func (*SearchDesignatorsResponse) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [2988, 2989], "def_symbols": [], "symbols": ["ProtoMessage", "func", "SearchDesignatorsResponse"], "doc_head": "func (*SearchDesignatorsResponse) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchDesignatorsResponse", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchDesignatorsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [82985], "all_end_bytes": [83036], "primary_index": 0, "all_receivers_normalized": ["*SearchDesignatorsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "SearchDesignatorsResponse"], "header_context_minimal": "package v0\n// receiver: *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#446", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#448"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#448", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 448, "start_line": 2990, "end_line": 3001, "text": "func (x *SearchDesignatorsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[45]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [2990, 3001], "def_symbols": [], "symbols": ["ProtoReflect", "func", "SearchDesignatorsResponse", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *SearchDesignatorsResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[45]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "ProtoReflect", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [83038], "all_end_bytes": [83331], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "SearchDesignatorsResponse", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#447", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#449"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#449", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 449, "start_line": 3002, "end_line": 3006, "text": "// Deprecated: Use SearchDesignatorsResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchDesignatorsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{45}\n}\n", "n_tokens": 47, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [3003, 3006], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "SearchDesignatorsResponse", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use SearchDesignatorsResponse.ProtoReflect.Descriptor instead.\nfunc (*SearchDesignatorsResponse) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{45}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*SearchDesignatorsResponse", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*SearchDesignatorsResponse"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [83411], "all_end_bytes": [83530], "primary_index": 0, "all_receivers_normalized": ["*SearchDesignatorsResponse"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "SearchDesignatorsResponse"], "header_context_minimal": "package v0\n// receiver: *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#448", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#450"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#450", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 450, "start_line": 3007, "end_line": 3013, "text": "func (x *SearchDesignatorsResponse) GetResult() []*Designator {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetResult", "primary_kind": "method", "primary_span": [3007, 3013], "def_symbols": [], "symbols": ["GetResult", "func", "SearchDesignatorsResponse", "Designator", "nil", "return", "Result"], "doc_head": "func (x *SearchDesignatorsResponse) GetResult() []*Designator {\n\tif x != nil {\n\t\treturn x.Result\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).GetResult/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "GetResult", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetResult"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).GetResult/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [83532], "all_end_bytes": [83645], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Designator", "GetResult", "Result", "SearchDesignatorsResponse", "x.Result"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#449", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#451"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#451", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 451, "start_line": 3014, "end_line": 3020, "text": "func (x *SearchDesignatorsResponse) GetTotalCount() uint32 {\n\tif x != nil {\n\t\treturn x.TotalCount\n\t}\n\treturn 0\n}\n", "n_tokens": 34, "primary_symbol": "GetTotalCount", "primary_kind": "method", "primary_span": [3014, 3020], "def_symbols": [], "symbols": ["GetTotalCount", "func", "SearchDesignatorsResponse", "uint32", "nil", "return", "TotalCount"], "doc_head": "func (x *SearchDesignatorsResponse) GetTotalCount() uint32 {\n\tif x != nil {\n\t\treturn x.TotalCount\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).GetTotalCount/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "GetTotalCount", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTotalCount"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).GetTotalCount/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [83647], "all_end_bytes": [83759], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetTotalCount", "SearchDesignatorsResponse", "TotalCount", "x.TotalCount"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#450", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#452"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#452", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 452, "start_line": 3021, "end_line": 3027, "text": "func (x *SearchDesignatorsResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}\n", "n_tokens": 35, "primary_symbol": "GetNext", "primary_kind": "method", "primary_span": [3021, 3027], "def_symbols": [], "symbols": ["GetNext", "func", "SearchDesignatorsResponse", "string", "nil", "Next", "return"], "doc_head": "func (x *SearchDesignatorsResponse) GetNext() string {\n\tif x != nil && x.Next != nil {\n\t\treturn *x.Next\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).GetNext/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "GetNext", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetNext"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).GetNext/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [83761], "all_end_bytes": [83880], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetNext", "Next", "SearchDesignatorsResponse", "x.Next"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#451", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#453"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#453", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 453, "start_line": 3028, "end_line": 3034, "text": "func (x *SearchDesignatorsResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}\n", "n_tokens": 37, "primary_symbol": "GetPrevious", "primary_kind": "method", "primary_span": [3028, 3034], "def_symbols": [], "symbols": ["GetPrevious", "func", "SearchDesignatorsResponse", "string", "nil", "Previous", "return"], "doc_head": "func (x *SearchDesignatorsResponse) GetPrevious() string {\n\tif x != nil && x.Previous != nil {\n\t\treturn *x.Previous\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*SearchDesignatorsResponse).GetPrevious/complete", "package": "v0", "node_kind": "method", "receiver": "x *SearchDesignatorsResponse", "function_name": "", "method_name": "GetPrevious", "type_name": "SearchDesignatorsResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetPrevious"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*SearchDesignatorsResponse).GetPrevious/complete"], "all_roles": ["complete"], "all_receivers": ["x *SearchDesignatorsResponse"], "all_type_names": ["SearchDesignatorsResponse"], "all_type_kinds": [null], "all_start_bytes": [83882], "all_end_bytes": [84013], "primary_index": 0, "all_receivers_normalized": ["(*SearchDesignatorsResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetPrevious", "Previous", "SearchDesignatorsResponse", "x.Previous"], "header_context_minimal": "package v0\n// receiver: x *SearchDesignatorsResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#452", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#454"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#454", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 454, "start_line": 3035, "end_line": 3042, "text": "type Airport_Country struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 102, "primary_symbol": "Airport_Country", "primary_kind": "type", "primary_span": [3035, 3042], "def_symbols": [], "symbols": ["type", "Airport_Country", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "string", "protobuf", "bytes", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "rep", "protobuf_key", "key", "protobuf_val", "value", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Airport_Country struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            string                 `protobuf:\"bytes,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Airport_Country (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airport_Country", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airport_Country"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airport_Country (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airport_Country"], "all_type_kinds": ["struct"], "all_start_bytes": [84020], "all_end_bytes": [84453], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_Country", "MessageState", "Name", "SizeCache", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#453", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#455"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#455", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 455, "start_line": 3043, "end_line": 3049, "text": "func (x *Airport_Country) Reset() {\n\t*x = Airport_Country{}\n\tmi := &file_airports_proto_msgTypes[54]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [3043, 3049], "def_symbols": [], "symbols": ["Reset", "func", "Airport_Country", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Airport_Country) Reset() {\n\t*x = Airport_Country{}\n\tmi := &file_airports_proto_msgTypes[54]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_Country).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_Country", "function_name": "", "method_name": "Reset", "type_name": "Airport_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_Country).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_Country"], "all_type_names": ["Airport_Country"], "all_type_kinds": [null], "all_start_bytes": [84455], "all_end_bytes": [84638], "primary_index": 0, "all_receivers_normalized": ["(*Airport_Country)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_Country", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airport_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#454", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#456"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#456", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 456, "start_line": 3050, "end_line": 3053, "text": "func (x *Airport_Country) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [3050, 3053], "def_symbols": [], "symbols": ["String", "func", "Airport_Country", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Airport_Country) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_Country).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_Country", "function_name": "", "method_name": "String", "type_name": "Airport_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_Country).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_Country"], "all_type_names": ["Airport_Country"], "all_type_kinds": [null], "all_start_bytes": [84640], "all_end_bytes": [84724], "primary_index": 0, "all_receivers_normalized": ["(*Airport_Country)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_Country", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airport_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#455", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#457"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#457", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 457, "start_line": 3054, "end_line": 3055, "text": "func (*Airport_Country) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [3054, 3055], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Airport_Country"], "doc_head": "func (*Airport_Country) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Airport_Country", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Airport_Country"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [84726], "all_end_bytes": [84767], "primary_index": 0, "all_receivers_normalized": ["*Airport_Country"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_Country", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Airport_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#456", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#458"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#458", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 458, "start_line": 3056, "end_line": 3067, "text": "func (x *Airport_Country) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[54]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [3056, 3067], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Airport_Country", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Airport_Country) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[54]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_Country).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_Country", "function_name": "", "method_name": "ProtoReflect", "type_name": "Airport_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_Country).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_Country"], "all_type_names": ["Airport_Country"], "all_type_kinds": [null], "all_start_bytes": [84769], "all_end_bytes": [85052], "primary_index": 0, "all_receivers_normalized": ["(*Airport_Country)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_Country", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Airport_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#457", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#459"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#459", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 459, "start_line": 3068, "end_line": 3072, "text": "// Deprecated: Use Airport_Country.ProtoReflect.Descriptor instead.\nfunc (*Airport_Country) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{9, 0}\n}\n", "n_tokens": 48, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [3069, 3072], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Airport_Country", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Airport_Country.ProtoReflect.Descriptor instead.\nfunc (*Airport_Country) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{9, 0}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Airport_Country", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Airport_Country"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [85122], "all_end_bytes": [85233], "primary_index": 0, "all_receivers_normalized": ["*Airport_Country"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_Country", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Airport_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#458", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#460"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#460", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 460, "start_line": 3073, "end_line": 3079, "text": "func (x *Airport_Country) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}\n", "n_tokens": 28, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [3073, 3079], "def_symbols": [], "symbols": ["GetId", "func", "Airport_Country", "string", "nil", "return"], "doc_head": "func (x *Airport_Country) GetId() string {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_Country).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_Country", "function_name": "", "method_name": "GetId", "type_name": "Airport_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_Country).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_Country"], "all_type_names": ["Airport_Country"], "all_type_kinds": [null], "all_start_bytes": [85235], "all_end_bytes": [85322], "primary_index": 0, "all_receivers_normalized": ["(*Airport_Country)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_Country", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Airport_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#459", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#461"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#461", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 461, "start_line": 3080, "end_line": 3086, "text": "func (x *Airport_Country) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [3080, 3086], "def_symbols": [], "symbols": ["GetName", "func", "Airport_Country", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *Airport_Country) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_Country).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_Country", "function_name": "", "method_name": "GetName", "type_name": "Airport_Country", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_Country).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_Country"], "all_type_names": ["Airport_Country"], "all_type_kinds": [null], "all_start_bytes": [85324], "all_end_bytes": [85427], "primary_index": 0, "all_receivers_normalized": ["(*Airport_Country)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_Country", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *Airport_Country", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#460", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#462"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#462", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 462, "start_line": 3087, "end_line": 3097, "text": "type Airport_City struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tState         *string                `protobuf:\"bytes,3,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tTimezone      string                 `protobuf:\"bytes,4,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tCountry       *Airport_Country       `protobuf:\"bytes,5,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 179, "primary_symbol": "Airport_City", "primary_kind": "type", "primary_span": [3087, 3097], "def_symbols": [], "symbols": ["type", "Airport_City", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "int64", "protobuf", "varint", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "string", "bytes", "rep", "protobuf_key", "key", "protobuf_val", "value", "State", "oneof", "Timezone", "timezone", "Country", "Airport_Country", "country", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Airport_City struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tState         *string                `protobuf:\"bytes,3,opt,name=state,proto3,oneof\" json:\"state,omitempty\"`\n\tTimezone      string                 `protobuf:\"bytes,4,opt,name=timezone,proto3\" json:\"timezone,omitempty\"`\n\tCountry       *Airport_Country       `protobuf:\"bytes,5,opt,name=country,proto3\" json:\"country,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Airport_City (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airport_City", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airport_City"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airport_City (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airport_City"], "all_type_kinds": ["struct"], "all_start_bytes": [85434], "all_end_bytes": [86193], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_City", "Airport_Country", "Country", "MessageState", "Name", "SizeCache", "State", "Timezone", "UnknownFields", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#461", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#463"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#463", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 463, "start_line": 3098, "end_line": 3104, "text": "func (x *Airport_City) Reset() {\n\t*x = Airport_City{}\n\tmi := &file_airports_proto_msgTypes[55]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 51, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [3098, 3104], "def_symbols": [], "symbols": ["Reset", "func", "Airport_City", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Airport_City) Reset() {\n\t*x = Airport_City{}\n\tmi := &file_airports_proto_msgTypes[55]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_City).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_City", "function_name": "", "method_name": "Reset", "type_name": "Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_City).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_City"], "all_type_names": ["Airport_City"], "all_type_kinds": [null], "all_start_bytes": [86195], "all_end_bytes": [86372], "primary_index": 0, "all_receivers_normalized": ["(*Airport_City)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_City", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#462", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#464"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#464", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 464, "start_line": 3105, "end_line": 3108, "text": "func (x *Airport_City) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 22, "primary_symbol": "String", "primary_kind": "method", "primary_span": [3105, 3108], "def_symbols": [], "symbols": ["String", "func", "Airport_City", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Airport_City) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_City).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_City", "function_name": "", "method_name": "String", "type_name": "Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_City).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_City"], "all_type_names": ["Airport_City"], "all_type_kinds": [null], "all_start_bytes": [86374], "all_end_bytes": [86455], "primary_index": 0, "all_receivers_normalized": ["(*Airport_City)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_City", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#463", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#465"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#465", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 465, "start_line": 3109, "end_line": 3110, "text": "func (*Airport_City) ProtoMessage() {}\n", "n_tokens": 10, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [3109, 3110], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Airport_City"], "doc_head": "func (*Airport_City) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Airport_City", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Airport_City"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [86457], "all_end_bytes": [86495], "primary_index": 0, "all_receivers_normalized": ["*Airport_City"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_City", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#464", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#466"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#466", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 466, "start_line": 3111, "end_line": 3122, "text": "func (x *Airport_City) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[55]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 81, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [3111, 3122], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Airport_City", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Airport_City) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[55]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_City).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_City", "function_name": "", "method_name": "ProtoReflect", "type_name": "Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_City).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_City"], "all_type_names": ["Airport_City"], "all_type_kinds": [null], "all_start_bytes": [86497], "all_end_bytes": [86777], "primary_index": 0, "all_receivers_normalized": ["(*Airport_City)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_City", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#465", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#467"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#467", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 467, "start_line": 3123, "end_line": 3127, "text": "// Deprecated: Use Airport_City.ProtoReflect.Descriptor instead.\nfunc (*Airport_City) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{9, 1}\n}\n", "n_tokens": 48, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [3124, 3127], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Airport_City", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Airport_City.ProtoReflect.Descriptor instead.\nfunc (*Airport_City) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{9, 1}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Airport_City", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Airport_City"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [86844], "all_end_bytes": [86952], "primary_index": 0, "all_receivers_normalized": ["*Airport_City"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_City", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#466", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#468"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#468", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 468, "start_line": 3128, "end_line": 3134, "text": "func (x *Airport_City) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}\n", "n_tokens": 31, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [3128, 3134], "def_symbols": [], "symbols": ["GetId", "func", "Airport_City", "int64", "nil", "return"], "doc_head": "func (x *Airport_City) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_City).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_City", "function_name": "", "method_name": "GetId", "type_name": "Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_City).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_City"], "all_type_names": ["Airport_City"], "all_type_kinds": [null], "all_start_bytes": [86954], "all_end_bytes": [87036], "primary_index": 0, "all_receivers_normalized": ["(*Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_City", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#467", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#469"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#469", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 469, "start_line": 3135, "end_line": 3141, "text": "func (x *Airport_City) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 30, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [3135, 3141], "def_symbols": [], "symbols": ["GetName", "func", "Airport_City", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *Airport_City) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_City).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_City", "function_name": "", "method_name": "GetName", "type_name": "Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_City).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_City"], "all_type_names": ["Airport_City"], "all_type_kinds": [null], "all_start_bytes": [87038], "all_end_bytes": [87138], "primary_index": 0, "all_receivers_normalized": ["(*Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_City", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#468", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#470"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#470", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 470, "start_line": 3142, "end_line": 3148, "text": "func (x *Airport_City) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}\n", "n_tokens": 34, "primary_symbol": "GetState", "primary_kind": "method", "primary_span": [3142, 3148], "def_symbols": [], "symbols": ["GetState", "func", "Airport_City", "string", "nil", "State", "return"], "doc_head": "func (x *Airport_City) GetState() string {\n\tif x != nil && x.State != nil {\n\t\treturn *x.State\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_City).GetState/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_City", "function_name": "", "method_name": "GetState", "type_name": "Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetState"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_City).GetState/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_City"], "all_type_names": ["Airport_City"], "all_type_kinds": [null], "all_start_bytes": [87140], "all_end_bytes": [87249], "primary_index": 0, "all_receivers_normalized": ["(*Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_City", "GetState", "State", "x.State"], "header_context_minimal": "package v0\n// receiver: x *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#469", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#471"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#471", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 471, "start_line": 3149, "end_line": 3155, "text": "func (x *Airport_City) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}\n", "n_tokens": 30, "primary_symbol": "GetTimezone", "primary_kind": "method", "primary_span": [3149, 3155], "def_symbols": [], "symbols": ["GetTimezone", "func", "Airport_City", "string", "nil", "return", "Timezone"], "doc_head": "func (x *Airport_City) GetTimezone() string {\n\tif x != nil {\n\t\treturn x.Timezone\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_City).GetTimezone/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_City", "function_name": "", "method_name": "GetTimezone", "type_name": "Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetTimezone"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_City).GetTimezone/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_City"], "all_type_names": ["Airport_City"], "all_type_kinds": [null], "all_start_bytes": [87251], "all_end_bytes": [87347], "primary_index": 0, "all_receivers_normalized": ["(*Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_City", "GetTimezone", "Timezone", "x.Timezone"], "header_context_minimal": "package v0\n// receiver: x *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#470", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#472"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#472", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 472, "start_line": 3156, "end_line": 3162, "text": "func (x *Airport_City) GetCountry() *Airport_Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetCountry", "primary_kind": "method", "primary_span": [3156, 3162], "def_symbols": [], "symbols": ["GetCountry", "func", "Airport_City", "Airport_Country", "nil", "return", "Country"], "doc_head": "func (x *Airport_City) GetCountry() *Airport_Country {\n\tif x != nil {\n\t\treturn x.Country\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_City).GetCountry/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_City", "function_name": "", "method_name": "GetCountry", "type_name": "Airport_City", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCountry"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_City).GetCountry/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_City"], "all_type_names": ["Airport_City"], "all_type_kinds": [null], "all_start_bytes": [87349], "all_end_bytes": [87454], "primary_index": 0, "all_receivers_normalized": ["(*Airport_City)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_City", "Airport_Country", "Country", "GetCountry", "x.Country"], "header_context_minimal": "package v0\n// receiver: x *Airport_City", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#471", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#473"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#473", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 473, "start_line": 3163, "end_line": 3175, "text": "type Airport_TerminalMap struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tUrl           string                 `protobuf:\"bytes,3,opt,name=url,proto3\" json:\"url,omitempty\"`\n\tThumbnail     string                 `protobuf:\"bytes,4,opt,name=thumbnail,proto3\" json:\"thumbnail,omitempty\"`\n\tContentType   *string                `protobuf:\"bytes,5,opt,name=contentType,proto3,oneof\" json:\"contentType,omitempty\"`\n\tCreatedAt     *timestamppb.Timestamp `protobuf:\"bytes,6,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt     *timestamppb.Timestamp `protobuf:\"bytes,7,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 232, "primary_symbol": "Airport_TerminalMap", "primary_kind": "type", "primary_span": [3163, 3175], "def_symbols": [], "symbols": ["type", "Airport_TerminalMap", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "int64", "protobuf", "varint", "opt", "name", "proto3", "json", "omitempty", "Name", "map", "string", "bytes", "rep", "protobuf_key", "key", "protobuf_val", "value", "Url", "url", "Thumbnail", "thumbnail", "ContentType", "contentType", "oneof", "CreatedAt", "timestamppb", "Timestamp", "createdAt", "UpdatedAt", "updatedAt", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type Airport_TerminalMap struct {\n\tstate         protoimpl.MessageState `protogen:\"open.v1\"`\n\tId            int64                  `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`\n\tName          map[string]string      `protobuf:\"bytes,2,rep,name=name,proto3\" json:\"name,omitempty\" protobuf_key:\"bytes,1,opt,name=key\" protobuf_val:\"bytes,2,opt,name=value\"`\n\tUrl           string                 `protobuf:\"bytes,3,opt,name=url,proto3\" json:\"url,omitempty\"`\n\tThumbnail     string                 `protobuf:\"bytes,4,opt,name=thumbnail,proto3\" json:\"thumbnail,omitempty\"`\n\tContentType   *string                `protobuf:\"bytes,5,opt,name=contentType,proto3,oneof\" json:\"contentType,omitempty\"`\n\tCreatedAt     *timestamppb.Timestamp `protobuf:\"bytes,6,opt,name=createdAt,proto3\" json:\"createdAt,omitempty\"`\n\tUpdatedAt     *timestamppb.Timestamp `protobuf:\"bytes,7,opt,name=updatedAt,proto3\" json:\"updatedAt,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:Airport_TerminalMap (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Airport_TerminalMap", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Airport_TerminalMap"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Airport_TerminalMap (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": ["struct"], "all_start_bytes": [87461], "all_end_bytes": [88457], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Airport_TerminalMap", "ContentType", "CreatedAt", "MessageState", "Name", "SizeCache", "Thumbnail", "Timestamp", "UnknownFields", "UpdatedAt", "Url", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields", "timestamppb.Timestamp"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#472", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#474"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#474", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 474, "start_line": 3176, "end_line": 3182, "text": "func (x *Airport_TerminalMap) Reset() {\n\t*x = Airport_TerminalMap{}\n\tmi := &file_airports_proto_msgTypes[56]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 55, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [3176, 3182], "def_symbols": [], "symbols": ["Reset", "func", "Airport_TerminalMap", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *Airport_TerminalMap) Reset() {\n\t*x = Airport_TerminalMap{}\n\tmi := &file_airports_proto_msgTypes[56]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "Reset", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [88459], "all_end_bytes": [88650], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_TerminalMap", "MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#473", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#475"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#475", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 475, "start_line": 3183, "end_line": 3186, "text": "func (x *Airport_TerminalMap) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 24, "primary_symbol": "String", "primary_kind": "method", "primary_span": [3183, 3186], "def_symbols": [], "symbols": ["String", "func", "Airport_TerminalMap", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *Airport_TerminalMap) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "String", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [88652], "all_end_bytes": [88740], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_TerminalMap", "MessageStringOf", "String", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#474", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#476"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#476", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 476, "start_line": 3187, "end_line": 3188, "text": "func (*Airport_TerminalMap) ProtoMessage() {}\n", "n_tokens": 12, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [3187, 3188], "def_symbols": [], "symbols": ["ProtoMessage", "func", "Airport_TerminalMap"], "doc_head": "func (*Airport_TerminalMap) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*Airport_TerminalMap", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*Airport_TerminalMap"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [88742], "all_end_bytes": [88787], "primary_index": 0, "all_receivers_normalized": ["*Airport_TerminalMap"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_TerminalMap", "ProtoMessage"], "header_context_minimal": "package v0\n// receiver: *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#475", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#477"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#477", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 477, "start_line": 3189, "end_line": 3200, "text": "func (x *Airport_TerminalMap) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[56]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 83, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [3189, 3200], "def_symbols": [], "symbols": ["ProtoReflect", "func", "Airport_TerminalMap", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *Airport_TerminalMap) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[56]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "ProtoReflect", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [88789], "all_end_bytes": [89076], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["Airport_TerminalMap", "LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#476", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#478"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#478", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 478, "start_line": 3201, "end_line": 3205, "text": "// Deprecated: Use Airport_TerminalMap.ProtoReflect.Descriptor instead.\nfunc (*Airport_TerminalMap) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{9, 2}\n}\n", "n_tokens": 52, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [3202, 3205], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "Airport_TerminalMap", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use Airport_TerminalMap.ProtoReflect.Descriptor instead.\nfunc (*Airport_TerminalMap) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{9, 2}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*Airport_TerminalMap", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*Airport_TerminalMap"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [89150], "all_end_bytes": [89265], "primary_index": 0, "all_receivers_normalized": ["*Airport_TerminalMap"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_TerminalMap", "Descriptor"], "header_context_minimal": "package v0\n// receiver: *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#477", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#479"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#479", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 479, "start_line": 3206, "end_line": 3212, "text": "func (x *Airport_TerminalMap) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}\n", "n_tokens": 33, "primary_symbol": "GetId", "primary_kind": "method", "primary_span": [3206, 3212], "def_symbols": [], "symbols": ["GetId", "func", "Airport_TerminalMap", "int64", "nil", "return"], "doc_head": "func (x *Airport_TerminalMap) GetId() int64 {\n\tif x != nil {\n\t\treturn x.Id\n\t}\n\treturn 0\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).GetId/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "GetId", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).GetId/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [89267], "all_end_bytes": [89356], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_TerminalMap", "GetId", "x.Id"], "header_context_minimal": "package v0\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#478", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#480"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#480", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 480, "start_line": 3213, "end_line": 3219, "text": "func (x *Airport_TerminalMap) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}\n", "n_tokens": 32, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [3213, 3219], "def_symbols": [], "symbols": ["GetName", "func", "Airport_TerminalMap", "map", "string", "nil", "return", "Name"], "doc_head": "func (x *Airport_TerminalMap) GetName() map[string]string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "GetName", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [89358], "all_end_bytes": [89465], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_TerminalMap", "GetName", "Name", "x.Name"], "header_context_minimal": "package v0\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#479", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#481"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#481", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 481, "start_line": 3220, "end_line": 3226, "text": "func (x *Airport_TerminalMap) GetUrl() string {\n\tif x != nil {\n\t\treturn x.Url\n\t}\n\treturn \"\"\n}\n", "n_tokens": 30, "primary_symbol": "GetUrl", "primary_kind": "method", "primary_span": [3220, 3226], "def_symbols": [], "symbols": ["GetUrl", "func", "Airport_TerminalMap", "string", "nil", "return", "Url"], "doc_head": "func (x *Airport_TerminalMap) GetUrl() string {\n\tif x != nil {\n\t\treturn x.Url\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).GetUrl/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "GetUrl", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUrl"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).GetUrl/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [89467], "all_end_bytes": [89560], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_TerminalMap", "GetUrl", "Url", "x.Url"], "header_context_minimal": "package v0\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#480", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#482"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#482", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 482, "start_line": 3227, "end_line": 3233, "text": "func (x *Airport_TerminalMap) GetThumbnail() string {\n\tif x != nil {\n\t\treturn x.Thumbnail\n\t}\n\treturn \"\"\n}\n", "n_tokens": 31, "primary_symbol": "GetThumbnail", "primary_kind": "method", "primary_span": [3227, 3233], "def_symbols": [], "symbols": ["GetThumbnail", "func", "Airport_TerminalMap", "string", "nil", "return", "Thumbnail"], "doc_head": "func (x *Airport_TerminalMap) GetThumbnail() string {\n\tif x != nil {\n\t\treturn x.Thumbnail\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).GetThumbnail/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "GetThumbnail", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetThumbnail"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).GetThumbnail/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [89562], "all_end_bytes": [89667], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_TerminalMap", "GetThumbnail", "Thumbnail", "x.Thumbnail"], "header_context_minimal": "package v0\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#481", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#483"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#483", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 483, "start_line": 3234, "end_line": 3240, "text": "func (x *Airport_TerminalMap) GetContentType() string {\n\tif x != nil && x.ContentType != nil {\n\t\treturn *x.ContentType\n\t}\n\treturn \"\"\n}\n", "n_tokens": 36, "primary_symbol": "GetContentType", "primary_kind": "method", "primary_span": [3234, 3240], "def_symbols": [], "symbols": ["GetContentType", "func", "Airport_TerminalMap", "string", "nil", "ContentType", "return"], "doc_head": "func (x *Airport_TerminalMap) GetContentType() string {\n\tif x != nil && x.ContentType != nil {\n\t\treturn *x.ContentType\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).GetContentType/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "GetContentType", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetContentType"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).GetContentType/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [89669], "all_end_bytes": [89803], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": [], "symbols_referenced_strict": ["Airport_TerminalMap", "ContentType", "GetContentType", "x.ContentType"], "header_context_minimal": "package v0\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#482", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#484"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#484", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 484, "start_line": 3241, "end_line": 3247, "text": "func (x *Airport_TerminalMap) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetCreatedAt", "primary_kind": "method", "primary_span": [3241, 3247], "def_symbols": [], "symbols": ["GetCreatedAt", "func", "Airport_TerminalMap", "timestamppb", "Timestamp", "nil", "return", "CreatedAt"], "doc_head": "func (x *Airport_TerminalMap) GetCreatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.CreatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).GetCreatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "GetCreatedAt", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetCreatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).GetCreatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [89805], "all_end_bytes": [89927], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Airport_TerminalMap", "CreatedAt", "GetCreatedAt", "Timestamp", "timestamppb.Timestamp", "x.CreatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#483", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#485"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#485", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 485, "start_line": 3248, "end_line": 3254, "text": "func (x *Airport_TerminalMap) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}\n", "n_tokens": 37, "primary_symbol": "GetUpdatedAt", "primary_kind": "method", "primary_span": [3248, 3254], "def_symbols": [], "symbols": ["GetUpdatedAt", "func", "Airport_TerminalMap", "timestamppb", "Timestamp", "nil", "return", "UpdatedAt"], "doc_head": "func (x *Airport_TerminalMap) GetUpdatedAt() *timestamppb.Timestamp {\n\tif x != nil {\n\t\treturn x.UpdatedAt\n\t}\n\treturn nil\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*Airport_TerminalMap).GetUpdatedAt/complete", "package": "v0", "node_kind": "method", "receiver": "x *Airport_TerminalMap", "function_name": "", "method_name": "GetUpdatedAt", "type_name": "Airport_TerminalMap", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetUpdatedAt"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*Airport_TerminalMap).GetUpdatedAt/complete"], "all_roles": ["complete"], "all_receivers": ["x *Airport_TerminalMap"], "all_type_names": ["Airport_TerminalMap"], "all_type_kinds": [null], "all_start_bytes": [89929], "all_end_bytes": [90051], "primary_index": 0, "all_receivers_normalized": ["(*Airport_TerminalMap)"], "imports_used_minimal": ["google.golang.org/protobuf/types/known/timestamppb"], "symbols_referenced_strict": ["Airport_TerminalMap", "GetUpdatedAt", "Timestamp", "UpdatedAt", "timestamppb.Timestamp", "x.UpdatedAt"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/types/known/timestamppb\"\n// receiver: x *Airport_TerminalMap", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#484", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#486"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#486", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 486, "start_line": 3255, "end_line": 3263, "text": "type UploadImageRequest_Metadata struct {\n\tstate         protoimpl.MessageState       `protogen:\"open.v1\"`\n\tAirportId     string                       `protobuf:\"bytes,1,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tType          UploadImageRequest_ImageType `protobuf:\"varint,2,opt,name=type,proto3,enum=aviation.airports.v0.UploadImageRequest_ImageType\" json:\"type,omitempty\"`\n\tName          string                       `protobuf:\"bytes,3,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}\n", "n_tokens": 127, "primary_symbol": "UploadImageRequest_Metadata", "primary_kind": "type", "primary_span": [3255, 3263], "def_symbols": [], "symbols": ["type", "UploadImageRequest_Metadata", "struct", "state", "protoimpl", "MessageState", "protogen", "open", "AirportId", "string", "protobuf", "bytes", "opt", "name", "airportId", "proto3", "json", "omitempty", "Type", "UploadImageRequest_ImageType", "varint", "enum", "aviation", "airports", "Name", "unknownFields", "UnknownFields", "sizeCache", "SizeCache"], "doc_head": "type UploadImageRequest_Metadata struct {\n\tstate         protoimpl.MessageState       `protogen:\"open.v1\"`\n\tAirportId     string                       `protobuf:\"bytes,1,opt,name=airportId,proto3\" json:\"airportId,omitempty\"`\n\tType          UploadImageRequest_ImageType `protobuf:\"varint,2,opt,name=type,proto3,enum=aviation.airports.v0.UploadImageRequest_ImageType\" json:\"type,omitempty\"`\n\tName          string                       `protobuf:\"bytes,3,opt,name=name,proto3\" json:\"name,omitempty\"`\n\tunknownFields protoimpl.UnknownFields\n\tsizeCache     protoimpl.SizeCache\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:type:UploadImageRequest_Metadata (struct)", "package": "v0", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "UploadImageRequest_Metadata", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["UploadImageRequest_Metadata"], "all_kinds": ["type"], "all_ast_paths": ["go:type:UploadImageRequest_Metadata (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["UploadImageRequest_Metadata"], "all_type_kinds": ["struct"], "all_start_bytes": [90058], "all_end_bytes": [90625], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["AirportId", "MessageState", "Name", "SizeCache", "Type", "UnknownFields", "UploadImageRequest_ImageType", "UploadImageRequest_Metadata", "protoimpl.MessageState", "protoimpl.SizeCache", "protoimpl.UnknownFields"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#485", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#487"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#487", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 487, "start_line": 3264, "end_line": 3270, "text": "func (x *UploadImageRequest_Metadata) Reset() {\n\t*x = UploadImageRequest_Metadata{}\n\tmi := &file_airports_proto_msgTypes[65]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}\n", "n_tokens": 53, "primary_symbol": "Reset", "primary_kind": "method", "primary_span": [3264, 3270], "def_symbols": [], "symbols": ["Reset", "func", "UploadImageRequest_Metadata", "file_airports_proto_msgTypes", "protoimpl", "MessageStateOf", "Pointer", "StoreMessageInfo"], "doc_head": "func (x *UploadImageRequest_Metadata) Reset() {\n\t*x = UploadImageRequest_Metadata{}\n\tmi := &file_airports_proto_msgTypes[65]\n\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\tms.StoreMessageInfo(mi)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest_Metadata).Reset/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest_Metadata", "function_name": "", "method_name": "Reset", "type_name": "UploadImageRequest_Metadata", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Reset"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest_Metadata).Reset/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest_Metadata"], "all_type_names": ["UploadImageRequest_Metadata"], "all_type_kinds": [null], "all_start_bytes": [90627], "all_end_bytes": [90834], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest_Metadata)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStateOf", "Pointer", "Reset", "StoreMessageInfo", "UploadImageRequest_Metadata", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UploadImageRequest_Metadata", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#486", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#488"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#488", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 488, "start_line": 3271, "end_line": 3274, "text": "func (x *UploadImageRequest_Metadata) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n", "n_tokens": 23, "primary_symbol": "String", "primary_kind": "method", "primary_span": [3271, 3274], "def_symbols": [], "symbols": ["String", "func", "UploadImageRequest_Metadata", "string", "return", "protoimpl", "MessageStringOf"], "doc_head": "func (x *UploadImageRequest_Metadata) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest_Metadata).String/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest_Metadata", "function_name": "", "method_name": "String", "type_name": "UploadImageRequest_Metadata", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["String"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest_Metadata).String/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest_Metadata"], "all_type_names": ["UploadImageRequest_Metadata"], "all_type_kinds": [null], "all_start_bytes": [90836], "all_end_bytes": [90932], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest_Metadata)"], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["MessageStringOf", "String", "UploadImageRequest_Metadata", "protoimpl.X"], "header_context_minimal": "package v0\nimport \"google.golang.org/protobuf/runtime/protoimpl\"\n// receiver: x *UploadImageRequest_Metadata", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#487", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#489"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#489", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 489, "start_line": 3275, "end_line": 3276, "text": "func (*UploadImageRequest_Metadata) ProtoMessage() {}\n", "n_tokens": 11, "primary_symbol": "ProtoMessage", "primary_kind": "method", "primary_span": [3275, 3276], "def_symbols": [], "symbols": ["ProtoMessage", "func", "UploadImageRequest_Metadata"], "doc_head": "func (*UploadImageRequest_Metadata) ProtoMessage() {}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).ProtoMessage/complete", "package": "v0", "node_kind": "method", "receiver": "*UploadImageRequest_Metadata", "function_name": "", "method_name": "ProtoMessage", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoMessage"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).ProtoMessage/complete"], "all_roles": ["complete"], "all_receivers": ["*UploadImageRequest_Metadata"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [90934], "all_end_bytes": [90987], "primary_index": 0, "all_receivers_normalized": ["*UploadImageRequest_Metadata"], "imports_used_minimal": [], "symbols_referenced_strict": ["ProtoMessage", "UploadImageRequest_Metadata"], "header_context_minimal": "package v0\n// receiver: *UploadImageRequest_Metadata", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#488", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#490"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#490", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 490, "start_line": 3277, "end_line": 3288, "text": "func (x *UploadImageRequest_Metadata) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[65]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n", "n_tokens": 82, "primary_symbol": "ProtoReflect", "primary_kind": "method", "primary_span": [3277, 3288], "def_symbols": [], "symbols": ["ProtoReflect", "func", "UploadImageRequest_Metadata", "protoreflect", "Message", "file_airports_proto_msgTypes", "nil", "protoimpl", "MessageStateOf", "Pointer", "LoadMessageInfo", "StoreMessageInfo", "return", "MessageOf"], "doc_head": "func (x *UploadImageRequest_Metadata) ProtoReflect() protoreflect.Message {\n\tmi := &file_airports_proto_msgTypes[65]\n\tif x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest_Metadata).ProtoReflect/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest_Metadata", "function_name": "", "method_name": "ProtoReflect", "type_name": "UploadImageRequest_Metadata", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["ProtoReflect"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest_Metadata).ProtoReflect/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest_Metadata"], "all_type_names": ["UploadImageRequest_Metadata"], "all_type_kinds": [null], "all_start_bytes": [90989], "all_end_bytes": [91284], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest_Metadata)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "google.golang.org/protobuf/runtime/protoimpl"], "symbols_referenced_strict": ["LoadMessageInfo", "Message", "MessageOf", "MessageStateOf", "Pointer", "ProtoReflect", "StoreMessageInfo", "UploadImageRequest_Metadata", "mi.MessageOf", "ms.LoadMessageInfo", "ms.StoreMessageInfo", "protoimpl.Pointer", "protoimpl.X", "protoreflect.Message"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n)\n// receiver: x *UploadImageRequest_Metadata", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#489", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#491"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#491", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 491, "start_line": 3289, "end_line": 3293, "text": "// Deprecated: Use UploadImageRequest_Metadata.ProtoReflect.Descriptor instead.\nfunc (*UploadImageRequest_Metadata) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{10, 0}\n}\n", "n_tokens": 50, "primary_symbol": "Descriptor", "primary_kind": "method", "primary_span": [3290, 3293], "def_symbols": [], "symbols": ["Descriptor", "Deprecated", "Use", "UploadImageRequest_Metadata", "ProtoReflect", "instead", "func", "byte", "int", "return", "file_airports_proto_rawDescGZIP"], "doc_head": "// Deprecated: Use UploadImageRequest_Metadata.ProtoReflect.Descriptor instead.\nfunc (*UploadImageRequest_Metadata) Descriptor() ([]byte, []int) {\n\treturn file_airports_proto_rawDescGZIP(), []int{10, 0}\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*None).Descriptor/complete", "package": "v0", "node_kind": "method", "receiver": "*UploadImageRequest_Metadata", "function_name": "", "method_name": "Descriptor", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Descriptor"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*None).Descriptor/complete"], "all_roles": ["complete"], "all_receivers": ["*UploadImageRequest_Metadata"], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [91366], "all_end_bytes": [91490], "primary_index": 0, "all_receivers_normalized": ["*UploadImageRequest_Metadata"], "imports_used_minimal": [], "symbols_referenced_strict": ["Descriptor", "UploadImageRequest_Metadata"], "header_context_minimal": "package v0\n// receiver: *UploadImageRequest_Metadata", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#490", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#492"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#492", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 492, "start_line": 3294, "end_line": 3300, "text": "func (x *UploadImageRequest_Metadata) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}\n", "n_tokens": 33, "primary_symbol": "GetAirportId", "primary_kind": "method", "primary_span": [3294, 3300], "def_symbols": [], "symbols": ["GetAirportId", "func", "UploadImageRequest_Metadata", "string", "nil", "return", "AirportId"], "doc_head": "func (x *UploadImageRequest_Metadata) GetAirportId() string {\n\tif x != nil {\n\t\treturn x.AirportId\n\t}\n\treturn \"\"\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest_Metadata).GetAirportId/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest_Metadata", "function_name": "", "method_name": "GetAirportId", "type_name": "UploadImageRequest_Metadata", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetAirportId"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest_Metadata).GetAirportId/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest_Metadata"], "all_type_names": ["UploadImageRequest_Metadata"], "all_type_kinds": [null], "all_start_bytes": [91492], "all_end_bytes": [91605], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest_Metadata)"], "imports_used_minimal": [], "symbols_referenced_strict": ["AirportId", "GetAirportId", "UploadImageRequest_Metadata", "x.AirportId"], "header_context_minimal": "package v0\n// receiver: x *UploadImageRequest_Metadata", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#491", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#493"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#493", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 493, "start_line": 3301, "end_line": 3307, "text": "func (x *UploadImageRequest_Metadata) GetType() UploadImageRequest_ImageType {\n\tif x != nil {\n\t\treturn x.Type\n\t}\n\treturn UploadImageRequest_UNKNOWN\n}\n", "n_tokens": 36, "primary_symbol": "GetType", "primary_kind": "method", "primary_span": [3301, 3307], "def_symbols": [], "symbols": ["GetType", "func", "UploadImageRequest_Metadata", "UploadImageRequest_ImageType", "nil", "return", "Type", "UploadImageRequest_UNKNOWN"], "doc_head": "func (x *UploadImageRequest_Metadata) GetType() UploadImageRequest_ImageType {\n\tif x != nil {\n\t\treturn x.Type\n\t}\n\treturn UploadImageRequest_UNKNOWN\n}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest_Metadata).GetType/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest_Metadata", "function_name": "", "method_name": "GetType", "type_name": "UploadImageRequest_Metadata", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetType"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest_Metadata).GetType/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest_Metadata"], "all_type_names": ["UploadImageRequest_Metadata"], "all_type_kinds": [null], "all_start_bytes": [91607], "all_end_bytes": [91756], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest_Metadata)"], "imports_used_minimal": [], "symbols_referenced_strict": ["GetType", "Type", "UploadImageRequest_ImageType", "UploadImageRequest_Metadata", "UploadImageRequest_UNKNOWN", "x.Type"], "header_context_minimal": "package v0\n// receiver: x *UploadImageRequest_Metadata", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#492", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#494"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#494", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 494, "start_line": 3308, "end_line": 3714, "text": "func (x *UploadImageRequest_Metadata) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\n\nvar File_airports_proto protoreflect.FileDescriptor\n\nconst file_airports_proto_rawDesc = \"\" +\n\t\"\\n\" +\n\t\"\\x0eairports.proto\\x12\\x14aviation.airports.v0\\x1a\\x1fgoogle/protobuf/timestamp.proto\\\"\\xc6\\b\\n\" +\n\t\"\\x14UpdateAirportRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12\\x17\\n\" +\n\t\"\\x04iata\\x18\\x02 \\x01(\\tH\\x00R\\x04iata\\x88\\x01\\x01\\x12\\x17\\n\" +\n\t\"\\x04icao\\x18\\x03 \\x01(\\tH\\x01R\\x04icao\\x88\\x01\\x01\\x12&\\n\" +\n\t\"\\x0eclassification\\x18\\x04 \\x01(\\x03R\\x0eclassification\\x12H\\n\" +\n\t\"\\x04name\\x18\\x05 \\x03(\\v24.aviation.airports.v0.UpdateAirportRequest.NameEntryR\\x04name\\x12W\\n\" +\n\t\"\\tshortName\\x18\\x06 \\x03(\\v29.aviation.airports.v0.UpdateAirportRequest.ShortNameEntryR\\tshortName\\x12\\x16\\n\" +\n\t\"\\x06cityId\\x18\\a \\x01(\\x03R\\x06cityId\\x12]\\n\" +\n\t\"\\vdescription\\x18\\b \\x03(\\v2;.aviation.airports.v0.UpdateAirportRequest.DescriptionEntryR\\vdescription\\x12\\x1a\\n\" +\n\t\"\\blatitude\\x18\\t \\x01(\\x02R\\blatitude\\x12\\x1c\\n\" +\n\t\"\\tlongitude\\x18\\n\" +\n\t\" \\x01(\\x02R\\tlongitude\\x12\\x1c\\n\" +\n\t\"\\televation\\x18\\v \\x01(\\x05R\\televation\\x12(\\n\" +\n\t\"\\x0fnumberOfRunways\\x18\\f \\x01(\\x05R\\x0fnumberOfRunways\\x12#\\n\" +\n\t\"\\n\" +\n\t\"websiteUrl\\x18\\r \\x01(\\tH\\x02R\\n\" +\n\t\"websiteUrl\\x88\\x01\\x01\\x12`\\n\" +\n\t\"\\fwikipediaUrl\\x18\\x0e \\x03(\\v2<.aviation.airports.v0.UpdateAirportRequest.WikipediaUrlEntryR\\fwikipediaUrl\\x12%\\n\" +\n\t\"\\vfacebookUrl\\x18\\x0f \\x01(\\tH\\x03R\\vfacebookUrl\\x88\\x01\\x01\\x12#\\n\" +\n\t\"\\n\" +\n\t\"twitterUrl\\x18\\x10 \\x01(\\tH\\x04R\\n\" +\n\t\"twitterUrl\\x88\\x01\\x01\\x12\\x15\\n\" +\n\t\"\\x03faa\\x18\\x11 \\x01(\\tH\\x05R\\x03faa\\x88\\x01\\x01\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a<\\n\" +\n\t\"\\x0eShortNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a>\\n\" +\n\t\"\\x10DescriptionEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a?\\n\" +\n\t\"\\x11WikipediaUrlEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\a\\n\" +\n\t\"\\x05_iataB\\a\\n\" +\n\t\"\\x05_icaoB\\r\\n\" +\n\t\"\\v_websiteUrlB\\x0e\\n\" +\n\t\"\\f_facebookUrlB\\r\\n\" +\n\t\"\\v_twitterUrlB\\x06\\n\" +\n\t\"\\x04_faa\\\"P\\n\" +\n\t\"\\x15UpdateAirportResponse\\x127\\n\" +\n\t\"\\aairport\\x18\\x01 \\x01(\\v2\\x1d.aviation.airports.v0.AirportR\\aairport\\\"\\xb6\\b\\n\" +\n\t\"\\x14CreateAirportRequest\\x12\\x17\\n\" +\n\t\"\\x04iata\\x18\\x01 \\x01(\\tH\\x00R\\x04iata\\x88\\x01\\x01\\x12\\x17\\n\" +\n\t\"\\x04icao\\x18\\x02 \\x01(\\tH\\x01R\\x04icao\\x88\\x01\\x01\\x12&\\n\" +\n\t\"\\x0eclassification\\x18\\x03 \\x01(\\x03R\\x0eclassification\\x12H\\n\" +\n\t\"\\x04name\\x18\\x04 \\x03(\\v24.aviation.airports.v0.CreateAirportRequest.NameEntryR\\x04name\\x12W\\n\" +\n\t\"\\tshortName\\x18\\x05 \\x03(\\v29.aviation.airports.v0.CreateAirportRequest.ShortNameEntryR\\tshortName\\x12\\x16\\n\" +\n\t\"\\x06cityId\\x18\\x06 \\x01(\\x03R\\x06cityId\\x12]\\n\" +\n\t\"\\vdescription\\x18\\a \\x03(\\v2;.aviation.airports.v0.CreateAirportRequest.DescriptionEntryR\\vdescription\\x12\\x1a\\n\" +\n\t\"\\blatitude\\x18\\b \\x01(\\x02R\\blatitude\\x12\\x1c\\n\" +\n\t\"\\tlongitude\\x18\\t \\x01(\\x02R\\tlongitude\\x12\\x1c\\n\" +\n\t\"\\televation\\x18\\n\" +\n\t\" \\x01(\\x05R\\televation\\x12(\\n\" +\n\t\"\\x0fnumberOfRunways\\x18\\v \\x01(\\x05R\\x0fnumberOfRunways\\x12#\\n\" +\n\t\"\\n\" +\n\t\"websiteUrl\\x18\\f \\x01(\\tH\\x02R\\n\" +\n\t\"websiteUrl\\x88\\x01\\x01\\x12`\\n\" +\n\t\"\\fwikipediaUrl\\x18\\r \\x03(\\v2<.aviation.airports.v0.CreateAirportRequest.WikipediaUrlEntryR\\fwikipediaUrl\\x12%\\n\" +\n\t\"\\vfacebookUrl\\x18\\x0e \\x01(\\tH\\x03R\\vfacebookUrl\\x88\\x01\\x01\\x12#\\n\" +\n\t\"\\n\" +\n\t\"twitterUrl\\x18\\x0f \\x01(\\tH\\x04R\\n\" +\n\t\"twitterUrl\\x88\\x01\\x01\\x12\\x15\\n\" +\n\t\"\\x03faa\\x18\\x10 \\x01(\\tH\\x05R\\x03faa\\x88\\x01\\x01\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a<\\n\" +\n\t\"\\x0eShortNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a>\\n\" +\n\t\"\\x10DescriptionEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a?\\n\" +\n\t\"\\x11WikipediaUrlEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\a\\n\" +\n\t\"\\x05_iataB\\a\\n\" +\n\t\"\\x05_icaoB\\r\\n\" +\n\t\"\\v_websiteUrlB\\x0e\\n\" +\n\t\"\\f_facebookUrlB\\r\\n\" +\n\t\"\\v_twitterUrlB\\x06\\n\" +\n\t\"\\x04_faa\\\"P\\n\" +\n\t\"\\x15CreateAirportResponse\\x127\\n\" +\n\t\"\\aairport\\x18\\x01 \\x01(\\v2\\x1d.aviation.airports.v0.AirportR\\aairport\\\"`\\n\" +\n\t\"\\x15AirportDetailsRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x127\\n\" +\n\t\"\\ainclude\\x18\\x02 \\x03(\\x0e2\\x1d.aviation.airports.v0.IncludeR\\ainclude\\\"Q\\n\" +\n\t\"\\x16AirportDetailsResponse\\x127\\n\" +\n\t\"\\aairport\\x18\\x01 \\x01(\\v2\\x1d.aviation.airports.v0.AirportR\\aairport\\\"\\\\\\n\" +\n\t\"\\x0fBatchGetRequest\\x12\\x10\\n\" +\n\t\"\\x03ids\\x18\\x01 \\x03(\\tR\\x03ids\\x127\\n\" +\n\t\"\\ainclude\\x18\\x02 \\x03(\\x0e2\\x1d.aviation.airports.v0.IncludeR\\ainclude\\\"M\\n\" +\n\t\"\\x10BatchGetResponse\\x129\\n\" +\n\t\"\\bairports\\x18\\x01 \\x03(\\v2\\x1d.aviation.airports.v0.AirportR\\bairports\\\"&\\n\" +\n\t\"\\x14AirportByCityRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\x03R\\x02id\\\"\\xe3\\x11\\n\" +\n\t\"\\aAirport\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12\\x17\\n\" +\n\t\"\\x04iata\\x18\\x02 \\x01(\\tH\\x00R\\x04iata\\x88\\x01\\x01\\x12\\x17\\n\" +\n\t\"\\x04icao\\x18\\x03 \\x01(\\tH\\x01R\\x04icao\\x88\\x01\\x01\\x12&\\n\" +\n\t\"\\x0eclassification\\x18\\x04 \\x01(\\x03R\\x0eclassification\\x12;\\n\" +\n\t\"\\x04name\\x18\\x05 \\x03(\\v2'.aviation.airports.v0.Airport.NameEntryR\\x04name\\x12J\\n\" +\n\t\"\\tshortName\\x18\\x06 \\x03(\\v2,.aviation.airports.v0.Airport.ShortNameEntryR\\tshortName\\x126\\n\" +\n\t\"\\x04city\\x18\\a \\x01(\\v2\\\".aviation.airports.v0.Airport.CityR\\x04city\\x12P\\n\" +\n\t\"\\vdescription\\x18\\b \\x03(\\v2..aviation.airports.v0.Airport.DescriptionEntryR\\vdescription\\x12\\x1a\\n\" +\n\t\"\\blatitude\\x18\\t \\x01(\\x02R\\blatitude\\x12\\x1c\\n\" +\n\t\"\\tlongitude\\x18\\n\" +\n\t\" \\x01(\\x02R\\tlongitude\\x12\\x1c\\n\" +\n\t\"\\televation\\x18\\v \\x01(\\x05R\\televation\\x12(\\n\" +\n\t\"\\x0fnumberOfRunways\\x18\\f \\x01(\\x05R\\x0fnumberOfRunways\\x12#\\n\" +\n\t\"\\n\" +\n\t\"websiteUrl\\x18\\r \\x01(\\tH\\x02R\\n\" +\n\t\"websiteUrl\\x88\\x01\\x01\\x12S\\n\" +\n\t\"\\fwikipediaUrl\\x18\\x0e \\x03(\\v2/.aviation.airports.v0.Airport.WikipediaUrlEntryR\\fwikipediaUrl\\x12%\\n\" +\n\t\"\\vfacebookUrl\\x18\\x0f \\x01(\\tH\\x03R\\vfacebookUrl\\x88\\x01\\x01\\x12#\\n\" +\n\t\"\\n\" +\n\t\"twitterUrl\\x18\\x10 \\x01(\\tH\\x04R\\n\" +\n\t\"twitterUrl\\x88\\x01\\x01\\x12A\\n\" +\n\t\"\\x06images\\x18\\x11 \\x03(\\v2).aviation.airports.v0.Airport.ImagesEntryR\\x06images\\x12M\\n\" +\n\t\"\\fterminalMaps\\x18\\x12 \\x03(\\v2).aviation.airports.v0.Airport.TerminalMapR\\fterminalMaps\\x128\\n\" +\n\t\"\\tcreatedAt\\x18\\x13 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tcreatedAt\\x128\\n\" +\n\t\"\\tupdatedAt\\x18\\x14 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tupdatedAt\\x12#\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x15 \\x01(\\tH\\x05R\\n\" +\n\t\"designator\\x88\\x01\\x01\\x12\\x1a\\n\" +\n\t\"\\bpristine\\x18\\x16 \\x01(\\bR\\bpristine\\x12\\x15\\n\" +\n\t\"\\x03faa\\x18\\x17 \\x01(\\tH\\x06R\\x03faa\\x88\\x01\\x01\\x1a\\x97\\x01\\n\" +\n\t\"\\aCountry\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12C\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v2/.aviation.airports.v0.Airport.Country.NameEntryR\\x04name\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a\\x93\\x02\\n\" +\n\t\"\\x04City\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\x03R\\x02id\\x12@\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v2,.aviation.airports.v0.Airport.City.NameEntryR\\x04name\\x12\\x19\\n\" +\n\t\"\\x05state\\x18\\x03 \\x01(\\tH\\x00R\\x05state\\x88\\x01\\x01\\x12\\x1a\\n\" +\n\t\"\\btimezone\\x18\\x04 \\x01(\\tR\\btimezone\\x12?\\n\" +\n\t\"\\acountry\\x18\\x05 \\x01(\\v2%.aviation.airports.v0.Airport.CountryR\\acountry\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\b\\n\" +\n\t\"\\x06_state\\x1a\\xfa\\x02\\n\" +\n\t\"\\vTerminalMap\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\x03R\\x02id\\x12G\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v23.aviation.airports.v0.Airport.TerminalMap.NameEntryR\\x04name\\x12\\x10\\n\" +\n\t\"\\x03url\\x18\\x03 \\x01(\\tR\\x03url\\x12\\x1c\\n\" +\n\t\"\\tthumbnail\\x18\\x04 \\x01(\\tR\\tthumbnail\\x12%\\n\" +\n\t\"\\vcontentType\\x18\\x05 \\x01(\\tH\\x00R\\vcontentType\\x88\\x01\\x01\\x128\\n\" +\n\t\"\\tcreatedAt\\x18\\x06 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tcreatedAt\\x128\\n\" +\n\t\"\\tupdatedAt\\x18\\a \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tupdatedAt\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\x0e\\n\" +\n\t\"\\f_contentType\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a<\\n\" +\n\t\"\\x0eShortNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a>\\n\" +\n\t\"\\x10DescriptionEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a?\\n\" +\n\t\"\\x11WikipediaUrlEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\x1a9\\n\" +\n\t\"\\vImagesEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\a\\n\" +\n\t\"\\x05_iataB\\a\\n\" +\n\t\"\\x05_icaoB\\r\\n\" +\n\t\"\\v_websiteUrlB\\x0e\\n\" +\n\t\"\\f_facebookUrlB\\r\\n\" +\n\t\"\\v_twitterUrlB\\r\\n\" +\n\t\"\\v_designatorB\\x06\\n\" +\n\t\"\\x04_faa\\\"\\xb4\\x02\\n\" +\n\t\"\\x12UploadImageRequest\\x12O\\n\" +\n\t\"\\bmetadata\\x18\\x01 \\x01(\\v21.aviation.airports.v0.UploadImageRequest.MetadataH\\x00R\\bmetadata\\x12\\x16\\n\" +\n\t\"\\x05chunk\\x18\\x02 \\x01(\\fH\\x00R\\x05chunk\\x1a\\x84\\x01\\n\" +\n\t\"\\bMetadata\\x12\\x1c\\n\" +\n\t\"\\tairportId\\x18\\x01 \\x01(\\tR\\tairportId\\x12F\\n\" +\n\t\"\\x04type\\x18\\x02 \\x01(\\x0e22.aviation.airports.v0.UploadImageRequest.ImageTypeR\\x04type\\x12\\x12\\n\" +\n\t\"\\x04name\\x18\\x03 \\x01(\\tR\\x04name\\\"&\\n\" +\n\t\"\\tImageType\\x12\\v\\n\" +\n\t\"\\aUNKNOWN\\x10\\x00\\x12\\f\\n\" +\n\t\"\\bOVERVIEW\\x10\\x01B\\x06\\n\" +\n\t\"\\x04data\\\"\\x9f\\x01\\n\" +\n\t\"\\x15SearchAirportsRequest\\x12\\f\\n\" +\n\t\"\\x01q\\x18\\x01 \\x01(\\tR\\x01q\\x12\\x14\\n\" +\n\t\"\\x05limit\\x18\\x02 \\x01(\\rR\\x05limit\\x12\\x1b\\n\" +\n\t\"\\x06cursor\\x18\\x03 \\x01(\\tH\\x00R\\x06cursor\\x88\\x01\\x01\\x12:\\n\" +\n\t\"\\x18includeWithoutDesignator\\x18\\x04 \\x01(\\bR\\x18includeWithoutDesignatorB\\t\\n\" +\n\t\"\\a_cursor\\\"\\xbf\\x01\\n\" +\n\t\"\\x16SearchAirportsResponse\\x125\\n\" +\n\t\"\\x06result\\x18\\x01 \\x03(\\v2\\x1d.aviation.airports.v0.AirportR\\x06result\\x12\\x17\\n\" +\n\t\"\\x04next\\x18\\x02 \\x01(\\tH\\x00R\\x04next\\x88\\x01\\x01\\x12\\x1f\\n\" +\n\t\"\\bprevious\\x18\\x03 \\x01(\\tH\\x01R\\bprevious\\x88\\x01\\x01\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"totalCount\\x18\\x04 \\x01(\\rR\\n\" +\n\t\"totalCountB\\a\\n\" +\n\t\"\\x05_nextB\\v\\n\" +\n\t\"\\t_previous\\\"a\\n\" +\n\t\"\\x13SearchCitiesRequest\\x12\\f\\n\" +\n\t\"\\x01q\\x18\\x01 \\x01(\\tR\\x01q\\x12\\x14\\n\" +\n\t\"\\x05limit\\x18\\x02 \\x01(\\rR\\x05limit\\x12\\x1b\\n\" +\n\t\"\\x06cursor\\x18\\x03 \\x01(\\tH\\x00R\\x06cursor\\x88\\x01\\x01B\\t\\n\" +\n\t\"\\a_cursor\\\"\\x9a\\x01\\n\" +\n\t\"\\x14SearchCitiesResponse\\x122\\n\" +\n\t\"\\x06result\\x18\\x01 \\x03(\\v2\\x1a.aviation.airports.v0.CityR\\x06result\\x12\\x17\\n\" +\n\t\"\\x04next\\x18\\x02 \\x01(\\tH\\x00R\\x04next\\x88\\x01\\x01\\x12\\x1f\\n\" +\n\t\"\\bprevious\\x18\\x03 \\x01(\\tH\\x01R\\bprevious\\x88\\x01\\x01B\\a\\n\" +\n\t\"\\x05_nextB\\v\\n\" +\n\t\"\\t_previous\\\" \\n\" +\n\t\"\\x0eGetCityRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\x03R\\x02id\\\"A\\n\" +\n\t\"\\x0fGetCityResponse\\x12.\\n\" +\n\t\"\\x04city\\x18\\x01 \\x01(\\v2\\x1a.aviation.airports.v0.CityR\\x04city\\\"\\xf2\\x01\\n\" +\n\t\"\\x11CreateCityRequest\\x12E\\n\" +\n\t\"\\x04name\\x18\\x01 \\x03(\\v21.aviation.airports.v0.CreateCityRequest.NameEntryR\\x04name\\x12\\x19\\n\" +\n\t\"\\x05state\\x18\\x02 \\x01(\\tH\\x00R\\x05state\\x88\\x01\\x01\\x12\\x1a\\n\" +\n\t\"\\btimezone\\x18\\x03 \\x01(\\tR\\btimezone\\x12\\x1c\\n\" +\n\t\"\\tcountryId\\x18\\x04 \\x01(\\tR\\tcountryId\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\b\\n\" +\n\t\"\\x06_state\\\"D\\n\" +\n\t\"\\x12CreateCityResponse\\x12.\\n\" +\n\t\"\\x04city\\x18\\x01 \\x01(\\v2\\x1a.aviation.airports.v0.CityR\\x04city\\\"\\x82\\x02\\n\" +\n\t\"\\x11UpdateCityRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\x03R\\x02id\\x12E\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v21.aviation.airports.v0.UpdateCityRequest.NameEntryR\\x04name\\x12\\x19\\n\" +\n\t\"\\x05state\\x18\\x03 \\x01(\\tH\\x00R\\x05state\\x88\\x01\\x01\\x12\\x1a\\n\" +\n\t\"\\btimezone\\x18\\x04 \\x01(\\tR\\btimezone\\x12\\x1c\\n\" +\n\t\"\\tcountryId\\x18\\x05 \\x01(\\tR\\tcountryId\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\b\\n\" +\n\t\"\\x06_state\\\"D\\n\" +\n\t\"\\x12UpdateCityResponse\\x12.\\n\" +\n\t\"\\x04city\\x18\\x01 \\x01(\\v2\\x1a.aviation.airports.v0.CityR\\x04city\\\"d\\n\" +\n\t\"\\x16SearchCountriesRequest\\x12\\f\\n\" +\n\t\"\\x01q\\x18\\x01 \\x01(\\tR\\x01q\\x12\\x14\\n\" +\n\t\"\\x05limit\\x18\\x02 \\x01(\\rR\\x05limit\\x12\\x1b\\n\" +\n\t\"\\x06cursor\\x18\\x03 \\x01(\\tH\\x00R\\x06cursor\\x88\\x01\\x01B\\t\\n\" +\n\t\"\\a_cursor\\\"\\xa0\\x01\\n\" +\n\t\"\\x17SearchCountriesResponse\\x125\\n\" +\n\t\"\\x06result\\x18\\x01 \\x03(\\v2\\x1d.aviation.airports.v0.CountryR\\x06result\\x12\\x17\\n\" +\n\t\"\\x04next\\x18\\x02 \\x01(\\tH\\x00R\\x04next\\x88\\x01\\x01\\x12\\x1f\\n\" +\n\t\"\\bprevious\\x18\\x03 \\x01(\\tH\\x01R\\bprevious\\x88\\x01\\x01B\\a\\n\" +\n\t\"\\x05_nextB\\v\\n\" +\n\t\"\\t_previous\\\"#\\n\" +\n\t\"\\x11GetCountryRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\\"M\\n\" +\n\t\"\\x12GetCountryResponse\\x127\\n\" +\n\t\"\\acountry\\x18\\x01 \\x01(\\v2\\x1d.aviation.airports.v0.CountryR\\acountry\\\"\\xa9\\x01\\n\" +\n\t\"\\x14CreateCountryRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12H\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v24.aviation.airports.v0.CreateCountryRequest.NameEntryR\\x04name\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\\"P\\n\" +\n\t\"\\x15CreateCountryResponse\\x127\\n\" +\n\t\"\\acountry\\x18\\x01 \\x01(\\v2\\x1d.aviation.airports.v0.CountryR\\acountry\\\"\\xa9\\x01\\n\" +\n\t\"\\x14UpdateCountryRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12H\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v24.aviation.airports.v0.UpdateCountryRequest.NameEntryR\\x04name\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\\"P\\n\" +\n\t\"\\x15UpdateCountryResponse\\x127\\n\" +\n\t\"\\acountry\\x18\\x01 \\x01(\\v2\\x1d.aviation.airports.v0.CountryR\\acountry\\\"E\\n\" +\n\t\"\\x13UploadImageResponse\\x12\\x1a\\n\" +\n\t\"\\bimageUrl\\x18\\x01 \\x01(\\tR\\bimageUrl\\x12\\x12\\n\" +\n\t\"\\x04size\\x18\\x02 \\x01(\\x03R\\x04size\\\"\\xa3\\x01\\n\" +\n\t\"\\x1bBatchGetByDesignatorRequest\\x12 \\n\" +\n\t\"\\vdesignators\\x18\\x01 \\x03(\\tR\\vdesignators\\x12\\x1d\\n\" +\n\t\"\\aforDate\\x18\\x02 \\x01(\\tH\\x00R\\aforDate\\x88\\x01\\x01\\x127\\n\" +\n\t\"\\ainclude\\x18\\x03 \\x03(\\x0e2\\x1d.aviation.airports.v0.IncludeR\\aincludeB\\n\" +\n\t\"\\n\" +\n\t\"\\b_forDate\\\"Y\\n\" +\n\t\"\\x1cBatchGetByDesignatorResponse\\x129\\n\" +\n\t\"\\bairports\\x18\\x01 \\x03(\\v2\\x1d.aviation.airports.v0.AirportR\\bairports\\\"\\x9c\\x01\\n\" +\n\t\"\\x16GetByDesignatorRequest\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x01 \\x01(\\tR\\n\" +\n\t\"designator\\x12\\x1d\\n\" +\n\t\"\\aforDate\\x18\\x02 \\x01(\\tH\\x00R\\aforDate\\x88\\x01\\x01\\x127\\n\" +\n\t\"\\ainclude\\x18\\x03 \\x03(\\x0e2\\x1d.aviation.airports.v0.IncludeR\\aincludeB\\n\" +\n\t\"\\n\" +\n\t\"\\b_forDate\\\"R\\n\" +\n\t\"\\x17GetByDesignatorResponse\\x127\\n\" +\n\t\"\\aairport\\x18\\x01 \\x01(\\v2\\x1d.aviation.airports.v0.AirportR\\aairport\\\"\\x8f\\x01\\n\" +\n\t\"\\aCountry\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12;\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v2'.aviation.airports.v0.Country.NameEntryR\\x04name\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01\\\"\\x83\\x02\\n\" +\n\t\"\\x04City\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\x03R\\x02id\\x128\\n\" +\n\t\"\\x04name\\x18\\x02 \\x03(\\v2$.aviation.airports.v0.City.NameEntryR\\x04name\\x12\\x19\\n\" +\n\t\"\\x05state\\x18\\x03 \\x01(\\tH\\x00R\\x05state\\x88\\x01\\x01\\x12\\x1a\\n\" +\n\t\"\\btimezone\\x18\\x04 \\x01(\\tR\\btimezone\\x127\\n\" +\n\t\"\\acountry\\x18\\x05 \\x01(\\v2\\x1d.aviation.airports.v0.CountryR\\acountry\\x1a7\\n\" +\n\t\"\\tNameEntry\\x12\\x10\\n\" +\n\t\"\\x03key\\x18\\x01 \\x01(\\tR\\x03key\\x12\\x14\\n\" +\n\t\"\\x05value\\x18\\x02 \\x01(\\tR\\x05value:\\x028\\x01B\\b\\n\" +\n\t\"\\x06_state\\\"5\\n\" +\n\t\"\\x05Error\\x12\\x12\\n\" +\n\t\"\\x04code\\x18\\x01 \\x01(\\tR\\x04code\\x12\\x18\\n\" +\n\t\"\\amessage\\x18\\x02 \\x01(\\tR\\amessage\\\"\\xcf\\x01\\n\" +\n\t\"\\x17CreateDesignatorRequest\\x12&\\n\" +\n\t\"\\x0edesignatorCode\\x18\\x01 \\x01(\\tR\\x0edesignatorCode\\x12\\x1c\\n\" +\n\t\"\\tairportId\\x18\\x02 \\x01(\\tR\\tairportId\\x128\\n\" +\n\t\"\\tvalidFrom\\x18\\x03 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tvalidFrom\\x124\\n\" +\n\t\"\\avalidTo\\x18\\x04 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\avalidTo\\\"\\\\\\n\" +\n\t\"\\x18CreateDesignatorResponse\\x12@\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x01 \\x01(\\v2 .aviation.airports.v0.DesignatorR\\n\" +\n\t\"designator\\\"\\xcf\\x01\\n\" +\n\t\"\\x17UpdateDesignatorRequest\\x12&\\n\" +\n\t\"\\x0edesignatorCode\\x18\\x02 \\x01(\\tR\\x0edesignatorCode\\x12\\x1c\\n\" +\n\t\"\\tairportId\\x18\\x03 \\x01(\\tR\\tairportId\\x128\\n\" +\n\t\"\\tvalidFrom\\x18\\x04 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tvalidFrom\\x124\\n\" +\n\t\"\\avalidTo\\x18\\x05 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\avalidTo\\\"\\\\\\n\" +\n\t\"\\x18UpdateDesignatorResponse\\x12@\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x01 \\x01(\\v2 .aviation.airports.v0.DesignatorR\\n\" +\n\t\"designator\\\"\\xc0\\x02\\n\" +\n\t\"\\n\" +\n\t\"Designator\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12\\x1c\\n\" +\n\t\"\\tairportId\\x18\\x02 \\x01(\\tR\\tairportId\\x128\\n\" +\n\t\"\\tvalidFrom\\x18\\x03 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tvalidFrom\\x124\\n\" +\n\t\"\\avalidTo\\x18\\x04 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\avalidTo\\x128\\n\" +\n\t\"\\tcreatedAt\\x18\\x05 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tcreatedAt\\x128\\n\" +\n\t\"\\tupdatedAt\\x18\\x06 \\x01(\\v2\\x1a.google.protobuf.TimestampR\\tupdatedAt\\x12 \\n\" +\n\t\"\\vairportName\\x18\\a \\x01(\\tR\\vairportName\\\"\\\\\\n\" +\n\t\"\\x14GetDesignatorRequest\\x12&\\n\" +\n\t\"\\x0edesignatorCode\\x18\\x01 \\x01(\\tR\\x0edesignatorCode\\x12\\x1c\\n\" +\n\t\"\\tairportId\\x18\\x02 \\x01(\\tR\\tairportId\\\"Y\\n\" +\n\t\"\\x15GetDesignatorResponse\\x12@\\n\" +\n\t\"\\n\" +\n\t\"designator\\x18\\x01 \\x01(\\v2 .aviation.airports.v0.DesignatorR\\n\" +\n\t\"designator\\\"f\\n\" +\n\t\"\\x18SearchDesignatorsRequest\\x12\\f\\n\" +\n\t\"\\x01q\\x18\\x01 \\x01(\\tR\\x01q\\x12\\x14\\n\" +\n\t\"\\x05limit\\x18\\x02 \\x01(\\rR\\x05limit\\x12\\x1b\\n\" +\n\t\"\\x06cursor\\x18\\x03 \\x01(\\tH\\x00R\\x06cursor\\x88\\x01\\x01B\\t\\n\" +\n\t\"\\a_cursor\\\"\\xc5\\x01\\n\" +\n\t\"\\x19SearchDesignatorsResponse\\x128\\n\" +\n\t\"\\x06result\\x18\\x01 \\x03(\\v2 .aviation.airports.v0.DesignatorR\\x06result\\x12\\x1e\\n\" +\n\t\"\\n\" +\n\t\"totalCount\\x18\\x02 \\x01(\\rR\\n\" +\n\t\"totalCount\\x12\\x17\\n\" +\n\t\"\\x04next\\x18\\x03 \\x01(\\tH\\x00R\\x04next\\x88\\x01\\x01\\x12\\x1f\\n\" +\n\t\"\\bprevious\\x18\\x04 \\x01(\\tH\\x01R\\bprevious\\x88\\x01\\x01B\\a\\n\" +\n\t\"\\x05_nextB\\v\\n\" +\n\t\"\\t_previous*)\\n\" +\n\t\"\\aInclude\\x12\\v\\n\" +\n\t\"\\aUNKNOWN\\x10\\x00\\x12\\x11\\n\" +\n\t\"\\rTERMINAL_MAPS\\x10\\x012\\xc1\\a\\n\" +\n\t\"\\x0fAirportsService\\x12b\\n\" +\n\t\"\\x03Get\\x12+.aviation.airports.v0.AirportDetailsRequest\\x1a,.aviation.airports.v0.AirportDetailsResponse\\\"\\x00\\x12[\\n\" +\n\t\"\\bBatchGet\\x12%.aviation.airports.v0.BatchGetRequest\\x1a&.aviation.airports.v0.BatchGetResponse\\\"\\x00\\x12a\\n\" +\n\t\"\\tGetByCity\\x12*.aviation.airports.v0.AirportByCityRequest\\x1a&.aviation.airports.v0.BatchGetResponse\\\"\\x00\\x12f\\n\" +\n\t\"\\vUploadImage\\x12(.aviation.airports.v0.UploadImageRequest\\x1a).aviation.airports.v0.UploadImageResponse\\\"\\x00(\\x01\\x12e\\n\" +\n\t\"\\x06Search\\x12+.aviation.airports.v0.SearchAirportsRequest\\x1a,.aviation.airports.v0.SearchAirportsResponse\\\"\\x00\\x12c\\n\" +\n\t\"\\x06Create\\x12*.aviation.airports.v0.CreateAirportRequest\\x1a+.aviation.airports.v0.CreateAirportResponse\\\"\\x00\\x12c\\n\" +\n\t\"\\x06Update\\x12*.aviation.airports.v0.UpdateAirportRequest\\x1a+.aviation.airports.v0.UpdateAirportResponse\\\"\\x00\\x12\\x7f\\n\" +\n\t\"\\x14BatchGetByDesignator\\x121.aviation.airports.v0.BatchGetByDesignatorRequest\\x1a2.aviation.airports.v0.BatchGetByDesignatorResponse\\\"\\x00\\x12p\\n\" +\n\t\"\\x0fGetByDesignator\\x12,.aviation.airports.v0.GetByDesignatorRequest\\x1a-.aviation.airports.v0.GetByDesignatorResponse\\\"\\x002\\x86\\x03\\n\" +\n\t\"\\rCitiesService\\x12a\\n\" +\n\t\"\\x06Search\\x12).aviation.airports.v0.SearchCitiesRequest\\x1a*.aviation.airports.v0.SearchCitiesResponse\\\"\\x00\\x12T\\n\" +\n\t\"\\x03Get\\x12$.aviation.airports.v0.GetCityRequest\\x1a%.aviation.airports.v0.GetCityResponse\\\"\\x00\\x12]\\n\" +\n\t\"\\x06Create\\x12'.aviation.airports.v0.CreateCityRequest\\x1a(.aviation.airports.v0.CreateCityResponse\\\"\\x00\\x12]\\n\" +\n\t\"\\x06Update\\x12'.aviation.airports.v0.UpdateCityRequest\\x1a(.aviation.airports.v0.UpdateCityResponse\\\"\\x002\\xa1\\x03\\n\" +\n\t\"\\x10CountriesService\\x12g\\n\" +\n\t\"\\x06Search\\x12,.aviation.airports.v0.SearchCountriesRequest\\x1a-.aviation.airports.v0.SearchCountriesResponse\\\"\\x00\\x12Z\\n\" +\n\t\"\\x03Get\\x12'.aviation.airports.v0.GetCountryRequest\\x1a(.aviation.airports.v0.GetCountryResponse\\\"\\x00\\x12c\\n\" +\n\t\"\\x06Create\\x12*.aviation.airports.v0.CreateCountryRequest\\x1a+.aviation.airports.v0.CreateCountryResponse\\\"\\x00\\x12c\\n\" +\n\t\"\\x06Update\\x12*.aviation.airports.v0.UpdateCountryRequest\\x1a+.aviation.airports.v0.UpdateCountryResponse\\\"\\x002\\xb9\\x03\\n\" +\n\t\"\\x12DesignatorsService\\x12i\\n\" +\n\t\"\\x06Create\\x12-.aviation.airports.v0.CreateDesignatorRequest\\x1a..aviation.airports.v0.CreateDesignatorResponse\\\"\\x00\\x12`\\n\" +\n\t\"\\x03Get\\x12*.aviation.airports.v0.GetDesignatorRequest\\x1a+.aviation.airports.v0.GetDesignatorResponse\\\"\\x00\\x12i\\n\" +\n\t\"\\x06Update\\x12-.aviation.airports.v0.UpdateDesignatorRequest\\x1a..aviation.airports.v0.UpdateDesignatorResponse\\\"\\x00\\x12k\\n\" +\n\t\"\\x06Search\\x12..aviation.airports.v0.SearchDesignatorsRequest\\x1a/.aviation.airports.v0.SearchDesignatorsResponse\\\"\\x00b\\x06proto3\"\n\nvar (\n\tfile_airports_proto_rawDescOnce sync.Once\n\tfile_airports_proto_rawDescData []byte\n)\n", "n_tokens": 9109, "primary_symbol": "GetName", "primary_kind": "method", "primary_span": [3308, 3714], "def_symbols": [], "symbols": ["GetName", "func", "UploadImageRequest_Metadata", "string", "nil", "return", "Name", "var", "File_airports_proto", "protoreflect", "FileDescriptor", "const", "file_airports_proto_rawDesc", "x0eairports", "proto", "x12", "x14aviation", "airports", "x1a", "x1fgoogle", "protobuf", "timestamp", "xc6", "x14UpdateAirportRequest", "x0e", "x02id", "x18", "x01", "x17", "x04iata", "x02", "x00R", "x88", "x04icao", "x03", "x01R", "x0eclassification", "x04", "x03R", "x12H", "x04name", "x05", "v24", "aviation", "UpdateAirportRequest", "NameEntryR", "x12W", "tshortName", "x06", "v29", "ShortNameEntryR", "x16", "x06cityId", "vdescription", "DescriptionEntryR", "blatitude", "x02R", "x1c", "tlongitude", "televation", "x05R", "x0fnumberOfRunways", "websiteUrl", "fwikipediaUrl", "WikipediaUrlEntryR", "vfacebookUrl", "x0f", "twitterUrl", "x10", "x04R", "x15", "x03faa", "x11", "x1a7", "tNameEntry", "x03key", "x14", "x05value", "x028", "x0eShortNameEntry", "x10DescriptionEntry", "x11WikipediaUrlEntry", "x01B", "x05_iataB", "x05_icaoB", "v_websiteUrlB", "f_facebookUrlB", "v_twitterUrlB", "x04_faa", "x15UpdateAirportResponse", "x127", "aairport", "x1d", "AirportR", "xb6", "x14CreateAirportRequest", "CreateAirportRequest", "x15CreateAirportResponse", "x15AirportDetailsRequest", "ainclude", "x0e2", "IncludeR", "x16AirportDetailsResponse", "x0fBatchGetRequest", "x03ids", "x10BatchGetResponse", "x129", "bairports", "x14AirportByCityRequest", "xe3", "aAirport", "Airport", "x12J", "x126", "x04city", "CityR", "x12P", "x12S", "x12A", "x06images", "ImagesEntryR", "x12M", "fterminalMaps", "TerminalMapR", "x128", "tcreatedAt", "x13", "google", "TimestampR", "tupdatedAt", "designator", "bpristine", "x06R", "x97", "aCountry", "x12C", "Country", "x93", "x04City", "City", "x19", "x05state", "btimezone", "acountry", "CountryR", "x06_state", "xfa", "vTerminalMap", "x12G", "v23", "TerminalMap", "x03url", "tthumbnail", "vcontentType", "f_contentType", "x1a9", "vImagesEntry", "v_designatorB", "xb4", "x12UploadImageRequest", "x12O", "bmetadata", "v21", "UploadImageRequest", "MetadataH", "x05chunk", "x84", "bMetadata", "tairportId", "x12F", "x04type", "x0e22", "ImageTypeR", "tImageType", "aUNKNOWN", "x00", "bOVERVIEW", "x04data", "x9f", "x15SearchAirportsRequest", "x01q", "x05limit", "x1b", "x06cursor", "x18includeWithoutDesignator", "x18includeWithoutDesignatorB", "a_cursor", "xbf", "x16SearchAirportsResponse", "x125", "x06result", "x04next", "x1f", "bprevious", "x1e", "totalCount", "totalCountB", "x05_nextB", "t_previous", "x13SearchCitiesRequest", "x9a", "x14SearchCitiesResponse", "x122", "x0eGetCityRequest", "x0fGetCityResponse", "xf2", "x11CreateCityRequest", "x12E", "CreateCityRequest", "tcountryId", "x12CreateCityResponse", "x82", "x11UpdateCityRequest", "UpdateCityRequest", "x12UpdateCityResponse", "x16SearchCountriesRequest", "xa0", "x17SearchCountriesResponse", "x11GetCountryRequest", "x12GetCountryResponse", "xa9", "x14CreateCountryRequest", "CreateCountryRequest", "x15CreateCountryResponse", "x14UpdateCountryRequest", "UpdateCountryRequest", "x15UpdateCountryResponse", "x13UploadImageResponse", "bimageUrl", "x04size", "xa3", "x1bBatchGetByDesignatorRequest", "vdesignators", "aforDate", "aincludeB", "b_forDate", "x1cBatchGetByDesignatorResponse", "x9c", "x16GetByDesignatorRequest", "x17GetByDesignatorResponse", "x8f", "x83", "x05Error", "x04code", "amessage", "xcf", "x17CreateDesignatorRequest", "x0edesignatorCode", "tvalidFrom", "x124", "avalidTo", "x18CreateDesignatorResponse", "DesignatorR", "x17UpdateDesignatorRequest", "x18UpdateDesignatorResponse", "xc0"], "doc_head": "func (x *UploadImageRequest_Metadata) GetName() string {\n\tif x != nil {\n\t\treturn x.Name\n\t}\n\treturn \"\"\n}\nvar File_airports_proto protoreflect.FileDescriptor\nconst file_airports_proto_rawDesc = \"\" +\n\t\"\\n\" +\n\t\"\\x0eairports.proto\\x12\\x14aviation.airports.v0\\x1a\\x1fgoogle/protobuf/timestamp.proto\\\"\\xc6\\b\\n\" +\n\t\"\\x14UpdateAirportRequest\\x12\\x0e\\n\" +\n\t\"\\x02id\\x18\\x01 \\x01(\\tR\\x02id\\x12\\x17\\n\" +\n\t\"\\x04iata\\x18\\x02 \\x01(\\tH\\x00R\\x04iata\\x88\\x01\\x01\\x12\\x17\\n\" +\n\t\"\\x04icao\\x18\\x03 \\x01(\\tH\\x01R\\x04icao\\x88\\x01\\x01\\x12&\\n\" +\n\t\"\\x0eclassification\\x18\\x04 \\x01(\\x03R\\x0eclassification\\x12H\\n\" +\n\t\"\\x04name\\x18\\x05 \\x03(\\v24.aviation.airports.v0.UpdateAirportRequest.NameEntryR\\x04name\\x12W\\n\" +\n\t\"\\tshortName\\x18\\x06 \\x03(\\v29.aviation.airports.v0.UpdateAirportRequest.ShortNameEntryR\\tshortName\\x12\\x16\\n\" +\n\t\"\\x06cityId\\x18\\a \\x01(\\x03R\\x06cityId\\x12]\\n\" +\n\t\"\\vdescription\\x18\\b \\x03(\\v2;.aviation.airports.v0.UpdateAirportRequest.DescriptionEntryR\\vdescription\\x12\\x1a\\n\" +\n\t\"\\blatitude\\x18\\t \\x01(\\x02R\\blatitude\\x12\\x1c\\n\" +\n\t\"\\tlongitude\\x18\\n\" +\n\t\" \\x01(\\x02R\\tlongitude\\x12\\x1c\\n\" +\n\t\"\\televation\\x18\\v \\x01(\\x05R\\televation\\x12(\\n\" +", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:method:(*UploadImageRequest_Metadata).GetName/complete", "package": "v0", "node_kind": "method", "receiver": "x *UploadImageRequest_Metadata", "function_name": "", "method_name": "GetName", "type_name": "UploadImageRequest_Metadata", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetName"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*UploadImageRequest_Metadata).GetName/complete"], "all_roles": ["complete"], "all_receivers": ["x *UploadImageRequest_Metadata"], "all_type_names": ["UploadImageRequest_Metadata"], "all_type_kinds": [null], "all_start_bytes": [91758], "all_end_bytes": [91861], "primary_index": 0, "all_receivers_normalized": ["(*UploadImageRequest_Metadata)"], "imports_used_minimal": ["google.golang.org/protobuf/reflect/protoreflect", "sync"], "symbols_referenced_strict": ["FileDescriptor", "File_airports_proto", "GetName", "Name", "Once", "UploadImageRequest_Metadata", "protoreflect.FileDescriptor", "sync.Once", "x.Name"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/reflect/protoreflect\"\n    \"sync\"\n)\n// receiver: x *UploadImageRequest_Metadata", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#493", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#495"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#495", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 495, "start_line": 3715, "end_line": 3913, "text": "func file_airports_proto_rawDescGZIP() []byte {\n\tfile_airports_proto_rawDescOnce.Do(func() {\n\t\tfile_airports_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_airports_proto_rawDesc), len(file_airports_proto_rawDesc)))\n\t})\n\treturn file_airports_proto_rawDescData\n}\n\nvar file_airports_proto_enumTypes = make([]protoimpl.EnumInfo, 2)\nvar file_airports_proto_msgTypes = make([]protoimpl.MessageInfo, 72)\nvar file_airports_proto_goTypes = []any{\n\t(Include)(0),                         // 0: aviation.airports.v0.Include\n\t(UploadImageRequest_ImageType)(0),    // 1: aviation.airports.v0.UploadImageRequest.ImageType\n\t(*UpdateAirportRequest)(nil),         // 2: aviation.airports.v0.UpdateAirportRequest\n\t(*UpdateAirportResponse)(nil),        // 3: aviation.airports.v0.UpdateAirportResponse\n\t(*CreateAirportRequest)(nil),         // 4: aviation.airports.v0.CreateAirportRequest\n\t(*CreateAirportResponse)(nil),        // 5: aviation.airports.v0.CreateAirportResponse\n\t(*AirportDetailsRequest)(nil),        // 6: aviation.airports.v0.AirportDetailsRequest\n\t(*AirportDetailsResponse)(nil),       // 7: aviation.airports.v0.AirportDetailsResponse\n\t(*BatchGetRequest)(nil),              // 8: aviation.airports.v0.BatchGetRequest\n\t(*BatchGetResponse)(nil),             // 9: aviation.airports.v0.BatchGetResponse\n\t(*AirportByCityRequest)(nil),         // 10: aviation.airports.v0.AirportByCityRequest\n\t(*Airport)(nil),                      // 11: aviation.airports.v0.Airport\n\t(*UploadImageRequest)(nil),           // 12: aviation.airports.v0.UploadImageRequest\n\t(*SearchAirportsRequest)(nil),        // 13: aviation.airports.v0.SearchAirportsRequest\n\t(*SearchAirportsResponse)(nil),       // 14: aviation.airports.v0.SearchAirportsResponse\n\t(*SearchCitiesRequest)(nil),          // 15: aviation.airports.v0.SearchCitiesRequest\n\t(*SearchCitiesResponse)(nil),         // 16: aviation.airports.v0.SearchCitiesResponse\n\t(*GetCityRequest)(nil),               // 17: aviation.airports.v0.GetCityRequest\n\t(*GetCityResponse)(nil),              // 18: aviation.airports.v0.GetCityResponse\n\t(*CreateCityRequest)(nil),            // 19: aviation.airports.v0.CreateCityRequest\n\t(*CreateCityResponse)(nil),           // 20: aviation.airports.v0.CreateCityResponse\n\t(*UpdateCityRequest)(nil),            // 21: aviation.airports.v0.UpdateCityRequest\n\t(*UpdateCityResponse)(nil),           // 22: aviation.airports.v0.UpdateCityResponse\n\t(*SearchCountriesRequest)(nil),       // 23: aviation.airports.v0.SearchCountriesRequest\n\t(*SearchCountriesResponse)(nil),      // 24: aviation.airports.v0.SearchCountriesResponse\n\t(*GetCountryRequest)(nil),            // 25: aviation.airports.v0.GetCountryRequest\n\t(*GetCountryResponse)(nil),           // 26: aviation.airports.v0.GetCountryResponse\n\t(*CreateCountryRequest)(nil),         // 27: aviation.airports.v0.CreateCountryRequest\n\t(*CreateCountryResponse)(nil),        // 28: aviation.airports.v0.CreateCountryResponse\n\t(*UpdateCountryRequest)(nil),         // 29: aviation.airports.v0.UpdateCountryRequest\n\t(*UpdateCountryResponse)(nil),        // 30: aviation.airports.v0.UpdateCountryResponse\n\t(*UploadImageResponse)(nil),          // 31: aviation.airports.v0.UploadImageResponse\n\t(*BatchGetByDesignatorRequest)(nil),  // 32: aviation.airports.v0.BatchGetByDesignatorRequest\n\t(*BatchGetByDesignatorResponse)(nil), // 33: aviation.airports.v0.BatchGetByDesignatorResponse\n\t(*GetByDesignatorRequest)(nil),       // 34: aviation.airports.v0.GetByDesignatorRequest\n\t(*GetByDesignatorResponse)(nil),      // 35: aviation.airports.v0.GetByDesignatorResponse\n\t(*Country)(nil),                      // 36: aviation.airports.v0.Country\n\t(*City)(nil),                         // 37: aviation.airports.v0.City\n\t(*Error)(nil),                        // 38: aviation.airports.v0.Error\n\t(*CreateDesignatorRequest)(nil),      // 39: aviation.airports.v0.CreateDesignatorRequest\n\t(*CreateDesignatorResponse)(nil),     // 40: aviation.airports.v0.CreateDesignatorResponse\n\t(*UpdateDesignatorRequest)(nil),      // 41: aviation.airports.v0.UpdateDesignatorRequest\n\t(*UpdateDesignatorResponse)(nil),     // 42: aviation.airports.v0.UpdateDesignatorResponse\n\t(*Designator)(nil),                   // 43: aviation.airports.v0.Designator\n\t(*GetDesignatorRequest)(nil),         // 44: aviation.airports.v0.GetDesignatorRequest\n\t(*GetDesignatorResponse)(nil),        // 45: aviation.airports.v0.GetDesignatorResponse\n\t(*SearchDesignatorsRequest)(nil),     // 46: aviation.airports.v0.SearchDesignatorsRequest\n\t(*SearchDesignatorsResponse)(nil),    // 47: aviation.airports.v0.SearchDesignatorsResponse\n\tnil,                                  // 48: aviation.airports.v0.UpdateAirportRequest.NameEntry\n\tnil,                                  // 49: aviation.airports.v0.UpdateAirportRequest.ShortNameEntry\n\tnil,                                  // 50: aviation.airports.v0.UpdateAirportRequest.DescriptionEntry\n\tnil,                                  // 51: aviation.airports.v0.UpdateAirportRequest.WikipediaUrlEntry\n\tnil,                                  // 52: aviation.airports.v0.CreateAirportRequest.NameEntry\n\tnil,                                  // 53: aviation.airports.v0.CreateAirportRequest.ShortNameEntry\n\tnil,                                  // 54: aviation.airports.v0.CreateAirportRequest.DescriptionEntry\n\tnil,                                  // 55: aviation.airports.v0.CreateAirportRequest.WikipediaUrlEntry\n\t(*Airport_Country)(nil),              // 56: aviation.airports.v0.Airport.Country\n\t(*Airport_City)(nil),                 // 57: aviation.airports.v0.Airport.City\n\t(*Airport_TerminalMap)(nil),          // 58: aviation.airports.v0.Airport.TerminalMap\n\tnil,                                  // 59: aviation.airports.v0.Airport.NameEntry\n\tnil,                                  // 60: aviation.airports.v0.Airport.ShortNameEntry\n\tnil,                                  // 61: aviation.airports.v0.Airport.DescriptionEntry\n\tnil,                                  // 62: aviation.airports.v0.Airport.WikipediaUrlEntry\n\tnil,                                  // 63: aviation.airports.v0.Airport.ImagesEntry\n\tnil,                                  // 64: aviation.airports.v0.Airport.Country.NameEntry\n\tnil,                                  // 65: aviation.airports.v0.Airport.City.NameEntry\n\tnil,                                  // 66: aviation.airports.v0.Airport.TerminalMap.NameEntry\n\t(*UploadImageRequest_Metadata)(nil),  // 67: aviation.airports.v0.UploadImageRequest.Metadata\n\tnil,                                  // 68: aviation.airports.v0.CreateCityRequest.NameEntry\n\tnil,                                  // 69: aviation.airports.v0.UpdateCityRequest.NameEntry\n\tnil,                                  // 70: aviation.airports.v0.CreateCountryRequest.NameEntry\n\tnil,                                  // 71: aviation.airports.v0.UpdateCountryRequest.NameEntry\n\tnil,                                  // 72: aviation.airports.v0.Country.NameEntry\n\tnil,                                  // 73: aviation.airports.v0.City.NameEntry\n\t(*timestamppb.Timestamp)(nil),        // 74: google.protobuf.Timestamp\n}\nvar file_airports_proto_depIdxs = []int32{\n\t48, // 0: aviation.airports.v0.UpdateAirportRequest.name:type_name -> aviation.airports.v0.UpdateAirportRequest.NameEntry\n\t49, // 1: aviation.airports.v0.UpdateAirportRequest.shortName:type_name -> aviation.airports.v0.UpdateAirportRequest.ShortNameEntry\n\t50, // 2: aviation.airports.v0.UpdateAirportRequest.description:type_name -> aviation.airports.v0.UpdateAirportRequest.DescriptionEntry\n\t51, // 3: aviation.airports.v0.UpdateAirportRequest.wikipediaUrl:type_name -> aviation.airports.v0.UpdateAirportRequest.WikipediaUrlEntry\n\t11, // 4: aviation.airports.v0.UpdateAirportResponse.airport:type_name -> aviation.airports.v0.Airport\n\t52, // 5: aviation.airports.v0.CreateAirportRequest.name:type_name -> aviation.airports.v0.CreateAirportRequest.NameEntry\n\t53, // 6: aviation.airports.v0.CreateAirportRequest.shortName:type_name -> aviation.airports.v0.CreateAirportRequest.ShortNameEntry\n\t54, // 7: aviation.airports.v0.CreateAirportRequest.description:type_name -> aviation.airports.v0.CreateAirportRequest.DescriptionEntry\n\t55, // 8: aviation.airports.v0.CreateAirportRequest.wikipediaUrl:type_name -> aviation.airports.v0.CreateAirportRequest.WikipediaUrlEntry\n\t11, // 9: aviation.airports.v0.CreateAirportResponse.airport:type_name -> aviation.airports.v0.Airport\n\t0,  // 10: aviation.airports.v0.AirportDetailsRequest.include:type_name -> aviation.airports.v0.Include\n\t11, // 11: aviation.airports.v0.AirportDetailsResponse.airport:type_name -> aviation.airports.v0.Airport\n\t0,  // 12: aviation.airports.v0.BatchGetRequest.include:type_name -> aviation.airports.v0.Include\n\t11, // 13: aviation.airports.v0.BatchGetResponse.airports:type_name -> aviation.airports.v0.Airport\n\t59, // 14: aviation.airports.v0.Airport.name:type_name -> aviation.airports.v0.Airport.NameEntry\n\t60, // 15: aviation.airports.v0.Airport.shortName:type_name -> aviation.airports.v0.Airport.ShortNameEntry\n\t57, // 16: aviation.airports.v0.Airport.city:type_name -> aviation.airports.v0.Airport.City\n\t61, // 17: aviation.airports.v0.Airport.description:type_name -> aviation.airports.v0.Airport.DescriptionEntry\n\t62, // 18: aviation.airports.v0.Airport.wikipediaUrl:type_name -> aviation.airports.v0.Airport.WikipediaUrlEntry\n\t63, // 19: aviation.airports.v0.Airport.images:type_name -> aviation.airports.v0.Airport.ImagesEntry\n\t58, // 20: aviation.airports.v0.Airport.terminalMaps:type_name -> aviation.airports.v0.Airport.TerminalMap\n\t74, // 21: aviation.airports.v0.Airport.createdAt:type_name -> google.protobuf.Timestamp\n\t74, // 22: aviation.airports.v0.Airport.updatedAt:type_name -> google.protobuf.Timestamp\n\t67, // 23: aviation.airports.v0.UploadImageRequest.metadata:type_name -> aviation.airports.v0.UploadImageRequest.Metadata\n\t11, // 24: aviation.airports.v0.SearchAirportsResponse.result:type_name -> aviation.airports.v0.Airport\n\t37, // 25: aviation.airports.v0.SearchCitiesResponse.result:type_name -> aviation.airports.v0.City\n\t37, // 26: aviation.airports.v0.GetCityResponse.city:type_name -> aviation.airports.v0.City\n\t68, // 27: aviation.airports.v0.CreateCityRequest.name:type_name -> aviation.airports.v0.CreateCityRequest.NameEntry\n\t37, // 28: aviation.airports.v0.CreateCityResponse.city:type_name -> aviation.airports.v0.City\n\t69, // 29: aviation.airports.v0.UpdateCityRequest.name:type_name -> aviation.airports.v0.UpdateCityRequest.NameEntry\n\t37, // 30: aviation.airports.v0.UpdateCityResponse.city:type_name -> aviation.airports.v0.City\n\t36, // 31: aviation.airports.v0.SearchCountriesResponse.result:type_name -> aviation.airports.v0.Country\n\t36, // 32: aviation.airports.v0.GetCountryResponse.country:type_name -> aviation.airports.v0.Country\n\t70, // 33: aviation.airports.v0.CreateCountryRequest.name:type_name -> aviation.airports.v0.CreateCountryRequest.NameEntry\n\t36, // 34: aviation.airports.v0.CreateCountryResponse.country:type_name -> aviation.airports.v0.Country\n\t71, // 35: aviation.airports.v0.UpdateCountryRequest.name:type_name -> aviation.airports.v0.UpdateCountryRequest.NameEntry\n\t36, // 36: aviation.airports.v0.UpdateCountryResponse.country:type_name -> aviation.airports.v0.Country\n\t0,  // 37: aviation.airports.v0.BatchGetByDesignatorRequest.include:type_name -> aviation.airports.v0.Include\n\t11, // 38: aviation.airports.v0.BatchGetByDesignatorResponse.airports:type_name -> aviation.airports.v0.Airport\n\t0,  // 39: aviation.airports.v0.GetByDesignatorRequest.include:type_name -> aviation.airports.v0.Include\n\t11, // 40: aviation.airports.v0.GetByDesignatorResponse.airport:type_name -> aviation.airports.v0.Airport\n\t72, // 41: aviation.airports.v0.Country.name:type_name -> aviation.airports.v0.Country.NameEntry\n\t73, // 42: aviation.airports.v0.City.name:type_name -> aviation.airports.v0.City.NameEntry\n\t36, // 43: aviation.airports.v0.City.country:type_name -> aviation.airports.v0.Country\n\t74, // 44: aviation.airports.v0.CreateDesignatorRequest.validFrom:type_name -> google.protobuf.Timestamp\n\t74, // 45: aviation.airports.v0.CreateDesignatorRequest.validTo:type_name -> google.protobuf.Timestamp\n\t43, // 46: aviation.airports.v0.CreateDesignatorResponse.designator:type_name -> aviation.airports.v0.Designator\n\t74, // 47: aviation.airports.v0.UpdateDesignatorRequest.validFrom:type_name -> google.protobuf.Timestamp\n\t74, // 48: aviation.airports.v0.UpdateDesignatorRequest.validTo:type_name -> google.protobuf.Timestamp\n\t43, // 49: aviation.airports.v0.UpdateDesignatorResponse.designator:type_name -> aviation.airports.v0.Designator\n\t74, // 50: aviation.airports.v0.Designator.validFrom:type_name -> google.protobuf.Timestamp\n\t74, // 51: aviation.airports.v0.Designator.validTo:type_name -> google.protobuf.Timestamp\n\t74, // 52: aviation.airports.v0.Designator.createdAt:type_name -> google.protobuf.Timestamp\n\t74, // 53: aviation.airports.v0.Designator.updatedAt:type_name -> google.protobuf.Timestamp\n\t43, // 54: aviation.airports.v0.GetDesignatorResponse.designator:type_name -> aviation.airports.v0.Designator\n\t43, // 55: aviation.airports.v0.SearchDesignatorsResponse.result:type_name -> aviation.airports.v0.Designator\n\t64, // 56: aviation.airports.v0.Airport.Country.name:type_name -> aviation.airports.v0.Airport.Country.NameEntry\n\t65, // 57: aviation.airports.v0.Airport.City.name:type_name -> aviation.airports.v0.Airport.City.NameEntry\n\t56, // 58: aviation.airports.v0.Airport.City.country:type_name -> aviation.airports.v0.Airport.Country\n\t66, // 59: aviation.airports.v0.Airport.TerminalMap.name:type_name -> aviation.airports.v0.Airport.TerminalMap.NameEntry\n\t74, // 60: aviation.airports.v0.Airport.TerminalMap.createdAt:type_name -> google.protobuf.Timestamp\n\t74, // 61: aviation.airports.v0.Airport.TerminalMap.updatedAt:type_name -> google.protobuf.Timestamp\n\t1,  // 62: aviation.airports.v0.UploadImageRequest.Metadata.type:type_name -> aviation.airports.v0.UploadImageRequest.ImageType\n\t6,  // 63: aviation.airports.v0.AirportsService.Get:input_type -> aviation.airports.v0.AirportDetailsRequest\n\t8,  // 64: aviation.airports.v0.AirportsService.BatchGet:input_type -> aviation.airports.v0.BatchGetRequest\n\t10, // 65: aviation.airports.v0.AirportsService.GetByCity:input_type -> aviation.airports.v0.AirportByCityRequest\n\t12, // 66: aviation.airports.v0.AirportsService.UploadImage:input_type -> aviation.airports.v0.UploadImageRequest\n\t13, // 67: aviation.airports.v0.AirportsService.Search:input_type -> aviation.airports.v0.SearchAirportsRequest\n\t4,  // 68: aviation.airports.v0.AirportsService.Create:input_type -> aviation.airports.v0.CreateAirportRequest\n\t2,  // 69: aviation.airports.v0.AirportsService.Update:input_type -> aviation.airports.v0.UpdateAirportRequest\n\t32, // 70: aviation.airports.v0.AirportsService.BatchGetByDesignator:input_type -> aviation.airports.v0.BatchGetByDesignatorRequest\n\t34, // 71: aviation.airports.v0.AirportsService.GetByDesignator:input_type -> aviation.airports.v0.GetByDesignatorRequest\n\t15, // 72: aviation.airports.v0.CitiesService.Search:input_type -> aviation.airports.v0.SearchCitiesRequest\n\t17, // 73: aviation.airports.v0.CitiesService.Get:input_type -> aviation.airports.v0.GetCityRequest\n\t19, // 74: aviation.airports.v0.CitiesService.Create:input_type -> aviation.airports.v0.CreateCityRequest\n\t21, // 75: aviation.airports.v0.CitiesService.Update:input_type -> aviation.airports.v0.UpdateCityRequest\n\t23, // 76: aviation.airports.v0.CountriesService.Search:input_type -> aviation.airports.v0.SearchCountriesRequest\n\t25, // 77: aviation.airports.v0.CountriesService.Get:input_type -> aviation.airports.v0.GetCountryRequest\n\t27, // 78: aviation.airports.v0.CountriesService.Create:input_type -> aviation.airports.v0.CreateCountryRequest\n\t29, // 79: aviation.airports.v0.CountriesService.Update:input_type -> aviation.airports.v0.UpdateCountryRequest\n\t39, // 80: aviation.airports.v0.DesignatorsService.Create:input_type -> aviation.airports.v0.CreateDesignatorRequest\n\t44, // 81: aviation.airports.v0.DesignatorsService.Get:input_type -> aviation.airports.v0.GetDesignatorRequest\n\t41, // 82: aviation.airports.v0.DesignatorsService.Update:input_type -> aviation.airports.v0.UpdateDesignatorRequest\n\t46, // 83: aviation.airports.v0.DesignatorsService.Search:input_type -> aviation.airports.v0.SearchDesignatorsRequest\n\t7,  // 84: aviation.airports.v0.AirportsService.Get:output_type -> aviation.airports.v0.AirportDetailsResponse\n\t9,  // 85: aviation.airports.v0.AirportsService.BatchGet:output_type -> aviation.airports.v0.BatchGetResponse\n\t9,  // 86: aviation.airports.v0.AirportsService.GetByCity:output_type -> aviation.airports.v0.BatchGetResponse\n\t31, // 87: aviation.airports.v0.AirportsService.UploadImage:output_type -> aviation.airports.v0.UploadImageResponse\n\t14, // 88: aviation.airports.v0.AirportsService.Search:output_type -> aviation.airports.v0.SearchAirportsResponse\n\t5,  // 89: aviation.airports.v0.AirportsService.Create:output_type -> aviation.airports.v0.CreateAirportResponse\n\t3,  // 90: aviation.airports.v0.AirportsService.Update:output_type -> aviation.airports.v0.UpdateAirportResponse\n\t33, // 91: aviation.airports.v0.AirportsService.BatchGetByDesignator:output_type -> aviation.airports.v0.BatchGetByDesignatorResponse\n\t35, // 92: aviation.airports.v0.AirportsService.GetByDesignator:output_type -> aviation.airports.v0.GetByDesignatorResponse\n\t16, // 93: aviation.airports.v0.CitiesService.Search:output_type -> aviation.airports.v0.SearchCitiesResponse\n\t18, // 94: aviation.airports.v0.CitiesService.Get:output_type -> aviation.airports.v0.GetCityResponse\n\t20, // 95: aviation.airports.v0.CitiesService.Create:output_type -> aviation.airports.v0.CreateCityResponse\n\t22, // 96: aviation.airports.v0.CitiesService.Update:output_type -> aviation.airports.v0.UpdateCityResponse\n\t24, // 97: aviation.airports.v0.CountriesService.Search:output_type -> aviation.airports.v0.SearchCountriesResponse\n\t26, // 98: aviation.airports.v0.CountriesService.Get:output_type -> aviation.airports.v0.GetCountryResponse\n\t28, // 99: aviation.airports.v0.CountriesService.Create:output_type -> aviation.airports.v0.CreateCountryResponse\n\t30, // 100: aviation.airports.v0.CountriesService.Update:output_type -> aviation.airports.v0.UpdateCountryResponse\n\t40, // 101: aviation.airports.v0.DesignatorsService.Create:output_type -> aviation.airports.v0.CreateDesignatorResponse\n\t45, // 102: aviation.airports.v0.DesignatorsService.Get:output_type -> aviation.airports.v0.GetDesignatorResponse\n\t42, // 103: aviation.airports.v0.DesignatorsService.Update:output_type -> aviation.airports.v0.UpdateDesignatorResponse\n\t47, // 104: aviation.airports.v0.DesignatorsService.Search:output_type -> aviation.airports.v0.SearchDesignatorsResponse\n\t84, // [84:105] is the sub-list for method output_type\n\t63, // [63:84] is the sub-list for method input_type\n\t63, // [63:63] is the sub-list for extension type_name\n\t63, // [63:63] is the sub-list for extension extendee\n\t0,  // [0:63] is the sub-list for field type_name\n}\n", "n_tokens": 4923, "primary_symbol": "file_airports_proto_rawDescGZIP", "primary_kind": "function", "primary_span": [3715, 3913], "def_symbols": [], "symbols": ["file_airports_proto_rawDescGZIP", "func", "byte", "file_airports_proto_rawDescOnce", "file_airports_proto_rawDescData", "protoimpl", "CompressGZIP", "unsafe", "Slice", "StringData", "file_airports_proto_rawDesc", "len", "return", "var", "file_airports_proto_enumTypes", "make", "EnumInfo", "file_airports_proto_msgTypes", "MessageInfo", "file_airports_proto_goTypes", "any", "Include", "aviation", "airports", "UploadImageRequest_ImageType", "UploadImageRequest", "ImageType", "UpdateAirportRequest", "nil", "UpdateAirportResponse", "CreateAirportRequest", "CreateAirportResponse", "AirportDetailsRequest", "AirportDetailsResponse", "BatchGetRequest", "BatchGetResponse", "AirportByCityRequest", "Airport", "SearchAirportsRequest", "SearchAirportsResponse", "SearchCitiesRequest", "SearchCitiesResponse", "GetCityRequest", "GetCityResponse", "CreateCityRequest", "CreateCityResponse", "UpdateCityRequest", "UpdateCityResponse", "SearchCountriesRequest", "SearchCountriesResponse", "GetCountryRequest", "GetCountryResponse", "CreateCountryRequest", "CreateCountryResponse", "UpdateCountryRequest", "UpdateCountryResponse", "UploadImageResponse", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "GetByDesignatorRequest", "GetByDesignatorResponse", "Country", "City", "Error", "CreateDesignatorRequest", "CreateDesignatorResponse", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "Designator", "GetDesignatorRequest", "GetDesignatorResponse", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "NameEntry", "ShortNameEntry", "DescriptionEntry", "WikipediaUrlEntry", "Airport_Country", "Airport_City", "Airport_TerminalMap", "TerminalMap", "ImagesEntry", "UploadImageRequest_Metadata", "Metadata", "timestamppb", "Timestamp", "google", "protobuf", "file_airports_proto_depIdxs", "int32", "name", "type_name", "shortName", "description", "wikipediaUrl", "airport", "include", "city", "images", "terminalMaps", "createdAt", "updatedAt", "metadata", "result", "country", "validFrom", "validTo", "designator", "type", "AirportsService", "Get", "input_type", "BatchGet", "GetByCity", "UploadImage", "Search", "Create", "Update", "BatchGetByDesignator", "GetByDesignator", "CitiesService", "CountriesService", "DesignatorsService", "output_type", "the", "sub", "list", "for", "method", "extension", "extendee", "field"], "doc_head": "func file_airports_proto_rawDescGZIP() []byte {\n\tfile_airports_proto_rawDescOnce.Do(func() {\n\t\tfile_airports_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_airports_proto_rawDesc), len(file_airports_proto_rawDesc)))\n\t})\n\treturn file_airports_proto_rawDescData\n}\nvar file_airports_proto_enumTypes = make([]protoimpl.EnumInfo, 2)\nvar file_airports_proto_msgTypes = make([]protoimpl.MessageInfo, 72)\nvar file_airports_proto_goTypes = []any{\n\t(Include)(0),                         // 0: aviation.airports.v0.Include\n\t(UploadImageRequest_ImageType)(0),    // 1: aviation.airports.v0.UploadImageRequest.ImageType\n\t(*UpdateAirportRequest)(nil),         // 2: aviation.airports.v0.UpdateAirportRequest\n\t(*UpdateAirportResponse)(nil),        // 3: aviation.airports.v0.UpdateAirportResponse\n\t(*CreateAirportRequest)(nil),         // 4: aviation.airports.v0.CreateAirportRequest\n\t(*CreateAirportResponse)(nil),        // 5: aviation.airports.v0.CreateAirportResponse\n\t(*AirportDetailsRequest)(nil),        // 6: aviation.airports.v0.AirportDetailsRequest\n\t(*AirportDetailsResponse)(nil),       // 7: aviation.airports.v0.AirportDetailsResponse", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:file_airports_proto_rawDescGZIP/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "file_airports_proto_rawDescGZIP", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["file_airports_proto_rawDescGZIP"], "all_kinds": ["function"], "all_ast_paths": ["go:function:file_airports_proto_rawDescGZIP/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [112952], "all_end_bytes": [113247], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "google.golang.org/protobuf/types/known/timestamppb", "unsafe"], "symbols_referenced_strict": ["Airport", "AirportByCityRequest", "AirportDetailsRequest", "AirportDetailsResponse", "Airport_City", "Airport_Country", "Airport_TerminalMap", "BatchGetByDesignatorRequest", "BatchGetByDesignatorResponse", "BatchGetRequest", "BatchGetResponse", "City", "CompressGZIP", "Country", "CreateAirportRequest", "CreateAirportResponse", "CreateCityRequest", "CreateCityResponse", "CreateCountryRequest", "CreateCountryResponse", "CreateDesignatorRequest", "CreateDesignatorResponse", "Designator", "EnumInfo", "Error", "GetByDesignatorRequest", "GetByDesignatorResponse", "GetCityRequest", "GetCityResponse", "GetCountryRequest", "GetCountryResponse", "GetDesignatorRequest", "GetDesignatorResponse", "Include", "MessageInfo", "SearchAirportsRequest", "SearchAirportsResponse", "SearchCitiesRequest", "SearchCitiesResponse", "SearchCountriesRequest", "SearchCountriesResponse", "SearchDesignatorsRequest", "SearchDesignatorsResponse", "Slice", "StringData", "Timestamp", "UpdateAirportRequest", "UpdateAirportResponse", "UpdateCityRequest", "UpdateCityResponse", "UpdateCountryRequest", "UpdateCountryResponse", "UpdateDesignatorRequest", "UpdateDesignatorResponse", "UploadImageRequest", "UploadImageRequest_ImageType", "UploadImageRequest_Metadata", "UploadImageResponse", "file_airports_proto_rawDescOnce.Do", "protoimpl.EnumInfo", "protoimpl.MessageInfo", "protoimpl.X", "timestamppb.Timestamp", "unsafe.Slice", "unsafe.StringData"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"google.golang.org/protobuf/types/known/timestamppb\"\n    \"unsafe\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#494", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#496"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#496", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 496, "start_line": 3914, "end_line": 3914, "text": "func init() { file_airports_proto_init() }", "n_tokens": 11, "primary_symbol": "init", "primary_kind": "function", "primary_span": [3914, 3914], "def_symbols": [], "symbols": ["init", "func", "file_airports_proto_init"], "doc_head": "func init() { file_airports_proto_init() }", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:init/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "init", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["init"], "all_kinds": ["function"], "all_ast_paths": ["go:function:init/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [132081], "all_end_bytes": [132123], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package v0", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#495", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#497"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#497", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/grpc/airports/v0/airports.pb.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go", "rel_path": "pkg/grpc/airports/v0/airports.pb.go", "ext": "go", "language": "go", "chunk_number": 497, "start_line": 3915, "end_line": 3960, "text": "func file_airports_proto_init() {\n\tif File_airports_proto != nil {\n\t\treturn\n\t}\n\tfile_airports_proto_msgTypes[0].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[2].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[9].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[10].OneofWrappers = []any{\n\t\t(*UploadImageRequest_Metadata_)(nil),\n\t\t(*UploadImageRequest_Chunk)(nil),\n\t}\n\tfile_airports_proto_msgTypes[11].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[12].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[13].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[14].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[17].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[19].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[21].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[22].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[30].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[32].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[35].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[44].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[45].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[55].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[56].OneofWrappers = []any{}\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: unsafe.Slice(unsafe.StringData(file_airports_proto_rawDesc), len(file_airports_proto_rawDesc)),\n\t\t\tNumEnums:      2,\n\t\t\tNumMessages:   72,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   4,\n\t\t},\n\t\tGoTypes:           file_airports_proto_goTypes,\n\t\tDependencyIndexes: file_airports_proto_depIdxs,\n\t\tEnumInfos:         file_airports_proto_enumTypes,\n\t\tMessageInfos:      file_airports_proto_msgTypes,\n\t}.Build()\n\tFile_airports_proto = out.File\n\tfile_airports_proto_goTypes = nil\n\tfile_airports_proto_depIdxs = nil\n}\n", "n_tokens": 549, "primary_symbol": "file_airports_proto_init", "primary_kind": "function", "primary_span": [3915, 3960], "def_symbols": [], "symbols": ["file_airports_proto_init", "func", "File_airports_proto", "nil", "return", "file_airports_proto_msgTypes", "OneofWrappers", "any", "UploadImageRequest_Metadata_", "UploadImageRequest_Chunk", "type", "struct", "out", "protoimpl", "TypeBuilder", "File", "DescBuilder", "GoPackagePath", "reflect", "TypeOf", "PkgPath", "RawDescriptor", "unsafe", "Slice", "StringData", "file_airports_proto_rawDesc", "len", "NumEnums", "NumMessages", "NumExtensions", "NumServices", "GoTypes", "file_airports_proto_goTypes", "DependencyIndexes", "file_airports_proto_depIdxs", "EnumInfos", "file_airports_proto_enumTypes", "MessageInfos", "Build"], "doc_head": "func file_airports_proto_init() {\n\tif File_airports_proto != nil {\n\t\treturn\n\t}\n\tfile_airports_proto_msgTypes[0].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[2].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[9].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[10].OneofWrappers = []any{\n\t\t(*UploadImageRequest_Metadata_)(nil),\n\t\t(*UploadImageRequest_Chunk)(nil),\n\t}\n\tfile_airports_proto_msgTypes[11].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[12].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[13].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[14].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[17].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[19].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[21].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[22].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[30].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[32].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[35].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[44].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[45].OneofWrappers = []any{}\n\tfile_airports_proto_msgTypes[55].OneofWrappers = []any{}", "is_generated": true, "rank_boost": 0.35, "ast_path": "go:function:file_airports_proto_init/complete", "package": "v0", "node_kind": "function", "receiver": "", "function_name": "file_airports_proto_init", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["file_airports_proto_init"], "all_kinds": ["function"], "all_ast_paths": ["go:function:file_airports_proto_init/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [132124], "all_end_bytes": [134029], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/protobuf/runtime/protoimpl", "reflect", "unsafe"], "symbols_referenced_strict": ["Build", "DependencyIndexes", "DescBuilder", "EnumInfos", "File", "File_airports_proto", "GoPackagePath", "GoTypes", "MessageInfos", "NumEnums", "NumExtensions", "NumMessages", "NumServices", "OneofWrappers", "PkgPath", "RawDescriptor", "Slice", "StringData", "TypeBuilder", "TypeOf", "UploadImageRequest_Chunk", "UploadImageRequest_Metadata_", "out.File", "protoimpl.DescBuilder", "protoimpl.TypeBuilder", "reflect.TypeOf", "unsafe.Slice", "unsafe.StringData"], "header_context_minimal": "package v0\nimport (\n    \"google.golang.org/protobuf/runtime/protoimpl\"\n    \"reflect\"\n    \"unsafe\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/grpc/airports/v0/airports.pb.go#496"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xgrpc/conn.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go", "rel_path": "pkg/xgrpc/conn.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package xgrpc\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "xgrpc"], "doc_head": "package xgrpc", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xgrpc", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xgrpc", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xgrpc/conn.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go", "rel_path": "pkg/xgrpc/conn.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 7, "text": "import (\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials/insecure\"\n)\n", "n_tokens": 23, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 7], "def_symbols": [], "symbols": ["import", "google", "golang", "org", "grpc", "credentials", "insecure"], "doc_head": "import (\n\t\"google.golang.org/grpc\"\n\t\"google.golang.org/grpc/credentials/insecure\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xgrpc", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xgrpc", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xgrpc/conn.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go", "rel_path": "pkg/xgrpc/conn.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 8, "end_line": 20, "text": "func MustConnect(target string) *grpc.ClientConn {\n\tconn, err := grpc.NewClient(\n\t\ttarget,\n\t\tgrpc.WithDefaultServiceConfig(`{\"loadBalancingConfig\": [{\"round_robin\":{}}]}`),\n\t\tgrpc.WithTransportCredentials(insecure.NewCredentials()),\n\t)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\treturn conn\n}\n", "n_tokens": 74, "primary_symbol": "MustConnect", "primary_kind": "function", "primary_span": [8, 20], "def_symbols": [], "symbols": ["MustConnect", "func", "target", "string", "grpc", "ClientConn", "conn", "err", "NewClient", "WithDefaultServiceConfig", "loadBalancingConfig", "round_robin", "WithTransportCredentials", "insecure", "NewCredentials", "nil", "panic", "return"], "doc_head": "func MustConnect(target string) *grpc.ClientConn {\n\tconn, err := grpc.NewClient(\n\t\ttarget,\n\t\tgrpc.WithDefaultServiceConfig(`{\"loadBalancingConfig\": [{\"round_robin\":{}}]}`),\n\t\tgrpc.WithTransportCredentials(insecure.NewCredentials()),\n\t)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\treturn conn\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:MustConnect/complete", "package": "xgrpc", "node_kind": "function", "receiver": "", "function_name": "MustConnect", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["MustConnect"], "all_kinds": ["function"], "all_ast_paths": ["go:function:MustConnect/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [100], "all_end_bytes": [384], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["google.golang.org/grpc", "google.golang.org/grpc/credentials/insecure"], "symbols_referenced_strict": ["ClientConn", "MustConnect", "NewClient", "NewCredentials", "WithDefaultServiceConfig", "WithTransportCredentials", "grpc.ClientConn", "grpc.NewClient", "grpc.WithDefaultServiceConfig", "grpc.WithTransportCredentials", "insecure.NewCredentials"], "header_context_minimal": "package xgrpc\nimport (\n    \"google.golang.org/grpc\"\n    \"google.golang.org/grpc/credentials/insecure\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xgrpc/conn.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package xhttp\n", "n_tokens": 3, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "xhttp"], "doc_head": "package xhttp", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xhttp", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xhttp", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 8, "text": "// Pagination represents the pagination metadata\ntype Pagination struct {\n\tLimit int     `json:\"limit\"`\n\tNext  *string `json:\"next\"`\n}\n", "n_tokens": 31, "primary_symbol": "Pagination", "primary_kind": "type", "primary_span": [3, 8], "def_symbols": [], "symbols": ["Pagination", "represents", "the", "pagination", "metadata", "type", "struct", "Limit", "int", "json", "limit", "Next", "string", "next"], "doc_head": "// Pagination represents the pagination metadata\ntype Pagination struct {\n\tLimit int     `json:\"limit\"`\n\tNext  *string `json:\"next\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Pagination (struct)", "package": "xhttp", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Pagination", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Pagination"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Pagination (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Pagination"], "all_type_kinds": ["struct"], "all_start_bytes": [69], "all_end_bytes": [149], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Limit", "Next", "Pagination"], "header_context_minimal": "package xhttp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 9, "end_line": 15, "text": "// Metadata contains the information about the response\ntype Metadata struct {\n\tCode       string      `json:\"code\"`\n\tMessage    string      `json:\"message\"`\n\tPagination *Pagination `json:\"pagination,omitempty\"`\n}\n", "n_tokens": 42, "primary_symbol": "Metadata", "primary_kind": "type", "primary_span": [9, 15], "def_symbols": [], "symbols": ["Metadata", "contains", "the", "information", "about", "response", "type", "struct", "Code", "string", "json", "code", "Message", "message", "Pagination", "pagination", "omitempty"], "doc_head": "// Metadata contains the information about the response\ntype Metadata struct {\n\tCode       string      `json:\"code\"`\n\tMessage    string      `json:\"message\"`\n\tPagination *Pagination `json:\"pagination,omitempty\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Metadata (struct)", "package": "xhttp", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Metadata", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Metadata"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Metadata (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Metadata"], "all_type_kinds": ["struct"], "all_start_bytes": [212], "all_end_bytes": [364], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Message", "Metadata", "Pagination"], "header_context_minimal": "package xhttp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 16, "end_line": 21, "text": "// Response is the http response format\ntype Response[T any] struct {\n\tMetadata Metadata `json:\"meta\"`\n\tData     T        `json:\"data\"`\n}\n", "n_tokens": 33, "primary_symbol": "Response", "primary_kind": "type", "primary_span": [16, 21], "def_symbols": [], "symbols": ["Response", "the", "http", "response", "format", "type", "any", "struct", "Metadata", "json", "meta", "Data", "data"], "doc_head": "// Response is the http response format\ntype Response[T any] struct {\n\tMetadata Metadata `json:\"meta\"`\n\tData     T        `json:\"data\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Response (struct)", "package": "xhttp", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Response", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Response"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Response (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Response"], "all_type_kinds": ["struct"], "all_start_bytes": [411], "all_end_bytes": [503], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Data", "Metadata", "Response"], "header_context_minimal": "package xhttp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 22, "end_line": 32, "text": "// NewResponse creates a new response\nfunc NewResponse[T any](data T, code string, message string) *Response[T] {\n\treturn &Response[T]{\n\t\tMetadata: Metadata{\n\t\t\tCode:    code,\n\t\t\tMessage: message,\n\t\t},\n\t\tData: data,\n\t}\n}\n", "n_tokens": 62, "primary_symbol": "NewResponse", "primary_kind": "function", "primary_span": [22, 32], "def_symbols": [], "symbols": ["NewResponse", "creates", "new", "response", "func", "any", "data", "code", "string", "message", "Response", "return", "Metadata", "Code", "Message", "Data"], "doc_head": "// NewResponse creates a new response\nfunc NewResponse[T any](data T, code string, message string) *Response[T] {\n\treturn &Response[T]{\n\t\tMetadata: Metadata{\n\t\t\tCode:    code,\n\t\t\tMessage: message,\n\t\t},\n\t\tData: data,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewResponse/complete", "package": "xhttp", "node_kind": "function", "receiver": "", "function_name": "NewResponse", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewResponse"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewResponse/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [543], "all_end_bytes": [725], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Data", "Message", "Metadata", "NewResponse", "Response"], "header_context_minimal": "package xhttp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 33, "end_line": 47, "text": "// NewPaginatedResponse creates a new paginated response\nfunc NewPaginatedResponse[T any](data T, code, message string, limit int, nextPageToken *string) *Response[T] {\n\treturn &Response[T]{\n\t\tMetadata: Metadata{\n\t\t\tCode:    code,\n\t\t\tMessage: message,\n\t\t\tPagination: &Pagination{\n\t\t\t\tLimit: limit,\n\t\t\t\tNext:  nextPageToken,\n\t\t\t},\n\t\t},\n\t\tData: data,\n\t}\n}\n", "n_tokens": 99, "primary_symbol": "NewPaginatedResponse", "primary_kind": "function", "primary_span": [33, 47], "def_symbols": [], "symbols": ["NewPaginatedResponse", "creates", "new", "paginated", "response", "func", "any", "data", "code", "message", "string", "limit", "int", "nextPageToken", "Response", "return", "Metadata", "Code", "Message", "Pagination", "Limit", "Next", "Data"], "doc_head": "// NewPaginatedResponse creates a new paginated response\nfunc NewPaginatedResponse[T any](data T, code, message string, limit int, nextPageToken *string) *Response[T] {\n\treturn &Response[T]{\n\t\tMetadata: Metadata{\n\t\t\tCode:    code,\n\t\t\tMessage: message,\n\t\t\tPagination: &Pagination{\n\t\t\t\tLimit: limit,\n\t\t\t\tNext:  nextPageToken,\n\t\t\t},\n\t\t},\n\t\tData: data,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewPaginatedResponse/complete", "package": "xhttp", "node_kind": "function", "receiver": "", "function_name": "NewPaginatedResponse", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewPaginatedResponse"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewPaginatedResponse/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [784], "all_end_bytes": [1080], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Data", "Limit", "Message", "Metadata", "NewPaginatedResponse", "Next", "Pagination", "Response"], "header_context_minimal": "package xhttp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 48, "end_line": 53, "text": "type ErrResponse struct {\n\tMetadata   Metadata `json:\"meta\"`\n\tData       any      `json:\"data\"`\n\tHttpStatus int      `json:\"-\"`\n}\n", "n_tokens": 31, "primary_symbol": "ErrResponse", "primary_kind": "type", "primary_span": [48, 53], "def_symbols": [], "symbols": ["type", "ErrResponse", "struct", "Metadata", "json", "meta", "Data", "any", "data", "HttpStatus", "int"], "doc_head": "type ErrResponse struct {\n\tMetadata   Metadata `json:\"meta\"`\n\tData       any      `json:\"data\"`\n\tHttpStatus int      `json:\"-\"`\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:ErrResponse (struct)", "package": "xhttp", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "ErrResponse", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["ErrResponse"], "all_kinds": ["type"], "all_ast_paths": ["go:type:ErrResponse (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["ErrResponse"], "all_type_kinds": ["struct"], "all_start_bytes": [1087], "all_end_bytes": [1211], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Data", "ErrResponse", "HttpStatus", "Metadata"], "header_context_minimal": "package xhttp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#6", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#8"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#8", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 8, "start_line": 54, "end_line": 64, "text": "// NewErrorResponse creates a new error response\nfunc NewErrorResponse(code string, message string) *ErrResponse {\n\treturn &ErrResponse{\n\t\tMetadata: Metadata{\n\t\t\tCode:    code,\n\t\t\tMessage: message,\n\t\t},\n\t\tData: getZero[any](),\n\t}\n}\n", "n_tokens": 59, "primary_symbol": "NewErrorResponse", "primary_kind": "function", "primary_span": [55, 64], "def_symbols": [], "symbols": ["NewErrorResponse", "creates", "new", "error", "response", "func", "code", "string", "message", "ErrResponse", "return", "Metadata", "Code", "Message", "Data", "getZero", "any"], "doc_head": "// NewErrorResponse creates a new error response\nfunc NewErrorResponse(code string, message string) *ErrResponse {\n\treturn &ErrResponse{\n\t\tMetadata: Metadata{\n\t\t\tCode:    code,\n\t\t\tMessage: message,\n\t\t},\n\t\tData: getZero[any](),\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewErrorResponse/complete", "package": "xhttp", "node_kind": "function", "receiver": "", "function_name": "NewErrorResponse", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewErrorResponse"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewErrorResponse/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1262], "all_end_bytes": [1444], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Data", "ErrResponse", "Message", "Metadata", "NewErrorResponse"], "header_context_minimal": "package xhttp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#7", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#9"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#9", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 9, "start_line": 65, "end_line": 76, "text": "// NewErrorResponseWithHttpCode creates a new error response\nfunc NewErrorResponseWithHttpCode(code string, message string, httpStatus int) *ErrResponse {\n\treturn &ErrResponse{\n\t\tMetadata: Metadata{\n\t\t\tCode:    code,\n\t\t\tMessage: message,\n\t\t},\n\t\tData:       getZero[any](),\n\t\tHttpStatus: httpStatus,\n\t}\n}\n", "n_tokens": 77, "primary_symbol": "NewErrorResponseWithHttpCode", "primary_kind": "function", "primary_span": [66, 76], "def_symbols": [], "symbols": ["NewErrorResponseWithHttpCode", "creates", "new", "error", "response", "func", "code", "string", "message", "httpStatus", "int", "ErrResponse", "return", "Metadata", "Code", "Message", "Data", "getZero", "any", "HttpStatus"], "doc_head": "// NewErrorResponseWithHttpCode creates a new error response\nfunc NewErrorResponseWithHttpCode(code string, message string, httpStatus int) *ErrResponse {\n\treturn &ErrResponse{\n\t\tMetadata: Metadata{\n\t\t\tCode:    code,\n\t\t\tMessage: message,\n\t\t},\n\t\tData:       getZero[any](),\n\t\tHttpStatus: httpStatus,\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewErrorResponseWithHttpCode/complete", "package": "xhttp", "node_kind": "function", "receiver": "", "function_name": "NewErrorResponseWithHttpCode", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewErrorResponseWithHttpCode"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewErrorResponseWithHttpCode/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1507], "all_end_bytes": [1749], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["Data", "ErrResponse", "HttpStatus", "Message", "Metadata", "NewErrorResponseWithHttpCode"], "header_context_minimal": "package xhttp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#8", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#10", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 10, "start_line": 77, "end_line": 80, "text": "func (e *ErrResponse) Error() string {\n\treturn e.Metadata.Message\n}\n", "n_tokens": 17, "primary_symbol": "Error", "primary_kind": "method", "primary_span": [77, 80], "def_symbols": [], "symbols": ["Error", "func", "ErrResponse", "string", "return", "Metadata", "Message"], "doc_head": "func (e *ErrResponse) Error() string {\n\treturn e.Metadata.Message\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:method:(*ErrResponse).Error/complete", "package": "xhttp", "node_kind": "method", "receiver": "e *ErrResponse", "function_name": "", "method_name": "Error", "type_name": "ErrResponse", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Error"], "all_kinds": ["method"], "all_ast_paths": ["go:method:(*ErrResponse).Error/complete"], "all_roles": ["complete"], "all_receivers": ["e *ErrResponse"], "all_type_names": ["ErrResponse"], "all_type_kinds": [null], "all_start_bytes": [1751], "all_end_bytes": [1818], "primary_index": 0, "all_receivers_normalized": ["(*ErrResponse)"], "imports_used_minimal": [], "symbols_referenced_strict": ["ErrResponse", "Error", "Message", "Metadata", "e.Metadata"], "header_context_minimal": "package xhttp\n// receiver: e *ErrResponse", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#9", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#11"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#11", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xhttp/response.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go", "rel_path": "pkg/xhttp/response.go", "ext": "go", "language": "go", "chunk_number": 11, "start_line": 81, "end_line": 85, "text": "func getZero[T any]() T {\n\tvar z T\n\treturn z\n}\n", "n_tokens": 16, "primary_symbol": "getZero", "primary_kind": "function", "primary_span": [81, 85], "def_symbols": [], "symbols": ["func", "getZero", "any", "var", "return"], "doc_head": "func getZero[T any]() T {\n\tvar z T\n\treturn z\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:getZero/complete", "package": "xhttp", "node_kind": "function", "receiver": "", "function_name": "getZero", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["getZero"], "all_kinds": ["function"], "all_ast_paths": ["go:function:getZero/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [1820], "all_end_bytes": [1866], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xhttp", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xhttp/response.go#10"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/i18n/supported.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go", "rel_path": "pkg/i18n/supported.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package i18n\n", "n_tokens": 5, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "i18n"], "doc_head": "package i18n", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "i18n", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package i18n", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/i18n/supported.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go", "rel_path": "pkg/i18n/supported.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 28, "text": "import (\n\t\"golang.org/x/text/language\"\n\t\"golang.org/x/text/message\"\n)\n\nvar SupportedLanguages = language.NewMatcher([]language.Tag{\n\tlanguage.English,\n\tlanguage.Dutch,\n\tlanguage.French,\n\tlanguage.German,\n\tlanguage.Italian,\n\tlanguage.Japanese,\n\tlanguage.Korean,\n\tlanguage.Portuguese,\n\tlanguage.Russian,\n\tlanguage.Spanish,\n\tlanguage.Swedish,\n\tlanguage.Thai,\n\tlanguage.Vietnamese,\n\tlanguage.Malay,\n\tlanguage.Chinese,\n\tlanguage.Finnish,\n\tlanguage.Norwegian,\n\tlanguage.Danish,\n})\n", "n_tokens": 128, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 28], "def_symbols": [], "symbols": ["import", "golang", "org", "text", "language", "message", "var", "SupportedLanguages", "NewMatcher", "Tag", "English", "Dutch", "French", "German", "Italian", "Japanese", "Korean", "Portuguese", "Russian", "Spanish", "Swedish", "Thai", "Vietnamese", "Malay", "Chinese", "Finnish", "Norwegian", "Danish"], "doc_head": "import (\n\t\"golang.org/x/text/language\"\n\t\"golang.org/x/text/message\"\n)\nvar SupportedLanguages = language.NewMatcher([]language.Tag{\n\tlanguage.English,\n\tlanguage.Dutch,\n\tlanguage.French,\n\tlanguage.German,\n\tlanguage.Italian,\n\tlanguage.Japanese,\n\tlanguage.Korean,\n\tlanguage.Portuguese,\n\tlanguage.Russian,\n\tlanguage.Spanish,\n\tlanguage.Swedish,\n\tlanguage.Thai,\n\tlanguage.Vietnamese,\n\tlanguage.Malay,\n\tlanguage.Chinese,\n\tlanguage.Finnish,\n\tlanguage.Norwegian,\n\tlanguage.Danish,\n})", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "i18n", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["golang.org/x/text/language"], "symbols_referenced_strict": ["Chinese", "Danish", "Dutch", "English", "Finnish", "French", "German", "Italian", "Japanese", "Korean", "Malay", "NewMatcher", "Norwegian", "Portuguese", "Russian", "Spanish", "SupportedLanguages", "Swedish", "Tag", "Thai", "Vietnamese", "language.Chinese", "language.Danish", "language.Dutch", "language.English", "language.Finnish", "language.French", "language.German", "language.Italian", "language.Japanese", "language.Korean", "language.Malay", "language.NewMatcher", "language.Norwegian", "language.Portuguese", "language.Russian", "language.Spanish", "language.Swedish", "language.Tag", "language.Thai", "language.Vietnamese"], "header_context_minimal": "package i18n\nimport \"golang.org/x/text/language\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/i18n/supported.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go", "rel_path": "pkg/i18n/supported.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 29, "end_line": 34, "text": "func GetLocaleFromHeader(acceptHeader string) language.Tag {\n\ttags, _, _ := language.ParseAcceptLanguage(acceptHeader)\n\tlocale, _, _ := SupportedLanguages.Match(tags...)\n\treturn locale\n}\n", "n_tokens": 42, "primary_symbol": "GetLocaleFromHeader", "primary_kind": "function", "primary_span": [29, 34], "def_symbols": [], "symbols": ["GetLocaleFromHeader", "func", "acceptHeader", "string", "language", "Tag", "tags", "ParseAcceptLanguage", "locale", "SupportedLanguages", "Match", "return"], "doc_head": "func GetLocaleFromHeader(acceptHeader string) language.Tag {\n\ttags, _, _ := language.ParseAcceptLanguage(acceptHeader)\n\tlocale, _, _ := SupportedLanguages.Match(tags...)\n\treturn locale\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:GetLocaleFromHeader/complete", "package": "i18n", "node_kind": "function", "receiver": "", "function_name": "GetLocaleFromHeader", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetLocaleFromHeader"], "all_kinds": ["function"], "all_ast_paths": ["go:function:GetLocaleFromHeader/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [490], "all_end_bytes": [676], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["golang.org/x/text/language"], "symbols_referenced_strict": ["GetLocaleFromHeader", "Match", "ParseAcceptLanguage", "SupportedLanguages", "SupportedLanguages.Match", "Tag", "language.ParseAcceptLanguage", "language.Tag"], "header_context_minimal": "package i18n\nimport \"golang.org/x/text/language\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/i18n/supported.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go", "rel_path": "pkg/i18n/supported.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 35, "end_line": 40, "text": "func Localise(locale language.Tag, text string) string {\n\tp := message.NewPrinter(locale)\n\n\treturn p.Sprintf(text)\n}\n", "n_tokens": 25, "primary_symbol": "Localise", "primary_kind": "function", "primary_span": [35, 40], "def_symbols": [], "symbols": ["Localise", "func", "locale", "language", "Tag", "text", "string", "message", "NewPrinter", "return", "Sprintf"], "doc_head": "func Localise(locale language.Tag, text string) string {\n\tp := message.NewPrinter(locale)\n\treturn p.Sprintf(text)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:Localise/complete", "package": "i18n", "node_kind": "function", "receiver": "", "function_name": "Localise", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Localise"], "all_kinds": ["function"], "all_ast_paths": ["go:function:Localise/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [678], "all_end_bytes": [794], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["golang.org/x/text/language", "golang.org/x/text/message"], "symbols_referenced_strict": ["Localise", "NewPrinter", "Sprintf", "Tag", "language.Tag", "message.NewPrinter", "p.Sprintf"], "header_context_minimal": "package i18n\nimport (\n    \"golang.org/x/text/language\"\n    \"golang.org/x/text/message\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/supported.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/i18n/validation.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go", "rel_path": "pkg/i18n/validation.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package i18n\n", "n_tokens": 5, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "i18n"], "doc_head": "package i18n", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "i18n", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package i18n", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/i18n/validation.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go", "rel_path": "pkg/i18n/validation.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 13, "text": "import (\n\t\"github.com/go-playground/locales/en\"\n\tut \"github.com/go-playground/universal-translator\"\n\t\"github.com/go-playground/validator/v10\"\n\tenTranslations \"github.com/go-playground/validator/v10/translations/en\"\n)\n\nvar (\n\tTranslator ut.Translator\n)\n", "n_tokens": 62, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 13], "def_symbols": [], "symbols": ["import", "github", "com", "playground", "locales", "universal", "translator", "validator", "v10", "enTranslations", "translations", "var", "Translator"], "doc_head": "import (\n\t\"github.com/go-playground/locales/en\"\n\tut \"github.com/go-playground/universal-translator\"\n\t\"github.com/go-playground/validator/v10\"\n\tenTranslations \"github.com/go-playground/validator/v10/translations/en\"\n)\nvar (\n\tTranslator ut.Translator\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "i18n", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": ["github.com/go-playground/universal-translator"], "symbols_referenced_strict": ["Translator", "ut.Translator"], "header_context_minimal": "package i18n\nimport \"github.com/go-playground/universal-translator\"", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/i18n/validation.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go", "rel_path": "pkg/i18n/validation.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 14, "end_line": 20, "text": "func Register(v *validator.Validate) {\n\tenLocale := en.New()\n\tuni := ut.New(enLocale, enLocale)\n\tTranslator, _ = uni.GetTranslator(\"en\")\n\t_ = enTranslations.RegisterDefaultTranslations(v, Translator)\n}\n", "n_tokens": 49, "primary_symbol": "Register", "primary_kind": "function", "primary_span": [14, 20], "def_symbols": [], "symbols": ["Register", "func", "validator", "Validate", "enLocale", "New", "uni", "Translator", "GetTranslator", "enTranslations", "RegisterDefaultTranslations"], "doc_head": "func Register(v *validator.Validate) {\n\tenLocale := en.New()\n\tuni := ut.New(enLocale, enLocale)\n\tTranslator, _ = uni.GetTranslator(\"en\")\n\t_ = enTranslations.RegisterDefaultTranslations(v, Translator)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:Register/complete", "package": "i18n", "node_kind": "function", "receiver": "", "function_name": "Register", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["Register"], "all_kinds": ["function"], "all_ast_paths": ["go:function:Register/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [267], "all_end_bytes": [468], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["github.com/go-playground/locales/en", "github.com/go-playground/universal-translator", "github.com/go-playground/validator/v10/translations/en"], "symbols_referenced_strict": ["GetTranslator", "New", "Register", "RegisterDefaultTranslations", "Translator", "Validate", "en.New", "enTranslations.RegisterDefaultTranslations", "uni.GetTranslator", "ut.New", "validator.Validate"], "header_context_minimal": "package i18n\nimport (\n    \"github.com/go-playground/locales/en\"\n    \"github.com/go-playground/universal-translator\"\n    \"github.com/go-playground/validator/v10/translations/en\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/i18n/validation.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go", "rel_path": "pkg/i18n/validation.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 21, "end_line": 33, "text": "func GetFirstValidationErrorMessage(err error) string {\n\tvar message string\n\tif validationErrors, ok := err.(validator.ValidationErrors); ok {\n\t\tif len(validationErrors) > 0 {\n\t\t\tmessage = validationErrors[0].Translate(Translator)\n\t\t} else {\n\t\t\tmessage = \"The input parameters are invalid.\"\n\t\t}\n\t}\n\n\treturn message\n}\n", "n_tokens": 74, "primary_symbol": "GetFirstValidationErrorMessage", "primary_kind": "function", "primary_span": [21, 33], "def_symbols": [], "symbols": ["GetFirstValidationErrorMessage", "func", "err", "error", "string", "var", "message", "validationErrors", "validator", "ValidationErrors", "len", "Translate", "Translator", "else", "The", "input", "parameters", "are", "invalid", "return"], "doc_head": "func GetFirstValidationErrorMessage(err error) string {\n\tvar message string\n\tif validationErrors, ok := err.(validator.ValidationErrors); ok {\n\t\tif len(validationErrors) > 0 {\n\t\t\tmessage = validationErrors[0].Translate(Translator)\n\t\t} else {\n\t\t\tmessage = \"The input parameters are invalid.\"\n\t\t}\n\t}\n\treturn message\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:GetFirstValidationErrorMessage/complete", "package": "i18n", "node_kind": "function", "receiver": "", "function_name": "GetFirstValidationErrorMessage", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["GetFirstValidationErrorMessage"], "all_kinds": ["function"], "all_ast_paths": ["go:function:GetFirstValidationErrorMessage/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [470], "all_end_bytes": [786], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["GetFirstValidationErrorMessage", "Translate", "Translator", "ValidationErrors", "validator.ValidationErrors"], "header_context_minimal": "package i18n", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/i18n/validation.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/config.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go", "rel_path": "pkg/xaws/config.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package xaws\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "xaws"], "doc_head": "package xaws", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xaws", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xaws", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/config.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go", "rel_path": "pkg/xaws/config.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 10, "text": "import (\n\t\"context\"\n\n\t\"github.com/aws/aws-sdk-go-v2/aws\"\n\t\"github.com/aws/aws-sdk-go-v2/config\"\n\t\"github.com/aws/aws-sdk-go-v2/credentials\"\n)\n", "n_tokens": 40, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 10], "def_symbols": [], "symbols": ["import", "context", "github", "com", "aws", "sdk", "config", "credentials"], "doc_head": "import (\n\t\"context\"\n\t\"github.com/aws/aws-sdk-go-v2/aws\"\n\t\"github.com/aws/aws-sdk-go-v2/config\"\n\t\"github.com/aws/aws-sdk-go-v2/credentials\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xaws", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xaws", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/config.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go", "rel_path": "pkg/xaws/config.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 11, "end_line": 11, "text": "type (", "n_tokens": 2, "primary_symbol": "", "primary_kind": "unknown", "primary_span": [11, 11], "def_symbols": [], "symbols": ["type"], "doc_head": "type (", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:block", "package": "xaws", "node_kind": "unknown", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xaws", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#2", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#4"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#4", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/config.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go", "rel_path": "pkg/xaws/config.go", "ext": "go", "language": "go", "chunk_number": 4, "start_line": 12, "end_line": 20, "text": "\tConfig struct {\n\t\tAccessKeyID     string   `mapstructure:\"access-key-id\"`\n\t\tSecretAccessKey string   `mapstructure:\"secret-access-key\"`\n\t\tSessionToken    string   `mapstructure:\"session-token\"`\n\t\tRegion          string   `mapstructure:\"region\"`\n\t\tEndpointURL     string   `mapstructure:\"endpoint-url\"`\n\t\tS3              S3Config `mapstructure:\"s3\"`\n\t}\n", "n_tokens": 89, "primary_symbol": "Config", "primary_kind": "type", "primary_span": [12, 20], "def_symbols": [], "symbols": ["Config", "struct", "AccessKeyID", "string", "mapstructure", "access", "key", "SecretAccessKey", "secret", "SessionToken", "session", "token", "Region", "region", "EndpointURL", "endpoint", "url", "S3Config"], "doc_head": "\tConfig struct {\n\t\tAccessKeyID     string   `mapstructure:\"access-key-id\"`\n\t\tSecretAccessKey string   `mapstructure:\"secret-access-key\"`\n\t\tSessionToken    string   `mapstructure:\"session-token\"`\n\t\tRegion          string   `mapstructure:\"region\"`\n\t\tEndpointURL     string   `mapstructure:\"endpoint-url\"`\n\t\tS3              S3Config `mapstructure:\"s3\"`\n\t}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:Config (struct)", "package": "xaws", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "Config", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["Config"], "all_kinds": ["type"], "all_ast_paths": ["go:type:Config (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["Config"], "all_type_kinds": ["struct"], "all_start_bytes": [165], "all_end_bytes": [516], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["AccessKeyID", "Config", "EndpointURL", "Region", "S3Config", "SecretAccessKey", "SessionToken"], "header_context_minimal": "package xaws", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#3", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#5"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#5", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/config.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go", "rel_path": "pkg/xaws/config.go", "ext": "go", "language": "go", "chunk_number": 5, "start_line": 21, "end_line": 25, "text": "\tS3Config struct {\n\t\tUsePathStyle bool `mapstructure:\"use-path-style\"`\n\t}\n)\n", "n_tokens": 21, "primary_symbol": "S3Config", "primary_kind": "type", "primary_span": [21, 25], "def_symbols": [], "symbols": ["S3Config", "struct", "UsePathStyle", "bool", "mapstructure", "use", "path", "style"], "doc_head": "\tS3Config struct {\n\t\tUsePathStyle bool `mapstructure:\"use-path-style\"`\n\t}\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:type:S3Config (struct)", "package": "xaws", "node_kind": "type", "receiver": "", "function_name": "", "method_name": "", "type_name": "S3Config", "type_kind": "struct", "is_multi_declaration": false, "all_symbols": ["S3Config"], "all_kinds": ["type"], "all_ast_paths": ["go:type:S3Config (struct)"], "all_roles": ["declaration"], "all_receivers": [""], "all_type_names": ["S3Config"], "all_type_kinds": ["struct"], "all_start_bytes": [519], "all_end_bytes": [591], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["S3Config", "UsePathStyle"], "header_context_minimal": "package xaws", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#4", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#6", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/config.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go", "rel_path": "pkg/xaws/config.go", "ext": "go", "language": "go", "chunk_number": 6, "start_line": 26, "end_line": 38, "text": "func NewConfig(accessKey, secretKey, sessionToken, region, endpointURL string, s3usePathStyle bool) *Config {\n\treturn &Config{\n\t\tAccessKeyID:     accessKey,\n\t\tSecretAccessKey: secretKey,\n\t\tSessionToken:    sessionToken,\n\t\tRegion:          region,\n\t\tEndpointURL:     endpointURL,\n\t\tS3: S3Config{\n\t\t\tUsePathStyle: s3usePathStyle,\n\t\t},\n\t}\n}\n", "n_tokens": 100, "primary_symbol": "NewConfig", "primary_kind": "function", "primary_span": [26, 38], "def_symbols": [], "symbols": ["NewConfig", "func", "accessKey", "secretKey", "sessionToken", "region", "endpointURL", "string", "s3usePathStyle", "bool", "Config", "return", "AccessKeyID", "SecretAccessKey", "SessionToken", "Region", "EndpointURL", "S3Config", "UsePathStyle"], "doc_head": "func NewConfig(accessKey, secretKey, sessionToken, region, endpointURL string, s3usePathStyle bool) *Config {\n\treturn &Config{\n\t\tAccessKeyID:     accessKey,\n\t\tSecretAccessKey: secretKey,\n\t\tSessionToken:    sessionToken,\n\t\tRegion:          region,\n\t\tEndpointURL:     endpointURL,\n\t\tS3: S3Config{\n\t\t\tUsePathStyle: s3usePathStyle,\n\t\t},\n\t}\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewConfig/complete", "package": "xaws", "node_kind": "function", "receiver": "", "function_name": "NewConfig", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewConfig"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewConfig/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [595], "all_end_bytes": [932], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": [], "symbols_referenced_strict": ["AccessKeyID", "Config", "EndpointURL", "NewConfig", "Region", "S3Config", "SecretAccessKey", "SessionToken", "UsePathStyle"], "header_context_minimal": "package xaws", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#5", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#7"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#7", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/config.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go", "rel_path": "pkg/xaws/config.go", "ext": "go", "language": "go", "chunk_number": 7, "start_line": 39, "end_line": 66, "text": "func LoadAWSConfig(ctx context.Context, cfg *Config) (aws.Config, error) {\n\tvar optFns []func(*config.LoadOptions) error\n\n\tif cfg.AccessKeyID != \"\" || cfg.SecretAccessKey != \"\" || cfg.SessionToken != \"\" {\n\t\toptFns = append(optFns, config.WithCredentialsProvider(\n\t\t\tcredentials.NewStaticCredentialsProvider(\n\t\t\t\tcfg.AccessKeyID, cfg.SecretAccessKey, cfg.SessionToken,\n\t\t\t),\n\t\t))\n\t}\n\n\tif cfg.Region != \"\" {\n\t\toptFns = append(optFns, config.WithRegion(cfg.Region))\n\t}\n\n\tif cfg.EndpointURL != \"\" {\n\t\toptFns = append(optFns, config.WithBaseEndpoint(cfg.EndpointURL))\n\t}\n\n\tawsCfg, err := config.LoadDefaultConfig(ctx, optFns...)\n\n\tif err != nil {\n\t\treturn aws.Config{}, err\n\t}\n\n\treturn awsCfg, nil\n}\n", "n_tokens": 187, "primary_symbol": "LoadAWSConfig", "primary_kind": "function", "primary_span": [39, 66], "def_symbols": [], "symbols": ["LoadAWSConfig", "func", "ctx", "context", "Context", "cfg", "Config", "aws", "error", "var", "optFns", "config", "LoadOptions", "AccessKeyID", "SecretAccessKey", "SessionToken", "append", "WithCredentialsProvider", "credentials", "NewStaticCredentialsProvider", "Region", "WithRegion", "EndpointURL", "WithBaseEndpoint", "awsCfg", "err", "LoadDefaultConfig", "nil", "return"], "doc_head": "func LoadAWSConfig(ctx context.Context, cfg *Config) (aws.Config, error) {\n\tvar optFns []func(*config.LoadOptions) error\n\tif cfg.AccessKeyID != \"\" || cfg.SecretAccessKey != \"\" || cfg.SessionToken != \"\" {\n\t\toptFns = append(optFns, config.WithCredentialsProvider(\n\t\t\tcredentials.NewStaticCredentialsProvider(\n\t\t\t\tcfg.AccessKeyID, cfg.SecretAccessKey, cfg.SessionToken,\n\t\t\t),\n\t\t))\n\t}\n\tif cfg.Region != \"\" {\n\t\toptFns = append(optFns, config.WithRegion(cfg.Region))\n\t}\n\tif cfg.EndpointURL != \"\" {\n\t\toptFns = append(optFns, config.WithBaseEndpoint(cfg.EndpointURL))\n\t}\n\tawsCfg, err := config.LoadDefaultConfig(ctx, optFns...)\n\tif err != nil {\n\t\treturn aws.Config{}, err\n\t}\n\treturn awsCfg, nil\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:LoadAWSConfig/complete", "package": "xaws", "node_kind": "function", "receiver": "", "function_name": "LoadAWSConfig", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["LoadAWSConfig"], "all_kinds": ["function"], "all_ast_paths": ["go:function:LoadAWSConfig/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [934], "all_end_bytes": [1628], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["context", "github.com/aws/aws-sdk-go-v2/aws", "github.com/aws/aws-sdk-go-v2/config", "github.com/aws/aws-sdk-go-v2/credentials"], "symbols_referenced_strict": ["AccessKeyID", "Config", "Context", "EndpointURL", "LoadAWSConfig", "LoadDefaultConfig", "LoadOptions", "NewStaticCredentialsProvider", "Region", "SecretAccessKey", "SessionToken", "WithBaseEndpoint", "WithCredentialsProvider", "WithRegion", "aws.Config", "cfg.AccessKeyID", "cfg.EndpointURL", "cfg.Region", "cfg.SecretAccessKey", "cfg.SessionToken", "config.LoadDefaultConfig", "config.LoadOptions", "config.WithBaseEndpoint", "config.WithCredentialsProvider", "config.WithRegion", "context.Context", "credentials.NewStaticCredentialsProvider"], "header_context_minimal": "package xaws\nimport (\n    \"context\"\n    \"github.com/aws/aws-sdk-go-v2/aws\"\n    \"github.com/aws/aws-sdk-go-v2/config\"\n    \"github.com/aws/aws-sdk-go-v2/credentials\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/config.go#6"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go#1", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go", "rel_path": "pkg/xaws/s3.go", "ext": "go", "language": "go", "chunk_number": 1, "start_line": 1, "end_line": 2, "text": "package xaws\n", "n_tokens": 4, "primary_symbol": "", "primary_kind": "header", "primary_span": [1, 2], "def_symbols": [], "symbols": ["package", "xaws"], "doc_head": "package xaws", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xaws", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xaws", "neighbors": {"next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go#2"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go#2", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go", "rel_path": "pkg/xaws/s3.go", "ext": "go", "language": "go", "chunk_number": 2, "start_line": 3, "end_line": 7, "text": "import (\n\t\"github.com/aws/aws-sdk-go-v2/aws\"\n\t\"github.com/aws/aws-sdk-go-v2/service/s3\"\n)\n", "n_tokens": 27, "primary_symbol": "", "primary_kind": "header", "primary_span": [3, 7], "def_symbols": [], "symbols": ["import", "github", "com", "aws", "sdk", "service"], "doc_head": "import (\n\t\"github.com/aws/aws-sdk-go-v2/aws\"\n\t\"github.com/aws/aws-sdk-go-v2/service/s3\"\n)", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:file_header", "package": "xaws", "node_kind": "header", "receiver": "", "function_name": "", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": [], "all_kinds": [], "all_ast_paths": [], "all_roles": [], "all_receivers": [], "all_type_names": [], "all_type_kinds": [], "all_start_bytes": [], "all_end_bytes": [], "primary_index": 0, "all_receivers_normalized": [], "imports_used_minimal": [], "symbols_referenced_strict": [], "header_context_minimal": "package xaws", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go#1", "next": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go#3"}}
{"id": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go#3", "repo_id": "crunding-aviation_live_flights_service-fe0676d3f5f0", "path": "pkg/xaws/s3.go", "abs_path": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go", "rel_path": "pkg/xaws/s3.go", "ext": "go", "language": "go", "chunk_number": 3, "start_line": 8, "end_line": 11, "text": "func NewS3ClientFromConfig(cfg aws.Config, optFns ...func(options *s3.Options)) *s3.Client {\n\treturn s3.NewFromConfig(cfg, optFns...)\n}\n", "n_tokens": 40, "primary_symbol": "NewS3ClientFromConfig", "primary_kind": "function", "primary_span": [8, 11], "def_symbols": [], "symbols": ["NewS3ClientFromConfig", "func", "cfg", "aws", "Config", "optFns", "options", "Options", "Client", "return", "NewFromConfig"], "doc_head": "func NewS3ClientFromConfig(cfg aws.Config, optFns ...func(options *s3.Options)) *s3.Client {\n\treturn s3.NewFromConfig(cfg, optFns...)\n}", "is_generated": false, "rank_boost": 1.0, "ast_path": "go:function:NewS3ClientFromConfig/complete", "package": "xaws", "node_kind": "function", "receiver": "", "function_name": "NewS3ClientFromConfig", "method_name": "", "type_name": "", "type_kind": "", "is_multi_declaration": false, "all_symbols": ["NewS3ClientFromConfig"], "all_kinds": ["function"], "all_ast_paths": ["go:function:NewS3ClientFromConfig/complete"], "all_roles": ["complete"], "all_receivers": [""], "all_type_names": [""], "all_type_kinds": [null], "all_start_bytes": [105], "all_end_bytes": [240], "primary_index": 0, "all_receivers_normalized": [""], "imports_used_minimal": ["github.com/aws/aws-sdk-go-v2/aws", "github.com/aws/aws-sdk-go-v2/service/s3"], "symbols_referenced_strict": ["Client", "Config", "NewFromConfig", "NewS3ClientFromConfig", "Options", "aws.Config", "s3.Client", "s3.NewFromConfig", "s3.Options"], "header_context_minimal": "package xaws\nimport (\n    \"github.com/aws/aws-sdk-go-v2/aws\"\n    \"github.com/aws/aws-sdk-go-v2/service/s3\"\n)", "neighbors": {"prev": "/Users/zack.alatrash/CompanyRepos/crunding-aviation_live_flights_service-fe0676d3f5f0/pkg/xaws/s3.go#2"}}
